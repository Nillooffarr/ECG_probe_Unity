#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct InterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct InterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};

// Microsoft.MixedReality.Toolkit.BaseCoreSystem
struct BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41;
// Microsoft.MixedReality.Toolkit.BaseEventSystem
struct BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2;
// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile
struct BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8;
// Microsoft.MixedReality.Toolkit.BaseService
struct BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10;
// Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar
struct IMixedRealityServiceRegistrar_t7B6E2AF9599FB6847FE71FC6F5DE9AE0BC8ABB50;
// Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource
struct BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899;
// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE;
// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable
struct BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03;
// Microsoft.MixedReality.Toolkit.Input.ColliderNearInteractionTouchable
struct ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571;
// Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider
struct ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B;
// Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider
struct DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757;
// Microsoft.MixedReality.Toolkit.Input.FocusProvider
struct FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3;
// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData
struct PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE;
// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData[]
struct PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5;
// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult
struct PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57;
// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences
struct PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386;
// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences[]
struct PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13;
// Microsoft.MixedReality.Toolkit.Input.GazeConePointer
struct GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C;
// Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine
struct GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155;
// Microsoft.MixedReality.Toolkit.Input.GazeProvider
struct GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA;
// Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83
struct U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1;
// Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69
struct U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC;
// Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer
struct InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8;
// Microsoft.MixedReality.Toolkit.Input.GenericPointer
struct GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A;
// Microsoft.MixedReality.Toolkit.Input.ICursorModifier
struct ICursorModifier_tDE9922B058ED50BEA8696DA85B1548D40B879493;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController
struct IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor
struct IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeDataProvider
struct IMixedRealityEyeGazeDataProvider_t537D5F830772C6D6F547645FACB718323C6CFDAA;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler
struct IMixedRealityFocusHandler_t5437E688850A82CF30CBB00C70F476568C7AC7A5;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider
struct IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem
struct IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer
struct IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer
struct IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator
struct IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector
struct IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityQueryablePointer
struct IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider
struct IMixedRealityRaycastProvider_t58C978A5F14FD7DA2732FBFF9D2CED27E3DFF023;
// Microsoft.MixedReality.Toolkit.Input.IPointerResult
struct IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278;
// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A;
// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile
struct MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile
struct MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile
struct MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile
struct MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile
struct MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile
struct MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[]
struct MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile
struct MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E;
// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile
struct MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD;
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E;
// Microsoft.MixedReality.Toolkit.Input.PointerOption[]
struct PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E;
// Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler
struct PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0;
// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8;
// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7;
// Microsoft.MixedReality.Toolkit.MixedRealityToolkit
struct MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47;
// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile
struct MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9;
// Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer
struct BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84;
// Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer
struct GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D;
// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer
struct IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD;
// Microsoft.MixedReality.Toolkit.Physics.RayStep[]
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8;
// Microsoft.MixedReality.Toolkit.Physics.RaycastResultComparer
struct RaycastResultComparer_tFDB19FD5F400C27FE7C68EF1CCF31999219D06F4;
// Microsoft.MixedReality.Toolkit.Physics.VectorRollingStatistics
struct VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9;
// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432;
// System.Action
struct Action_t591D2A86165F896B4B800BB5C25CE18672A55579;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2/Entry<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>[]
struct EntryU5BU5D_tC55F2AC7CC2E59492B6681159487457A7D6A5F02;
// System.Collections.Generic.Dictionary`2/Entry<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>[]
struct EntryU5BU5D_t659640E9C685CE6E460ADDAAFE099015CC1CC36A;
// System.Collections.Generic.Dictionary`2/Entry<UnityEngine.GameObject,System.Int32>[]
struct EntryU5BU5D_tEB0C78396DDA42C5FEF9BD0E4A634117E7DB8552;
// System.Collections.Generic.Dictionary`2/KeyCollection<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct KeyCollection_t43E77D77F4295F63B869020DDFE00D0EA267E4A4;
// System.Collections.Generic.Dictionary`2/KeyCollection<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>
struct KeyCollection_t75456B46FC789A9D80643816BC472CC245DEEC7E;
// System.Collections.Generic.Dictionary`2/KeyCollection<UnityEngine.GameObject,System.Int32>
struct KeyCollection_tC58ECB5850E84E94D6CF0DF264C8740FBA35EC08;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct ValueCollection_tF07741929E248654386F93B652F5EC72611F2496;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>
struct ValueCollection_tAE73C4125A781B6BBD87336DADFA83544D9279AC;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,System.Object>
struct ValueCollection_tB0D951D8825080125748D3B14160B1FD5796E4A0;
// System.Collections.Generic.Dictionary`2/ValueCollection<UnityEngine.GameObject,System.Int32>
struct ValueCollection_tA8ABB715EF1086C1B3A6A85E695E81B5636F00C4;
// System.Collections.Generic.Dictionary`2<System.Object,System.Int32>
struct Dictionary_2_t81923CE2A312318AE13F58085CCF7FA8D879B77A;
// System.Collections.Generic.Dictionary`2<System.String,System.String>
struct Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC;
// System.Collections.Generic.Dictionary`2<System.Type,Microsoft.MixedReality.Toolkit.IMixedRealityService>
struct Dictionary_2_t800AAE737FB312BBA9170905905D74ED86BF5F59;
// System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.BaseEventSystem/EventHandlerEntry>>
struct Dictionary_2_t99334118C530AD8E37E47B5B0848937F9AB3FE45;
// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D;
// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>
struct Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7;
// System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>
struct Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7;
// System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>
struct Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D;
// System.Collections.Generic.HashSet`1/Slot<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>[]
struct SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1;
// System.Collections.Generic.HashSet`1/Slot<System.Object>[]
struct SlotU5BU5D_t9C4FFBCC974570D24EDC1028CCD0269BE774B36C;
// System.Collections.Generic.HashSet`1/Slot<UnityEngine.GameObject>[]
struct SlotU5BU5D_tEC1E3160C74097782B8872BBE9509CF20279D4EC;
// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F;
// System.Collections.Generic.HashSet`1<System.Object>
struct HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3;
// System.Collections.Generic.HashSet`1<UnityEngine.GameObject>
struct HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct IEqualityComparer_1_t064C223FF9217A6DF0423D99A6E66C28C73E518A;
// System.Collections.Generic.IEqualityComparer`1<System.Object>
struct IEqualityComparer_1_tAE7A8756D8CF0882DD348DC328FB36FEE0FB7DD0;
// System.Collections.Generic.IEqualityComparer`1<System.UInt32>
struct IEqualityComparer_1_t8D13638D3E8C85B2BF37618A54F8C19DD8DF2523;
// System.Collections.Generic.IEqualityComparer`1<UnityEngine.GameObject>
struct IEqualityComparer_1_tA583C071DBB4FFE6844A462DAB596DB2A3F14D24;
// System.Collections.Generic.IReadOnlyDictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>
struct IReadOnlyDictionary_2_t4202328C62EFD75E34C21807DB2215776A456945;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences>
struct List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.MixedRealityToolkit>
struct List_1_t6C7AD014C867B7DDEC0F7E0E6E34237704C29074;
// System.Collections.Generic.List`1<System.Func`3<Microsoft.MixedReality.Toolkit.Physics.ComparableRaycastResult,Microsoft.MixedReality.Toolkit.Physics.ComparableRaycastResult,System.Int32>>
struct List_1_tE0E6F50A00FEC0C804C4FEEE1715C8110B43EEBD;
// System.Collections.Generic.List`1<System.Globalization.CultureInfo>
struct List_1_t74F59DD36FAE0CFB087612565C42CAD359647832;
// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D;
// System.Collections.Generic.List`1<System.Tuple`2<Microsoft.MixedReality.Toolkit.BaseEventSystem/Action,UnityEngine.GameObject>>
struct List_1_tF09772E43F5004C04E48ED2D8F83300C306AD076;
// System.Collections.Generic.List`1<System.Tuple`2<System.Type,Microsoft.MixedReality.Toolkit.IMixedRealityService>>
struct List_1_t8665C2870C9F0DA5B6D62AF0F0323E984195D9CC;
// System.Collections.Generic.List`1<System.Tuple`3<Microsoft.MixedReality.Toolkit.BaseEventSystem/Action,System.Type,UnityEngine.EventSystems.IEventSystemHandler>>
struct List_1_tA08BD9AF20C1FFEAAC47D3CE3228DBE09C09DEF5;
// System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseInputModule>
struct List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26;
// System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem>
struct List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B;
// System.Collections.Generic.List`1<UnityEngine.GameObject>
struct List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Comparison`1<UnityEngine.EventSystems.RaycastResult>
struct Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Runtime.CompilerServices.IAsyncStateMachine
struct IAsyncStateMachine_tEFDFBE18E061A6065AB2FF735F1425FB59F919BC;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.Runtime.Serialization.SerializationInfo
struct SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Threading.SynchronizationContext
struct SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7;
// System.Threading.Tasks.Task
struct Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8;
// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0;
// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF;
// UnityEngine.Collider[]
struct ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252;
// UnityEngine.Color[]
struct ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5;
// UnityEngine.EventSystems.BaseInputModule
struct BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939;
// UnityEngine.EventSystems.BaseRaycaster
struct BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77;
// UnityEngine.EventSystems.PointerEventData
struct PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.RaycastHit[]
struct RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57;
// UnityEngine.RenderTexture
struct RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsUnityEngine_CoreModule[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsUnityEngine_UI[];
IL2CPP_EXTERN_C RuntimeClass* BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ConeCastUtility_t9AD9ED2231B514A755B27FBBD78F6DEBCED96E5B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EventSystemExtensions_t011350FAF4E155AA4C9A2271F524A7035CBCB17F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityRaycastProvider_t58C978A5F14FD7DA2732FBFF9D2CED27E3DFF023_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MissingMethodException_t7D33DFD3009E4F19BE4DD0967F04D3878F348498_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityPlayspace_t26F34BB4D1D53C64B140AF101E96EB151A9770A4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral0A898EC9B058E6071937435925849581C90AB444;
IL2CPP_EXTERN_C String_t* _stringLiteral0BD97560A03BD042B063790A8545702C9CE90189;
IL2CPP_EXTERN_C String_t* _stringLiteral10FA6F59AC8A06F4DED1C9B3EE6CF3AD56FFBF6A;
IL2CPP_EXTERN_C String_t* _stringLiteral156984DEF8EFBE78DC1680C363474C8682DF4996;
IL2CPP_EXTERN_C String_t* _stringLiteral1DC236E0545311F08FF0EE7096E70680FB6D80F0;
IL2CPP_EXTERN_C String_t* _stringLiteral20F75AABCF4F4FFB7C74A98072694EA12ABD1091;
IL2CPP_EXTERN_C String_t* _stringLiteral219D239C952476DB523067D2F3E4F6A2B434B927;
IL2CPP_EXTERN_C String_t* _stringLiteral2520BBA8384279CF8445027882D2A14F547254BE;
IL2CPP_EXTERN_C String_t* _stringLiteral2639467AD59E7AD40E38E8AD58D6F567684054D7;
IL2CPP_EXTERN_C String_t* _stringLiteral31351EB3BB34B8DCEEBFFE2B08F3667A02C42130;
IL2CPP_EXTERN_C String_t* _stringLiteral36721154D988860C109684EC2159A7363633268E;
IL2CPP_EXTERN_C String_t* _stringLiteral3CDDDC9CEC7208594C4621E4DA1E49F15860E772;
IL2CPP_EXTERN_C String_t* _stringLiteral3DA53827DA45EEF8CE51E69F81BFF90A6864DA69;
IL2CPP_EXTERN_C String_t* _stringLiteral47C4ADE81AF6B7BC6D16FBA0C2771B5028B3118C;
IL2CPP_EXTERN_C String_t* _stringLiteral4A4081840234CA066285FE6CB5447DC5DC51462B;
IL2CPP_EXTERN_C String_t* _stringLiteral4AE1CF073F5FD921C5BF2B9EA7F8CBC6A5B61CCB;
IL2CPP_EXTERN_C String_t* _stringLiteral4CE0747D6296B48012C9E5C3926A97ABC6309751;
IL2CPP_EXTERN_C String_t* _stringLiteral4EBC84BC13C240477ACDA471A1E13F7BF296C046;
IL2CPP_EXTERN_C String_t* _stringLiteral4FB973369B7441F2D29764DBFC0D07C1BDCACF67;
IL2CPP_EXTERN_C String_t* _stringLiteral519A567F6ECAF530BAF12DA104AE05B9CD88BA9F;
IL2CPP_EXTERN_C String_t* _stringLiteral5315A4F18D223125A659ABC3F4FE97FC8792AC5E;
IL2CPP_EXTERN_C String_t* _stringLiteral5793A48AD839F50C43036FBF1D80BE1E07F88E69;
IL2CPP_EXTERN_C String_t* _stringLiteral58BE002BB3D2F447ADEA800DCD84E9A19F00AC00;
IL2CPP_EXTERN_C String_t* _stringLiteral5E21FDBF4EB092EFB59B08245853B3E5F13C3645;
IL2CPP_EXTERN_C String_t* _stringLiteral631F333A1AEC3FBDD1820BDEE2A0E26FAE39F2B2;
IL2CPP_EXTERN_C String_t* _stringLiteral69A6C3A1A9AAA5B81AF1DC3DAEF8B50B43A785D2;
IL2CPP_EXTERN_C String_t* _stringLiteral6C1C31777627D5436BBFF19C463F955267E0F244;
IL2CPP_EXTERN_C String_t* _stringLiteral76F6C3A6766257CE5DAFE2102208DC454339E2E1;
IL2CPP_EXTERN_C String_t* _stringLiteral81448FE273247B533B9F018E96C158CAB7901247;
IL2CPP_EXTERN_C String_t* _stringLiteral822E76432AAA6315A9A7D801DD9BF30414E69DEB;
IL2CPP_EXTERN_C String_t* _stringLiteral8DA4A0E485F343C1C5726926406CBF9F99E0AD4F;
IL2CPP_EXTERN_C String_t* _stringLiteral8F3E367B3505B59CF3B1B5A41E3F0DC040044645;
IL2CPP_EXTERN_C String_t* _stringLiteral90CD92D70C6A93416F0D73D2EC13DBE6CB37FAD9;
IL2CPP_EXTERN_C String_t* _stringLiteral9462493F5F8F6760398CE1B00B9CE54DD7D17ED1;
IL2CPP_EXTERN_C String_t* _stringLiteral96D403F2D889925B4010239BE3D61013ECD02D2A;
IL2CPP_EXTERN_C String_t* _stringLiteral9854CD25BE45E93D5FD3A7FE400E117B3FB9391A;
IL2CPP_EXTERN_C String_t* _stringLiteral98CAE0DAD6010C2085E1DF38C07E95AF70E986C9;
IL2CPP_EXTERN_C String_t* _stringLiteral99F6A1E6338F3AA00EEC343555842D1481D2945E;
IL2CPP_EXTERN_C String_t* _stringLiteral9AD3443FCE8F085946115EBA3E5912232D94C78F;
IL2CPP_EXTERN_C String_t* _stringLiteral9D1476E3D18FB7ACAA23D3FEF2C03677E2861EF8;
IL2CPP_EXTERN_C String_t* _stringLiteralA23B9E54B916BE1708864B3FA3665FE53251DE69;
IL2CPP_EXTERN_C String_t* _stringLiteralA5F6E2C006D1E2E614251536BF7B399E54423B85;
IL2CPP_EXTERN_C String_t* _stringLiteralA8A5747A61C9521E48EBC6ABC5F60C305E97F415;
IL2CPP_EXTERN_C String_t* _stringLiteralA97F2BE9EF6E7E5EF5F3111CCEB23E8CA8A1FC33;
IL2CPP_EXTERN_C String_t* _stringLiteralAF4D0CAF185E3CD30B7AFC740626A01295853909;
IL2CPP_EXTERN_C String_t* _stringLiteralAFB9CD7CA3AC37208DD2FEE05FE26F3D788587FC;
IL2CPP_EXTERN_C String_t* _stringLiteralB213207F3F050E3E46579CF916A2F2A129C8F77A;
IL2CPP_EXTERN_C String_t* _stringLiteralB2276F613E143F4126F6A2B8A5916BF27A550714;
IL2CPP_EXTERN_C String_t* _stringLiteralB5672B826B48C4BDD228E0C126D9C47A56797A73;
IL2CPP_EXTERN_C String_t* _stringLiteralB6A91516978714C95B18BDD76CCB584B7B676715;
IL2CPP_EXTERN_C String_t* _stringLiteralBB2550C6DFBEE03C2509AAC70C7596F931DC172E;
IL2CPP_EXTERN_C String_t* _stringLiteralD7F0B1BC83BB9DAB70C3EC14B2A61E2FFD199A36;
IL2CPP_EXTERN_C String_t* _stringLiteralE0D77E4E25133A9AD11311284A4C0E9A0E83E686;
IL2CPP_EXTERN_C String_t* _stringLiteralE2F4EA0D3CE82807F5E9A40A167BCC258A58C9D4;
IL2CPP_EXTERN_C String_t* _stringLiteralE9A22CD1E2CDD58731BA99B0FC8D851DA52A95D8;
IL2CPP_EXTERN_C String_t* _stringLiteralFB5DD07948F077D02999B5ED33F06CA8B2183259;
IL2CPP_EXTERN_C String_t* _stringLiteralFF448159DC2D8E7C27FB42F3D195D5863191E18B;
IL2CPP_EXTERN_C const RuntimeMethod* Array_Resize_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_mAC98FE438E7404FFE4CF7ABB9B33B126D970ADB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AsyncVoidMethodBuilder_Start_TisU3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1_m30B43EC395DAF36ED6BF21971BB32FDA0FDA194E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AsyncVoidMethodBuilder_Start_TisU3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC_mCF0205FB08F5B25182C21CA12E509B673EB0E5ED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable_OnValidate_m2F4F9F345E5A37329D0AE4C61BE9A930075517A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable__ctor_m906D52C2F36E74C9A9ECBA83AA2B8B891165CB8B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable_set_DebounceThreshold_mE5701A5CEA4F9C911E002673CD606AEFFE17684F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseNearInteractionTouchable_set_EventsToReceive_mE15B76A78AFFBDF3F0371D4FE4EE2FEAD38369F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ColliderNearInteractionTouchable_OnValidate_m0AE0EB2A0FF626C89BFAFF3F6CD019B5D57DB38F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ColliderNearInteractionTouchable__ctor_m2A1511813F8161F6BED93070A58ACDCE899F00D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ColliderNearInteractionTouchable_get_ColliderEnabled_mB5E2C860F9B2ADC762C263812C7737E1126164FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ColliderNearInteractionTouchable_get_TouchableCollider_m843BFDDB0B789C4CD8B88D5D3E65C480A7CA3C04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ComponentExtensions_EnsureComponent_TisCamera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_m3E111EC6D639E9E4BA0D62A81AA6754E146C160F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider_InitializeGazePointer_m22E2F7AE6B929FC2EECD51E314A8B5F87F68AA64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider_OnInputDown_mB59282CB1D9CF59876A530FE2CFDC7FFEA0A62E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider_OnInputUp_m901BF016975C91B814CAEF178474004F7A601436_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider_Update_m52E9A076A3631CCBC4B954E51687C7E167C4710D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider__cctor_m5F2F2F48A595560CB3A7CE977FB992F489A667EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider__ctor_m9FD6C28376BFC6637FBFE33BD84D606C305D9B1E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider_get_GazeInputSource_mC3DF1A8DDFE1CD7077D8FA73B191AA780CDE07B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ConeCastGazeProvider_get_GazePointer_m6C2FCA5D93EAC9C05BDF44F2A72D55C9F73F3A6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider_GraphicsRaycast_m6B53D74B69D1E51D3117FC65530B6C2455CDB347_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider_Raycast_mC0818F6918233A495D5B8390BA9DA31552033D40_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider_SphereCast_m37837B90CF6F84847CA0CB029D9E798FBC148E20_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider__cctor_m378DF7D03D7989CF6588D5A29F8593BBFDC89B0B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider__ctor_m1E2D60B855B7511FFA81C761F5F48720647AE987_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider__ctor_m609B044BCCF6FE9289DC96AB5314132243B50103_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider_get_Name_mDF97CDD77CDF7DCA115DBE67B90C4DC8C8B3C648_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DefaultRaycastProvider_set_Name_m466E6A95B41949BBA71238D12D723E502890A654_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m18BD44DB699847006DEB20C3FCB000F4F95B3101_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m394FACA53A551ECFEDCC3562140D68BF1F48E4B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m7DD01028342A7236D97768FA68FB892C076EB0E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_ContainsKey_m0F317286EE60E66B8B15D073968940599A9C569D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_ContainsKey_m26ABD682E36BA03DAC1643C8B8C4B6403A41361E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_GetEnumerator_mDDAD3CB1078A489FD43DD5A00BF489D874A0861B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_m3943E83168D0EA6E26E880A781C15902B23B848B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_m8F84559E992C0C34492D2A0961ED7E2FED4EAD3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_mE2192AEE6449DD7B81E5CEBE4D85048B74BE1FDB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_m2B16E36786DE77E74CA69B7E95F8A0F2932D40C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_m7F0D1B219279614C5BAE58B8A991A4369BE13E92_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_mF177D51B543CBB936EDEA25816DCD84BCB7C277A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m368526B69AAFA3973FA788DFF139A03F9F7053C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m912F79447880600D11A564725B769143AF5A0EAF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_mA7941677D87F6A96D673628B50F034ABA0BEDF24_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Count_m021F96DD9C435F80DCE6226D69E73DB27935D86B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_set_Item_m1FEE001AF4C735DD8484A19AB8A22AD0C1691225_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m9C9F25BC4E2669565B458C2C0E9CD6018B09A07E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m6EE95D7726D441076D476262B63BDB585B6A4428_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m442847DC7C76FD5F44910204F805D833E7CC90AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m5785B4386ABCEABE4C63734D2F040B4F4B32F5FE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mAF80A40C735286660705B10E845B3AAC25909E8B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_LastGraphicsRaycastResult_m13974D81605D43AF8D72A5A3B916F4FA937FD408_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_LastRaycastHit_mC83ADE39B36EFF37B4DD2CB65C307A2668CD6C6A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_CleanUpUiRaycastCamera_mF637B34A052A3AF7D3E1055D57FD51C9D1FFEE96_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_Destroy_m1CA724916714AE350112457E86E127996E1995BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_FindOrCreateUiRaycastCamera_mD0CA5FF0E5333568489C8183A0CE8A57A404A81B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_GenerateNewPointerId_m696F40A9164B56CE76F9621800CF789979DB17E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_GetFocusedObject_m83D55268C3BC0DC3C8D59C5F8AEE0053A7C84A90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_GetPointerBehavior_m8C108749C84CC8B9B787DC6439CD7F3687F0FFF9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_GetPointerBehavior_mC409E0F24BB677E6BE05B04E9523B9A1AC9041DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_Initialize_m7A3738C81654962938ACB58EAED2EE67150DC3CE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_IsPointerRegistered_mD63752FBB3A7A5774246446DEDAFC56F97EAF222_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusProvider_get_GlobalPointingExtent_m71A07148AC407E19F5367FC0249B3AFF07F64F70_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_OnSourceDetected_mE4215E66924F767E36F68CA1316524EB5CF57189_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_OnSourceLost_m93B9003EF1E9EDF760F7F776DE40A51C2FB76F5E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_OnSpeechKeywordRecognized_m92FF19F8FCE054558B2F1BFE5C58FC86B9716D6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_QuerySceneInternal_mC2F2A339551DEF0A73A5F91AA6E8C84B3691C627_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_QuerySceneWithPointers_mDD8CE9D22166D890B1AE8458756C8B774369E853_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_RaycastGraphicsStep_mA63D7EA8576A77A471642A3ED615A2BEDF050613_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_ReconcilePointers_m8F15E83551BFB79B3ECD332EFA9BE437CC214E31_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_RegisterPointer_m96FFC15B10A3BEBE21BF60B613706DA77A139574_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_SubscribeToPrimaryPointerChanged_mBBB806AA8C93E6BE1BFB28A5082BAE9311F7CD95_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_TryGetFocusDetails_mC7FF52211D4CEEC4728550739BBAD27AF81A6F42_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_TryOverrideFocusDetails_mE68AE884912636AE0ED1FDF97C160BCD4CF0FB20_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_UnregisterPointer_m58A22C294E07D6D209ECD47D063ACF6DCACBF5AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_UnsubscribeFromPrimaryPointerChanged_mC3EEC0AD7106856E336241F9254C8A4EB808DE7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_UpdateFocusedObjects_mAA837F83E07556828F8352D172227B4E3B44576F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_UpdateGazeProvider_m5078BC0824402EC6E6F351380BBB9FABDE8D0C5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_UpdatePointer_mDBB311C1FFC08015653C67F756472A7B529C2D8C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_UpdatePointers_mE03F4EA01DE023EB9A38137D4C610A14B1848458_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_Update_mEACBB764A70644B70DDCA31E1ABD726C2C7EA305_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider__cctor_m8E8669D726AC2B374E6807566626BBF96D13D1F5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider__ctor_mABEC20663770E994A3AF9786AB507E8A44B30805_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider__ctor_mD790A96134FA953445022E2119A9B2FB744E38E8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_add_PrimaryPointerChanged_mDE374491D0C26A60108DF9A055DECF31A5FD80D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_IsSetupValid_m7F95D3E11E9ECC6509FCFB6E17EDDD7CED7E0333_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_Name_m8DFD7B5608E30F0B7BD4FFAE6C993B08D60698EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_PointerMediators_mD8F0D49E23E94208637477A93B18A12BE38964EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_Priority_m4F66D276E24563F4A46992C3C2C8686A2B821880_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_remove_PrimaryPointerChanged_m6A1A89E933DC765374BE0DD838BBD23E282685E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_set_GazePointerBehavior_m0D016956A037DD9A3B88CCA7BCE80BB3A7C06BE6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_set_Name_m97C0822499F351DAE3CE42CAA38644304BD2F63E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m96F21A23B24805F9F10AE4FB85A7F767DEE6DD2C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_OnPostSceneQuery_mF1B9480315AFC474EBEBBC50433BA933B6BB5A89_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_OnPreCurrentPointerTargetChange_m74AE677C3FC71178F4B4550AB5D38131DC9BDE03_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_OnPreSceneQuery_m7AF98F1C32725D3F3CC450CF678C049FF1B4C44F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_OnSceneQuery_mA34D560C879D566AD6A5267496E588136809CC71_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_OnSceneQuery_mCA6778C3951C3A4108E2C6951E4D33061C6232B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_RaisePointerDown_mBFCAE9B287737D84081DFAEFBBA10549F8A4E563_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_RaisePointerUp_mF96B93AA2230A04BFF438008B44F0F2BCC44A038_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_Reset_m55E97C0DBB554B8F71BA5AE59F1E2C024281EEC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_SetGazeInputSourceParent_m72265C17199D9270B95B38374F857639D7B9B956_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer__cctor_m30F35673A926D04156FE5A679482D82DE39C2359_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer__ctor_m270823DB2FF610490BE62247CF56147B46102B42_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_get_Controller_mE10C9404FA0552FC1B96D7E4CBB057F26616D5F5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_get_PointerExtent_mA2E973D1F8C7063C453E5DB4DA78DE21986097FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_get_Position_m67DADD17CFCA5F96D0ABD29476EAB8EC2C9E7950_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_get_Rotation_mC08537B8CBB48A1D4CDB2CD9CBEE0ED621E68DBF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_set_Controller_m91C73758E322A187DDA23601F4A8052EB0CD0CC4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeConePointer_set_PointerExtent_m006BCA524760FCADE4A5D4518F0094D4D4A40239_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazePointerVisibilityStateMachine_OnSpeechKeywordRecognized_mF32B08049E9F59365A300D646F2CFF49E7BECB0A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazePointerVisibilityStateMachine_UpdateState_m315458336BABBC8B925C821FCAAB66CA4488BA14_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazePointerVisibilityStateMachine__ctor_mED2D3E357198480D43ED1DF72387BE5FB23E9FE8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_InitializeGazePointer_m789C6E4E0FE967FFA8B35781CD4729C9030487B7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_LateUpdate_mED6AECF92BD19DFDF2D2B7CCDD8D05B3841970EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_OnDestroy_m8D34D89F150F66A1078502ACB26F79DB04888A7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_OnDisable_mCF9AB46481EE1F00F9A197C488F49E25076FA9F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_OnEnable_m4A9056C6B0C7E1BC0ACEC38AE285BB0CE9077EFB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_OnInputDown_m3337CC54CCC2902B3435C910F5B6A05F60F0FD71_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_OnInputUp_mE9B37314364EF736A028096F9070D0805ACE91F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_OnValidate_m4BAECE593C665064CC8EC1D0A3E6B185D49ADFC7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_OverrideHeadGaze_m68B564FACF09335D3F48BAF22AD01DA459419FA7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_RaiseSourceDetected_m86099E42089CD17E28713B8882A370154526096A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_RegisterHandlers_m45A1BB5BD85371D8A4657EB61047D3D8AA3B016E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_Start_m955439DDAA92F3C3884BF643EE629E47B81C57A4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_U3CU3En__0_mCA46D743A130010F8021712DB1909503078BEF63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_UnregisterHandlers_m96124A5711C66D9C569BC8FBB7E57C017C16DA3F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_UpdateEyeGaze_mFF2D86BEF7A27FEB37C4476E685EC6BDAE4DC5DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_UpdateEyeTrackingStatus_m33AEDFD70EDBCA73EBB8B930F21BE9164D5E169E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_UpdateGazeInfoFromHit_mEF093FA4EC83CA199AD391AA303E60757CC218E8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_Update_m1BD5604750D3099D29839B772F85DACA9F696494_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider__cctor_m005DDC17D60654C579E7750B37683A35E511AE69_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider__ctor_mDA5A7EFB135962393638C41C9C8C649052C897A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_Enabled_mF416D5C5885F5A49D7F51A9C298142E3496EB4E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GameObjectReference_m1B9C8AC88096DEE850A313B94EB0271B6F0A8514_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GazeDirection_m53CC33922D404BA7E1D58D006504E7202CB5C19E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GazeInputSource_mA9F431D196E30AC68B29FFC096A4AD3205C59480_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GazePointer_m31B37DCFB3D6F7D47EB7F48056225C00E28D2686_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_GazeTarget_m2AC96216E6152031751A1E20692A3D3327D8EBFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_HitInfo_m820884DE1238370F0F71B140EBE330B7A6C63FDB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_HitNormal_m33EA4ACD92EDC50726934D57D5C3F10898010044_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_IsEyeCalibrationValid_mC06C98266618599AF041B9B50320309610C0C308_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_IsEyeTrackingDataValid_mA1B6AA6538AC857C4D539C82DD6E5E2D13C15D50_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_Timestamp_m048CB050D173F1DACAEC0A907B40B44980A0ACA3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_Enabled_mEA928483F7FB0A48025358C8C8AC5A02AAAC8D13_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_GazeCursorPrefab_m5D0475472A57FE0B5C36CEA5662DE3C565721818_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_IsEyeTrackingEnabled_m1EF3B714CC1B8177DA68DF4142ABB749DF644859_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_UseHeadGazeOverride_m9019925AC326010CC74E6C469D8C8CB0EA0CEDF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_get_PrioritizedLayerMasksOverride_mD429394C41A6B8BC90262A853628C8910B59AB52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_get_Rays_m1E54223BF359DE3DE81C1E277A74C34309F88C9D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_set_BaseCursor_m12C546412F2E84C09FEDD68427552AD2C775EC5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_set_IsActive_m5B41E42C3E262AE6F0F8A562A065EA6A644A315D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_set_IsFocusLocked_m55F61AEAAFC3650E3B26C6B19CFFEA34FC03888E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_Add_m683D71064E0E13E6835CF84CA743D8528E61B695_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_Contains_mCF3A1439E9FA729CCE16E11868395E30F3844229_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_Remove_m959CA76C6788170A88C252EF3809598CE4C8A847_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1__ctor_m6DB682240050817EFD1E83DE1C3B438C84DAFB3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_get_Count_m14C7571C69F65285901AB0ECC9F47AAA31170CBF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HashSet_1_get_Count_m3199849B2D9664DC8C8F48BC9962FAE119ED2BCA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_m2C0DAF3964D680743B8ABDBF97EC2581FA7788E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_mB45C244DC51FBA1370CE95E485680FD2CB1B75FC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m29DE50BBCB38063E44E72BF1C0F4488DEEF6DACE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_mCCC2E8126391D8C614D82A09ADC3D5DA731ECC47_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m99CC2297CB76E2597B79B8586B4CB7C941E7B89A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_mFA5BD80EE1E2434CFD4954BB052090489038CF52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m2DF5FAD40A74490653EABB46965F84D82786B041_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m7D00E162503419278D6716197652DED64BC6B9B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m72D83D81FB3C53817E45B7D1F4EB4AE50CAC0F81_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mB2A9AB24CB4B8E18AAAEE28CCD5347FDBF1A3A35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mDF5BD58E49374DFC97242DEB16EC16F0CF17A710_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSystemProfile_get_FocusQueryBufferSize_mC19C7694A8F9EE68E50019978AF84C16CEB15BF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSystemProfile_get_ShouldUseGraphicsRaycast_m31028570E4260FDC2C3C83C3F45ABDC8D8A30B9F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityToolkit_get_Instance_m02A5ECDA0A8291AA2EDDC518554EF3FAA470DBAD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityToolkit_get_IsProfileSwitching_m44955CADC688AC70630E3754EC62F872FE497BBE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_mD3154885E88D449C69AD9DEA6F9A3EF66A3FE996_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_Equals_m63C98EFF3EACA2DD5290628AB4E9D0C8884BE12D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_Equals_mF811403FED4C02A999771AF453ACC93DA1A65D89_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_GetHashCode_m52CD9C53BDDA2B4F10E28414F3A4E1A8A4A109E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_ResetFocusedObjects_mED45382832E357CDD75BD1EAFCC27A68EC42C94A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_UpdateFocusLockedHit_m6FAA710DAC97452D71D91E04A808381BAD7A93EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_UpdateHit_m212567FA45D65F83369E24C7B50CA30ED5020DCB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData__cctor_m1F78988B6CA16240E52E0B27E5A4966EEF4EF247_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData__ctor_mEB63D3D2EA4F60ED0BCA0ED9038347455AEEFD6B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_IsCurrentPointerTargetInvalid_m6A43C3957C1492BDC44A14CEE75C732B84DA376D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_RayStepIndex_mA68E4F7DA2576FFA120034E407612854821CEC03_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_StartPoint_m39E31ECB6F4646616DE31EC412F836232C814193_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_set_Details_mF09692341E4DA354F6FD1AE4E5531C820D862488_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerEventData_set_pointerCurrentRaycast_mA63CA749AC5410AF7D28F4C924BA3372E12F61FC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerEventData_set_position_m9BDCBF26C28C01F781ACB8FC87448CB4ADD0BBD5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHitResult_Set_m8A7D09DD40F6B3B582B9B541B1A0EB3EFBD75007_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerPreferences_GetBehaviorForHandedness_m0FC3432ABBA91FD0C3502F3F8C8EED7B0774B92D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerPreferences_Matches_m928F429F57D6F6B8A8BD99661ED07DA5ADEF8035_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerPreferences_Matches_mCCF075326CB5F03D6868CDD6E02EA257A007FB7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerPreferences_SetBehaviorForHandedness_m35701B3FDD9F7771FD85D6B90F22CC8A11D35C58_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerPreferences__ctor_m34D253857646441959DFFDF4B3911A857F83CB44_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* RayStep_get_Terminus_m8E84C6DCAB15719419C6F08450DDBDCD32EB1FCD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityObjectExtensions_IsNull_TisIMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_mC60A871C49437C248EDBA5927395D076BA6D6D20_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityObjectExtensions_IsNull_TisIMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_m02E1C7B6423ABE0D2CC91810B9FD44204F54C8A2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GazePointerState_t79EDF035055D052F58960932F92F6C9FA61A2750_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityRaycastProvider_t58C978A5F14FD7DA2732FBFF9D2CED27E3DFF023_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Type_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable_OnValidate_m2F4F9F345E5A37329D0AE4C61BE9A930075517A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable__ctor_m906D52C2F36E74C9A9ECBA83AA2B8B891165CB8B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable_set_DebounceThreshold_mE5701A5CEA4F9C911E002673CD606AEFFE17684F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseNearInteractionTouchable_set_EventsToReceive_mE15B76A78AFFBDF3F0371D4FE4EE2FEAD38369F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ColliderNearInteractionTouchable_OnValidate_m0AE0EB2A0FF626C89BFAFF3F6CD019B5D57DB38F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ColliderNearInteractionTouchable__ctor_m2A1511813F8161F6BED93070A58ACDCE899F00D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ColliderNearInteractionTouchable_get_ColliderEnabled_mB5E2C860F9B2ADC762C263812C7737E1126164FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ColliderNearInteractionTouchable_get_TouchableCollider_m843BFDDB0B789C4CD8B88D5D3E65C480A7CA3C04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider_InitializeGazePointer_m22E2F7AE6B929FC2EECD51E314A8B5F87F68AA64_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider_OnInputDown_mB59282CB1D9CF59876A530FE2CFDC7FFEA0A62E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider_OnInputUp_m901BF016975C91B814CAEF178474004F7A601436_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider_Update_m52E9A076A3631CCBC4B954E51687C7E167C4710D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider__cctor_m5F2F2F48A595560CB3A7CE977FB992F489A667EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider__ctor_m9FD6C28376BFC6637FBFE33BD84D606C305D9B1E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider_get_GazeInputSource_mC3DF1A8DDFE1CD7077D8FA73B191AA780CDE07B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ConeCastGazeProvider_get_GazePointer_m6C2FCA5D93EAC9C05BDF44F2A72D55C9F73F3A6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider_GraphicsRaycast_m6B53D74B69D1E51D3117FC65530B6C2455CDB347_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider_Raycast_mC0818F6918233A495D5B8390BA9DA31552033D40_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider_SphereCast_m37837B90CF6F84847CA0CB029D9E798FBC148E20_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider__cctor_m378DF7D03D7989CF6588D5A29F8593BBFDC89B0B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider__ctor_m1E2D60B855B7511FFA81C761F5F48720647AE987_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider__ctor_m609B044BCCF6FE9289DC96AB5314132243B50103_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider_get_Name_mDF97CDD77CDF7DCA115DBE67B90C4DC8C8B3C648_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DefaultRaycastProvider_set_Name_m466E6A95B41949BBA71238D12D723E502890A654_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m5785B4386ABCEABE4C63734D2F040B4F4B32F5FEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_mAF80A40C735286660705B10E845B3AAC25909E8BMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_LastGraphicsRaycastResult_m13974D81605D43AF8D72A5A3B916F4FA937FD408Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_LastRaycastHit_mC83ADE39B36EFF37B4DD2CB65C307A2668CD6C6AMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FFMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9CMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_CleanUpUiRaycastCamera_mF637B34A052A3AF7D3E1055D57FD51C9D1FFEE96_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_Destroy_m1CA724916714AE350112457E86E127996E1995BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_FindOrCreateUiRaycastCamera_mD0CA5FF0E5333568489C8183A0CE8A57A404A81B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_GenerateNewPointerId_m696F40A9164B56CE76F9621800CF789979DB17E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_GetFocusedObject_m83D55268C3BC0DC3C8D59C5F8AEE0053A7C84A90_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_GetPointerBehavior_m8C108749C84CC8B9B787DC6439CD7F3687F0FFF9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_GetPointerBehavior_mC409E0F24BB677E6BE05B04E9523B9A1AC9041DD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_Initialize_m7A3738C81654962938ACB58EAED2EE67150DC3CE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_IsPointerRegistered_mD63752FBB3A7A5774246446DEDAFC56F97EAF222_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusProvider_get_GlobalPointingExtent_m71A07148AC407E19F5367FC0249B3AFF07F64F70_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_OnSourceDetected_mE4215E66924F767E36F68CA1316524EB5CF57189_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_OnSourceLost_m93B9003EF1E9EDF760F7F776DE40A51C2FB76F5E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_OnSpeechKeywordRecognized_m92FF19F8FCE054558B2F1BFE5C58FC86B9716D6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_QuerySceneInternal_mC2F2A339551DEF0A73A5F91AA6E8C84B3691C627_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_QuerySceneWithPointers_mDD8CE9D22166D890B1AE8458756C8B774369E853_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_RaycastGraphicsStep_mA63D7EA8576A77A471642A3ED615A2BEDF050613_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_ReconcilePointers_m8F15E83551BFB79B3ECD332EFA9BE437CC214E31_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_RegisterPointer_m96FFC15B10A3BEBE21BF60B613706DA77A139574_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_SubscribeToPrimaryPointerChanged_mBBB806AA8C93E6BE1BFB28A5082BAE9311F7CD95_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_TryGetFocusDetails_mC7FF52211D4CEEC4728550739BBAD27AF81A6F42_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_TryOverrideFocusDetails_mE68AE884912636AE0ED1FDF97C160BCD4CF0FB20_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_UnregisterPointer_m58A22C294E07D6D209ECD47D063ACF6DCACBF5AA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_UnsubscribeFromPrimaryPointerChanged_mC3EEC0AD7106856E336241F9254C8A4EB808DE7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_UpdateFocusedObjects_mAA837F83E07556828F8352D172227B4E3B44576F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_UpdateGazeProvider_m5078BC0824402EC6E6F351380BBB9FABDE8D0C5B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_UpdatePointer_mDBB311C1FFC08015653C67F756472A7B529C2D8C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_UpdatePointers_mE03F4EA01DE023EB9A38137D4C610A14B1848458_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_Update_mEACBB764A70644B70DDCA31E1ABD726C2C7EA305_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider__cctor_m8E8669D726AC2B374E6807566626BBF96D13D1F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider__ctor_mABEC20663770E994A3AF9786AB507E8A44B30805_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider__ctor_mD790A96134FA953445022E2119A9B2FB744E38E8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_add_PrimaryPointerChanged_mDE374491D0C26A60108DF9A055DECF31A5FD80D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_IsSetupValid_m7F95D3E11E9ECC6509FCFB6E17EDDD7CED7E0333_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_Name_m8DFD7B5608E30F0B7BD4FFAE6C993B08D60698EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_PointerMediators_mD8F0D49E23E94208637477A93B18A12BE38964EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDACMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_Priority_m4F66D276E24563F4A46992C3C2C8686A2B821880_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_remove_PrimaryPointerChanged_m6A1A89E933DC765374BE0DD838BBD23E282685E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_set_GazePointerBehavior_m0D016956A037DD9A3B88CCA7BCE80BB3A7C06BE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_set_Name_m97C0822499F351DAE3CE42CAA38644304BD2F63E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_OnPostSceneQuery_mF1B9480315AFC474EBEBBC50433BA933B6BB5A89_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_OnPreCurrentPointerTargetChange_m74AE677C3FC71178F4B4550AB5D38131DC9BDE03_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_OnPreSceneQuery_m7AF98F1C32725D3F3CC450CF678C049FF1B4C44F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_OnSceneQuery_mA34D560C879D566AD6A5267496E588136809CC71_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_OnSceneQuery_mCA6778C3951C3A4108E2C6951E4D33061C6232B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_RaisePointerDown_mBFCAE9B287737D84081DFAEFBBA10549F8A4E563_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_RaisePointerUp_mF96B93AA2230A04BFF438008B44F0F2BCC44A038_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_Reset_m55E97C0DBB554B8F71BA5AE59F1E2C024281EEC6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_SetGazeInputSourceParent_m72265C17199D9270B95B38374F857639D7B9B956_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer__cctor_m30F35673A926D04156FE5A679482D82DE39C2359_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer__ctor_m270823DB2FF610490BE62247CF56147B46102B42_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_get_Controller_mE10C9404FA0552FC1B96D7E4CBB057F26616D5F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_get_PointerExtent_mA2E973D1F8C7063C453E5DB4DA78DE21986097FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_get_Position_m67DADD17CFCA5F96D0ABD29476EAB8EC2C9E7950_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_get_Rotation_mC08537B8CBB48A1D4CDB2CD9CBEE0ED621E68DBF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_set_Controller_m91C73758E322A187DDA23601F4A8052EB0CD0CC4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeConePointer_set_PointerExtent_m006BCA524760FCADE4A5D4518F0094D4D4A40239_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazePointerVisibilityStateMachine_OnSpeechKeywordRecognized_mF32B08049E9F59365A300D646F2CFF49E7BECB0A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazePointerVisibilityStateMachine_UpdateState_m315458336BABBC8B925C821FCAAB66CA4488BA14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazePointerVisibilityStateMachine__ctor_mED2D3E357198480D43ED1DF72387BE5FB23E9FE8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_InitializeGazePointer_m789C6E4E0FE967FFA8B35781CD4729C9030487B7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_LateUpdate_mED6AECF92BD19DFDF2D2B7CCDD8D05B3841970EB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_OnDestroy_m8D34D89F150F66A1078502ACB26F79DB04888A7B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_OnDisable_mCF9AB46481EE1F00F9A197C488F49E25076FA9F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_OnEnable_m4A9056C6B0C7E1BC0ACEC38AE285BB0CE9077EFB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_OnInputDown_m3337CC54CCC2902B3435C910F5B6A05F60F0FD71_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_OnInputUp_mE9B37314364EF736A028096F9070D0805ACE91F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_OnValidate_m4BAECE593C665064CC8EC1D0A3E6B185D49ADFC7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_OverrideHeadGaze_m68B564FACF09335D3F48BAF22AD01DA459419FA7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_RaiseSourceDetected_m86099E42089CD17E28713B8882A370154526096A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_RegisterHandlers_m45A1BB5BD85371D8A4657EB61047D3D8AA3B016E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_Start_m955439DDAA92F3C3884BF643EE629E47B81C57A4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_U3CU3En__0_mCA46D743A130010F8021712DB1909503078BEF63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_UnregisterHandlers_m96124A5711C66D9C569BC8FBB7E57C017C16DA3F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_UpdateEyeGaze_mFF2D86BEF7A27FEB37C4476E685EC6BDAE4DC5DB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_UpdateEyeTrackingStatus_m33AEDFD70EDBCA73EBB8B930F21BE9164D5E169E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_UpdateGazeInfoFromHit_mEF093FA4EC83CA199AD391AA303E60757CC218E8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_Update_m1BD5604750D3099D29839B772F85DACA9F696494_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider__cctor_m005DDC17D60654C579E7750B37683A35E511AE69_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider__ctor_mDA5A7EFB135962393638C41C9C8C649052C897A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_Enabled_mF416D5C5885F5A49D7F51A9C298142E3496EB4E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GameObjectReference_m1B9C8AC88096DEE850A313B94EB0271B6F0A8514_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazeDirection_m53CC33922D404BA7E1D58D006504E7202CB5C19E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazeInputSource_mA9F431D196E30AC68B29FFC096A4AD3205C59480_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazePointer_m31B37DCFB3D6F7D47EB7F48056225C00E28D2686_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_GazeTarget_m2AC96216E6152031751A1E20692A3D3327D8EBFE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HitInfo_m820884DE1238370F0F71B140EBE330B7A6C63FDB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HitNormal_m33EA4ACD92EDC50726934D57D5C3F10898010044_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_IsEyeCalibrationValid_mC06C98266618599AF041B9B50320309610C0C308_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_IsEyeTrackingDataValid_mA1B6AA6538AC857C4D539C82DD6E5E2D13C15D50_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_Timestamp_m048CB050D173F1DACAEC0A907B40B44980A0ACA3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FBMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_Enabled_mEA928483F7FB0A48025358C8C8AC5A02AAAC8D13_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_GazeCursorPrefab_m5D0475472A57FE0B5C36CEA5662DE3C565721818_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7FMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40CMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_IsEyeTrackingEnabled_m1EF3B714CC1B8177DA68DF4142ABB749DF644859_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DBMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_UseHeadGazeOverride_m9019925AC326010CC74E6C469D8C8CB0EA0CEDF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DAMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_get_PrioritizedLayerMasksOverride_mD429394C41A6B8BC90262A853628C8910B59AB52Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_get_Rays_m1E54223BF359DE3DE81C1E277A74C34309F88C9DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_set_BaseCursor_m12C546412F2E84C09FEDD68427552AD2C775EC5CMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_set_IsActive_m5B41E42C3E262AE6F0F8A562A065EA6A644A315DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_set_IsFocusLocked_m55F61AEAAFC3650E3B26C6B19CFFEA34FC03888EMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HashSet_1_get_Count_m3199849B2D9664DC8C8F48BC9962FAE119ED2BCAMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_m29DE50BBCB38063E44E72BF1C0F4488DEEF6DACEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSystemProfile_get_FocusQueryBufferSize_mC19C7694A8F9EE68E50019978AF84C16CEB15BF0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSystemProfile_get_ShouldUseGraphicsRaycast_m31028570E4260FDC2C3C83C3F45ABDC8D8A30B9FMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BCMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityToolkit_get_Instance_m02A5ECDA0A8291AA2EDDC518554EF3FAA470DBADMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityToolkit_get_IsProfileSwitching_m44955CADC688AC70630E3754EC62F872FE497BBEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4ACMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_Equals_m63C98EFF3EACA2DD5290628AB4E9D0C8884BE12D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_Equals_mF811403FED4C02A999771AF453ACC93DA1A65D89_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_GetHashCode_m52CD9C53BDDA2B4F10E28414F3A4E1A8A4A109E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_ResetFocusedObjects_mED45382832E357CDD75BD1EAFCC27A68EC42C94A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_UpdateFocusLockedHit_m6FAA710DAC97452D71D91E04A808381BAD7A93EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_UpdateHit_m212567FA45D65F83369E24C7B50CA30ED5020DCB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData__cctor_m1F78988B6CA16240E52E0B27E5A4966EEF4EF247_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData__ctor_mEB63D3D2EA4F60ED0BCA0ED9038347455AEEFD6B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_IsCurrentPointerTargetInvalid_m6A43C3957C1492BDC44A14CEE75C732B84DA376D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_RayStepIndex_mA68E4F7DA2576FFA120034E407612854821CEC03_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_StartPoint_m39E31ECB6F4646616DE31EC412F836232C814193_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_set_Details_mF09692341E4DA354F6FD1AE4E5531C820D862488_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2AMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerEventData_set_pointerCurrentRaycast_mA63CA749AC5410AF7D28F4C924BA3372E12F61FCMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerEventData_set_position_m9BDCBF26C28C01F781ACB8FC87448CB4ADD0BBD5Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHitResult_Set_m8A7D09DD40F6B3B582B9B541B1A0EB3EFBD75007_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerPreferences_GetBehaviorForHandedness_m0FC3432ABBA91FD0C3502F3F8C8EED7B0774B92D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerPreferences_Matches_m928F429F57D6F6B8A8BD99661ED07DA5ADEF8035_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerPreferences_Matches_mCCF075326CB5F03D6868CDD6E02EA257A007FB7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerPreferences_SetBehaviorForHandedness_m35701B3FDD9F7771FD85D6B90F22CC8A11D35C58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerPreferences__ctor_m34D253857646441959DFFDF4B3911A857F83CB44_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317BMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t RayStep_get_Terminus_m8E84C6DCAB15719419C6F08450DDBDCD32EB1FCDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FFMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778;
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8;
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
struct ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252;
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// <Module>
struct U3CModuleU3E_t85AA738E45E199B4CCC1354A4B4519BCE0CDA67F 
{
public:

public:
};


// System.Object


// Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer
struct BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84  : public RuntimeObject
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Physics.RaycastResultComparer
struct RaycastResultComparer_tFDB19FD5F400C27FE7C68EF1CCF31999219D06F4  : public RuntimeObject
{
public:

public:
};

struct RaycastResultComparer_tFDB19FD5F400C27FE7C68EF1CCF31999219D06F4_StaticFields
{
public:
	// System.Collections.Generic.List`1<System.Func`3<Microsoft.MixedReality.Toolkit.Physics.ComparableRaycastResult,Microsoft.MixedReality.Toolkit.Physics.ComparableRaycastResult,System.Int32>> Microsoft.MixedReality.Toolkit.Physics.RaycastResultComparer::comparers
	List_1_tE0E6F50A00FEC0C804C4FEEE1715C8110B43EEBD * ___comparers_0;

public:
	inline static int32_t get_offset_of_comparers_0() { return static_cast<int32_t>(offsetof(RaycastResultComparer_tFDB19FD5F400C27FE7C68EF1CCF31999219D06F4_StaticFields, ___comparers_0)); }
	inline List_1_tE0E6F50A00FEC0C804C4FEEE1715C8110B43EEBD * get_comparers_0() const { return ___comparers_0; }
	inline List_1_tE0E6F50A00FEC0C804C4FEEE1715C8110B43EEBD ** get_address_of_comparers_0() { return &___comparers_0; }
	inline void set_comparers_0(List_1_tE0E6F50A00FEC0C804C4FEEE1715C8110B43EEBD * value)
	{
		___comparers_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparers_0), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432  : public RuntimeObject
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Utilities.SystemType::reference
	String_t* ___reference_0;
	// System.Type Microsoft.MixedReality.Toolkit.Utilities.SystemType::type
	Type_t * ___type_1;

public:
	inline static int32_t get_offset_of_reference_0() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432, ___reference_0)); }
	inline String_t* get_reference_0() const { return ___reference_0; }
	inline String_t** get_address_of_reference_0() { return &___reference_0; }
	inline void set_reference_0(String_t* value)
	{
		___reference_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___reference_0), (void*)value);
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432, ___type_1)); }
	inline Type_t * get_type_1() const { return ___type_1; }
	inline Type_t ** get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(Type_t * value)
	{
		___type_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___type_1), (void*)value);
	}
};

struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_StaticFields
{
public:
	// System.Collections.Generic.Dictionary`2<System.String,System.String> Microsoft.MixedReality.Toolkit.Utilities.SystemType::ReferenceMappings
	Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * ___ReferenceMappings_2;

public:
	inline static int32_t get_offset_of_ReferenceMappings_2() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_StaticFields, ___ReferenceMappings_2)); }
	inline Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * get_ReferenceMappings_2() const { return ___ReferenceMappings_2; }
	inline Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC ** get_address_of_ReferenceMappings_2() { return &___ReferenceMappings_2; }
	inline void set_ReferenceMappings_2(Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * value)
	{
		___ReferenceMappings_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ReferenceMappings_2), (void*)value);
	}
};

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct ValueCollection_tF07741929E248654386F93B652F5EC72611F2496  : public RuntimeObject
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/ValueCollection::dictionary
	Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * ___dictionary_0;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(ValueCollection_tF07741929E248654386F93B652F5EC72611F2496, ___dictionary_0)); }
	inline Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_tC55F2AC7CC2E59492B6681159487457A7D6A5F02* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_t43E77D77F4295F63B869020DDFE00D0EA267E4A4 * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___entries_1)); }
	inline EntryU5BU5D_tC55F2AC7CC2E59492B6681159487457A7D6A5F02* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_tC55F2AC7CC2E59492B6681159487457A7D6A5F02** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_tC55F2AC7CC2E59492B6681159487457A7D6A5F02* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___keys_7)); }
	inline KeyCollection_t43E77D77F4295F63B869020DDFE00D0EA267E4A4 * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_t43E77D77F4295F63B869020DDFE00D0EA267E4A4 ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_t43E77D77F4295F63B869020DDFE00D0EA267E4A4 * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ___values_8)); }
	inline ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * get_values_8() const { return ___values_8; }
	inline ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>
struct Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_t659640E9C685CE6E460ADDAAFE099015CC1CC36A* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_t75456B46FC789A9D80643816BC472CC245DEEC7E * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_tAE73C4125A781B6BBD87336DADFA83544D9279AC * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___entries_1)); }
	inline EntryU5BU5D_t659640E9C685CE6E460ADDAAFE099015CC1CC36A* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_t659640E9C685CE6E460ADDAAFE099015CC1CC36A** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_t659640E9C685CE6E460ADDAAFE099015CC1CC36A* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___keys_7)); }
	inline KeyCollection_t75456B46FC789A9D80643816BC472CC245DEEC7E * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_t75456B46FC789A9D80643816BC472CC245DEEC7E ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_t75456B46FC789A9D80643816BC472CC245DEEC7E * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ___values_8)); }
	inline ValueCollection_tAE73C4125A781B6BBD87336DADFA83544D9279AC * get_values_8() const { return ___values_8; }
	inline ValueCollection_tAE73C4125A781B6BBD87336DADFA83544D9279AC ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_tAE73C4125A781B6BBD87336DADFA83544D9279AC * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>
struct Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_tEB0C78396DDA42C5FEF9BD0E4A634117E7DB8552* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_tC58ECB5850E84E94D6CF0DF264C8740FBA35EC08 * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_tA8ABB715EF1086C1B3A6A85E695E81B5636F00C4 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___entries_1)); }
	inline EntryU5BU5D_tEB0C78396DDA42C5FEF9BD0E4A634117E7DB8552* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_tEB0C78396DDA42C5FEF9BD0E4A634117E7DB8552** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_tEB0C78396DDA42C5FEF9BD0E4A634117E7DB8552* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___keys_7)); }
	inline KeyCollection_tC58ECB5850E84E94D6CF0DF264C8740FBA35EC08 * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_tC58ECB5850E84E94D6CF0DF264C8740FBA35EC08 ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_tC58ECB5850E84E94D6CF0DF264C8740FBA35EC08 * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ___values_8)); }
	inline ValueCollection_tA8ABB715EF1086C1B3A6A85E695E81B5636F00C4 * get_values_8() const { return ___values_8; }
	inline ValueCollection_tA8ABB715EF1086C1B3A6A85E695E81B5636F00C4 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_tA8ABB715EF1086C1B3A6A85E695E81B5636F00C4 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.HashSet`1::_buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____buckets_7;
	// System.Collections.Generic.HashSet`1/Slot<T>[] System.Collections.Generic.HashSet`1::_slots
	SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* ____slots_8;
	// System.Int32 System.Collections.Generic.HashSet`1::_count
	int32_t ____count_9;
	// System.Int32 System.Collections.Generic.HashSet`1::_lastIndex
	int32_t ____lastIndex_10;
	// System.Int32 System.Collections.Generic.HashSet`1::_freeList
	int32_t ____freeList_11;
	// System.Collections.Generic.IEqualityComparer`1<T> System.Collections.Generic.HashSet`1::_comparer
	RuntimeObject* ____comparer_12;
	// System.Int32 System.Collections.Generic.HashSet`1::_version
	int32_t ____version_13;
	// System.Runtime.Serialization.SerializationInfo System.Collections.Generic.HashSet`1::_siInfo
	SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * ____siInfo_14;

public:
	inline static int32_t get_offset_of__buckets_7() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____buckets_7)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__buckets_7() const { return ____buckets_7; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__buckets_7() { return &____buckets_7; }
	inline void set__buckets_7(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____buckets_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____buckets_7), (void*)value);
	}

	inline static int32_t get_offset_of__slots_8() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____slots_8)); }
	inline SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* get__slots_8() const { return ____slots_8; }
	inline SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1** get_address_of__slots_8() { return &____slots_8; }
	inline void set__slots_8(SlotU5BU5D_t175DAA74D8BD8E94DEFDF8633736DE6B11AFB2F1* value)
	{
		____slots_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____slots_8), (void*)value);
	}

	inline static int32_t get_offset_of__count_9() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____count_9)); }
	inline int32_t get__count_9() const { return ____count_9; }
	inline int32_t* get_address_of__count_9() { return &____count_9; }
	inline void set__count_9(int32_t value)
	{
		____count_9 = value;
	}

	inline static int32_t get_offset_of__lastIndex_10() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____lastIndex_10)); }
	inline int32_t get__lastIndex_10() const { return ____lastIndex_10; }
	inline int32_t* get_address_of__lastIndex_10() { return &____lastIndex_10; }
	inline void set__lastIndex_10(int32_t value)
	{
		____lastIndex_10 = value;
	}

	inline static int32_t get_offset_of__freeList_11() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____freeList_11)); }
	inline int32_t get__freeList_11() const { return ____freeList_11; }
	inline int32_t* get_address_of__freeList_11() { return &____freeList_11; }
	inline void set__freeList_11(int32_t value)
	{
		____freeList_11 = value;
	}

	inline static int32_t get_offset_of__comparer_12() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____comparer_12)); }
	inline RuntimeObject* get__comparer_12() const { return ____comparer_12; }
	inline RuntimeObject** get_address_of__comparer_12() { return &____comparer_12; }
	inline void set__comparer_12(RuntimeObject* value)
	{
		____comparer_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____comparer_12), (void*)value);
	}

	inline static int32_t get_offset_of__version_13() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____version_13)); }
	inline int32_t get__version_13() const { return ____version_13; }
	inline int32_t* get_address_of__version_13() { return &____version_13; }
	inline void set__version_13(int32_t value)
	{
		____version_13 = value;
	}

	inline static int32_t get_offset_of__siInfo_14() { return static_cast<int32_t>(offsetof(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F, ____siInfo_14)); }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * get__siInfo_14() const { return ____siInfo_14; }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 ** get_address_of__siInfo_14() { return &____siInfo_14; }
	inline void set__siInfo_14(SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * value)
	{
		____siInfo_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____siInfo_14), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1<System.Object>
struct HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.HashSet`1::_buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____buckets_7;
	// System.Collections.Generic.HashSet`1/Slot<T>[] System.Collections.Generic.HashSet`1::_slots
	SlotU5BU5D_t9C4FFBCC974570D24EDC1028CCD0269BE774B36C* ____slots_8;
	// System.Int32 System.Collections.Generic.HashSet`1::_count
	int32_t ____count_9;
	// System.Int32 System.Collections.Generic.HashSet`1::_lastIndex
	int32_t ____lastIndex_10;
	// System.Int32 System.Collections.Generic.HashSet`1::_freeList
	int32_t ____freeList_11;
	// System.Collections.Generic.IEqualityComparer`1<T> System.Collections.Generic.HashSet`1::_comparer
	RuntimeObject* ____comparer_12;
	// System.Int32 System.Collections.Generic.HashSet`1::_version
	int32_t ____version_13;
	// System.Runtime.Serialization.SerializationInfo System.Collections.Generic.HashSet`1::_siInfo
	SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * ____siInfo_14;

public:
	inline static int32_t get_offset_of__buckets_7() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____buckets_7)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__buckets_7() const { return ____buckets_7; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__buckets_7() { return &____buckets_7; }
	inline void set__buckets_7(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____buckets_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____buckets_7), (void*)value);
	}

	inline static int32_t get_offset_of__slots_8() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____slots_8)); }
	inline SlotU5BU5D_t9C4FFBCC974570D24EDC1028CCD0269BE774B36C* get__slots_8() const { return ____slots_8; }
	inline SlotU5BU5D_t9C4FFBCC974570D24EDC1028CCD0269BE774B36C** get_address_of__slots_8() { return &____slots_8; }
	inline void set__slots_8(SlotU5BU5D_t9C4FFBCC974570D24EDC1028CCD0269BE774B36C* value)
	{
		____slots_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____slots_8), (void*)value);
	}

	inline static int32_t get_offset_of__count_9() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____count_9)); }
	inline int32_t get__count_9() const { return ____count_9; }
	inline int32_t* get_address_of__count_9() { return &____count_9; }
	inline void set__count_9(int32_t value)
	{
		____count_9 = value;
	}

	inline static int32_t get_offset_of__lastIndex_10() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____lastIndex_10)); }
	inline int32_t get__lastIndex_10() const { return ____lastIndex_10; }
	inline int32_t* get_address_of__lastIndex_10() { return &____lastIndex_10; }
	inline void set__lastIndex_10(int32_t value)
	{
		____lastIndex_10 = value;
	}

	inline static int32_t get_offset_of__freeList_11() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____freeList_11)); }
	inline int32_t get__freeList_11() const { return ____freeList_11; }
	inline int32_t* get_address_of__freeList_11() { return &____freeList_11; }
	inline void set__freeList_11(int32_t value)
	{
		____freeList_11 = value;
	}

	inline static int32_t get_offset_of__comparer_12() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____comparer_12)); }
	inline RuntimeObject* get__comparer_12() const { return ____comparer_12; }
	inline RuntimeObject** get_address_of__comparer_12() { return &____comparer_12; }
	inline void set__comparer_12(RuntimeObject* value)
	{
		____comparer_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____comparer_12), (void*)value);
	}

	inline static int32_t get_offset_of__version_13() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____version_13)); }
	inline int32_t get__version_13() const { return ____version_13; }
	inline int32_t* get_address_of__version_13() { return &____version_13; }
	inline void set__version_13(int32_t value)
	{
		____version_13 = value;
	}

	inline static int32_t get_offset_of__siInfo_14() { return static_cast<int32_t>(offsetof(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3, ____siInfo_14)); }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * get__siInfo_14() const { return ____siInfo_14; }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 ** get_address_of__siInfo_14() { return &____siInfo_14; }
	inline void set__siInfo_14(SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * value)
	{
		____siInfo_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____siInfo_14), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1<UnityEngine.GameObject>
struct HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.HashSet`1::_buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ____buckets_7;
	// System.Collections.Generic.HashSet`1/Slot<T>[] System.Collections.Generic.HashSet`1::_slots
	SlotU5BU5D_tEC1E3160C74097782B8872BBE9509CF20279D4EC* ____slots_8;
	// System.Int32 System.Collections.Generic.HashSet`1::_count
	int32_t ____count_9;
	// System.Int32 System.Collections.Generic.HashSet`1::_lastIndex
	int32_t ____lastIndex_10;
	// System.Int32 System.Collections.Generic.HashSet`1::_freeList
	int32_t ____freeList_11;
	// System.Collections.Generic.IEqualityComparer`1<T> System.Collections.Generic.HashSet`1::_comparer
	RuntimeObject* ____comparer_12;
	// System.Int32 System.Collections.Generic.HashSet`1::_version
	int32_t ____version_13;
	// System.Runtime.Serialization.SerializationInfo System.Collections.Generic.HashSet`1::_siInfo
	SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * ____siInfo_14;

public:
	inline static int32_t get_offset_of__buckets_7() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____buckets_7)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get__buckets_7() const { return ____buckets_7; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of__buckets_7() { return &____buckets_7; }
	inline void set__buckets_7(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		____buckets_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____buckets_7), (void*)value);
	}

	inline static int32_t get_offset_of__slots_8() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____slots_8)); }
	inline SlotU5BU5D_tEC1E3160C74097782B8872BBE9509CF20279D4EC* get__slots_8() const { return ____slots_8; }
	inline SlotU5BU5D_tEC1E3160C74097782B8872BBE9509CF20279D4EC** get_address_of__slots_8() { return &____slots_8; }
	inline void set__slots_8(SlotU5BU5D_tEC1E3160C74097782B8872BBE9509CF20279D4EC* value)
	{
		____slots_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____slots_8), (void*)value);
	}

	inline static int32_t get_offset_of__count_9() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____count_9)); }
	inline int32_t get__count_9() const { return ____count_9; }
	inline int32_t* get_address_of__count_9() { return &____count_9; }
	inline void set__count_9(int32_t value)
	{
		____count_9 = value;
	}

	inline static int32_t get_offset_of__lastIndex_10() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____lastIndex_10)); }
	inline int32_t get__lastIndex_10() const { return ____lastIndex_10; }
	inline int32_t* get_address_of__lastIndex_10() { return &____lastIndex_10; }
	inline void set__lastIndex_10(int32_t value)
	{
		____lastIndex_10 = value;
	}

	inline static int32_t get_offset_of__freeList_11() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____freeList_11)); }
	inline int32_t get__freeList_11() const { return ____freeList_11; }
	inline int32_t* get_address_of__freeList_11() { return &____freeList_11; }
	inline void set__freeList_11(int32_t value)
	{
		____freeList_11 = value;
	}

	inline static int32_t get_offset_of__comparer_12() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____comparer_12)); }
	inline RuntimeObject* get__comparer_12() const { return ____comparer_12; }
	inline RuntimeObject** get_address_of__comparer_12() { return &____comparer_12; }
	inline void set__comparer_12(RuntimeObject* value)
	{
		____comparer_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____comparer_12), (void*)value);
	}

	inline static int32_t get_offset_of__version_13() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____version_13)); }
	inline int32_t get__version_13() const { return ____version_13; }
	inline int32_t* get_address_of__version_13() { return &____version_13; }
	inline void set__version_13(int32_t value)
	{
		____version_13 = value;
	}

	inline static int32_t get_offset_of__siInfo_14() { return static_cast<int32_t>(offsetof(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E, ____siInfo_14)); }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * get__siInfo_14() const { return ____siInfo_14; }
	inline SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 ** get_address_of__siInfo_14() { return &____siInfo_14; }
	inline void set__siInfo_14(SerializationInfo_t1BB80E9C9DEA52DBF464487234B045E2930ADA26 * value)
	{
		____siInfo_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____siInfo_14), (void*)value);
	}
};


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D, ____items_1)); }
	inline PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5* get__items_1() const { return ____items_1; }
	inline PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D_StaticFields, ____emptyArray_5)); }
	inline PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5* get__emptyArray_5() const { return ____emptyArray_5; }
	inline PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(PointerDataU5BU5D_t6E9F31F44AE9542152F197FEE778096CEBD57CC5* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences>
struct List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB, ____items_1)); }
	inline PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13* get__items_1() const { return ____items_1; }
	inline PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB_StaticFields, ____emptyArray_5)); }
	inline PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13* get__emptyArray_5() const { return ____emptyArray_5; }
	inline PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(PointerPreferencesU5BU5D_t38C0674A4184D5F9624CE630EB1E6F44E7F02D13* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____items_1)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__items_1() const { return ____items_1; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields, ____emptyArray_5)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6  : public RuntimeObject
{
public:
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;

public:
	inline static int32_t get_offset_of_m_Used_0() { return static_cast<int32_t>(offsetof(AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6, ___m_Used_0)); }
	inline bool get_m_Used_0() const { return ___m_Used_0; }
	inline bool* get_address_of_m_Used_0() { return &___m_Used_0; }
	inline void set_m_Used_0(bool value)
	{
		___m_Used_0 = value;
	}
};


// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>
struct Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::dictionary
	Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::version
	int32_t ___version_2;
	// TValue System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::currentValue
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * ___currentValue_3;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829, ___dictionary_0)); }
	inline Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_currentValue_3() { return static_cast<int32_t>(offsetof(Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829, ___currentValue_3)); }
	inline PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * get_currentValue_3() const { return ___currentValue_3; }
	inline PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE ** get_address_of_currentValue_3() { return &___currentValue_3; }
	inline void set_currentValue_3(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * value)
	{
		___currentValue_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentValue_3), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,System.Object>
struct Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::dictionary
	Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::version
	int32_t ___version_2;
	// TValue System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::currentValue
	RuntimeObject * ___currentValue_3;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420, ___dictionary_0)); }
	inline Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_currentValue_3() { return static_cast<int32_t>(offsetof(Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420, ___currentValue_3)); }
	inline RuntimeObject * get_currentValue_3() const { return ___currentValue_3; }
	inline RuntimeObject ** get_address_of_currentValue_3() { return &___currentValue_3; }
	inline void set_currentValue_3(RuntimeObject * value)
	{
		___currentValue_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentValue_3), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject* ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____set_0)); }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * get__set_0() const { return ____set_0; }
	inline HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE, ____current_3)); }
	inline RuntimeObject* get__current_3() const { return ____current_3; }
	inline RuntimeObject** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject* value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.Collections.Generic.HashSet`1/Enumerator<System.Object>
struct Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 
{
public:
	// System.Collections.Generic.HashSet`1<T> System.Collections.Generic.HashSet`1/Enumerator::_set
	HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * ____set_0;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.HashSet`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.HashSet`1/Enumerator::_current
	RuntimeObject * ____current_3;

public:
	inline static int32_t get_offset_of__set_0() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____set_0)); }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * get__set_0() const { return ____set_0; }
	inline HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 ** get_address_of__set_0() { return &____set_0; }
	inline void set__set_0(HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * value)
	{
		____set_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____set_0), (void*)value);
	}

	inline static int32_t get_offset_of__index_1() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____index_1)); }
	inline int32_t get__index_1() const { return ____index_1; }
	inline int32_t* get_address_of__index_1() { return &____index_1; }
	inline void set__index_1(int32_t value)
	{
		____index_1 = value;
	}

	inline static int32_t get_offset_of__version_2() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____version_2)); }
	inline int32_t get__version_2() const { return ____version_2; }
	inline int32_t* get_address_of__version_2() { return &____version_2; }
	inline void set__version_2(int32_t value)
	{
		____version_2 = value;
	}

	inline static int32_t get_offset_of__current_3() { return static_cast<int32_t>(offsetof(Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133, ____current_3)); }
	inline RuntimeObject * get__current_3() const { return ____current_3; }
	inline RuntimeObject ** get_address_of__current_3() { return &____current_3; }
	inline void set__current_3(RuntimeObject * value)
	{
		____current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____current_3), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>
struct KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	uint32_t ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	RuntimeObject* ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7, ___key_0)); }
	inline uint32_t get_key_0() const { return ___key_0; }
	inline uint32_t* get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(uint32_t value)
	{
		___key_0 = value;
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7, ___value_1)); }
	inline RuntimeObject* get_value_1() const { return ___value_1; }
	inline RuntimeObject** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(RuntimeObject* value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.UInt32,System.Object>
struct KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	uint32_t ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	RuntimeObject * ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA, ___key_0)); }
	inline uint32_t get_key_0() const { return ___key_0; }
	inline uint32_t* get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(uint32_t value)
	{
		___key_0 = value;
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA, ___value_1)); }
	inline RuntimeObject * get_value_1() const { return ___value_1; }
	inline RuntimeObject ** get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(RuntimeObject * value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___value_1), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Double
struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409 
{
public:
	// System.Double System.Double::m_value
	double ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409, ___m_value_0)); }
	inline double get_m_value_0() const { return ___m_value_0; }
	inline double* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(double value)
	{
		___m_value_0 = value;
	}
};

struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields
{
public:
	// System.Double System.Double::NegativeZero
	double ___NegativeZero_7;

public:
	inline static int32_t get_offset_of_NegativeZero_7() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields, ___NegativeZero_7)); }
	inline double get_NegativeZero_7() const { return ___NegativeZero_7; }
	inline double* get_address_of_NegativeZero_7() { return &___NegativeZero_7; }
	inline void set_NegativeZero_7(double value)
	{
		___NegativeZero_7 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.Boolean>
struct Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 
{
public:
	// T System.Nullable`1::value
	bool ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___value_0)); }
	inline bool get_value_0() const { return ___value_0; }
	inline bool* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(bool value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Nullable`1<System.UInt32>
struct Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 
{
public:
	// T System.Nullable`1::value
	uint32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043, ___value_0)); }
	inline uint32_t get_value_0() const { return ___value_0; }
	inline uint32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(uint32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Runtime.CompilerServices.AsyncMethodBuilderCore
struct AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01 
{
public:
	// System.Runtime.CompilerServices.IAsyncStateMachine System.Runtime.CompilerServices.AsyncMethodBuilderCore::m_stateMachine
	RuntimeObject* ___m_stateMachine_0;
	// System.Action System.Runtime.CompilerServices.AsyncMethodBuilderCore::m_defaultContextAction
	Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * ___m_defaultContextAction_1;

public:
	inline static int32_t get_offset_of_m_stateMachine_0() { return static_cast<int32_t>(offsetof(AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01, ___m_stateMachine_0)); }
	inline RuntimeObject* get_m_stateMachine_0() const { return ___m_stateMachine_0; }
	inline RuntimeObject** get_address_of_m_stateMachine_0() { return &___m_stateMachine_0; }
	inline void set_m_stateMachine_0(RuntimeObject* value)
	{
		___m_stateMachine_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_stateMachine_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_defaultContextAction_1() { return static_cast<int32_t>(offsetof(AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01, ___m_defaultContextAction_1)); }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * get_m_defaultContextAction_1() const { return ___m_defaultContextAction_1; }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 ** get_address_of_m_defaultContextAction_1() { return &___m_defaultContextAction_1; }
	inline void set_m_defaultContextAction_1(Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * value)
	{
		___m_defaultContextAction_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_defaultContextAction_1), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Runtime.CompilerServices.AsyncMethodBuilderCore
struct AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_pinvoke
{
	RuntimeObject* ___m_stateMachine_0;
	Il2CppMethodPointer ___m_defaultContextAction_1;
};
// Native definition for COM marshalling of System.Runtime.CompilerServices.AsyncMethodBuilderCore
struct AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_com
{
	RuntimeObject* ___m_stateMachine_0;
	Il2CppMethodPointer ___m_defaultContextAction_1;
};

// System.Runtime.CompilerServices.TaskAwaiter
struct TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F 
{
public:
	// System.Threading.Tasks.Task System.Runtime.CompilerServices.TaskAwaiter::m_task
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_0;

public:
	inline static int32_t get_offset_of_m_task_0() { return static_cast<int32_t>(offsetof(TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F, ___m_task_0)); }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * get_m_task_0() const { return ___m_task_0; }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 ** get_address_of_m_task_0() { return &___m_task_0; }
	inline void set_m_task_0(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * value)
	{
		___m_task_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_task_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Runtime.CompilerServices.TaskAwaiter
struct TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_marshaled_pinvoke
{
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_0;
};
// Native definition for COM marshalling of System.Runtime.CompilerServices.TaskAwaiter
struct TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_marshaled_com
{
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_0;
};

// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt16
struct UInt16_tAE45CEF73BF720100519F6867F32145D075F928E 
{
public:
	// System.UInt16 System.UInt16::m_value
	uint16_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt16_tAE45CEF73BF720100519F6867F32145D075F928E, ___m_value_0)); }
	inline uint16_t get_m_value_0() const { return ___m_value_0; }
	inline uint16_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint16_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Color
struct Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 
{
public:
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(Color_t119BCA590009762C7223FDD3AF9706653AC84ED2, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};


// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5  : public AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6
{
public:
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___m_EventSystem_1;

public:
	inline static int32_t get_offset_of_m_EventSystem_1() { return static_cast<int32_t>(offsetof(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5, ___m_EventSystem_1)); }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * get_m_EventSystem_1() const { return ___m_EventSystem_1; }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 ** get_address_of_m_EventSystem_1() { return &___m_EventSystem_1; }
	inline void set_m_EventSystem_1(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * value)
	{
		___m_EventSystem_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystem_1), (void*)value);
	}
};


// UnityEngine.LayerMask
struct LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 
{
public:
	// System.Int32 UnityEngine.LayerMask::m_Mask
	int32_t ___m_Mask_0;

public:
	inline static int32_t get_offset_of_m_Mask_0() { return static_cast<int32_t>(offsetof(LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0, ___m_Mask_0)); }
	inline int32_t get_m_Mask_0() const { return ___m_Mask_0; }
	inline int32_t* get_address_of_m_Mask_0() { return &___m_Mask_0; }
	inline void set_m_Mask_0(int32_t value)
	{
		___m_Mask_0 = value;
	}
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Rect
struct Rect_t35B976DE901B5423C11705E156938EA27AB402CE 
{
public:
	// System.Single UnityEngine.Rect::m_XMin
	float ___m_XMin_0;
	// System.Single UnityEngine.Rect::m_YMin
	float ___m_YMin_1;
	// System.Single UnityEngine.Rect::m_Width
	float ___m_Width_2;
	// System.Single UnityEngine.Rect::m_Height
	float ___m_Height_3;

public:
	inline static int32_t get_offset_of_m_XMin_0() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_XMin_0)); }
	inline float get_m_XMin_0() const { return ___m_XMin_0; }
	inline float* get_address_of_m_XMin_0() { return &___m_XMin_0; }
	inline void set_m_XMin_0(float value)
	{
		___m_XMin_0 = value;
	}

	inline static int32_t get_offset_of_m_YMin_1() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_YMin_1)); }
	inline float get_m_YMin_1() const { return ___m_YMin_1; }
	inline float* get_address_of_m_YMin_1() { return &___m_YMin_1; }
	inline void set_m_YMin_1(float value)
	{
		___m_YMin_1 = value;
	}

	inline static int32_t get_offset_of_m_Width_2() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_Width_2)); }
	inline float get_m_Width_2() const { return ___m_Width_2; }
	inline float* get_address_of_m_Width_2() { return &___m_Width_2; }
	inline void set_m_Width_2(float value)
	{
		___m_Width_2 = value;
	}

	inline static int32_t get_offset_of_m_Height_3() { return static_cast<int32_t>(offsetof(Rect_t35B976DE901B5423C11705E156938EA27AB402CE, ___m_Height_3)); }
	inline float get_m_Height_3() const { return ___m_Height_3; }
	inline float* get_address_of_m_Height_3() { return &___m_Height_3; }
	inline void set_m_Height_3(float value)
	{
		___m_Height_3 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// UnityEngine.Vector4
struct Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E 
{
public:
	// System.Single UnityEngine.Vector4::x
	float ___x_1;
	// System.Single UnityEngine.Vector4::y
	float ___y_2;
	// System.Single UnityEngine.Vector4::z
	float ___z_3;
	// System.Single UnityEngine.Vector4::w
	float ___w_4;

public:
	inline static int32_t get_offset_of_x_1() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___x_1)); }
	inline float get_x_1() const { return ___x_1; }
	inline float* get_address_of_x_1() { return &___x_1; }
	inline void set_x_1(float value)
	{
		___x_1 = value;
	}

	inline static int32_t get_offset_of_y_2() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___y_2)); }
	inline float get_y_2() const { return ___y_2; }
	inline float* get_address_of_y_2() { return &___y_2; }
	inline void set_y_2(float value)
	{
		___y_2 = value;
	}

	inline static int32_t get_offset_of_z_3() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___z_3)); }
	inline float get_z_3() const { return ___z_3; }
	inline float* get_address_of_z_3() { return &___z_3; }
	inline void set_z_3(float value)
	{
		___z_3 = value;
	}

	inline static int32_t get_offset_of_w_4() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E, ___w_4)); }
	inline float get_w_4() const { return ___w_4; }
	inline float* get_address_of_w_4() { return &___w_4; }
	inline void set_w_4(float value)
	{
		___w_4 = value;
	}
};

struct Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields
{
public:
	// UnityEngine.Vector4 UnityEngine.Vector4::zeroVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___zeroVector_5;
	// UnityEngine.Vector4 UnityEngine.Vector4::oneVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___oneVector_6;
	// UnityEngine.Vector4 UnityEngine.Vector4::positiveInfinityVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___positiveInfinityVector_7;
	// UnityEngine.Vector4 UnityEngine.Vector4::negativeInfinityVector
	Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___negativeInfinityVector_8;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___zeroVector_5)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___oneVector_6)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_7() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___positiveInfinityVector_7)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_positiveInfinityVector_7() const { return ___positiveInfinityVector_7; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_positiveInfinityVector_7() { return &___positiveInfinityVector_7; }
	inline void set_positiveInfinityVector_7(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___positiveInfinityVector_7 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_StaticFields, ___negativeInfinityVector_8)); }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  get_negativeInfinityVector_8() const { return ___negativeInfinityVector_8; }
	inline Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E * get_address_of_negativeInfinityVector_8() { return &___negativeInfinityVector_8; }
	inline void set_negativeInfinityVector_8(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  value)
	{
		___negativeInfinityVector_8 = value;
	}
};


// Microsoft.MixedReality.Toolkit.BaseService
struct BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10  : public RuntimeObject
{
public:
	// System.String Microsoft.MixedReality.Toolkit.BaseService::<Name>k__BackingField
	String_t* ___U3CNameU3Ek__BackingField_1;
	// System.UInt32 Microsoft.MixedReality.Toolkit.BaseService::<Priority>k__BackingField
	uint32_t ___U3CPriorityU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile Microsoft.MixedReality.Toolkit.BaseService::<ConfigurationProfile>k__BackingField
	BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___U3CConfigurationProfileU3Ek__BackingField_3;
	// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.BaseService::isInitialized
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___isInitialized_4;
	// System.String[] Microsoft.MixedReality.Toolkit.BaseService::typeName
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___typeName_5;
	// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.BaseService::isEnabled
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___isEnabled_9;
	// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.BaseService::isMarkedDestroyed
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___isMarkedDestroyed_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.BaseService::disposed
	bool ___disposed_11;

public:
	inline static int32_t get_offset_of_U3CNameU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___U3CNameU3Ek__BackingField_1)); }
	inline String_t* get_U3CNameU3Ek__BackingField_1() const { return ___U3CNameU3Ek__BackingField_1; }
	inline String_t** get_address_of_U3CNameU3Ek__BackingField_1() { return &___U3CNameU3Ek__BackingField_1; }
	inline void set_U3CNameU3Ek__BackingField_1(String_t* value)
	{
		___U3CNameU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNameU3Ek__BackingField_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPriorityU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___U3CPriorityU3Ek__BackingField_2)); }
	inline uint32_t get_U3CPriorityU3Ek__BackingField_2() const { return ___U3CPriorityU3Ek__BackingField_2; }
	inline uint32_t* get_address_of_U3CPriorityU3Ek__BackingField_2() { return &___U3CPriorityU3Ek__BackingField_2; }
	inline void set_U3CPriorityU3Ek__BackingField_2(uint32_t value)
	{
		___U3CPriorityU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CConfigurationProfileU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___U3CConfigurationProfileU3Ek__BackingField_3)); }
	inline BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * get_U3CConfigurationProfileU3Ek__BackingField_3() const { return ___U3CConfigurationProfileU3Ek__BackingField_3; }
	inline BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 ** get_address_of_U3CConfigurationProfileU3Ek__BackingField_3() { return &___U3CConfigurationProfileU3Ek__BackingField_3; }
	inline void set_U3CConfigurationProfileU3Ek__BackingField_3(BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * value)
	{
		___U3CConfigurationProfileU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CConfigurationProfileU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_isInitialized_4() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___isInitialized_4)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_isInitialized_4() const { return ___isInitialized_4; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_isInitialized_4() { return &___isInitialized_4; }
	inline void set_isInitialized_4(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___isInitialized_4 = value;
	}

	inline static int32_t get_offset_of_typeName_5() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___typeName_5)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_typeName_5() const { return ___typeName_5; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_typeName_5() { return &___typeName_5; }
	inline void set_typeName_5(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___typeName_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___typeName_5), (void*)value);
	}

	inline static int32_t get_offset_of_isEnabled_9() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___isEnabled_9)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_isEnabled_9() const { return ___isEnabled_9; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_isEnabled_9() { return &___isEnabled_9; }
	inline void set_isEnabled_9(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___isEnabled_9 = value;
	}

	inline static int32_t get_offset_of_isMarkedDestroyed_10() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___isMarkedDestroyed_10)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_isMarkedDestroyed_10() const { return ___isMarkedDestroyed_10; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_isMarkedDestroyed_10() { return &___isMarkedDestroyed_10; }
	inline void set_isMarkedDestroyed_10(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___isMarkedDestroyed_10 = value;
	}

	inline static int32_t get_offset_of_disposed_11() { return static_cast<int32_t>(offsetof(BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10, ___disposed_11)); }
	inline bool get_disposed_11() const { return ___disposed_11; }
	inline bool* get_address_of_disposed_11() { return &___disposed_11; }
	inline void set_disposed_11(bool value)
	{
		___disposed_11 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine/GazePointerState
struct GazePointerState_t79EDF035055D052F58960932F92F6C9FA61A2750 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine/GazePointerState::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(GazePointerState_t79EDF035055D052F58960932F92F6C9FA61A2750, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSourceType
struct InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.InputSourceType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::barycentricCoordinate
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::distance
	float ___distance_3;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::triangleIndex
	int32_t ___triangleIndex_4;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord2
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::transform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::lightmapCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::raycastValid
	bool ___raycastValid_9;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::collider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;

public:
	inline static int32_t get_offset_of_point_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_point_0() const { return ___point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_point_0() { return &___point_0; }
	inline void set_point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___point_0 = value;
	}

	inline static int32_t get_offset_of_normal_1() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_normal_1() const { return ___normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_normal_1() { return &___normal_1; }
	inline void set_normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___normal_1 = value;
	}

	inline static int32_t get_offset_of_barycentricCoordinate_2() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___barycentricCoordinate_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_barycentricCoordinate_2() const { return ___barycentricCoordinate_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_barycentricCoordinate_2() { return &___barycentricCoordinate_2; }
	inline void set_barycentricCoordinate_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___barycentricCoordinate_2 = value;
	}

	inline static int32_t get_offset_of_distance_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___distance_3)); }
	inline float get_distance_3() const { return ___distance_3; }
	inline float* get_address_of_distance_3() { return &___distance_3; }
	inline void set_distance_3(float value)
	{
		___distance_3 = value;
	}

	inline static int32_t get_offset_of_triangleIndex_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___triangleIndex_4)); }
	inline int32_t get_triangleIndex_4() const { return ___triangleIndex_4; }
	inline int32_t* get_address_of_triangleIndex_4() { return &___triangleIndex_4; }
	inline void set_triangleIndex_4(int32_t value)
	{
		___triangleIndex_4 = value;
	}

	inline static int32_t get_offset_of_textureCoord_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord_5() const { return ___textureCoord_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord_5() { return &___textureCoord_5; }
	inline void set_textureCoord_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord_5 = value;
	}

	inline static int32_t get_offset_of_textureCoord2_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord2_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord2_6() const { return ___textureCoord2_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord2_6() { return &___textureCoord2_6; }
	inline void set_textureCoord2_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord2_6 = value;
	}

	inline static int32_t get_offset_of_transform_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___transform_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_transform_7() const { return ___transform_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_transform_7() { return &___transform_7; }
	inline void set_transform_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___transform_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transform_7), (void*)value);
	}

	inline static int32_t get_offset_of_lightmapCoord_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___lightmapCoord_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lightmapCoord_8() const { return ___lightmapCoord_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lightmapCoord_8() { return &___lightmapCoord_8; }
	inline void set_lightmapCoord_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lightmapCoord_8 = value;
	}

	inline static int32_t get_offset_of_raycastValid_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___raycastValid_9)); }
	inline bool get_raycastValid_9() const { return ___raycastValid_9; }
	inline bool* get_address_of_raycastValid_9() { return &___raycastValid_9; }
	inline void set_raycastValid_9(bool value)
	{
		___raycastValid_9 = value;
	}

	inline static int32_t get_offset_of_collider_10() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___collider_10)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_collider_10() const { return ___collider_10; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_collider_10() { return &___collider_10; }
	inline void set_collider_10(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___collider_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___collider_10), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};

// Microsoft.MixedReality.Toolkit.Input.PointerBehavior
struct PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PointerBehavior::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.TouchableEventType
struct TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.TouchableEventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.RayStep
struct RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Origin>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3COriginU3Ek__BackingField_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Terminus>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CTerminusU3Ek__BackingField_4;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::<Direction>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CDirectionU3Ek__BackingField_5;
	// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::<Length>k__BackingField
	float ___U3CLengthU3Ek__BackingField_6;
	// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::epsilon
	float ___epsilon_7;

public:
	inline static int32_t get_offset_of_U3COriginU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3COriginU3Ek__BackingField_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3COriginU3Ek__BackingField_3() const { return ___U3COriginU3Ek__BackingField_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3COriginU3Ek__BackingField_3() { return &___U3COriginU3Ek__BackingField_3; }
	inline void set_U3COriginU3Ek__BackingField_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3COriginU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CTerminusU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CTerminusU3Ek__BackingField_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CTerminusU3Ek__BackingField_4() const { return ___U3CTerminusU3Ek__BackingField_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CTerminusU3Ek__BackingField_4() { return &___U3CTerminusU3Ek__BackingField_4; }
	inline void set_U3CTerminusU3Ek__BackingField_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CTerminusU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CDirectionU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CDirectionU3Ek__BackingField_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CDirectionU3Ek__BackingField_5() const { return ___U3CDirectionU3Ek__BackingField_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CDirectionU3Ek__BackingField_5() { return &___U3CDirectionU3Ek__BackingField_5; }
	inline void set_U3CDirectionU3Ek__BackingField_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CDirectionU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CLengthU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___U3CLengthU3Ek__BackingField_6)); }
	inline float get_U3CLengthU3Ek__BackingField_6() const { return ___U3CLengthU3Ek__BackingField_6; }
	inline float* get_address_of_U3CLengthU3Ek__BackingField_6() { return &___U3CLengthU3Ek__BackingField_6; }
	inline void set_U3CLengthU3Ek__BackingField_6(float value)
	{
		___U3CLengthU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_epsilon_7() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B, ___epsilon_7)); }
	inline float get_epsilon_7() const { return ___epsilon_7; }
	inline float* get_address_of_epsilon_7() { return &___epsilon_7; }
	inline void set_epsilon_7(float value)
	{
		___epsilon_7 = value;
	}
};

struct RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::dist
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dist_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::dir
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dir_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::pos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos_2;

public:
	inline static int32_t get_offset_of_dist_0() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___dist_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_dist_0() const { return ___dist_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_dist_0() { return &___dist_0; }
	inline void set_dist_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___dist_0 = value;
	}

	inline static int32_t get_offset_of_dir_1() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___dir_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_dir_1() const { return ___dir_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_dir_1() { return &___dir_1; }
	inline void set_dir_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___dir_1 = value;
	}

	inline static int32_t get_offset_of_pos_2() { return static_cast<int32_t>(offsetof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B_StaticFields, ___pos_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pos_2() const { return ___pos_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pos_2() { return &___pos_2; }
	inline void set_pos_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pos_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType
struct SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Physics.SceneQueryType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel
struct RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RecognitionConfidenceLevel_t268309604F121A28C180E45D76773A497586C058, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>
struct Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C, ___dictionary_0)); }
	inline Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C, ___current_3)); }
	inline KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7 * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,System.Object>
struct Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE, ___dictionary_0)); }
	inline Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE, ___current_3)); }
	inline KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___value_1), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Delegate
struct Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Exception
struct Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Nullable`1<UnityEngine.Vector3>
struct Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 
{
public:
	// T System.Nullable`1::value
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203, ___value_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_value_0() const { return ___value_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Reflection.BindingFlags
struct BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Runtime.CompilerServices.AsyncVoidMethodBuilder
struct AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF 
{
public:
	// System.Threading.SynchronizationContext System.Runtime.CompilerServices.AsyncVoidMethodBuilder::m_synchronizationContext
	SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * ___m_synchronizationContext_0;
	// System.Runtime.CompilerServices.AsyncMethodBuilderCore System.Runtime.CompilerServices.AsyncVoidMethodBuilder::m_coreState
	AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  ___m_coreState_1;
	// System.Threading.Tasks.Task System.Runtime.CompilerServices.AsyncVoidMethodBuilder::m_task
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_2;

public:
	inline static int32_t get_offset_of_m_synchronizationContext_0() { return static_cast<int32_t>(offsetof(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF, ___m_synchronizationContext_0)); }
	inline SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * get_m_synchronizationContext_0() const { return ___m_synchronizationContext_0; }
	inline SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 ** get_address_of_m_synchronizationContext_0() { return &___m_synchronizationContext_0; }
	inline void set_m_synchronizationContext_0(SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * value)
	{
		___m_synchronizationContext_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_synchronizationContext_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_coreState_1() { return static_cast<int32_t>(offsetof(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF, ___m_coreState_1)); }
	inline AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  get_m_coreState_1() const { return ___m_coreState_1; }
	inline AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01 * get_address_of_m_coreState_1() { return &___m_coreState_1; }
	inline void set_m_coreState_1(AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  value)
	{
		___m_coreState_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_m_task_2() { return static_cast<int32_t>(offsetof(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF, ___m_task_2)); }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * get_m_task_2() const { return ___m_task_2; }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 ** get_address_of_m_task_2() { return &___m_task_2; }
	inline void set_m_task_2(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * value)
	{
		___m_task_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_task_2), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Runtime.CompilerServices.AsyncVoidMethodBuilder
struct AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF_marshaled_pinvoke
{
	SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * ___m_synchronizationContext_0;
	AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_pinvoke ___m_coreState_1;
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_2;
};
// Native definition for COM marshalling of System.Runtime.CompilerServices.AsyncVoidMethodBuilder
struct AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF_marshaled_com
{
	SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * ___m_synchronizationContext_0;
	AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_com ___m_coreState_1;
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_2;
};

// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// System.StringComparison
struct StringComparison_t02BAA95468CE9E91115C604577611FDF58FEDCF0 
{
public:
	// System.Int32 System.StringComparison::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(StringComparison_t02BAA95468CE9E91115C604577611FDF58FEDCF0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.TimeSpan
struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 
{
public:
	// System.Int64 System.TimeSpan::_ticks
	int64_t ____ticks_3;

public:
	inline static int32_t get_offset_of__ticks_3() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4, ____ticks_3)); }
	inline int64_t get__ticks_3() const { return ____ticks_3; }
	inline int64_t* get_address_of__ticks_3() { return &____ticks_3; }
	inline void set__ticks_3(int64_t value)
	{
		____ticks_3 = value;
	}
};

struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields
{
public:
	// System.TimeSpan System.TimeSpan::Zero
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___Zero_0;
	// System.TimeSpan System.TimeSpan::MaxValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MaxValue_1;
	// System.TimeSpan System.TimeSpan::MinValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MinValue_2;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyConfigChecked
	bool ____legacyConfigChecked_4;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyMode
	bool ____legacyMode_5;

public:
	inline static int32_t get_offset_of_Zero_0() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___Zero_0)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_Zero_0() const { return ___Zero_0; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_Zero_0() { return &___Zero_0; }
	inline void set_Zero_0(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___Zero_0 = value;
	}

	inline static int32_t get_offset_of_MaxValue_1() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MaxValue_1)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MaxValue_1() const { return ___MaxValue_1; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MaxValue_1() { return &___MaxValue_1; }
	inline void set_MaxValue_1(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MaxValue_1 = value;
	}

	inline static int32_t get_offset_of_MinValue_2() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MinValue_2)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MinValue_2() const { return ___MinValue_2; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MinValue_2() { return &___MinValue_2; }
	inline void set_MinValue_2(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MinValue_2 = value;
	}

	inline static int32_t get_offset_of__legacyConfigChecked_4() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyConfigChecked_4)); }
	inline bool get__legacyConfigChecked_4() const { return ____legacyConfigChecked_4; }
	inline bool* get_address_of__legacyConfigChecked_4() { return &____legacyConfigChecked_4; }
	inline void set__legacyConfigChecked_4(bool value)
	{
		____legacyConfigChecked_4 = value;
	}

	inline static int32_t get_offset_of__legacyMode_5() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyMode_5)); }
	inline bool get__legacyMode_5() const { return ____legacyMode_5; }
	inline bool* get_address_of__legacyMode_5() { return &____legacyMode_5; }
	inline void set__legacyMode_5(bool value)
	{
		____legacyMode_5 = value;
	}
};


// Unity.Profiling.ProfilerMarker
struct ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// Unity.Profiling.ProfilerMarker/AutoScope
struct AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker/AutoScope::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// UnityEngine.CameraClearFlags
struct CameraClearFlags_tAC22BD22D12708CBDC63F6CFB31109E5E17CF239 
{
public:
	// System.Int32 UnityEngine.CameraClearFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CameraClearFlags_tAC22BD22D12708CBDC63F6CFB31109E5E17CF239, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.EventSystems.PointerEventData/InputButton
struct InputButton_tCC7470F9FD2AFE525243394F0215B47D4BF86AB0 
{
public:
	// System.Int32 UnityEngine.EventSystems.PointerEventData/InputButton::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InputButton_tCC7470F9FD2AFE525243394F0215B47D4BF86AB0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 
{
public:
	// UnityEngine.GameObject UnityEngine.EventSystems.RaycastResult::m_GameObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	// UnityEngine.EventSystems.BaseRaycaster UnityEngine.EventSystems.RaycastResult::module
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	// System.Single UnityEngine.EventSystems.RaycastResult::distance
	float ___distance_2;
	// System.Single UnityEngine.EventSystems.RaycastResult::index
	float ___index_3;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::depth
	int32_t ___depth_4;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingLayer
	int32_t ___sortingLayer_5;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingOrder
	int32_t ___sortingOrder_6;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldNormal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	// UnityEngine.Vector2 UnityEngine.EventSystems.RaycastResult::screenPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::displayIndex
	int32_t ___displayIndex_10;

public:
	inline static int32_t get_offset_of_m_GameObject_0() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___m_GameObject_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_GameObject_0() const { return ___m_GameObject_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_GameObject_0() { return &___m_GameObject_0; }
	inline void set_m_GameObject_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_GameObject_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_GameObject_0), (void*)value);
	}

	inline static int32_t get_offset_of_module_1() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___module_1)); }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * get_module_1() const { return ___module_1; }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 ** get_address_of_module_1() { return &___module_1; }
	inline void set_module_1(BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * value)
	{
		___module_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___module_1), (void*)value);
	}

	inline static int32_t get_offset_of_distance_2() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___distance_2)); }
	inline float get_distance_2() const { return ___distance_2; }
	inline float* get_address_of_distance_2() { return &___distance_2; }
	inline void set_distance_2(float value)
	{
		___distance_2 = value;
	}

	inline static int32_t get_offset_of_index_3() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___index_3)); }
	inline float get_index_3() const { return ___index_3; }
	inline float* get_address_of_index_3() { return &___index_3; }
	inline void set_index_3(float value)
	{
		___index_3 = value;
	}

	inline static int32_t get_offset_of_depth_4() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___depth_4)); }
	inline int32_t get_depth_4() const { return ___depth_4; }
	inline int32_t* get_address_of_depth_4() { return &___depth_4; }
	inline void set_depth_4(int32_t value)
	{
		___depth_4 = value;
	}

	inline static int32_t get_offset_of_sortingLayer_5() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingLayer_5)); }
	inline int32_t get_sortingLayer_5() const { return ___sortingLayer_5; }
	inline int32_t* get_address_of_sortingLayer_5() { return &___sortingLayer_5; }
	inline void set_sortingLayer_5(int32_t value)
	{
		___sortingLayer_5 = value;
	}

	inline static int32_t get_offset_of_sortingOrder_6() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingOrder_6)); }
	inline int32_t get_sortingOrder_6() const { return ___sortingOrder_6; }
	inline int32_t* get_address_of_sortingOrder_6() { return &___sortingOrder_6; }
	inline void set_sortingOrder_6(int32_t value)
	{
		___sortingOrder_6 = value;
	}

	inline static int32_t get_offset_of_worldPosition_7() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldPosition_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldPosition_7() const { return ___worldPosition_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldPosition_7() { return &___worldPosition_7; }
	inline void set_worldPosition_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldPosition_7 = value;
	}

	inline static int32_t get_offset_of_worldNormal_8() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldNormal_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldNormal_8() const { return ___worldNormal_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldNormal_8() { return &___worldNormal_8; }
	inline void set_worldNormal_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldNormal_8 = value;
	}

	inline static int32_t get_offset_of_screenPosition_9() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___screenPosition_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_screenPosition_9() const { return ___screenPosition_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_screenPosition_9() { return &___screenPosition_9; }
	inline void set_screenPosition_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___screenPosition_9 = value;
	}

	inline static int32_t get_offset_of_displayIndex_10() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___displayIndex_10)); }
	inline int32_t get_displayIndex_10() const { return ___displayIndex_10; }
	inline int32_t* get_address_of_displayIndex_10() { return &___displayIndex_10; }
	inline void set_displayIndex_10(int32_t value)
	{
		___displayIndex_10 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};
// Native definition for COM marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};

// UnityEngine.KeyCode
struct KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C 
{
public:
	// System.Int32 UnityEngine.KeyCode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.Ray
struct Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 
{
public:
	// UnityEngine.Vector3 UnityEngine.Ray::m_Origin
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Origin_0;
	// UnityEngine.Vector3 UnityEngine.Ray::m_Direction
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Direction_1;

public:
	inline static int32_t get_offset_of_m_Origin_0() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Origin_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Origin_0() const { return ___m_Origin_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Origin_0() { return &___m_Origin_0; }
	inline void set_m_Origin_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Origin_0 = value;
	}

	inline static int32_t get_offset_of_m_Direction_1() { return static_cast<int32_t>(offsetof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2, ___m_Direction_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Direction_1() const { return ___m_Direction_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Direction_1() { return &___m_Direction_1; }
	inline void set_m_Direction_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Direction_1 = value;
	}
};


// UnityEngine.RaycastHit
struct RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 
{
public:
	// UnityEngine.Vector3 UnityEngine.RaycastHit::m_Point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Point_0;
	// UnityEngine.Vector3 UnityEngine.RaycastHit::m_Normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Normal_1;
	// System.UInt32 UnityEngine.RaycastHit::m_FaceID
	uint32_t ___m_FaceID_2;
	// System.Single UnityEngine.RaycastHit::m_Distance
	float ___m_Distance_3;
	// UnityEngine.Vector2 UnityEngine.RaycastHit::m_UV
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___m_UV_4;
	// System.Int32 UnityEngine.RaycastHit::m_Collider
	int32_t ___m_Collider_5;

public:
	inline static int32_t get_offset_of_m_Point_0() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Point_0() const { return ___m_Point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Point_0() { return &___m_Point_0; }
	inline void set_m_Point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Point_0 = value;
	}

	inline static int32_t get_offset_of_m_Normal_1() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Normal_1() const { return ___m_Normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Normal_1() { return &___m_Normal_1; }
	inline void set_m_Normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Normal_1 = value;
	}

	inline static int32_t get_offset_of_m_FaceID_2() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_FaceID_2)); }
	inline uint32_t get_m_FaceID_2() const { return ___m_FaceID_2; }
	inline uint32_t* get_address_of_m_FaceID_2() { return &___m_FaceID_2; }
	inline void set_m_FaceID_2(uint32_t value)
	{
		___m_FaceID_2 = value;
	}

	inline static int32_t get_offset_of_m_Distance_3() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Distance_3)); }
	inline float get_m_Distance_3() const { return ___m_Distance_3; }
	inline float* get_address_of_m_Distance_3() { return &___m_Distance_3; }
	inline void set_m_Distance_3(float value)
	{
		___m_Distance_3 = value;
	}

	inline static int32_t get_offset_of_m_UV_4() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_UV_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_m_UV_4() const { return ___m_UV_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_m_UV_4() { return &___m_UV_4; }
	inline void set_m_UV_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___m_UV_4 = value;
	}

	inline static int32_t get_offset_of_m_Collider_5() { return static_cast<int32_t>(offsetof(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3, ___m_Collider_5)); }
	inline int32_t get_m_Collider_5() const { return ___m_Collider_5; }
	inline int32_t* get_address_of_m_Collider_5() { return &___m_Collider_5; }
	inline void set_m_Collider_5(int32_t value)
	{
		___m_Collider_5 = value;
	}
};


// UnityEngine.RenderingPath
struct RenderingPath_t5E196960B7ECE9BA17943445415336FA4E19F82B 
{
public:
	// System.Int32 UnityEngine.RenderingPath::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RenderingPath_t5E196960B7ECE9BA17943445415336FA4E19F82B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.StereoTargetEyeMask
struct StereoTargetEyeMask_t9B10176C5D3A38A3C2B226428A96859D2A88C8A0 
{
public:
	// System.Int32 UnityEngine.StereoTargetEyeMask::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(StereoTargetEyeMask_t9B10176C5D3A38A3C2B226428A96859D2A88C8A0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.BaseEventSystem
struct BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2  : public BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.BaseEventSystem::eventExecutionDepth
	int32_t ___eventExecutionDepth_13;
	// System.Type Microsoft.MixedReality.Toolkit.BaseEventSystem::eventSystemHandlerType
	Type_t * ___eventSystemHandlerType_14;
	// System.Collections.Generic.List`1<System.Tuple`3<Microsoft.MixedReality.Toolkit.BaseEventSystem/Action,System.Type,UnityEngine.EventSystems.IEventSystemHandler>> Microsoft.MixedReality.Toolkit.BaseEventSystem::postponedActions
	List_1_tA08BD9AF20C1FFEAAC47D3CE3228DBE09C09DEF5 * ___postponedActions_15;
	// System.Collections.Generic.List`1<System.Tuple`2<Microsoft.MixedReality.Toolkit.BaseEventSystem/Action,UnityEngine.GameObject>> Microsoft.MixedReality.Toolkit.BaseEventSystem::postponedObjectActions
	List_1_tF09772E43F5004C04E48ED2D8F83300C306AD076 * ___postponedObjectActions_16;
	// System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.BaseEventSystem/EventHandlerEntry>> Microsoft.MixedReality.Toolkit.BaseEventSystem::<EventHandlersByType>k__BackingField
	Dictionary_2_t99334118C530AD8E37E47B5B0848937F9AB3FE45 * ___U3CEventHandlersByTypeU3Ek__BackingField_17;
	// System.Collections.Generic.List`1<UnityEngine.GameObject> Microsoft.MixedReality.Toolkit.BaseEventSystem::<EventListeners>k__BackingField
	List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * ___U3CEventListenersU3Ek__BackingField_18;

public:
	inline static int32_t get_offset_of_eventExecutionDepth_13() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2, ___eventExecutionDepth_13)); }
	inline int32_t get_eventExecutionDepth_13() const { return ___eventExecutionDepth_13; }
	inline int32_t* get_address_of_eventExecutionDepth_13() { return &___eventExecutionDepth_13; }
	inline void set_eventExecutionDepth_13(int32_t value)
	{
		___eventExecutionDepth_13 = value;
	}

	inline static int32_t get_offset_of_eventSystemHandlerType_14() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2, ___eventSystemHandlerType_14)); }
	inline Type_t * get_eventSystemHandlerType_14() const { return ___eventSystemHandlerType_14; }
	inline Type_t ** get_address_of_eventSystemHandlerType_14() { return &___eventSystemHandlerType_14; }
	inline void set_eventSystemHandlerType_14(Type_t * value)
	{
		___eventSystemHandlerType_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___eventSystemHandlerType_14), (void*)value);
	}

	inline static int32_t get_offset_of_postponedActions_15() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2, ___postponedActions_15)); }
	inline List_1_tA08BD9AF20C1FFEAAC47D3CE3228DBE09C09DEF5 * get_postponedActions_15() const { return ___postponedActions_15; }
	inline List_1_tA08BD9AF20C1FFEAAC47D3CE3228DBE09C09DEF5 ** get_address_of_postponedActions_15() { return &___postponedActions_15; }
	inline void set_postponedActions_15(List_1_tA08BD9AF20C1FFEAAC47D3CE3228DBE09C09DEF5 * value)
	{
		___postponedActions_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___postponedActions_15), (void*)value);
	}

	inline static int32_t get_offset_of_postponedObjectActions_16() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2, ___postponedObjectActions_16)); }
	inline List_1_tF09772E43F5004C04E48ED2D8F83300C306AD076 * get_postponedObjectActions_16() const { return ___postponedObjectActions_16; }
	inline List_1_tF09772E43F5004C04E48ED2D8F83300C306AD076 ** get_address_of_postponedObjectActions_16() { return &___postponedObjectActions_16; }
	inline void set_postponedObjectActions_16(List_1_tF09772E43F5004C04E48ED2D8F83300C306AD076 * value)
	{
		___postponedObjectActions_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___postponedObjectActions_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CEventHandlersByTypeU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2, ___U3CEventHandlersByTypeU3Ek__BackingField_17)); }
	inline Dictionary_2_t99334118C530AD8E37E47B5B0848937F9AB3FE45 * get_U3CEventHandlersByTypeU3Ek__BackingField_17() const { return ___U3CEventHandlersByTypeU3Ek__BackingField_17; }
	inline Dictionary_2_t99334118C530AD8E37E47B5B0848937F9AB3FE45 ** get_address_of_U3CEventHandlersByTypeU3Ek__BackingField_17() { return &___U3CEventHandlersByTypeU3Ek__BackingField_17; }
	inline void set_U3CEventHandlersByTypeU3Ek__BackingField_17(Dictionary_2_t99334118C530AD8E37E47B5B0848937F9AB3FE45 * value)
	{
		___U3CEventHandlersByTypeU3Ek__BackingField_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CEventHandlersByTypeU3Ek__BackingField_17), (void*)value);
	}

	inline static int32_t get_offset_of_U3CEventListenersU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2, ___U3CEventListenersU3Ek__BackingField_18)); }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * get_U3CEventListenersU3Ek__BackingField_18() const { return ___U3CEventListenersU3Ek__BackingField_18; }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 ** get_address_of_U3CEventListenersU3Ek__BackingField_18() { return &___U3CEventListenersU3Ek__BackingField_18; }
	inline void set_U3CEventListenersU3Ek__BackingField_18(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * value)
	{
		___U3CEventListenersU3Ek__BackingField_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CEventListenersU3Ek__BackingField_18), (void*)value);
	}
};

struct BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2_StaticFields
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.BaseEventSystem::enableDanglingHandlerDiagnostics
	bool ___enableDanglingHandlerDiagnostics_12;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.BaseEventSystem::TraverseEventSystemHandlerHierarchyPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TraverseEventSystemHandlerHierarchyPerfMarker_19;

public:
	inline static int32_t get_offset_of_enableDanglingHandlerDiagnostics_12() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2_StaticFields, ___enableDanglingHandlerDiagnostics_12)); }
	inline bool get_enableDanglingHandlerDiagnostics_12() const { return ___enableDanglingHandlerDiagnostics_12; }
	inline bool* get_address_of_enableDanglingHandlerDiagnostics_12() { return &___enableDanglingHandlerDiagnostics_12; }
	inline void set_enableDanglingHandlerDiagnostics_12(bool value)
	{
		___enableDanglingHandlerDiagnostics_12 = value;
	}

	inline static int32_t get_offset_of_TraverseEventSystemHandlerHierarchyPerfMarker_19() { return static_cast<int32_t>(offsetof(BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2_StaticFields, ___TraverseEventSystemHandlerHierarchyPerfMarker_19)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TraverseEventSystemHandlerHierarchyPerfMarker_19() const { return ___TraverseEventSystemHandlerHierarchyPerfMarker_19; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TraverseEventSystemHandlerHierarchyPerfMarker_19() { return &___TraverseEventSystemHandlerHierarchyPerfMarker_19; }
	inline void set_TraverseEventSystemHandlerHierarchyPerfMarker_19(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TraverseEventSystemHandlerHierarchyPerfMarker_19 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource
struct BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899  : public RuntimeObject
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource::<SourceId>k__BackingField
	uint32_t ___U3CSourceIdU3Ek__BackingField_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource::<SourceName>k__BackingField
	String_t* ___U3CSourceNameU3Ek__BackingField_1;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource::<Pointers>k__BackingField
	IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* ___U3CPointersU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.InputSourceType Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource::<SourceType>k__BackingField
	int32_t ___U3CSourceTypeU3Ek__BackingField_3;

public:
	inline static int32_t get_offset_of_U3CSourceIdU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899, ___U3CSourceIdU3Ek__BackingField_0)); }
	inline uint32_t get_U3CSourceIdU3Ek__BackingField_0() const { return ___U3CSourceIdU3Ek__BackingField_0; }
	inline uint32_t* get_address_of_U3CSourceIdU3Ek__BackingField_0() { return &___U3CSourceIdU3Ek__BackingField_0; }
	inline void set_U3CSourceIdU3Ek__BackingField_0(uint32_t value)
	{
		___U3CSourceIdU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CSourceNameU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899, ___U3CSourceNameU3Ek__BackingField_1)); }
	inline String_t* get_U3CSourceNameU3Ek__BackingField_1() const { return ___U3CSourceNameU3Ek__BackingField_1; }
	inline String_t** get_address_of_U3CSourceNameU3Ek__BackingField_1() { return &___U3CSourceNameU3Ek__BackingField_1; }
	inline void set_U3CSourceNameU3Ek__BackingField_1(String_t* value)
	{
		___U3CSourceNameU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CSourceNameU3Ek__BackingField_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPointersU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899, ___U3CPointersU3Ek__BackingField_2)); }
	inline IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* get_U3CPointersU3Ek__BackingField_2() const { return ___U3CPointersU3Ek__BackingField_2; }
	inline IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778** get_address_of_U3CPointersU3Ek__BackingField_2() { return &___U3CPointersU3Ek__BackingField_2; }
	inline void set_U3CPointersU3Ek__BackingField_2(IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* value)
	{
		___U3CPointersU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointersU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSourceTypeU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899, ___U3CSourceTypeU3Ek__BackingField_3)); }
	inline int32_t get_U3CSourceTypeU3Ek__BackingField_3() const { return ___U3CSourceTypeU3Ek__BackingField_3; }
	inline int32_t* get_address_of_U3CSourceTypeU3Ek__BackingField_3() { return &___U3CSourceTypeU3Ek__BackingField_3; }
	inline void set_U3CSourceTypeU3Ek__BackingField_3(int32_t value)
	{
		___U3CSourceTypeU3Ek__BackingField_3 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult
struct PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::raycastHit
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___raycastHit_0;
	// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::graphicsRaycastResult
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___graphicsRaycastResult_1;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::hitObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___hitObject_2;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::hitPointOnObject
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitPointOnObject_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::hitNormalOnObject
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitNormalOnObject_4;
	// Microsoft.MixedReality.Toolkit.Physics.RayStep Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::ray
	RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___ray_5;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::rayStepIndex
	int32_t ___rayStepIndex_6;
	// System.Single Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::rayDistance
	float ___rayDistance_7;

public:
	inline static int32_t get_offset_of_raycastHit_0() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___raycastHit_0)); }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  get_raycastHit_0() const { return ___raycastHit_0; }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * get_address_of_raycastHit_0() { return &___raycastHit_0; }
	inline void set_raycastHit_0(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  value)
	{
		___raycastHit_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___raycastHit_0))->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___raycastHit_0))->___collider_10), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_graphicsRaycastResult_1() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___graphicsRaycastResult_1)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_graphicsRaycastResult_1() const { return ___graphicsRaycastResult_1; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_graphicsRaycastResult_1() { return &___graphicsRaycastResult_1; }
	inline void set_graphicsRaycastResult_1(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___graphicsRaycastResult_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___graphicsRaycastResult_1))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___graphicsRaycastResult_1))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_hitObject_2() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___hitObject_2)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_hitObject_2() const { return ___hitObject_2; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_hitObject_2() { return &___hitObject_2; }
	inline void set_hitObject_2(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___hitObject_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hitObject_2), (void*)value);
	}

	inline static int32_t get_offset_of_hitPointOnObject_3() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___hitPointOnObject_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_hitPointOnObject_3() const { return ___hitPointOnObject_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_hitPointOnObject_3() { return &___hitPointOnObject_3; }
	inline void set_hitPointOnObject_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___hitPointOnObject_3 = value;
	}

	inline static int32_t get_offset_of_hitNormalOnObject_4() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___hitNormalOnObject_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_hitNormalOnObject_4() const { return ___hitNormalOnObject_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_hitNormalOnObject_4() { return &___hitNormalOnObject_4; }
	inline void set_hitNormalOnObject_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___hitNormalOnObject_4 = value;
	}

	inline static int32_t get_offset_of_ray_5() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___ray_5)); }
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  get_ray_5() const { return ___ray_5; }
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * get_address_of_ray_5() { return &___ray_5; }
	inline void set_ray_5(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  value)
	{
		___ray_5 = value;
	}

	inline static int32_t get_offset_of_rayStepIndex_6() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___rayStepIndex_6)); }
	inline int32_t get_rayStepIndex_6() const { return ___rayStepIndex_6; }
	inline int32_t* get_address_of_rayStepIndex_6() { return &___rayStepIndex_6; }
	inline void set_rayStepIndex_6(int32_t value)
	{
		___rayStepIndex_6 = value;
	}

	inline static int32_t get_offset_of_rayDistance_7() { return static_cast<int32_t>(offsetof(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57, ___rayDistance_7)); }
	inline float get_rayDistance_7() const { return ___rayDistance_7; }
	inline float* get_address_of_rayDistance_7() { return &___rayDistance_7; }
	inline void set_rayDistance_7(float value)
	{
		___rayDistance_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences
struct PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.InputSourceType Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::InputSourceType
	int32_t ___InputSourceType_0;
	// System.Type Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::PointerType
	Type_t * ___PointerType_1;
	// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::Left
	int32_t ___Left_2;
	// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::Right
	int32_t ___Right_3;
	// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::Other
	int32_t ___Other_4;

public:
	inline static int32_t get_offset_of_InputSourceType_0() { return static_cast<int32_t>(offsetof(PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386, ___InputSourceType_0)); }
	inline int32_t get_InputSourceType_0() const { return ___InputSourceType_0; }
	inline int32_t* get_address_of_InputSourceType_0() { return &___InputSourceType_0; }
	inline void set_InputSourceType_0(int32_t value)
	{
		___InputSourceType_0 = value;
	}

	inline static int32_t get_offset_of_PointerType_1() { return static_cast<int32_t>(offsetof(PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386, ___PointerType_1)); }
	inline Type_t * get_PointerType_1() const { return ___PointerType_1; }
	inline Type_t ** get_address_of_PointerType_1() { return &___PointerType_1; }
	inline void set_PointerType_1(Type_t * value)
	{
		___PointerType_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___PointerType_1), (void*)value);
	}

	inline static int32_t get_offset_of_Left_2() { return static_cast<int32_t>(offsetof(PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386, ___Left_2)); }
	inline int32_t get_Left_2() const { return ___Left_2; }
	inline int32_t* get_address_of_Left_2() { return &___Left_2; }
	inline void set_Left_2(int32_t value)
	{
		___Left_2 = value;
	}

	inline static int32_t get_offset_of_Right_3() { return static_cast<int32_t>(offsetof(PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386, ___Right_3)); }
	inline int32_t get_Right_3() const { return ___Right_3; }
	inline int32_t* get_address_of_Right_3() { return &___Right_3; }
	inline void set_Right_3(int32_t value)
	{
		___Right_3 = value;
	}

	inline static int32_t get_offset_of_Other_4() { return static_cast<int32_t>(offsetof(PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386, ___Other_4)); }
	inline int32_t get_Other_4() const { return ___Other_4; }
	inline int32_t* get_address_of_Other_4() { return &___Other_4; }
	inline void set_Other_4(int32_t value)
	{
		___Other_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine
struct GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine/GazePointerState Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::gazePointerState
	int32_t ___gazePointerState_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::activateGazeKeywordIsSet
	bool ___activateGazeKeywordIsSet_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::eyeGazeValid
	bool ___eyeGazeValid_2;

public:
	inline static int32_t get_offset_of_gazePointerState_0() { return static_cast<int32_t>(offsetof(GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155, ___gazePointerState_0)); }
	inline int32_t get_gazePointerState_0() const { return ___gazePointerState_0; }
	inline int32_t* get_address_of_gazePointerState_0() { return &___gazePointerState_0; }
	inline void set_gazePointerState_0(int32_t value)
	{
		___gazePointerState_0 = value;
	}

	inline static int32_t get_offset_of_activateGazeKeywordIsSet_1() { return static_cast<int32_t>(offsetof(GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155, ___activateGazeKeywordIsSet_1)); }
	inline bool get_activateGazeKeywordIsSet_1() const { return ___activateGazeKeywordIsSet_1; }
	inline bool* get_address_of_activateGazeKeywordIsSet_1() { return &___activateGazeKeywordIsSet_1; }
	inline void set_activateGazeKeywordIsSet_1(bool value)
	{
		___activateGazeKeywordIsSet_1 = value;
	}

	inline static int32_t get_offset_of_eyeGazeValid_2() { return static_cast<int32_t>(offsetof(GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155, ___eyeGazeValid_2)); }
	inline bool get_eyeGazeValid_2() const { return ___eyeGazeValid_2; }
	inline bool* get_address_of_eyeGazeValid_2() { return &___eyeGazeValid_2; }
	inline void set_eyeGazeValid_2(bool value)
	{
		___eyeGazeValid_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83
struct U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1  : public RuntimeObject
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Runtime.CompilerServices.AsyncVoidMethodBuilder Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83::<>t__builder
	AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  ___U3CU3Et__builder_1;
	// Microsoft.MixedReality.Toolkit.Input.GazeProvider Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83::<>4__this
	GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * ___U3CU3E4__this_2;
	// Unity.Profiling.ProfilerMarker/AutoScope Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83::<>s__1
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ___U3CU3Es__1_3;
	// System.Runtime.CompilerServices.TaskAwaiter Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83::<>u__1
	TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  ___U3CU3Eu__1_4;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3Et__builder_1() { return static_cast<int32_t>(offsetof(U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1, ___U3CU3Et__builder_1)); }
	inline AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  get_U3CU3Et__builder_1() const { return ___U3CU3Et__builder_1; }
	inline AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * get_address_of_U3CU3Et__builder_1() { return &___U3CU3Et__builder_1; }
	inline void set_U3CU3Et__builder_1(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  value)
	{
		___U3CU3Et__builder_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Et__builder_1))->___m_synchronizationContext_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CU3Et__builder_1))->___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CU3Et__builder_1))->___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Et__builder_1))->___m_task_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CU3E4__this_2() { return static_cast<int32_t>(offsetof(U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1, ___U3CU3E4__this_2)); }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * get_U3CU3E4__this_2() const { return ___U3CU3E4__this_2; }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA ** get_address_of_U3CU3E4__this_2() { return &___U3CU3E4__this_2; }
	inline void set_U3CU3E4__this_2(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * value)
	{
		___U3CU3E4__this_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3Es__1_3() { return static_cast<int32_t>(offsetof(U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1, ___U3CU3Es__1_3)); }
	inline AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  get_U3CU3Es__1_3() const { return ___U3CU3Es__1_3; }
	inline AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * get_address_of_U3CU3Es__1_3() { return &___U3CU3Es__1_3; }
	inline void set_U3CU3Es__1_3(AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  value)
	{
		___U3CU3Es__1_3 = value;
	}

	inline static int32_t get_offset_of_U3CU3Eu__1_4() { return static_cast<int32_t>(offsetof(U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1, ___U3CU3Eu__1_4)); }
	inline TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  get_U3CU3Eu__1_4() const { return ___U3CU3Eu__1_4; }
	inline TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * get_address_of_U3CU3Eu__1_4() { return &___U3CU3Eu__1_4; }
	inline void set_U3CU3Eu__1_4(TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  value)
	{
		___U3CU3Eu__1_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Eu__1_4))->___m_task_0), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69
struct U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC  : public RuntimeObject
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Runtime.CompilerServices.AsyncVoidMethodBuilder Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69::<>t__builder
	AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  ___U3CU3Et__builder_1;
	// Microsoft.MixedReality.Toolkit.Input.GazeProvider Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69::<>4__this
	GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * ___U3CU3E4__this_2;
	// System.Runtime.CompilerServices.TaskAwaiter Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69::<>u__1
	TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  ___U3CU3Eu__1_3;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3Et__builder_1() { return static_cast<int32_t>(offsetof(U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC, ___U3CU3Et__builder_1)); }
	inline AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  get_U3CU3Et__builder_1() const { return ___U3CU3Et__builder_1; }
	inline AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * get_address_of_U3CU3Et__builder_1() { return &___U3CU3Et__builder_1; }
	inline void set_U3CU3Et__builder_1(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  value)
	{
		___U3CU3Et__builder_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Et__builder_1))->___m_synchronizationContext_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CU3Et__builder_1))->___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CU3Et__builder_1))->___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Et__builder_1))->___m_task_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CU3E4__this_2() { return static_cast<int32_t>(offsetof(U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC, ___U3CU3E4__this_2)); }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * get_U3CU3E4__this_2() const { return ___U3CU3E4__this_2; }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA ** get_address_of_U3CU3E4__this_2() { return &___U3CU3E4__this_2; }
	inline void set_U3CU3E4__this_2(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * value)
	{
		___U3CU3E4__this_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3Eu__1_3() { return static_cast<int32_t>(offsetof(U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC, ___U3CU3Eu__1_3)); }
	inline TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  get_U3CU3Eu__1_3() const { return ___U3CU3Eu__1_3; }
	inline TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * get_address_of_U3CU3Eu__1_3() { return &___U3CU3Eu__1_3; }
	inline void set_U3CU3Eu__1_3(TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  value)
	{
		___U3CU3Eu__1_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Eu__1_3))->___m_task_0), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.GenericPointer
struct GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GenericPointer::controller
	RuntimeObject* ___controller_0;
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.GenericPointer::<PointerId>k__BackingField
	uint32_t ___U3CPointerIdU3Ek__BackingField_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.GenericPointer::<PointerName>k__BackingField
	String_t* ___U3CPointerNameU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GenericPointer::inputSourceParent
	RuntimeObject* ___inputSourceParent_3;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.GenericPointer::<BaseCursor>k__BackingField
	RuntimeObject* ___U3CBaseCursorU3Ek__BackingField_4;
	// Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.GenericPointer::<CursorModifier>k__BackingField
	RuntimeObject* ___U3CCursorModifierU3Ek__BackingField_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GenericPointer::isInteractionEnabled
	bool ___isInteractionEnabled_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GenericPointer::<IsActive>k__BackingField
	bool ___U3CIsActiveU3Ek__BackingField_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GenericPointer::<IsFocusLocked>k__BackingField
	bool ___U3CIsFocusLockedU3Ek__BackingField_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GenericPointer::<IsTargetPositionLockedOnFocusLock>k__BackingField
	bool ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GenericPointer::<PointerExtent>k__BackingField
	float ___U3CPointerExtentU3Ek__BackingField_10;
	// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.GenericPointer::<Rays>k__BackingField
	RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___U3CRaysU3Ek__BackingField_11;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.GenericPointer::<PrioritizedLayerMasksOverride>k__BackingField
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler Microsoft.MixedReality.Toolkit.Input.GenericPointer::<FocusTarget>k__BackingField
	RuntimeObject* ___U3CFocusTargetU3Ek__BackingField_13;
	// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.GenericPointer::<Result>k__BackingField
	RuntimeObject* ___U3CResultU3Ek__BackingField_14;
	// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer Microsoft.MixedReality.Toolkit.Input.GenericPointer::<RayStabilizer>k__BackingField
	RuntimeObject* ___U3CRayStabilizerU3Ek__BackingField_15;
	// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.GenericPointer::<SceneQueryType>k__BackingField
	int32_t ___U3CSceneQueryTypeU3Ek__BackingField_16;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GenericPointer::<SphereCastRadius>k__BackingField
	float ___U3CSphereCastRadiusU3Ek__BackingField_17;

public:
	inline static int32_t get_offset_of_controller_0() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___controller_0)); }
	inline RuntimeObject* get_controller_0() const { return ___controller_0; }
	inline RuntimeObject** get_address_of_controller_0() { return &___controller_0; }
	inline void set_controller_0(RuntimeObject* value)
	{
		___controller_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controller_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPointerIdU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CPointerIdU3Ek__BackingField_1)); }
	inline uint32_t get_U3CPointerIdU3Ek__BackingField_1() const { return ___U3CPointerIdU3Ek__BackingField_1; }
	inline uint32_t* get_address_of_U3CPointerIdU3Ek__BackingField_1() { return &___U3CPointerIdU3Ek__BackingField_1; }
	inline void set_U3CPointerIdU3Ek__BackingField_1(uint32_t value)
	{
		___U3CPointerIdU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CPointerNameU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CPointerNameU3Ek__BackingField_2)); }
	inline String_t* get_U3CPointerNameU3Ek__BackingField_2() const { return ___U3CPointerNameU3Ek__BackingField_2; }
	inline String_t** get_address_of_U3CPointerNameU3Ek__BackingField_2() { return &___U3CPointerNameU3Ek__BackingField_2; }
	inline void set_U3CPointerNameU3Ek__BackingField_2(String_t* value)
	{
		___U3CPointerNameU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerNameU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_inputSourceParent_3() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___inputSourceParent_3)); }
	inline RuntimeObject* get_inputSourceParent_3() const { return ___inputSourceParent_3; }
	inline RuntimeObject** get_address_of_inputSourceParent_3() { return &___inputSourceParent_3; }
	inline void set_inputSourceParent_3(RuntimeObject* value)
	{
		___inputSourceParent_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputSourceParent_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CBaseCursorU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CBaseCursorU3Ek__BackingField_4)); }
	inline RuntimeObject* get_U3CBaseCursorU3Ek__BackingField_4() const { return ___U3CBaseCursorU3Ek__BackingField_4; }
	inline RuntimeObject** get_address_of_U3CBaseCursorU3Ek__BackingField_4() { return &___U3CBaseCursorU3Ek__BackingField_4; }
	inline void set_U3CBaseCursorU3Ek__BackingField_4(RuntimeObject* value)
	{
		___U3CBaseCursorU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CBaseCursorU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCursorModifierU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CCursorModifierU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CCursorModifierU3Ek__BackingField_5() const { return ___U3CCursorModifierU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CCursorModifierU3Ek__BackingField_5() { return &___U3CCursorModifierU3Ek__BackingField_5; }
	inline void set_U3CCursorModifierU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CCursorModifierU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CCursorModifierU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_isInteractionEnabled_6() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___isInteractionEnabled_6)); }
	inline bool get_isInteractionEnabled_6() const { return ___isInteractionEnabled_6; }
	inline bool* get_address_of_isInteractionEnabled_6() { return &___isInteractionEnabled_6; }
	inline void set_isInteractionEnabled_6(bool value)
	{
		___isInteractionEnabled_6 = value;
	}

	inline static int32_t get_offset_of_U3CIsActiveU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CIsActiveU3Ek__BackingField_7)); }
	inline bool get_U3CIsActiveU3Ek__BackingField_7() const { return ___U3CIsActiveU3Ek__BackingField_7; }
	inline bool* get_address_of_U3CIsActiveU3Ek__BackingField_7() { return &___U3CIsActiveU3Ek__BackingField_7; }
	inline void set_U3CIsActiveU3Ek__BackingField_7(bool value)
	{
		___U3CIsActiveU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_U3CIsFocusLockedU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CIsFocusLockedU3Ek__BackingField_8)); }
	inline bool get_U3CIsFocusLockedU3Ek__BackingField_8() const { return ___U3CIsFocusLockedU3Ek__BackingField_8; }
	inline bool* get_address_of_U3CIsFocusLockedU3Ek__BackingField_8() { return &___U3CIsFocusLockedU3Ek__BackingField_8; }
	inline void set_U3CIsFocusLockedU3Ek__BackingField_8(bool value)
	{
		___U3CIsFocusLockedU3Ek__BackingField_8 = value;
	}

	inline static int32_t get_offset_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9)); }
	inline bool get_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9() const { return ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9; }
	inline bool* get_address_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9() { return &___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9; }
	inline void set_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9(bool value)
	{
		___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9 = value;
	}

	inline static int32_t get_offset_of_U3CPointerExtentU3Ek__BackingField_10() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CPointerExtentU3Ek__BackingField_10)); }
	inline float get_U3CPointerExtentU3Ek__BackingField_10() const { return ___U3CPointerExtentU3Ek__BackingField_10; }
	inline float* get_address_of_U3CPointerExtentU3Ek__BackingField_10() { return &___U3CPointerExtentU3Ek__BackingField_10; }
	inline void set_U3CPointerExtentU3Ek__BackingField_10(float value)
	{
		___U3CPointerExtentU3Ek__BackingField_10 = value;
	}

	inline static int32_t get_offset_of_U3CRaysU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CRaysU3Ek__BackingField_11)); }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* get_U3CRaysU3Ek__BackingField_11() const { return ___U3CRaysU3Ek__BackingField_11; }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8** get_address_of_U3CRaysU3Ek__BackingField_11() { return &___U3CRaysU3Ek__BackingField_11; }
	inline void set_U3CRaysU3Ek__BackingField_11(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* value)
	{
		___U3CRaysU3Ek__BackingField_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRaysU3Ek__BackingField_11), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12() const { return ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12() { return &___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12; }
	inline void set_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12), (void*)value);
	}

	inline static int32_t get_offset_of_U3CFocusTargetU3Ek__BackingField_13() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CFocusTargetU3Ek__BackingField_13)); }
	inline RuntimeObject* get_U3CFocusTargetU3Ek__BackingField_13() const { return ___U3CFocusTargetU3Ek__BackingField_13; }
	inline RuntimeObject** get_address_of_U3CFocusTargetU3Ek__BackingField_13() { return &___U3CFocusTargetU3Ek__BackingField_13; }
	inline void set_U3CFocusTargetU3Ek__BackingField_13(RuntimeObject* value)
	{
		___U3CFocusTargetU3Ek__BackingField_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CFocusTargetU3Ek__BackingField_13), (void*)value);
	}

	inline static int32_t get_offset_of_U3CResultU3Ek__BackingField_14() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CResultU3Ek__BackingField_14)); }
	inline RuntimeObject* get_U3CResultU3Ek__BackingField_14() const { return ___U3CResultU3Ek__BackingField_14; }
	inline RuntimeObject** get_address_of_U3CResultU3Ek__BackingField_14() { return &___U3CResultU3Ek__BackingField_14; }
	inline void set_U3CResultU3Ek__BackingField_14(RuntimeObject* value)
	{
		___U3CResultU3Ek__BackingField_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CResultU3Ek__BackingField_14), (void*)value);
	}

	inline static int32_t get_offset_of_U3CRayStabilizerU3Ek__BackingField_15() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CRayStabilizerU3Ek__BackingField_15)); }
	inline RuntimeObject* get_U3CRayStabilizerU3Ek__BackingField_15() const { return ___U3CRayStabilizerU3Ek__BackingField_15; }
	inline RuntimeObject** get_address_of_U3CRayStabilizerU3Ek__BackingField_15() { return &___U3CRayStabilizerU3Ek__BackingField_15; }
	inline void set_U3CRayStabilizerU3Ek__BackingField_15(RuntimeObject* value)
	{
		___U3CRayStabilizerU3Ek__BackingField_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRayStabilizerU3Ek__BackingField_15), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSceneQueryTypeU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CSceneQueryTypeU3Ek__BackingField_16)); }
	inline int32_t get_U3CSceneQueryTypeU3Ek__BackingField_16() const { return ___U3CSceneQueryTypeU3Ek__BackingField_16; }
	inline int32_t* get_address_of_U3CSceneQueryTypeU3Ek__BackingField_16() { return &___U3CSceneQueryTypeU3Ek__BackingField_16; }
	inline void set_U3CSceneQueryTypeU3Ek__BackingField_16(int32_t value)
	{
		___U3CSceneQueryTypeU3Ek__BackingField_16 = value;
	}

	inline static int32_t get_offset_of_U3CSphereCastRadiusU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A, ___U3CSphereCastRadiusU3Ek__BackingField_17)); }
	inline float get_U3CSphereCastRadiusU3Ek__BackingField_17() const { return ___U3CSphereCastRadiusU3Ek__BackingField_17; }
	inline float* get_address_of_U3CSphereCastRadiusU3Ek__BackingField_17() { return &___U3CSphereCastRadiusU3Ek__BackingField_17; }
	inline void set_U3CSphereCastRadiusU3Ek__BackingField_17(float value)
	{
		___U3CSphereCastRadiusU3Ek__BackingField_17 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<RayDistance>k__BackingField
	float ___U3CRayDistanceU3Ek__BackingField_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Point>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Normal>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Object>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastRaycastHit>k__BackingField
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___U3CLastRaycastHitU3Ek__BackingField_4;
	// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastGraphicsRaycastResult>k__BackingField
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<PointLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<NormalLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CRayDistanceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CRayDistanceU3Ek__BackingField_0)); }
	inline float get_U3CRayDistanceU3Ek__BackingField_0() const { return ___U3CRayDistanceU3Ek__BackingField_0; }
	inline float* get_address_of_U3CRayDistanceU3Ek__BackingField_0() { return &___U3CRayDistanceU3Ek__BackingField_0; }
	inline void set_U3CRayDistanceU3Ek__BackingField_0(float value)
	{
		___U3CRayDistanceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CPointU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointU3Ek__BackingField_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointU3Ek__BackingField_1() const { return ___U3CPointU3Ek__BackingField_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointU3Ek__BackingField_1() { return &___U3CPointU3Ek__BackingField_1; }
	inline void set_U3CPointU3Ek__BackingField_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CNormalU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalU3Ek__BackingField_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalU3Ek__BackingField_2() const { return ___U3CNormalU3Ek__BackingField_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalU3Ek__BackingField_2() { return &___U3CNormalU3Ek__BackingField_2; }
	inline void set_U3CNormalU3Ek__BackingField_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CObjectU3Ek__BackingField_3() const { return ___U3CObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CObjectU3Ek__BackingField_3() { return &___U3CObjectU3Ek__BackingField_3; }
	inline void set_U3CObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CLastRaycastHitU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastRaycastHitU3Ek__BackingField_4)); }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  get_U3CLastRaycastHitU3Ek__BackingField_4() const { return ___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * get_address_of_U3CLastRaycastHitU3Ek__BackingField_4() { return &___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline void set_U3CLastRaycastHitU3Ek__BackingField_4(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  value)
	{
		___U3CLastRaycastHitU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() const { return ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return &___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline void set_U3CLastGraphicsRaycastResultU3Ek__BackingField_5(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___U3CLastGraphicsRaycastResultU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointLocalSpaceU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointLocalSpaceU3Ek__BackingField_6() const { return ___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return &___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline void set_U3CPointLocalSpaceU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointLocalSpaceU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalLocalSpaceU3Ek__BackingField_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalLocalSpaceU3Ek__BackingField_7() const { return ___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return &___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline void set_U3CNormalLocalSpaceU3Ek__BackingField_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalLocalSpaceU3Ek__BackingField_7 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_pinvoke
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_com
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};

// Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer
struct GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D  : public BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer::storedStabilitySamples
	int32_t ___storedStabilitySamples_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer::stablePosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___stablePosition_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer::stableRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___stableRotation_2;
	// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer::stableRay
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___stableRay_3;
	// Microsoft.MixedReality.Toolkit.Physics.VectorRollingStatistics Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer::positionRollingStats
	VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 * ___positionRollingStats_4;
	// Microsoft.MixedReality.Toolkit.Physics.VectorRollingStatistics Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer::directionRollingStats
	VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 * ___directionRollingStats_5;

public:
	inline static int32_t get_offset_of_storedStabilitySamples_0() { return static_cast<int32_t>(offsetof(GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D, ___storedStabilitySamples_0)); }
	inline int32_t get_storedStabilitySamples_0() const { return ___storedStabilitySamples_0; }
	inline int32_t* get_address_of_storedStabilitySamples_0() { return &___storedStabilitySamples_0; }
	inline void set_storedStabilitySamples_0(int32_t value)
	{
		___storedStabilitySamples_0 = value;
	}

	inline static int32_t get_offset_of_stablePosition_1() { return static_cast<int32_t>(offsetof(GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D, ___stablePosition_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_stablePosition_1() const { return ___stablePosition_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_stablePosition_1() { return &___stablePosition_1; }
	inline void set_stablePosition_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___stablePosition_1 = value;
	}

	inline static int32_t get_offset_of_stableRotation_2() { return static_cast<int32_t>(offsetof(GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D, ___stableRotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_stableRotation_2() const { return ___stableRotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_stableRotation_2() { return &___stableRotation_2; }
	inline void set_stableRotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___stableRotation_2 = value;
	}

	inline static int32_t get_offset_of_stableRay_3() { return static_cast<int32_t>(offsetof(GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D, ___stableRay_3)); }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  get_stableRay_3() const { return ___stableRay_3; }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * get_address_of_stableRay_3() { return &___stableRay_3; }
	inline void set_stableRay_3(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  value)
	{
		___stableRay_3 = value;
	}

	inline static int32_t get_offset_of_positionRollingStats_4() { return static_cast<int32_t>(offsetof(GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D, ___positionRollingStats_4)); }
	inline VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 * get_positionRollingStats_4() const { return ___positionRollingStats_4; }
	inline VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 ** get_address_of_positionRollingStats_4() { return &___positionRollingStats_4; }
	inline void set_positionRollingStats_4(VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 * value)
	{
		___positionRollingStats_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___positionRollingStats_4), (void*)value);
	}

	inline static int32_t get_offset_of_directionRollingStats_5() { return static_cast<int32_t>(offsetof(GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D, ___directionRollingStats_5)); }
	inline VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 * get_directionRollingStats_5() const { return ___directionRollingStats_5; }
	inline VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 ** get_address_of_directionRollingStats_5() { return &___directionRollingStats_5; }
	inline void set_directionRollingStats_5(VectorRollingStatistics_t807DA6BFDB9D5C16B2E3E39DDF9006273ABC04B9 * value)
	{
		___directionRollingStats_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___directionRollingStats_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster
struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F  : public RuntimeObject
{
public:

public:
};

struct MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::DebugEnabled
	bool ___DebugEnabled_0;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___RaycastHits_3;
	// UnityEngine.RaycastHit[] Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::SphereCastHits
	RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* ___SphereCastHits_4;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSimplePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSimplePhysicsStepPerfMarker_5;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastBoxPhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastBoxPhysicsStepPerfMarker_6;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSpherePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastSpherePhysicsStepPerfMarker_7;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::TryGetPrioritizedPhysicsHitPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetPrioritizedPhysicsHitPerfMarker_8;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastPlanePhysicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastPlanePhysicsStepPerfMarker_9;

public:
	inline static int32_t get_offset_of_DebugEnabled_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___DebugEnabled_0)); }
	inline bool get_DebugEnabled_0() const { return ___DebugEnabled_0; }
	inline bool* get_address_of_DebugEnabled_0() { return &___DebugEnabled_0; }
	inline void set_DebugEnabled_0(bool value)
	{
		___DebugEnabled_0 = value;
	}

	inline static int32_t get_offset_of_RaycastHits_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastHits_3)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_RaycastHits_3() const { return ___RaycastHits_3; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_RaycastHits_3() { return &___RaycastHits_3; }
	inline void set_RaycastHits_3(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___RaycastHits_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___RaycastHits_3), (void*)value);
	}

	inline static int32_t get_offset_of_SphereCastHits_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___SphereCastHits_4)); }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* get_SphereCastHits_4() const { return ___SphereCastHits_4; }
	inline RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57** get_address_of_SphereCastHits_4() { return &___SphereCastHits_4; }
	inline void set_SphereCastHits_4(RaycastHitU5BU5D_tE9BB282384F0196211AD1A480477254188211F57* value)
	{
		___SphereCastHits_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SphereCastHits_4), (void*)value);
	}

	inline static int32_t get_offset_of_RaycastSimplePhysicsStepPerfMarker_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSimplePhysicsStepPerfMarker_5)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSimplePhysicsStepPerfMarker_5() const { return ___RaycastSimplePhysicsStepPerfMarker_5; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSimplePhysicsStepPerfMarker_5() { return &___RaycastSimplePhysicsStepPerfMarker_5; }
	inline void set_RaycastSimplePhysicsStepPerfMarker_5(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSimplePhysicsStepPerfMarker_5 = value;
	}

	inline static int32_t get_offset_of_RaycastBoxPhysicsStepPerfMarker_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastBoxPhysicsStepPerfMarker_6)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastBoxPhysicsStepPerfMarker_6() const { return ___RaycastBoxPhysicsStepPerfMarker_6; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastBoxPhysicsStepPerfMarker_6() { return &___RaycastBoxPhysicsStepPerfMarker_6; }
	inline void set_RaycastBoxPhysicsStepPerfMarker_6(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastBoxPhysicsStepPerfMarker_6 = value;
	}

	inline static int32_t get_offset_of_RaycastSpherePhysicsStepPerfMarker_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastSpherePhysicsStepPerfMarker_7)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastSpherePhysicsStepPerfMarker_7() const { return ___RaycastSpherePhysicsStepPerfMarker_7; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastSpherePhysicsStepPerfMarker_7() { return &___RaycastSpherePhysicsStepPerfMarker_7; }
	inline void set_RaycastSpherePhysicsStepPerfMarker_7(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastSpherePhysicsStepPerfMarker_7 = value;
	}

	inline static int32_t get_offset_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___TryGetPrioritizedPhysicsHitPerfMarker_8)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetPrioritizedPhysicsHitPerfMarker_8() const { return ___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetPrioritizedPhysicsHitPerfMarker_8() { return &___TryGetPrioritizedPhysicsHitPerfMarker_8; }
	inline void set_TryGetPrioritizedPhysicsHitPerfMarker_8(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetPrioritizedPhysicsHitPerfMarker_8 = value;
	}

	inline static int32_t get_offset_of_RaycastPlanePhysicsStepPerfMarker_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields, ___RaycastPlanePhysicsStepPerfMarker_9)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastPlanePhysicsStepPerfMarker_9() const { return ___RaycastPlanePhysicsStepPerfMarker_9; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastPlanePhysicsStepPerfMarker_9() { return &___RaycastPlanePhysicsStepPerfMarker_9; }
	inline void set_RaycastPlanePhysicsStepPerfMarker_9(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastPlanePhysicsStepPerfMarker_9 = value;
	}
};


// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.SystemException
struct SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.EventSystems.PointerEventData
struct PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<pointerEnter>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CpointerEnterU3Ek__BackingField_2;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::m_PointerPress
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_PointerPress_3;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<lastPress>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3ClastPressU3Ek__BackingField_4;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<rawPointerPress>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CrawPointerPressU3Ek__BackingField_5;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<pointerDrag>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CpointerDragU3Ek__BackingField_6;
	// UnityEngine.EventSystems.RaycastResult UnityEngine.EventSystems.PointerEventData::<pointerCurrentRaycast>k__BackingField
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___U3CpointerCurrentRaycastU3Ek__BackingField_7;
	// UnityEngine.EventSystems.RaycastResult UnityEngine.EventSystems.PointerEventData::<pointerPressRaycast>k__BackingField
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___U3CpointerPressRaycastU3Ek__BackingField_8;
	// System.Collections.Generic.List`1<UnityEngine.GameObject> UnityEngine.EventSystems.PointerEventData::hovered
	List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * ___hovered_9;
	// System.Boolean UnityEngine.EventSystems.PointerEventData::<eligibleForClick>k__BackingField
	bool ___U3CeligibleForClickU3Ek__BackingField_10;
	// System.Int32 UnityEngine.EventSystems.PointerEventData::<pointerId>k__BackingField
	int32_t ___U3CpointerIdU3Ek__BackingField_11;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<position>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CpositionU3Ek__BackingField_12;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<delta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CdeltaU3Ek__BackingField_13;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<pressPosition>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CpressPositionU3Ek__BackingField_14;
	// UnityEngine.Vector3 UnityEngine.EventSystems.PointerEventData::<worldPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CworldPositionU3Ek__BackingField_15;
	// UnityEngine.Vector3 UnityEngine.EventSystems.PointerEventData::<worldNormal>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CworldNormalU3Ek__BackingField_16;
	// System.Single UnityEngine.EventSystems.PointerEventData::<clickTime>k__BackingField
	float ___U3CclickTimeU3Ek__BackingField_17;
	// System.Int32 UnityEngine.EventSystems.PointerEventData::<clickCount>k__BackingField
	int32_t ___U3CclickCountU3Ek__BackingField_18;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<scrollDelta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CscrollDeltaU3Ek__BackingField_19;
	// System.Boolean UnityEngine.EventSystems.PointerEventData::<useDragThreshold>k__BackingField
	bool ___U3CuseDragThresholdU3Ek__BackingField_20;
	// System.Boolean UnityEngine.EventSystems.PointerEventData::<dragging>k__BackingField
	bool ___U3CdraggingU3Ek__BackingField_21;
	// UnityEngine.EventSystems.PointerEventData/InputButton UnityEngine.EventSystems.PointerEventData::<button>k__BackingField
	int32_t ___U3CbuttonU3Ek__BackingField_22;

public:
	inline static int32_t get_offset_of_U3CpointerEnterU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CpointerEnterU3Ek__BackingField_2)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CpointerEnterU3Ek__BackingField_2() const { return ___U3CpointerEnterU3Ek__BackingField_2; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CpointerEnterU3Ek__BackingField_2() { return &___U3CpointerEnterU3Ek__BackingField_2; }
	inline void set_U3CpointerEnterU3Ek__BackingField_2(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CpointerEnterU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CpointerEnterU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_m_PointerPress_3() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___m_PointerPress_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_PointerPress_3() const { return ___m_PointerPress_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_PointerPress_3() { return &___m_PointerPress_3; }
	inline void set_m_PointerPress_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_PointerPress_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PointerPress_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastPressU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3ClastPressU3Ek__BackingField_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3ClastPressU3Ek__BackingField_4() const { return ___U3ClastPressU3Ek__BackingField_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3ClastPressU3Ek__BackingField_4() { return &___U3ClastPressU3Ek__BackingField_4; }
	inline void set_U3ClastPressU3Ek__BackingField_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3ClastPressU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastPressU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CrawPointerPressU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CrawPointerPressU3Ek__BackingField_5)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CrawPointerPressU3Ek__BackingField_5() const { return ___U3CrawPointerPressU3Ek__BackingField_5; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CrawPointerPressU3Ek__BackingField_5() { return &___U3CrawPointerPressU3Ek__BackingField_5; }
	inline void set_U3CrawPointerPressU3Ek__BackingField_5(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CrawPointerPressU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CrawPointerPressU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CpointerDragU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CpointerDragU3Ek__BackingField_6)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CpointerDragU3Ek__BackingField_6() const { return ___U3CpointerDragU3Ek__BackingField_6; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CpointerDragU3Ek__BackingField_6() { return &___U3CpointerDragU3Ek__BackingField_6; }
	inline void set_U3CpointerDragU3Ek__BackingField_6(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CpointerDragU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CpointerDragU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CpointerCurrentRaycastU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CpointerCurrentRaycastU3Ek__BackingField_7)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_U3CpointerCurrentRaycastU3Ek__BackingField_7() const { return ___U3CpointerCurrentRaycastU3Ek__BackingField_7; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_U3CpointerCurrentRaycastU3Ek__BackingField_7() { return &___U3CpointerCurrentRaycastU3Ek__BackingField_7; }
	inline void set_U3CpointerCurrentRaycastU3Ek__BackingField_7(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___U3CpointerCurrentRaycastU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CpointerCurrentRaycastU3Ek__BackingField_7))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CpointerCurrentRaycastU3Ek__BackingField_7))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CpointerPressRaycastU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CpointerPressRaycastU3Ek__BackingField_8)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_U3CpointerPressRaycastU3Ek__BackingField_8() const { return ___U3CpointerPressRaycastU3Ek__BackingField_8; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_U3CpointerPressRaycastU3Ek__BackingField_8() { return &___U3CpointerPressRaycastU3Ek__BackingField_8; }
	inline void set_U3CpointerPressRaycastU3Ek__BackingField_8(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___U3CpointerPressRaycastU3Ek__BackingField_8 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CpointerPressRaycastU3Ek__BackingField_8))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CpointerPressRaycastU3Ek__BackingField_8))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_hovered_9() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___hovered_9)); }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * get_hovered_9() const { return ___hovered_9; }
	inline List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 ** get_address_of_hovered_9() { return &___hovered_9; }
	inline void set_hovered_9(List_1_t99909CDEDA6D21189884AEA74B1FD99FC9C6A4C0 * value)
	{
		___hovered_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hovered_9), (void*)value);
	}

	inline static int32_t get_offset_of_U3CeligibleForClickU3Ek__BackingField_10() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CeligibleForClickU3Ek__BackingField_10)); }
	inline bool get_U3CeligibleForClickU3Ek__BackingField_10() const { return ___U3CeligibleForClickU3Ek__BackingField_10; }
	inline bool* get_address_of_U3CeligibleForClickU3Ek__BackingField_10() { return &___U3CeligibleForClickU3Ek__BackingField_10; }
	inline void set_U3CeligibleForClickU3Ek__BackingField_10(bool value)
	{
		___U3CeligibleForClickU3Ek__BackingField_10 = value;
	}

	inline static int32_t get_offset_of_U3CpointerIdU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CpointerIdU3Ek__BackingField_11)); }
	inline int32_t get_U3CpointerIdU3Ek__BackingField_11() const { return ___U3CpointerIdU3Ek__BackingField_11; }
	inline int32_t* get_address_of_U3CpointerIdU3Ek__BackingField_11() { return &___U3CpointerIdU3Ek__BackingField_11; }
	inline void set_U3CpointerIdU3Ek__BackingField_11(int32_t value)
	{
		___U3CpointerIdU3Ek__BackingField_11 = value;
	}

	inline static int32_t get_offset_of_U3CpositionU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CpositionU3Ek__BackingField_12)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CpositionU3Ek__BackingField_12() const { return ___U3CpositionU3Ek__BackingField_12; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CpositionU3Ek__BackingField_12() { return &___U3CpositionU3Ek__BackingField_12; }
	inline void set_U3CpositionU3Ek__BackingField_12(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CpositionU3Ek__BackingField_12 = value;
	}

	inline static int32_t get_offset_of_U3CdeltaU3Ek__BackingField_13() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CdeltaU3Ek__BackingField_13)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CdeltaU3Ek__BackingField_13() const { return ___U3CdeltaU3Ek__BackingField_13; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CdeltaU3Ek__BackingField_13() { return &___U3CdeltaU3Ek__BackingField_13; }
	inline void set_U3CdeltaU3Ek__BackingField_13(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CdeltaU3Ek__BackingField_13 = value;
	}

	inline static int32_t get_offset_of_U3CpressPositionU3Ek__BackingField_14() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CpressPositionU3Ek__BackingField_14)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CpressPositionU3Ek__BackingField_14() const { return ___U3CpressPositionU3Ek__BackingField_14; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CpressPositionU3Ek__BackingField_14() { return &___U3CpressPositionU3Ek__BackingField_14; }
	inline void set_U3CpressPositionU3Ek__BackingField_14(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CpressPositionU3Ek__BackingField_14 = value;
	}

	inline static int32_t get_offset_of_U3CworldPositionU3Ek__BackingField_15() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CworldPositionU3Ek__BackingField_15)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CworldPositionU3Ek__BackingField_15() const { return ___U3CworldPositionU3Ek__BackingField_15; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CworldPositionU3Ek__BackingField_15() { return &___U3CworldPositionU3Ek__BackingField_15; }
	inline void set_U3CworldPositionU3Ek__BackingField_15(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CworldPositionU3Ek__BackingField_15 = value;
	}

	inline static int32_t get_offset_of_U3CworldNormalU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CworldNormalU3Ek__BackingField_16)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CworldNormalU3Ek__BackingField_16() const { return ___U3CworldNormalU3Ek__BackingField_16; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CworldNormalU3Ek__BackingField_16() { return &___U3CworldNormalU3Ek__BackingField_16; }
	inline void set_U3CworldNormalU3Ek__BackingField_16(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CworldNormalU3Ek__BackingField_16 = value;
	}

	inline static int32_t get_offset_of_U3CclickTimeU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CclickTimeU3Ek__BackingField_17)); }
	inline float get_U3CclickTimeU3Ek__BackingField_17() const { return ___U3CclickTimeU3Ek__BackingField_17; }
	inline float* get_address_of_U3CclickTimeU3Ek__BackingField_17() { return &___U3CclickTimeU3Ek__BackingField_17; }
	inline void set_U3CclickTimeU3Ek__BackingField_17(float value)
	{
		___U3CclickTimeU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3CclickCountU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CclickCountU3Ek__BackingField_18)); }
	inline int32_t get_U3CclickCountU3Ek__BackingField_18() const { return ___U3CclickCountU3Ek__BackingField_18; }
	inline int32_t* get_address_of_U3CclickCountU3Ek__BackingField_18() { return &___U3CclickCountU3Ek__BackingField_18; }
	inline void set_U3CclickCountU3Ek__BackingField_18(int32_t value)
	{
		___U3CclickCountU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CscrollDeltaU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CscrollDeltaU3Ek__BackingField_19)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CscrollDeltaU3Ek__BackingField_19() const { return ___U3CscrollDeltaU3Ek__BackingField_19; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CscrollDeltaU3Ek__BackingField_19() { return &___U3CscrollDeltaU3Ek__BackingField_19; }
	inline void set_U3CscrollDeltaU3Ek__BackingField_19(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CscrollDeltaU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3CuseDragThresholdU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CuseDragThresholdU3Ek__BackingField_20)); }
	inline bool get_U3CuseDragThresholdU3Ek__BackingField_20() const { return ___U3CuseDragThresholdU3Ek__BackingField_20; }
	inline bool* get_address_of_U3CuseDragThresholdU3Ek__BackingField_20() { return &___U3CuseDragThresholdU3Ek__BackingField_20; }
	inline void set_U3CuseDragThresholdU3Ek__BackingField_20(bool value)
	{
		___U3CuseDragThresholdU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CdraggingU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CdraggingU3Ek__BackingField_21)); }
	inline bool get_U3CdraggingU3Ek__BackingField_21() const { return ___U3CdraggingU3Ek__BackingField_21; }
	inline bool* get_address_of_U3CdraggingU3Ek__BackingField_21() { return &___U3CdraggingU3Ek__BackingField_21; }
	inline void set_U3CdraggingU3Ek__BackingField_21(bool value)
	{
		___U3CdraggingU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3CbuttonU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63, ___U3CbuttonU3Ek__BackingField_22)); }
	inline int32_t get_U3CbuttonU3Ek__BackingField_22() const { return ___U3CbuttonU3Ek__BackingField_22; }
	inline int32_t* get_address_of_U3CbuttonU3Ek__BackingField_22() { return &___U3CbuttonU3Ek__BackingField_22; }
	inline void set_U3CbuttonU3Ek__BackingField_22(int32_t value)
	{
		___U3CbuttonU3Ek__BackingField_22 = value;
	}
};


// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_pinvoke : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_com : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
};

// UnityEngine.Texture
struct Texture_t387FE83BB848001FD06B14707AEA6D5A0F6A95F4  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};

struct Texture_t387FE83BB848001FD06B14707AEA6D5A0F6A95F4_StaticFields
{
public:
	// System.Int32 UnityEngine.Texture::GenerateAllMips
	int32_t ___GenerateAllMips_4;

public:
	inline static int32_t get_offset_of_GenerateAllMips_4() { return static_cast<int32_t>(offsetof(Texture_t387FE83BB848001FD06B14707AEA6D5A0F6A95F4_StaticFields, ___GenerateAllMips_4)); }
	inline int32_t get_GenerateAllMips_4() const { return ___GenerateAllMips_4; }
	inline int32_t* get_address_of_GenerateAllMips_4() { return &___GenerateAllMips_4; }
	inline void set_GenerateAllMips_4(int32_t value)
	{
		___GenerateAllMips_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.BaseCoreSystem
struct BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41  : public BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2
{
public:
	// Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar Microsoft.MixedReality.Toolkit.BaseCoreSystem::<Registrar>k__BackingField
	RuntimeObject* ___U3CRegistrarU3Ek__BackingField_20;

public:
	inline static int32_t get_offset_of_U3CRegistrarU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41, ___U3CRegistrarU3Ek__BackingField_20)); }
	inline RuntimeObject* get_U3CRegistrarU3Ek__BackingField_20() const { return ___U3CRegistrarU3Ek__BackingField_20; }
	inline RuntimeObject** get_address_of_U3CRegistrarU3Ek__BackingField_20() { return &___U3CRegistrarU3Ek__BackingField_20; }
	inline void set_U3CRegistrarU3Ek__BackingField_20(RuntimeObject* value)
	{
		___U3CRegistrarU3Ek__BackingField_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRegistrarU3Ek__BackingField_20), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile
struct BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile::isCustomProfile
	bool ___isCustomProfile_4;

public:
	inline static int32_t get_offset_of_isCustomProfile_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8, ___isCustomProfile_4)); }
	inline bool get_isCustomProfile_4() const { return ___isCustomProfile_4; }
	inline bool* get_address_of_isCustomProfile_4() { return &___isCustomProfile_4; }
	inline void set_isCustomProfile_4(bool value)
	{
		___isCustomProfile_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<EventTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CEventTimeU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<MixedRealityInputAction>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CMixedRealityInputActionU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CEventTimeU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CEventTimeU3Ek__BackingField_2)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CEventTimeU3Ek__BackingField_2() const { return ___U3CEventTimeU3Ek__BackingField_2; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CEventTimeU3Ek__BackingField_2() { return &___U3CEventTimeU3Ek__BackingField_2; }
	inline void set_U3CEventTimeU3Ek__BackingField_2(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CEventTimeU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CInputSourceU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_3() const { return ___U3CInputSourceU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_3() { return &___U3CInputSourceU3Ek__BackingField_3; }
	inline void set_U3CInputSourceU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CMixedRealityInputActionU3Ek__BackingField_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CMixedRealityInputActionU3Ek__BackingField_4() const { return ___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return &___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline void set_U3CMixedRealityInputActionU3Ek__BackingField_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CMixedRealityInputActionU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CMixedRealityInputActionU3Ek__BackingField_4))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData
struct PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::Pointer
	RuntimeObject* ___Pointer_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::<StartPoint>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CStartPointU3Ek__BackingField_1;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::<PreviousPointerTarget>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CPreviousPointerTargetU3Ek__BackingField_2;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::<RayStepIndex>k__BackingField
	int32_t ___U3CRayStepIndexU3Ek__BackingField_3;
	// UnityEngine.EventSystems.PointerEventData Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::graphicData
	PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___graphicData_4;
	// Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::focusDetails
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  ___focusDetails_5;

public:
	inline static int32_t get_offset_of_Pointer_0() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE, ___Pointer_0)); }
	inline RuntimeObject* get_Pointer_0() const { return ___Pointer_0; }
	inline RuntimeObject** get_address_of_Pointer_0() { return &___Pointer_0; }
	inline void set_Pointer_0(RuntimeObject* value)
	{
		___Pointer_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Pointer_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3CStartPointU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE, ___U3CStartPointU3Ek__BackingField_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CStartPointU3Ek__BackingField_1() const { return ___U3CStartPointU3Ek__BackingField_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CStartPointU3Ek__BackingField_1() { return &___U3CStartPointU3Ek__BackingField_1; }
	inline void set_U3CStartPointU3Ek__BackingField_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CStartPointU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CPreviousPointerTargetU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE, ___U3CPreviousPointerTargetU3Ek__BackingField_2)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CPreviousPointerTargetU3Ek__BackingField_2() const { return ___U3CPreviousPointerTargetU3Ek__BackingField_2; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CPreviousPointerTargetU3Ek__BackingField_2() { return &___U3CPreviousPointerTargetU3Ek__BackingField_2; }
	inline void set_U3CPreviousPointerTargetU3Ek__BackingField_2(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CPreviousPointerTargetU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPreviousPointerTargetU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CRayStepIndexU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE, ___U3CRayStepIndexU3Ek__BackingField_3)); }
	inline int32_t get_U3CRayStepIndexU3Ek__BackingField_3() const { return ___U3CRayStepIndexU3Ek__BackingField_3; }
	inline int32_t* get_address_of_U3CRayStepIndexU3Ek__BackingField_3() { return &___U3CRayStepIndexU3Ek__BackingField_3; }
	inline void set_U3CRayStepIndexU3Ek__BackingField_3(int32_t value)
	{
		___U3CRayStepIndexU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_graphicData_4() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE, ___graphicData_4)); }
	inline PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * get_graphicData_4() const { return ___graphicData_4; }
	inline PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 ** get_address_of_graphicData_4() { return &___graphicData_4; }
	inline void set_graphicData_4(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * value)
	{
		___graphicData_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___graphicData_4), (void*)value);
	}

	inline static int32_t get_offset_of_focusDetails_5() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE, ___focusDetails_5)); }
	inline FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  get_focusDetails_5() const { return ___focusDetails_5; }
	inline FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * get_address_of_focusDetails_5() { return &___focusDetails_5; }
	inline void set_focusDetails_5(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  value)
	{
		___focusDetails_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___focusDetails_5))->___U3CObjectU3Ek__BackingField_3), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_5))->___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_5))->___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_5))->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___focusDetails_5))->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}
};

struct PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::UpdateHitPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateHitPerfMarker_6;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::UpdateFocusLockedHitPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateFocusLockedHitPerfMarker_7;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::ResetFocusedObjectPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___ResetFocusedObjectPerfMarker_8;

public:
	inline static int32_t get_offset_of_UpdateHitPerfMarker_6() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields, ___UpdateHitPerfMarker_6)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateHitPerfMarker_6() const { return ___UpdateHitPerfMarker_6; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateHitPerfMarker_6() { return &___UpdateHitPerfMarker_6; }
	inline void set_UpdateHitPerfMarker_6(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateHitPerfMarker_6 = value;
	}

	inline static int32_t get_offset_of_UpdateFocusLockedHitPerfMarker_7() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields, ___UpdateFocusLockedHitPerfMarker_7)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateFocusLockedHitPerfMarker_7() const { return ___UpdateFocusLockedHitPerfMarker_7; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateFocusLockedHitPerfMarker_7() { return &___UpdateFocusLockedHitPerfMarker_7; }
	inline void set_UpdateFocusLockedHitPerfMarker_7(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateFocusLockedHitPerfMarker_7 = value;
	}

	inline static int32_t get_offset_of_ResetFocusedObjectPerfMarker_8() { return static_cast<int32_t>(offsetof(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields, ___ResetFocusedObjectPerfMarker_8)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_ResetFocusedObjectPerfMarker_8() const { return ___ResetFocusedObjectPerfMarker_8; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_ResetFocusedObjectPerfMarker_8() { return &___ResetFocusedObjectPerfMarker_8; }
	inline void set_ResetFocusedObjectPerfMarker_8(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___ResetFocusedObjectPerfMarker_8 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GazeConePointer
struct GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C  : public GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A
{
public:
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.GazeConePointer::gazeTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___gazeTransform_18;
	// Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer Microsoft.MixedReality.Toolkit.Input.GazeConePointer::stabilizer
	BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * ___stabilizer_19;
	// Microsoft.MixedReality.Toolkit.Input.GazeProvider Microsoft.MixedReality.Toolkit.Input.GazeConePointer::gazeProvider
	GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * ___gazeProvider_20;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GazeConePointer::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_21;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::pointerExtent
	float ___pointerExtent_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeConePointer::isDown
	bool ___isDown_23;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GazeConePointer::currentInputSource
	RuntimeObject* ___currentInputSource_24;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.GazeConePointer::currentHandedness
	uint8_t ___currentHandedness_25;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastSphereRadius
	float ___coneCastSphereRadius_26;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastRange
	float ___coneCastRange_27;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastAngle
	float ___coneCastAngle_28;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastDistanceWeight
	float ___coneCastDistanceWeight_29;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastAngleWeight
	float ___coneCastAngleWeight_30;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastDistanceToCenterWeight
	float ___coneCastDistanceToCenterWeight_31;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastAngleToCenterWeight
	float ___coneCastAngleToCenterWeight_32;
	// UnityEngine.LayerMask Microsoft.MixedReality.Toolkit.Input.GazeConePointer::castLayerMask
	LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___castLayerMask_33;
	// UnityEngine.RaycastHit Microsoft.MixedReality.Toolkit.Input.GazeConePointer::coneCastHit
	RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  ___coneCastHit_34;

public:
	inline static int32_t get_offset_of_gazeTransform_18() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___gazeTransform_18)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_gazeTransform_18() const { return ___gazeTransform_18; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_gazeTransform_18() { return &___gazeTransform_18; }
	inline void set_gazeTransform_18(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___gazeTransform_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeTransform_18), (void*)value);
	}

	inline static int32_t get_offset_of_stabilizer_19() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___stabilizer_19)); }
	inline BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * get_stabilizer_19() const { return ___stabilizer_19; }
	inline BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 ** get_address_of_stabilizer_19() { return &___stabilizer_19; }
	inline void set_stabilizer_19(BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * value)
	{
		___stabilizer_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___stabilizer_19), (void*)value);
	}

	inline static int32_t get_offset_of_gazeProvider_20() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___gazeProvider_20)); }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * get_gazeProvider_20() const { return ___gazeProvider_20; }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA ** get_address_of_gazeProvider_20() { return &___gazeProvider_20; }
	inline void set_gazeProvider_20(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * value)
	{
		___gazeProvider_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeProvider_20), (void*)value);
	}

	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___U3CControllerU3Ek__BackingField_21)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_21() const { return ___U3CControllerU3Ek__BackingField_21; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_21() { return &___U3CControllerU3Ek__BackingField_21; }
	inline void set_U3CControllerU3Ek__BackingField_21(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_21), (void*)value);
	}

	inline static int32_t get_offset_of_pointerExtent_22() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___pointerExtent_22)); }
	inline float get_pointerExtent_22() const { return ___pointerExtent_22; }
	inline float* get_address_of_pointerExtent_22() { return &___pointerExtent_22; }
	inline void set_pointerExtent_22(float value)
	{
		___pointerExtent_22 = value;
	}

	inline static int32_t get_offset_of_isDown_23() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___isDown_23)); }
	inline bool get_isDown_23() const { return ___isDown_23; }
	inline bool* get_address_of_isDown_23() { return &___isDown_23; }
	inline void set_isDown_23(bool value)
	{
		___isDown_23 = value;
	}

	inline static int32_t get_offset_of_currentInputSource_24() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___currentInputSource_24)); }
	inline RuntimeObject* get_currentInputSource_24() const { return ___currentInputSource_24; }
	inline RuntimeObject** get_address_of_currentInputSource_24() { return &___currentInputSource_24; }
	inline void set_currentInputSource_24(RuntimeObject* value)
	{
		___currentInputSource_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentInputSource_24), (void*)value);
	}

	inline static int32_t get_offset_of_currentHandedness_25() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___currentHandedness_25)); }
	inline uint8_t get_currentHandedness_25() const { return ___currentHandedness_25; }
	inline uint8_t* get_address_of_currentHandedness_25() { return &___currentHandedness_25; }
	inline void set_currentHandedness_25(uint8_t value)
	{
		___currentHandedness_25 = value;
	}

	inline static int32_t get_offset_of_coneCastSphereRadius_26() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastSphereRadius_26)); }
	inline float get_coneCastSphereRadius_26() const { return ___coneCastSphereRadius_26; }
	inline float* get_address_of_coneCastSphereRadius_26() { return &___coneCastSphereRadius_26; }
	inline void set_coneCastSphereRadius_26(float value)
	{
		___coneCastSphereRadius_26 = value;
	}

	inline static int32_t get_offset_of_coneCastRange_27() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastRange_27)); }
	inline float get_coneCastRange_27() const { return ___coneCastRange_27; }
	inline float* get_address_of_coneCastRange_27() { return &___coneCastRange_27; }
	inline void set_coneCastRange_27(float value)
	{
		___coneCastRange_27 = value;
	}

	inline static int32_t get_offset_of_coneCastAngle_28() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastAngle_28)); }
	inline float get_coneCastAngle_28() const { return ___coneCastAngle_28; }
	inline float* get_address_of_coneCastAngle_28() { return &___coneCastAngle_28; }
	inline void set_coneCastAngle_28(float value)
	{
		___coneCastAngle_28 = value;
	}

	inline static int32_t get_offset_of_coneCastDistanceWeight_29() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastDistanceWeight_29)); }
	inline float get_coneCastDistanceWeight_29() const { return ___coneCastDistanceWeight_29; }
	inline float* get_address_of_coneCastDistanceWeight_29() { return &___coneCastDistanceWeight_29; }
	inline void set_coneCastDistanceWeight_29(float value)
	{
		___coneCastDistanceWeight_29 = value;
	}

	inline static int32_t get_offset_of_coneCastAngleWeight_30() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastAngleWeight_30)); }
	inline float get_coneCastAngleWeight_30() const { return ___coneCastAngleWeight_30; }
	inline float* get_address_of_coneCastAngleWeight_30() { return &___coneCastAngleWeight_30; }
	inline void set_coneCastAngleWeight_30(float value)
	{
		___coneCastAngleWeight_30 = value;
	}

	inline static int32_t get_offset_of_coneCastDistanceToCenterWeight_31() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastDistanceToCenterWeight_31)); }
	inline float get_coneCastDistanceToCenterWeight_31() const { return ___coneCastDistanceToCenterWeight_31; }
	inline float* get_address_of_coneCastDistanceToCenterWeight_31() { return &___coneCastDistanceToCenterWeight_31; }
	inline void set_coneCastDistanceToCenterWeight_31(float value)
	{
		___coneCastDistanceToCenterWeight_31 = value;
	}

	inline static int32_t get_offset_of_coneCastAngleToCenterWeight_32() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastAngleToCenterWeight_32)); }
	inline float get_coneCastAngleToCenterWeight_32() const { return ___coneCastAngleToCenterWeight_32; }
	inline float* get_address_of_coneCastAngleToCenterWeight_32() { return &___coneCastAngleToCenterWeight_32; }
	inline void set_coneCastAngleToCenterWeight_32(float value)
	{
		___coneCastAngleToCenterWeight_32 = value;
	}

	inline static int32_t get_offset_of_castLayerMask_33() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___castLayerMask_33)); }
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  get_castLayerMask_33() const { return ___castLayerMask_33; }
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * get_address_of_castLayerMask_33() { return &___castLayerMask_33; }
	inline void set_castLayerMask_33(LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		___castLayerMask_33 = value;
	}

	inline static int32_t get_offset_of_coneCastHit_34() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C, ___coneCastHit_34)); }
	inline RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  get_coneCastHit_34() const { return ___coneCastHit_34; }
	inline RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * get_address_of_coneCastHit_34() { return &___coneCastHit_34; }
	inline void set_coneCastHit_34(RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  value)
	{
		___coneCastHit_34 = value;
	}
};

struct GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeConePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_35;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeConePointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_36;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_35() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_StaticFields, ___OnPreSceneQueryPerfMarker_35)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_35() const { return ___OnPreSceneQueryPerfMarker_35; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_35() { return &___OnPreSceneQueryPerfMarker_35; }
	inline void set_OnPreSceneQueryPerfMarker_35(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_35 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_36() { return static_cast<int32_t>(offsetof(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_StaticFields, ___OnPostSceneQueryPerfMarker_36)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_36() const { return ___OnPostSceneQueryPerfMarker_36; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_36() { return &___OnPostSceneQueryPerfMarker_36; }
	inline void set_OnPostSceneQueryPerfMarker_36(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_36 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer
struct InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8  : public GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A
{
public:
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::gazeTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___gazeTransform_18;
	// Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::stabilizer
	BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * ___stabilizer_19;
	// Microsoft.MixedReality.Toolkit.Input.GazeProvider Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::gazeProvider
	GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * ___gazeProvider_20;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_21;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::<InputSourceParent>k__BackingField
	RuntimeObject* ___U3CInputSourceParentU3Ek__BackingField_22;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::pointerExtent
	float ___pointerExtent_23;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::isDown
	bool ___isDown_24;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::currentInputSource
	RuntimeObject* ___currentInputSource_25;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::currentHandedness
	uint8_t ___currentHandedness_26;

public:
	inline static int32_t get_offset_of_gazeTransform_18() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___gazeTransform_18)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_gazeTransform_18() const { return ___gazeTransform_18; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_gazeTransform_18() { return &___gazeTransform_18; }
	inline void set_gazeTransform_18(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___gazeTransform_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeTransform_18), (void*)value);
	}

	inline static int32_t get_offset_of_stabilizer_19() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___stabilizer_19)); }
	inline BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * get_stabilizer_19() const { return ___stabilizer_19; }
	inline BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 ** get_address_of_stabilizer_19() { return &___stabilizer_19; }
	inline void set_stabilizer_19(BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * value)
	{
		___stabilizer_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___stabilizer_19), (void*)value);
	}

	inline static int32_t get_offset_of_gazeProvider_20() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___gazeProvider_20)); }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * get_gazeProvider_20() const { return ___gazeProvider_20; }
	inline GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA ** get_address_of_gazeProvider_20() { return &___gazeProvider_20; }
	inline void set_gazeProvider_20(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * value)
	{
		___gazeProvider_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeProvider_20), (void*)value);
	}

	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___U3CControllerU3Ek__BackingField_21)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_21() const { return ___U3CControllerU3Ek__BackingField_21; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_21() { return &___U3CControllerU3Ek__BackingField_21; }
	inline void set_U3CControllerU3Ek__BackingField_21(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_21), (void*)value);
	}

	inline static int32_t get_offset_of_U3CInputSourceParentU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___U3CInputSourceParentU3Ek__BackingField_22)); }
	inline RuntimeObject* get_U3CInputSourceParentU3Ek__BackingField_22() const { return ___U3CInputSourceParentU3Ek__BackingField_22; }
	inline RuntimeObject** get_address_of_U3CInputSourceParentU3Ek__BackingField_22() { return &___U3CInputSourceParentU3Ek__BackingField_22; }
	inline void set_U3CInputSourceParentU3Ek__BackingField_22(RuntimeObject* value)
	{
		___U3CInputSourceParentU3Ek__BackingField_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceParentU3Ek__BackingField_22), (void*)value);
	}

	inline static int32_t get_offset_of_pointerExtent_23() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___pointerExtent_23)); }
	inline float get_pointerExtent_23() const { return ___pointerExtent_23; }
	inline float* get_address_of_pointerExtent_23() { return &___pointerExtent_23; }
	inline void set_pointerExtent_23(float value)
	{
		___pointerExtent_23 = value;
	}

	inline static int32_t get_offset_of_isDown_24() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___isDown_24)); }
	inline bool get_isDown_24() const { return ___isDown_24; }
	inline bool* get_address_of_isDown_24() { return &___isDown_24; }
	inline void set_isDown_24(bool value)
	{
		___isDown_24 = value;
	}

	inline static int32_t get_offset_of_currentInputSource_25() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___currentInputSource_25)); }
	inline RuntimeObject* get_currentInputSource_25() const { return ___currentInputSource_25; }
	inline RuntimeObject** get_address_of_currentInputSource_25() { return &___currentInputSource_25; }
	inline void set_currentInputSource_25(RuntimeObject* value)
	{
		___currentInputSource_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentInputSource_25), (void*)value);
	}

	inline static int32_t get_offset_of_currentHandedness_26() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8, ___currentHandedness_26)); }
	inline uint8_t get_currentHandedness_26() const { return ___currentHandedness_26; }
	inline uint8_t* get_address_of_currentHandedness_26() { return &___currentHandedness_26; }
	inline void set_currentHandedness_26(uint8_t value)
	{
		___currentHandedness_26 = value;
	}
};

struct InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_27;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_28;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_27() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8_StaticFields, ___OnPreSceneQueryPerfMarker_27)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_27() const { return ___OnPreSceneQueryPerfMarker_27; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_27() { return &___OnPreSceneQueryPerfMarker_27; }
	inline void set_OnPreSceneQueryPerfMarker_27(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_27 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_28() { return static_cast<int32_t>(offsetof(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8_StaticFields, ___OnPostSceneQueryPerfMarker_28)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_28() const { return ___OnPostSceneQueryPerfMarker_28; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_28() { return &___OnPostSceneQueryPerfMarker_28; }
	inline void set_OnPostSceneQueryPerfMarker_28(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_28 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler
struct PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0  : public MulticastDelegate_t
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizationKey
	String_t* ___localizationKey_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::localizedKeyword
	String_t* ___localizedKeyword_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyword
	String_t* ___keyword_2;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.SpeechCommands::keyCode
	int32_t ___keyCode_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SpeechCommands::action
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action_4;

public:
	inline static int32_t get_offset_of_localizationKey_0() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizationKey_0)); }
	inline String_t* get_localizationKey_0() const { return ___localizationKey_0; }
	inline String_t** get_address_of_localizationKey_0() { return &___localizationKey_0; }
	inline void set_localizationKey_0(String_t* value)
	{
		___localizationKey_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizationKey_0), (void*)value);
	}

	inline static int32_t get_offset_of_localizedKeyword_1() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___localizedKeyword_1)); }
	inline String_t* get_localizedKeyword_1() const { return ___localizedKeyword_1; }
	inline String_t** get_address_of_localizedKeyword_1() { return &___localizedKeyword_1; }
	inline void set_localizedKeyword_1(String_t* value)
	{
		___localizedKeyword_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localizedKeyword_1), (void*)value);
	}

	inline static int32_t get_offset_of_keyword_2() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyword_2)); }
	inline String_t* get_keyword_2() const { return ___keyword_2; }
	inline String_t** get_address_of_keyword_2() { return &___keyword_2; }
	inline void set_keyword_2(String_t* value)
	{
		___keyword_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keyword_2), (void*)value);
	}

	inline static int32_t get_offset_of_keyCode_3() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___keyCode_3)); }
	inline int32_t get_keyCode_3() const { return ___keyCode_3; }
	inline int32_t* get_address_of_keyCode_3() { return &___keyCode_3; }
	inline void set_keyCode_3(int32_t value)
	{
		___keyCode_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B, ___action_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_action_4() const { return ___action_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___action_4))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_pinvoke
{
	char* ___localizationKey_0;
	char* ___localizedKeyword_1;
	char* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___action_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.SpeechCommands
struct SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B_marshaled_com
{
	Il2CppChar* ___localizationKey_0;
	Il2CppChar* ___localizedKeyword_1;
	Il2CppChar* ___keyword_2;
	int32_t ___keyCode_3;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___action_4;
};

// System.MemberAccessException
struct MemberAccessException_tDA869AFFB4FC1EA0EEF3143D85999710AC4774F0  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:

public:
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.RenderTexture
struct RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6  : public Texture_t387FE83BB848001FD06B14707AEA6D5A0F6A95F4
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider
struct DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757  : public BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::<Name>k__BackingField
	String_t* ___U3CNameU3Ek__BackingField_21;

public:
	inline static int32_t get_offset_of_U3CNameU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757, ___U3CNameU3Ek__BackingField_21)); }
	inline String_t* get_U3CNameU3Ek__BackingField_21() const { return ___U3CNameU3Ek__BackingField_21; }
	inline String_t** get_address_of_U3CNameU3Ek__BackingField_21() { return &___U3CNameU3Ek__BackingField_21; }
	inline void set_U3CNameU3Ek__BackingField_21(String_t* value)
	{
		___U3CNameU3Ek__BackingField_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNameU3Ek__BackingField_21), (void*)value);
	}
};

struct DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::RaycastPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastPerfMarker_22;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::SphereCastPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___SphereCastPerfMarker_23;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::GraphicsRaycastPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___GraphicsRaycastPerfMarker_24;

public:
	inline static int32_t get_offset_of_RaycastPerfMarker_22() { return static_cast<int32_t>(offsetof(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields, ___RaycastPerfMarker_22)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastPerfMarker_22() const { return ___RaycastPerfMarker_22; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastPerfMarker_22() { return &___RaycastPerfMarker_22; }
	inline void set_RaycastPerfMarker_22(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastPerfMarker_22 = value;
	}

	inline static int32_t get_offset_of_SphereCastPerfMarker_23() { return static_cast<int32_t>(offsetof(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields, ___SphereCastPerfMarker_23)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_SphereCastPerfMarker_23() const { return ___SphereCastPerfMarker_23; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_SphereCastPerfMarker_23() { return &___SphereCastPerfMarker_23; }
	inline void set_SphereCastPerfMarker_23(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___SphereCastPerfMarker_23 = value;
	}

	inline static int32_t get_offset_of_GraphicsRaycastPerfMarker_24() { return static_cast<int32_t>(offsetof(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields, ___GraphicsRaycastPerfMarker_24)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_GraphicsRaycastPerfMarker_24() const { return ___GraphicsRaycastPerfMarker_24; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_GraphicsRaycastPerfMarker_24() { return &___GraphicsRaycastPerfMarker_24; }
	inline void set_GraphicsRaycastPerfMarker_24(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___GraphicsRaycastPerfMarker_24 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.FocusProvider
struct FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3  : public BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41
{
public:
	// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData> Microsoft.MixedReality.Toolkit.Input.FocusProvider::pointers
	Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * ___pointers_21;
	// System.Collections.Generic.HashSet`1<UnityEngine.GameObject> Microsoft.MixedReality.Toolkit.Input.FocusProvider::pendingOverallFocusEnterSet
	HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * ___pendingOverallFocusEnterSet_22;
	// System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32> Microsoft.MixedReality.Toolkit.Input.FocusProvider::pendingOverallFocusExitSet
	Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * ___pendingOverallFocusExitSet_23;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData> Microsoft.MixedReality.Toolkit.Input.FocusProvider::pendingPointerSpecificFocusChange
	List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * ___pendingPointerSpecificFocusChange_24;
	// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator> Microsoft.MixedReality.Toolkit.Input.FocusProvider::pointerMediators
	Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * ___pointerMediators_25;
	// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult Microsoft.MixedReality.Toolkit.Input.FocusProvider::hitResult3d
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hitResult3d_26;
	// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult Microsoft.MixedReality.Toolkit.Input.FocusProvider::hitResultUi
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hitResultUi_27;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.FocusProvider::inputSystemProfile
	MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * ___inputSystemProfile_28;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::maxQuerySceneResults
	int32_t ___maxQuerySceneResults_29;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::shouldUseGraphicsRaycast
	bool ___shouldUseGraphicsRaycast_30;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::focusIndividualCompoundCollider
	bool ___focusIndividualCompoundCollider_31;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::<NumNearPointersActive>k__BackingField
	int32_t ___U3CNumNearPointersActiveU3Ek__BackingField_32;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::<NumFarPointersActive>k__BackingField
	int32_t ___U3CNumFarPointersActiveU3Ek__BackingField_33;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusProvider::primaryPointer
	RuntimeObject* ___primaryPointer_34;
	// System.String Microsoft.MixedReality.Toolkit.Input.FocusProvider::<Name>k__BackingField
	String_t* ___U3CNameU3Ek__BackingField_35;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.FocusProvider::focusLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___focusLayerMasks_36;
	// UnityEngine.RenderTexture Microsoft.MixedReality.Toolkit.Input.FocusProvider::uiRaycastCameraTargetTexture
	RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * ___uiRaycastCameraTargetTexture_37;
	// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Input.FocusProvider::uiRaycastCamera
	Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * ___uiRaycastCamera_38;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.FocusProvider::newUiRaycastPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___newUiRaycastPosition_39;
	// Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine Microsoft.MixedReality.Toolkit.Input.FocusProvider::gazePointerStateMachine
	GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * ___gazePointerStateMachine_40;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector Microsoft.MixedReality.Toolkit.Input.FocusProvider::primaryPointerSelector
	RuntimeObject* ___primaryPointerSelector_41;
	// Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler Microsoft.MixedReality.Toolkit.Input.FocusProvider::PrimaryPointerChanged
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * ___PrimaryPointerChanged_42;
	// UnityEngine.EventSystems.PointerEventData Microsoft.MixedReality.Toolkit.Input.FocusProvider::gazeProviderPointingData
	PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___gazeProviderPointingData_45;
	// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult Microsoft.MixedReality.Toolkit.Input.FocusProvider::gazeHitResult
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___gazeHitResult_46;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences> Microsoft.MixedReality.Toolkit.Input.FocusProvider::customPointerBehaviors
	List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * ___customPointerBehaviors_66;
	// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider::<GazePointerBehavior>k__BackingField
	int32_t ___U3CGazePointerBehaviorU3Ek__BackingField_67;

public:
	inline static int32_t get_offset_of_pointers_21() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___pointers_21)); }
	inline Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * get_pointers_21() const { return ___pointers_21; }
	inline Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D ** get_address_of_pointers_21() { return &___pointers_21; }
	inline void set_pointers_21(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * value)
	{
		___pointers_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointers_21), (void*)value);
	}

	inline static int32_t get_offset_of_pendingOverallFocusEnterSet_22() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___pendingOverallFocusEnterSet_22)); }
	inline HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * get_pendingOverallFocusEnterSet_22() const { return ___pendingOverallFocusEnterSet_22; }
	inline HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E ** get_address_of_pendingOverallFocusEnterSet_22() { return &___pendingOverallFocusEnterSet_22; }
	inline void set_pendingOverallFocusEnterSet_22(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * value)
	{
		___pendingOverallFocusEnterSet_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pendingOverallFocusEnterSet_22), (void*)value);
	}

	inline static int32_t get_offset_of_pendingOverallFocusExitSet_23() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___pendingOverallFocusExitSet_23)); }
	inline Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * get_pendingOverallFocusExitSet_23() const { return ___pendingOverallFocusExitSet_23; }
	inline Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D ** get_address_of_pendingOverallFocusExitSet_23() { return &___pendingOverallFocusExitSet_23; }
	inline void set_pendingOverallFocusExitSet_23(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * value)
	{
		___pendingOverallFocusExitSet_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pendingOverallFocusExitSet_23), (void*)value);
	}

	inline static int32_t get_offset_of_pendingPointerSpecificFocusChange_24() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___pendingPointerSpecificFocusChange_24)); }
	inline List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * get_pendingPointerSpecificFocusChange_24() const { return ___pendingPointerSpecificFocusChange_24; }
	inline List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D ** get_address_of_pendingPointerSpecificFocusChange_24() { return &___pendingPointerSpecificFocusChange_24; }
	inline void set_pendingPointerSpecificFocusChange_24(List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * value)
	{
		___pendingPointerSpecificFocusChange_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pendingPointerSpecificFocusChange_24), (void*)value);
	}

	inline static int32_t get_offset_of_pointerMediators_25() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___pointerMediators_25)); }
	inline Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * get_pointerMediators_25() const { return ___pointerMediators_25; }
	inline Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 ** get_address_of_pointerMediators_25() { return &___pointerMediators_25; }
	inline void set_pointerMediators_25(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * value)
	{
		___pointerMediators_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerMediators_25), (void*)value);
	}

	inline static int32_t get_offset_of_hitResult3d_26() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___hitResult3d_26)); }
	inline PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * get_hitResult3d_26() const { return ___hitResult3d_26; }
	inline PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 ** get_address_of_hitResult3d_26() { return &___hitResult3d_26; }
	inline void set_hitResult3d_26(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * value)
	{
		___hitResult3d_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hitResult3d_26), (void*)value);
	}

	inline static int32_t get_offset_of_hitResultUi_27() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___hitResultUi_27)); }
	inline PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * get_hitResultUi_27() const { return ___hitResultUi_27; }
	inline PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 ** get_address_of_hitResultUi_27() { return &___hitResultUi_27; }
	inline void set_hitResultUi_27(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * value)
	{
		___hitResultUi_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hitResultUi_27), (void*)value);
	}

	inline static int32_t get_offset_of_inputSystemProfile_28() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___inputSystemProfile_28)); }
	inline MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * get_inputSystemProfile_28() const { return ___inputSystemProfile_28; }
	inline MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 ** get_address_of_inputSystemProfile_28() { return &___inputSystemProfile_28; }
	inline void set_inputSystemProfile_28(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * value)
	{
		___inputSystemProfile_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputSystemProfile_28), (void*)value);
	}

	inline static int32_t get_offset_of_maxQuerySceneResults_29() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___maxQuerySceneResults_29)); }
	inline int32_t get_maxQuerySceneResults_29() const { return ___maxQuerySceneResults_29; }
	inline int32_t* get_address_of_maxQuerySceneResults_29() { return &___maxQuerySceneResults_29; }
	inline void set_maxQuerySceneResults_29(int32_t value)
	{
		___maxQuerySceneResults_29 = value;
	}

	inline static int32_t get_offset_of_shouldUseGraphicsRaycast_30() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___shouldUseGraphicsRaycast_30)); }
	inline bool get_shouldUseGraphicsRaycast_30() const { return ___shouldUseGraphicsRaycast_30; }
	inline bool* get_address_of_shouldUseGraphicsRaycast_30() { return &___shouldUseGraphicsRaycast_30; }
	inline void set_shouldUseGraphicsRaycast_30(bool value)
	{
		___shouldUseGraphicsRaycast_30 = value;
	}

	inline static int32_t get_offset_of_focusIndividualCompoundCollider_31() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___focusIndividualCompoundCollider_31)); }
	inline bool get_focusIndividualCompoundCollider_31() const { return ___focusIndividualCompoundCollider_31; }
	inline bool* get_address_of_focusIndividualCompoundCollider_31() { return &___focusIndividualCompoundCollider_31; }
	inline void set_focusIndividualCompoundCollider_31(bool value)
	{
		___focusIndividualCompoundCollider_31 = value;
	}

	inline static int32_t get_offset_of_U3CNumNearPointersActiveU3Ek__BackingField_32() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___U3CNumNearPointersActiveU3Ek__BackingField_32)); }
	inline int32_t get_U3CNumNearPointersActiveU3Ek__BackingField_32() const { return ___U3CNumNearPointersActiveU3Ek__BackingField_32; }
	inline int32_t* get_address_of_U3CNumNearPointersActiveU3Ek__BackingField_32() { return &___U3CNumNearPointersActiveU3Ek__BackingField_32; }
	inline void set_U3CNumNearPointersActiveU3Ek__BackingField_32(int32_t value)
	{
		___U3CNumNearPointersActiveU3Ek__BackingField_32 = value;
	}

	inline static int32_t get_offset_of_U3CNumFarPointersActiveU3Ek__BackingField_33() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___U3CNumFarPointersActiveU3Ek__BackingField_33)); }
	inline int32_t get_U3CNumFarPointersActiveU3Ek__BackingField_33() const { return ___U3CNumFarPointersActiveU3Ek__BackingField_33; }
	inline int32_t* get_address_of_U3CNumFarPointersActiveU3Ek__BackingField_33() { return &___U3CNumFarPointersActiveU3Ek__BackingField_33; }
	inline void set_U3CNumFarPointersActiveU3Ek__BackingField_33(int32_t value)
	{
		___U3CNumFarPointersActiveU3Ek__BackingField_33 = value;
	}

	inline static int32_t get_offset_of_primaryPointer_34() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___primaryPointer_34)); }
	inline RuntimeObject* get_primaryPointer_34() const { return ___primaryPointer_34; }
	inline RuntimeObject** get_address_of_primaryPointer_34() { return &___primaryPointer_34; }
	inline void set_primaryPointer_34(RuntimeObject* value)
	{
		___primaryPointer_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___primaryPointer_34), (void*)value);
	}

	inline static int32_t get_offset_of_U3CNameU3Ek__BackingField_35() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___U3CNameU3Ek__BackingField_35)); }
	inline String_t* get_U3CNameU3Ek__BackingField_35() const { return ___U3CNameU3Ek__BackingField_35; }
	inline String_t** get_address_of_U3CNameU3Ek__BackingField_35() { return &___U3CNameU3Ek__BackingField_35; }
	inline void set_U3CNameU3Ek__BackingField_35(String_t* value)
	{
		___U3CNameU3Ek__BackingField_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNameU3Ek__BackingField_35), (void*)value);
	}

	inline static int32_t get_offset_of_focusLayerMasks_36() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___focusLayerMasks_36)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_focusLayerMasks_36() const { return ___focusLayerMasks_36; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_focusLayerMasks_36() { return &___focusLayerMasks_36; }
	inline void set_focusLayerMasks_36(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___focusLayerMasks_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___focusLayerMasks_36), (void*)value);
	}

	inline static int32_t get_offset_of_uiRaycastCameraTargetTexture_37() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___uiRaycastCameraTargetTexture_37)); }
	inline RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * get_uiRaycastCameraTargetTexture_37() const { return ___uiRaycastCameraTargetTexture_37; }
	inline RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 ** get_address_of_uiRaycastCameraTargetTexture_37() { return &___uiRaycastCameraTargetTexture_37; }
	inline void set_uiRaycastCameraTargetTexture_37(RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * value)
	{
		___uiRaycastCameraTargetTexture_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___uiRaycastCameraTargetTexture_37), (void*)value);
	}

	inline static int32_t get_offset_of_uiRaycastCamera_38() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___uiRaycastCamera_38)); }
	inline Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * get_uiRaycastCamera_38() const { return ___uiRaycastCamera_38; }
	inline Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 ** get_address_of_uiRaycastCamera_38() { return &___uiRaycastCamera_38; }
	inline void set_uiRaycastCamera_38(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * value)
	{
		___uiRaycastCamera_38 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___uiRaycastCamera_38), (void*)value);
	}

	inline static int32_t get_offset_of_newUiRaycastPosition_39() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___newUiRaycastPosition_39)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_newUiRaycastPosition_39() const { return ___newUiRaycastPosition_39; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_newUiRaycastPosition_39() { return &___newUiRaycastPosition_39; }
	inline void set_newUiRaycastPosition_39(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___newUiRaycastPosition_39 = value;
	}

	inline static int32_t get_offset_of_gazePointerStateMachine_40() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___gazePointerStateMachine_40)); }
	inline GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * get_gazePointerStateMachine_40() const { return ___gazePointerStateMachine_40; }
	inline GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 ** get_address_of_gazePointerStateMachine_40() { return &___gazePointerStateMachine_40; }
	inline void set_gazePointerStateMachine_40(GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * value)
	{
		___gazePointerStateMachine_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazePointerStateMachine_40), (void*)value);
	}

	inline static int32_t get_offset_of_primaryPointerSelector_41() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___primaryPointerSelector_41)); }
	inline RuntimeObject* get_primaryPointerSelector_41() const { return ___primaryPointerSelector_41; }
	inline RuntimeObject** get_address_of_primaryPointerSelector_41() { return &___primaryPointerSelector_41; }
	inline void set_primaryPointerSelector_41(RuntimeObject* value)
	{
		___primaryPointerSelector_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___primaryPointerSelector_41), (void*)value);
	}

	inline static int32_t get_offset_of_PrimaryPointerChanged_42() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___PrimaryPointerChanged_42)); }
	inline PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * get_PrimaryPointerChanged_42() const { return ___PrimaryPointerChanged_42; }
	inline PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 ** get_address_of_PrimaryPointerChanged_42() { return &___PrimaryPointerChanged_42; }
	inline void set_PrimaryPointerChanged_42(PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * value)
	{
		___PrimaryPointerChanged_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___PrimaryPointerChanged_42), (void*)value);
	}

	inline static int32_t get_offset_of_gazeProviderPointingData_45() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___gazeProviderPointingData_45)); }
	inline PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * get_gazeProviderPointingData_45() const { return ___gazeProviderPointingData_45; }
	inline PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 ** get_address_of_gazeProviderPointingData_45() { return &___gazeProviderPointingData_45; }
	inline void set_gazeProviderPointingData_45(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * value)
	{
		___gazeProviderPointingData_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeProviderPointingData_45), (void*)value);
	}

	inline static int32_t get_offset_of_gazeHitResult_46() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___gazeHitResult_46)); }
	inline PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * get_gazeHitResult_46() const { return ___gazeHitResult_46; }
	inline PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 ** get_address_of_gazeHitResult_46() { return &___gazeHitResult_46; }
	inline void set_gazeHitResult_46(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * value)
	{
		___gazeHitResult_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeHitResult_46), (void*)value);
	}

	inline static int32_t get_offset_of_customPointerBehaviors_66() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___customPointerBehaviors_66)); }
	inline List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * get_customPointerBehaviors_66() const { return ___customPointerBehaviors_66; }
	inline List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB ** get_address_of_customPointerBehaviors_66() { return &___customPointerBehaviors_66; }
	inline void set_customPointerBehaviors_66(List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * value)
	{
		___customPointerBehaviors_66 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___customPointerBehaviors_66), (void*)value);
	}

	inline static int32_t get_offset_of_U3CGazePointerBehaviorU3Ek__BackingField_67() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3, ___U3CGazePointerBehaviorU3Ek__BackingField_67)); }
	inline int32_t get_U3CGazePointerBehaviorU3Ek__BackingField_67() const { return ___U3CGazePointerBehaviorU3Ek__BackingField_67; }
	inline int32_t* get_address_of_U3CGazePointerBehaviorU3Ek__BackingField_67() { return &___U3CGazePointerBehaviorU3Ek__BackingField_67; }
	inline void set_U3CGazePointerBehaviorU3Ek__BackingField_67(int32_t value)
	{
		___U3CGazePointerBehaviorU3Ek__BackingField_67 = value;
	}
};

struct FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_43;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdateGazeProviderPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateGazeProviderPerfMarker_44;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetFocusedObjectPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___GetFocusedObjectPerfMarker_47;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryGetFocusDetailsPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetFocusDetailsPerfMarker_48;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryOverrideFocusDetailsPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryOverrideFocusDetailsPerfMarker_49;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::GenerateNewPointerIdPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___GenerateNewPointerIdPerfMarker_50;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::RegisterPointerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RegisterPointerPerfMarker_51;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::RegisterPointersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RegisterPointersPerfMarker_52;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::UnregisterPointerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UnregisterPointerPerfMarker_53;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryGetPointerDataPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryGetPointerDataPerfMarker_54;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdatePointersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePointersPerfMarker_55;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdatePointerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePointerPerfMarker_56;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetPrioritizedHitResultPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___GetPrioritizedHitResultPerfMarker_57;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::ReconcilePointersPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___ReconcilePointersPerfMarker_58;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::QueryScenePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___QueryScenePerfMarker_59;
	// UnityEngine.Collider[] Microsoft.MixedReality.Toolkit.Input.FocusProvider::colliders
	ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* ___colliders_60;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::RaycastGraphicsPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastGraphicsPerfMarker_61;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::RaycastGraphicsStepPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaycastGraphicsStepPerfMarker_62;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdateFocusedObjectsPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateFocusedObjectsPerfMarker_63;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::OnSourceDetectedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceDetectedPerfMarker_64;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.FocusProvider::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_65;

public:
	inline static int32_t get_offset_of_UpdatePerfMarker_43() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___UpdatePerfMarker_43)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_43() const { return ___UpdatePerfMarker_43; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_43() { return &___UpdatePerfMarker_43; }
	inline void set_UpdatePerfMarker_43(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_43 = value;
	}

	inline static int32_t get_offset_of_UpdateGazeProviderPerfMarker_44() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___UpdateGazeProviderPerfMarker_44)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateGazeProviderPerfMarker_44() const { return ___UpdateGazeProviderPerfMarker_44; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateGazeProviderPerfMarker_44() { return &___UpdateGazeProviderPerfMarker_44; }
	inline void set_UpdateGazeProviderPerfMarker_44(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateGazeProviderPerfMarker_44 = value;
	}

	inline static int32_t get_offset_of_GetFocusedObjectPerfMarker_47() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___GetFocusedObjectPerfMarker_47)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_GetFocusedObjectPerfMarker_47() const { return ___GetFocusedObjectPerfMarker_47; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_GetFocusedObjectPerfMarker_47() { return &___GetFocusedObjectPerfMarker_47; }
	inline void set_GetFocusedObjectPerfMarker_47(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___GetFocusedObjectPerfMarker_47 = value;
	}

	inline static int32_t get_offset_of_TryGetFocusDetailsPerfMarker_48() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___TryGetFocusDetailsPerfMarker_48)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetFocusDetailsPerfMarker_48() const { return ___TryGetFocusDetailsPerfMarker_48; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetFocusDetailsPerfMarker_48() { return &___TryGetFocusDetailsPerfMarker_48; }
	inline void set_TryGetFocusDetailsPerfMarker_48(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetFocusDetailsPerfMarker_48 = value;
	}

	inline static int32_t get_offset_of_TryOverrideFocusDetailsPerfMarker_49() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___TryOverrideFocusDetailsPerfMarker_49)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryOverrideFocusDetailsPerfMarker_49() const { return ___TryOverrideFocusDetailsPerfMarker_49; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryOverrideFocusDetailsPerfMarker_49() { return &___TryOverrideFocusDetailsPerfMarker_49; }
	inline void set_TryOverrideFocusDetailsPerfMarker_49(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryOverrideFocusDetailsPerfMarker_49 = value;
	}

	inline static int32_t get_offset_of_GenerateNewPointerIdPerfMarker_50() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___GenerateNewPointerIdPerfMarker_50)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_GenerateNewPointerIdPerfMarker_50() const { return ___GenerateNewPointerIdPerfMarker_50; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_GenerateNewPointerIdPerfMarker_50() { return &___GenerateNewPointerIdPerfMarker_50; }
	inline void set_GenerateNewPointerIdPerfMarker_50(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___GenerateNewPointerIdPerfMarker_50 = value;
	}

	inline static int32_t get_offset_of_RegisterPointerPerfMarker_51() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___RegisterPointerPerfMarker_51)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RegisterPointerPerfMarker_51() const { return ___RegisterPointerPerfMarker_51; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RegisterPointerPerfMarker_51() { return &___RegisterPointerPerfMarker_51; }
	inline void set_RegisterPointerPerfMarker_51(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RegisterPointerPerfMarker_51 = value;
	}

	inline static int32_t get_offset_of_RegisterPointersPerfMarker_52() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___RegisterPointersPerfMarker_52)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RegisterPointersPerfMarker_52() const { return ___RegisterPointersPerfMarker_52; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RegisterPointersPerfMarker_52() { return &___RegisterPointersPerfMarker_52; }
	inline void set_RegisterPointersPerfMarker_52(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RegisterPointersPerfMarker_52 = value;
	}

	inline static int32_t get_offset_of_UnregisterPointerPerfMarker_53() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___UnregisterPointerPerfMarker_53)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UnregisterPointerPerfMarker_53() const { return ___UnregisterPointerPerfMarker_53; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UnregisterPointerPerfMarker_53() { return &___UnregisterPointerPerfMarker_53; }
	inline void set_UnregisterPointerPerfMarker_53(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UnregisterPointerPerfMarker_53 = value;
	}

	inline static int32_t get_offset_of_TryGetPointerDataPerfMarker_54() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___TryGetPointerDataPerfMarker_54)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryGetPointerDataPerfMarker_54() const { return ___TryGetPointerDataPerfMarker_54; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryGetPointerDataPerfMarker_54() { return &___TryGetPointerDataPerfMarker_54; }
	inline void set_TryGetPointerDataPerfMarker_54(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryGetPointerDataPerfMarker_54 = value;
	}

	inline static int32_t get_offset_of_UpdatePointersPerfMarker_55() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___UpdatePointersPerfMarker_55)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePointersPerfMarker_55() const { return ___UpdatePointersPerfMarker_55; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePointersPerfMarker_55() { return &___UpdatePointersPerfMarker_55; }
	inline void set_UpdatePointersPerfMarker_55(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePointersPerfMarker_55 = value;
	}

	inline static int32_t get_offset_of_UpdatePointerPerfMarker_56() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___UpdatePointerPerfMarker_56)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePointerPerfMarker_56() const { return ___UpdatePointerPerfMarker_56; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePointerPerfMarker_56() { return &___UpdatePointerPerfMarker_56; }
	inline void set_UpdatePointerPerfMarker_56(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePointerPerfMarker_56 = value;
	}

	inline static int32_t get_offset_of_GetPrioritizedHitResultPerfMarker_57() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___GetPrioritizedHitResultPerfMarker_57)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_GetPrioritizedHitResultPerfMarker_57() const { return ___GetPrioritizedHitResultPerfMarker_57; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_GetPrioritizedHitResultPerfMarker_57() { return &___GetPrioritizedHitResultPerfMarker_57; }
	inline void set_GetPrioritizedHitResultPerfMarker_57(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___GetPrioritizedHitResultPerfMarker_57 = value;
	}

	inline static int32_t get_offset_of_ReconcilePointersPerfMarker_58() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___ReconcilePointersPerfMarker_58)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_ReconcilePointersPerfMarker_58() const { return ___ReconcilePointersPerfMarker_58; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_ReconcilePointersPerfMarker_58() { return &___ReconcilePointersPerfMarker_58; }
	inline void set_ReconcilePointersPerfMarker_58(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___ReconcilePointersPerfMarker_58 = value;
	}

	inline static int32_t get_offset_of_QueryScenePerfMarker_59() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___QueryScenePerfMarker_59)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_QueryScenePerfMarker_59() const { return ___QueryScenePerfMarker_59; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_QueryScenePerfMarker_59() { return &___QueryScenePerfMarker_59; }
	inline void set_QueryScenePerfMarker_59(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___QueryScenePerfMarker_59 = value;
	}

	inline static int32_t get_offset_of_colliders_60() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___colliders_60)); }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* get_colliders_60() const { return ___colliders_60; }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252** get_address_of_colliders_60() { return &___colliders_60; }
	inline void set_colliders_60(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* value)
	{
		___colliders_60 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___colliders_60), (void*)value);
	}

	inline static int32_t get_offset_of_RaycastGraphicsPerfMarker_61() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___RaycastGraphicsPerfMarker_61)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastGraphicsPerfMarker_61() const { return ___RaycastGraphicsPerfMarker_61; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastGraphicsPerfMarker_61() { return &___RaycastGraphicsPerfMarker_61; }
	inline void set_RaycastGraphicsPerfMarker_61(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastGraphicsPerfMarker_61 = value;
	}

	inline static int32_t get_offset_of_RaycastGraphicsStepPerfMarker_62() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___RaycastGraphicsStepPerfMarker_62)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaycastGraphicsStepPerfMarker_62() const { return ___RaycastGraphicsStepPerfMarker_62; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaycastGraphicsStepPerfMarker_62() { return &___RaycastGraphicsStepPerfMarker_62; }
	inline void set_RaycastGraphicsStepPerfMarker_62(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaycastGraphicsStepPerfMarker_62 = value;
	}

	inline static int32_t get_offset_of_UpdateFocusedObjectsPerfMarker_63() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___UpdateFocusedObjectsPerfMarker_63)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateFocusedObjectsPerfMarker_63() const { return ___UpdateFocusedObjectsPerfMarker_63; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateFocusedObjectsPerfMarker_63() { return &___UpdateFocusedObjectsPerfMarker_63; }
	inline void set_UpdateFocusedObjectsPerfMarker_63(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateFocusedObjectsPerfMarker_63 = value;
	}

	inline static int32_t get_offset_of_OnSourceDetectedPerfMarker_64() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___OnSourceDetectedPerfMarker_64)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceDetectedPerfMarker_64() const { return ___OnSourceDetectedPerfMarker_64; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceDetectedPerfMarker_64() { return &___OnSourceDetectedPerfMarker_64; }
	inline void set_OnSourceDetectedPerfMarker_64(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceDetectedPerfMarker_64 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_65() { return static_cast<int32_t>(offsetof(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields, ___OnSourceLostPerfMarker_65)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_65() const { return ___OnSourceLostPerfMarker_65; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_65() { return &___OnSourceLostPerfMarker_65; }
	inline void set_OnSourceLostPerfMarker_65(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_65 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A, ___U3CHandednessU3Ek__BackingField_5)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_5() const { return ___U3CHandednessU3Ek__BackingField_5; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_5() { return &___U3CHandednessU3Ek__BackingField_5; }
	inline void set_U3CHandednessU3Ek__BackingField_5(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[] Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::dataProviderConfigurations
	MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* ___dataProviderConfigurations_5;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___focusProviderType_6;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::raycastProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___raycastProviderType_7;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusQueryBufferSize
	int32_t ___focusQueryBufferSize_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::shouldUseGraphicsRaycast
	bool ___shouldUseGraphicsRaycast_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusIndividualCompoundCollider
	bool ___focusIndividualCompoundCollider_10;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionsProfile
	MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * ___inputActionsProfile_11;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionRulesProfile
	MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * ___inputActionRulesProfile_12;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::pointerProfile
	MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * ___pointerProfile_13;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::gesturesProfile
	MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * ___gesturesProfile_14;
	// System.Collections.Generic.List`1<System.Globalization.CultureInfo> Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::supportedVoiceCultures
	List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * ___supportedVoiceCultures_15;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::speechCommandsProfile
	MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * ___speechCommandsProfile_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::enableControllerMapping
	bool ___enableControllerMapping_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerMappingProfile
	MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * ___controllerMappingProfile_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerVisualizationProfile
	MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * ___controllerVisualizationProfile_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::handTrackingProfile
	MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * ___handTrackingProfile_20;

public:
	inline static int32_t get_offset_of_dataProviderConfigurations_5() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___dataProviderConfigurations_5)); }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* get_dataProviderConfigurations_5() const { return ___dataProviderConfigurations_5; }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426** get_address_of_dataProviderConfigurations_5() { return &___dataProviderConfigurations_5; }
	inline void set_dataProviderConfigurations_5(MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* value)
	{
		___dataProviderConfigurations_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dataProviderConfigurations_5), (void*)value);
	}

	inline static int32_t get_offset_of_focusProviderType_6() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusProviderType_6)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_focusProviderType_6() const { return ___focusProviderType_6; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_focusProviderType_6() { return &___focusProviderType_6; }
	inline void set_focusProviderType_6(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___focusProviderType_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___focusProviderType_6), (void*)value);
	}

	inline static int32_t get_offset_of_raycastProviderType_7() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___raycastProviderType_7)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_raycastProviderType_7() const { return ___raycastProviderType_7; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_raycastProviderType_7() { return &___raycastProviderType_7; }
	inline void set_raycastProviderType_7(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___raycastProviderType_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastProviderType_7), (void*)value);
	}

	inline static int32_t get_offset_of_focusQueryBufferSize_8() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusQueryBufferSize_8)); }
	inline int32_t get_focusQueryBufferSize_8() const { return ___focusQueryBufferSize_8; }
	inline int32_t* get_address_of_focusQueryBufferSize_8() { return &___focusQueryBufferSize_8; }
	inline void set_focusQueryBufferSize_8(int32_t value)
	{
		___focusQueryBufferSize_8 = value;
	}

	inline static int32_t get_offset_of_shouldUseGraphicsRaycast_9() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___shouldUseGraphicsRaycast_9)); }
	inline bool get_shouldUseGraphicsRaycast_9() const { return ___shouldUseGraphicsRaycast_9; }
	inline bool* get_address_of_shouldUseGraphicsRaycast_9() { return &___shouldUseGraphicsRaycast_9; }
	inline void set_shouldUseGraphicsRaycast_9(bool value)
	{
		___shouldUseGraphicsRaycast_9 = value;
	}

	inline static int32_t get_offset_of_focusIndividualCompoundCollider_10() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusIndividualCompoundCollider_10)); }
	inline bool get_focusIndividualCompoundCollider_10() const { return ___focusIndividualCompoundCollider_10; }
	inline bool* get_address_of_focusIndividualCompoundCollider_10() { return &___focusIndividualCompoundCollider_10; }
	inline void set_focusIndividualCompoundCollider_10(bool value)
	{
		___focusIndividualCompoundCollider_10 = value;
	}

	inline static int32_t get_offset_of_inputActionsProfile_11() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionsProfile_11)); }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * get_inputActionsProfile_11() const { return ___inputActionsProfile_11; }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 ** get_address_of_inputActionsProfile_11() { return &___inputActionsProfile_11; }
	inline void set_inputActionsProfile_11(MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * value)
	{
		___inputActionsProfile_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionsProfile_11), (void*)value);
	}

	inline static int32_t get_offset_of_inputActionRulesProfile_12() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionRulesProfile_12)); }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * get_inputActionRulesProfile_12() const { return ___inputActionRulesProfile_12; }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A ** get_address_of_inputActionRulesProfile_12() { return &___inputActionRulesProfile_12; }
	inline void set_inputActionRulesProfile_12(MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * value)
	{
		___inputActionRulesProfile_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionRulesProfile_12), (void*)value);
	}

	inline static int32_t get_offset_of_pointerProfile_13() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___pointerProfile_13)); }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * get_pointerProfile_13() const { return ___pointerProfile_13; }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E ** get_address_of_pointerProfile_13() { return &___pointerProfile_13; }
	inline void set_pointerProfile_13(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * value)
	{
		___pointerProfile_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerProfile_13), (void*)value);
	}

	inline static int32_t get_offset_of_gesturesProfile_14() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___gesturesProfile_14)); }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * get_gesturesProfile_14() const { return ___gesturesProfile_14; }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 ** get_address_of_gesturesProfile_14() { return &___gesturesProfile_14; }
	inline void set_gesturesProfile_14(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * value)
	{
		___gesturesProfile_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gesturesProfile_14), (void*)value);
	}

	inline static int32_t get_offset_of_supportedVoiceCultures_15() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___supportedVoiceCultures_15)); }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * get_supportedVoiceCultures_15() const { return ___supportedVoiceCultures_15; }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 ** get_address_of_supportedVoiceCultures_15() { return &___supportedVoiceCultures_15; }
	inline void set_supportedVoiceCultures_15(List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * value)
	{
		___supportedVoiceCultures_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___supportedVoiceCultures_15), (void*)value);
	}

	inline static int32_t get_offset_of_speechCommandsProfile_16() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___speechCommandsProfile_16)); }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * get_speechCommandsProfile_16() const { return ___speechCommandsProfile_16; }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD ** get_address_of_speechCommandsProfile_16() { return &___speechCommandsProfile_16; }
	inline void set_speechCommandsProfile_16(MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * value)
	{
		___speechCommandsProfile_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___speechCommandsProfile_16), (void*)value);
	}

	inline static int32_t get_offset_of_enableControllerMapping_17() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___enableControllerMapping_17)); }
	inline bool get_enableControllerMapping_17() const { return ___enableControllerMapping_17; }
	inline bool* get_address_of_enableControllerMapping_17() { return &___enableControllerMapping_17; }
	inline void set_enableControllerMapping_17(bool value)
	{
		___enableControllerMapping_17 = value;
	}

	inline static int32_t get_offset_of_controllerMappingProfile_18() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerMappingProfile_18)); }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * get_controllerMappingProfile_18() const { return ___controllerMappingProfile_18; }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB ** get_address_of_controllerMappingProfile_18() { return &___controllerMappingProfile_18; }
	inline void set_controllerMappingProfile_18(MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * value)
	{
		___controllerMappingProfile_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerMappingProfile_18), (void*)value);
	}

	inline static int32_t get_offset_of_controllerVisualizationProfile_19() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerVisualizationProfile_19)); }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * get_controllerVisualizationProfile_19() const { return ___controllerVisualizationProfile_19; }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D ** get_address_of_controllerVisualizationProfile_19() { return &___controllerVisualizationProfile_19; }
	inline void set_controllerVisualizationProfile_19(MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * value)
	{
		___controllerVisualizationProfile_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerVisualizationProfile_19), (void*)value);
	}

	inline static int32_t get_offset_of_handTrackingProfile_20() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___handTrackingProfile_20)); }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * get_handTrackingProfile_20() const { return ___handTrackingProfile_20; }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 ** get_address_of_handTrackingProfile_20() { return &___handTrackingProfile_20; }
	inline void set_handTrackingProfile_20(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * value)
	{
		___handTrackingProfile_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handTrackingProfile_20), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile
struct MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointingExtent
	float ___pointingExtent_5;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointingRaycastLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___pointingRaycastLayerMasks_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::debugDrawPointingRays
	bool ___debugDrawPointingRays_7;
	// UnityEngine.Color[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::debugDrawPointingRayColors
	ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* ___debugDrawPointingRayColors_8;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::gazeCursorPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gazeCursorPrefab_9;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::gazeProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___gazeProviderType_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::useHeadGazeOverride
	bool ___useHeadGazeOverride_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::isEyeTrackingEnabled
	bool ___isEyeTrackingEnabled_12;
	// Microsoft.MixedReality.Toolkit.Input.PointerOption[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointerOptions
	PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* ___pointerOptions_13;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::pointerMediator
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___pointerMediator_14;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::primaryPointerSelector
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___primaryPointerSelector_15;

public:
	inline static int32_t get_offset_of_pointingExtent_5() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointingExtent_5)); }
	inline float get_pointingExtent_5() const { return ___pointingExtent_5; }
	inline float* get_address_of_pointingExtent_5() { return &___pointingExtent_5; }
	inline void set_pointingExtent_5(float value)
	{
		___pointingExtent_5 = value;
	}

	inline static int32_t get_offset_of_pointingRaycastLayerMasks_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointingRaycastLayerMasks_6)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_pointingRaycastLayerMasks_6() const { return ___pointingRaycastLayerMasks_6; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_pointingRaycastLayerMasks_6() { return &___pointingRaycastLayerMasks_6; }
	inline void set_pointingRaycastLayerMasks_6(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___pointingRaycastLayerMasks_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointingRaycastLayerMasks_6), (void*)value);
	}

	inline static int32_t get_offset_of_debugDrawPointingRays_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___debugDrawPointingRays_7)); }
	inline bool get_debugDrawPointingRays_7() const { return ___debugDrawPointingRays_7; }
	inline bool* get_address_of_debugDrawPointingRays_7() { return &___debugDrawPointingRays_7; }
	inline void set_debugDrawPointingRays_7(bool value)
	{
		___debugDrawPointingRays_7 = value;
	}

	inline static int32_t get_offset_of_debugDrawPointingRayColors_8() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___debugDrawPointingRayColors_8)); }
	inline ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* get_debugDrawPointingRayColors_8() const { return ___debugDrawPointingRayColors_8; }
	inline ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399** get_address_of_debugDrawPointingRayColors_8() { return &___debugDrawPointingRayColors_8; }
	inline void set_debugDrawPointingRayColors_8(ColorU5BU5D_t166D390E0E6F24360F990D1F81881A72B73CA399* value)
	{
		___debugDrawPointingRayColors_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___debugDrawPointingRayColors_8), (void*)value);
	}

	inline static int32_t get_offset_of_gazeCursorPrefab_9() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___gazeCursorPrefab_9)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_gazeCursorPrefab_9() const { return ___gazeCursorPrefab_9; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_gazeCursorPrefab_9() { return &___gazeCursorPrefab_9; }
	inline void set_gazeCursorPrefab_9(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___gazeCursorPrefab_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeCursorPrefab_9), (void*)value);
	}

	inline static int32_t get_offset_of_gazeProviderType_10() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___gazeProviderType_10)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_gazeProviderType_10() const { return ___gazeProviderType_10; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_gazeProviderType_10() { return &___gazeProviderType_10; }
	inline void set_gazeProviderType_10(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___gazeProviderType_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeProviderType_10), (void*)value);
	}

	inline static int32_t get_offset_of_useHeadGazeOverride_11() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___useHeadGazeOverride_11)); }
	inline bool get_useHeadGazeOverride_11() const { return ___useHeadGazeOverride_11; }
	inline bool* get_address_of_useHeadGazeOverride_11() { return &___useHeadGazeOverride_11; }
	inline void set_useHeadGazeOverride_11(bool value)
	{
		___useHeadGazeOverride_11 = value;
	}

	inline static int32_t get_offset_of_isEyeTrackingEnabled_12() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___isEyeTrackingEnabled_12)); }
	inline bool get_isEyeTrackingEnabled_12() const { return ___isEyeTrackingEnabled_12; }
	inline bool* get_address_of_isEyeTrackingEnabled_12() { return &___isEyeTrackingEnabled_12; }
	inline void set_isEyeTrackingEnabled_12(bool value)
	{
		___isEyeTrackingEnabled_12 = value;
	}

	inline static int32_t get_offset_of_pointerOptions_13() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointerOptions_13)); }
	inline PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* get_pointerOptions_13() const { return ___pointerOptions_13; }
	inline PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E** get_address_of_pointerOptions_13() { return &___pointerOptions_13; }
	inline void set_pointerOptions_13(PointerOptionU5BU5D_t343717A3909233A1DA8916E41ADEA411FE02B93E* value)
	{
		___pointerOptions_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerOptions_13), (void*)value);
	}

	inline static int32_t get_offset_of_pointerMediator_14() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___pointerMediator_14)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_pointerMediator_14() const { return ___pointerMediator_14; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_pointerMediator_14() { return &___pointerMediator_14; }
	inline void set_pointerMediator_14(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___pointerMediator_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerMediator_14), (void*)value);
	}

	inline static int32_t get_offset_of_primaryPointerSelector_15() { return static_cast<int32_t>(offsetof(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E, ___primaryPointerSelector_15)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_primaryPointerSelector_15() const { return ___primaryPointerSelector_15; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_primaryPointerSelector_15() { return &___primaryPointerSelector_15; }
	inline void set_primaryPointerSelector_15(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___primaryPointerSelector_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___primaryPointerSelector_15), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8, ___U3CControllerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_5() const { return ___U3CControllerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_5() { return &___U3CControllerU3Ek__BackingField_5; }
	inline void set_U3CControllerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SpeechEventData
struct SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// System.TimeSpan Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseDuration>k__BackingField
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___U3CPhraseDurationU3Ek__BackingField_5;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<PhraseStartTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CPhraseStartTimeU3Ek__BackingField_6;
	// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Command>k__BackingField
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  ___U3CCommandU3Ek__BackingField_7;
	// Microsoft.MixedReality.Toolkit.Utilities.RecognitionConfidenceLevel Microsoft.MixedReality.Toolkit.Input.SpeechEventData::<Confidence>k__BackingField
	int32_t ___U3CConfidenceU3Ek__BackingField_8;

public:
	inline static int32_t get_offset_of_U3CPhraseDurationU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseDurationU3Ek__BackingField_5)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_U3CPhraseDurationU3Ek__BackingField_5() const { return ___U3CPhraseDurationU3Ek__BackingField_5; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_U3CPhraseDurationU3Ek__BackingField_5() { return &___U3CPhraseDurationU3Ek__BackingField_5; }
	inline void set_U3CPhraseDurationU3Ek__BackingField_5(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___U3CPhraseDurationU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CPhraseStartTimeU3Ek__BackingField_6)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CPhraseStartTimeU3Ek__BackingField_6() const { return ___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CPhraseStartTimeU3Ek__BackingField_6() { return &___U3CPhraseStartTimeU3Ek__BackingField_6; }
	inline void set_U3CPhraseStartTimeU3Ek__BackingField_6(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CPhraseStartTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CCommandU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CCommandU3Ek__BackingField_7)); }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  get_U3CCommandU3Ek__BackingField_7() const { return ___U3CCommandU3Ek__BackingField_7; }
	inline SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * get_address_of_U3CCommandU3Ek__BackingField_7() { return &___U3CCommandU3Ek__BackingField_7; }
	inline void set_U3CCommandU3Ek__BackingField_7(SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  value)
	{
		___U3CCommandU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizationKey_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___localizedKeyword_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CCommandU3Ek__BackingField_7))->___keyword_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CCommandU3Ek__BackingField_7))->___action_4))->___description_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CConfidenceU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7, ___U3CConfidenceU3Ek__BackingField_8)); }
	inline int32_t get_U3CConfidenceU3Ek__BackingField_8() const { return ___U3CConfidenceU3Ek__BackingField_8; }
	inline int32_t* get_address_of_U3CConfidenceU3Ek__BackingField_8() { return &___U3CConfidenceU3Ek__BackingField_8; }
	inline void set_U3CConfidenceU3Ek__BackingField_8(int32_t value)
	{
		___U3CConfidenceU3Ek__BackingField_8 = value;
	}
};


// System.MissingMemberException
struct MissingMemberException_t165349A7E04FC51DAA5C2251C6DCDD2DD60255DD  : public MemberAccessException_tDA869AFFB4FC1EA0EEF3143D85999710AC4774F0
{
public:
	// System.String System.MissingMemberException::ClassName
	String_t* ___ClassName_17;
	// System.String System.MissingMemberException::MemberName
	String_t* ___MemberName_18;
	// System.Byte[] System.MissingMemberException::Signature
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___Signature_19;

public:
	inline static int32_t get_offset_of_ClassName_17() { return static_cast<int32_t>(offsetof(MissingMemberException_t165349A7E04FC51DAA5C2251C6DCDD2DD60255DD, ___ClassName_17)); }
	inline String_t* get_ClassName_17() const { return ___ClassName_17; }
	inline String_t** get_address_of_ClassName_17() { return &___ClassName_17; }
	inline void set_ClassName_17(String_t* value)
	{
		___ClassName_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ClassName_17), (void*)value);
	}

	inline static int32_t get_offset_of_MemberName_18() { return static_cast<int32_t>(offsetof(MissingMemberException_t165349A7E04FC51DAA5C2251C6DCDD2DD60255DD, ___MemberName_18)); }
	inline String_t* get_MemberName_18() const { return ___MemberName_18; }
	inline String_t** get_address_of_MemberName_18() { return &___MemberName_18; }
	inline void set_MemberName_18(String_t* value)
	{
		___MemberName_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___MemberName_18), (void*)value);
	}

	inline static int32_t get_offset_of_Signature_19() { return static_cast<int32_t>(offsetof(MissingMemberException_t165349A7E04FC51DAA5C2251C6DCDD2DD60255DD, ___Signature_19)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_Signature_19() const { return ___Signature_19; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_Signature_19() { return &___Signature_19; }
	inline void set_Signature_19(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___Signature_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Signature_19), (void*)value);
	}
};


// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};

struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields
{
public:
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPostRender_6;

public:
	inline static int32_t get_offset_of_onPreCull_4() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreCull_4)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreCull_4() const { return ___onPreCull_4; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreCull_4() { return &___onPreCull_4; }
	inline void set_onPreCull_4(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreCull_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreCull_4), (void*)value);
	}

	inline static int32_t get_offset_of_onPreRender_5() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreRender_5)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreRender_5() const { return ___onPreRender_5; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreRender_5() { return &___onPreRender_5; }
	inline void set_onPreRender_5(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreRender_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreRender_5), (void*)value);
	}

	inline static int32_t get_offset_of_onPostRender_6() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPostRender_6)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPostRender_6() const { return ___onPostRender_6; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPostRender_6() { return &___onPostRender_6; }
	inline void set_onPostRender_6(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPostRender_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPostRender_6), (void*)value);
	}
};


// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable
struct BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.TouchableEventType Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::eventsToReceive
	int32_t ___eventsToReceive_4;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::debounceThreshold
	float ___debounceThreshold_5;

public:
	inline static int32_t get_offset_of_eventsToReceive_4() { return static_cast<int32_t>(offsetof(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03, ___eventsToReceive_4)); }
	inline int32_t get_eventsToReceive_4() const { return ___eventsToReceive_4; }
	inline int32_t* get_address_of_eventsToReceive_4() { return &___eventsToReceive_4; }
	inline void set_eventsToReceive_4(int32_t value)
	{
		___eventsToReceive_4 = value;
	}

	inline static int32_t get_offset_of_debounceThreshold_5() { return static_cast<int32_t>(offsetof(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03, ___debounceThreshold_5)); }
	inline float get_debounceThreshold_5() const { return ___debounceThreshold_5; }
	inline float* get_address_of_debounceThreshold_5() { return &___debounceThreshold_5; }
	inline void set_debounceThreshold_5(float value)
	{
		___debounceThreshold_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::lateInitialize
	bool ___lateInitialize_4;

public:
	inline static int32_t get_offset_of_lateInitialize_4() { return static_cast<int32_t>(offsetof(InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5, ___lateInitialize_4)); }
	inline bool get_lateInitialize_4() const { return ___lateInitialize_4; }
	inline bool* get_address_of_lateInitialize_4() { return &___lateInitialize_4; }
	inline void set_lateInitialize_4(bool value)
	{
		___lateInitialize_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::ShowTetherWhenManipulating
	bool ___ShowTetherWhenManipulating_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::IsBoundsHandles
	bool ___IsBoundsHandles_5;

public:
	inline static int32_t get_offset_of_ShowTetherWhenManipulating_4() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___ShowTetherWhenManipulating_4)); }
	inline bool get_ShowTetherWhenManipulating_4() const { return ___ShowTetherWhenManipulating_4; }
	inline bool* get_address_of_ShowTetherWhenManipulating_4() { return &___ShowTetherWhenManipulating_4; }
	inline void set_ShowTetherWhenManipulating_4(bool value)
	{
		___ShowTetherWhenManipulating_4 = value;
	}

	inline static int32_t get_offset_of_IsBoundsHandles_5() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___IsBoundsHandles_5)); }
	inline bool get_IsBoundsHandles_5() const { return ___IsBoundsHandles_5; }
	inline bool* get_address_of_IsBoundsHandles_5() { return &___IsBoundsHandles_5; }
	inline void set_IsBoundsHandles_5(bool value)
	{
		___IsBoundsHandles_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.MixedRealityToolkit
struct MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.MixedRealityToolkit::<IsProfileSwitching>k__BackingField
	bool ___U3CIsProfileSwitchingU3Ek__BackingField_8;
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile Microsoft.MixedReality.Toolkit.MixedRealityToolkit::activeProfile
	MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 * ___activeProfile_9;
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkitConfigurationProfile Microsoft.MixedReality.Toolkit.MixedRealityToolkit::newProfile
	MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 * ___newProfile_10;

public:
	inline static int32_t get_offset_of_U3CIsProfileSwitchingU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47, ___U3CIsProfileSwitchingU3Ek__BackingField_8)); }
	inline bool get_U3CIsProfileSwitchingU3Ek__BackingField_8() const { return ___U3CIsProfileSwitchingU3Ek__BackingField_8; }
	inline bool* get_address_of_U3CIsProfileSwitchingU3Ek__BackingField_8() { return &___U3CIsProfileSwitchingU3Ek__BackingField_8; }
	inline void set_U3CIsProfileSwitchingU3Ek__BackingField_8(bool value)
	{
		___U3CIsProfileSwitchingU3Ek__BackingField_8 = value;
	}

	inline static int32_t get_offset_of_activeProfile_9() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47, ___activeProfile_9)); }
	inline MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 * get_activeProfile_9() const { return ___activeProfile_9; }
	inline MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 ** get_address_of_activeProfile_9() { return &___activeProfile_9; }
	inline void set_activeProfile_9(MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 * value)
	{
		___activeProfile_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___activeProfile_9), (void*)value);
	}

	inline static int32_t get_offset_of_newProfile_10() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47, ___newProfile_10)); }
	inline MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 * get_newProfile_10() const { return ___newProfile_10; }
	inline MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 ** get_address_of_newProfile_10() { return &___newProfile_10; }
	inline void set_newProfile_10(MixedRealityToolkitConfigurationProfile_tACF291CDF8D9BBC9973AD4FDAB66CB3574979FE9 * value)
	{
		___newProfile_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___newProfile_10), (void*)value);
	}
};

struct MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.MixedRealityToolkit::isInitializing
	bool ___isInitializing_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.MixedRealityToolkit::isApplicationQuitting
	bool ___isApplicationQuitting_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.MixedRealityToolkit::internalShutdown
	bool ___internalShutdown_6;
	// System.Collections.Generic.Dictionary`2<System.Type,Microsoft.MixedReality.Toolkit.IMixedRealityService> Microsoft.MixedReality.Toolkit.MixedRealityToolkit::activeSystems
	Dictionary_2_t800AAE737FB312BBA9170905905D74ED86BF5F59 * ___activeSystems_11;
	// System.Collections.Generic.List`1<System.Tuple`2<System.Type,Microsoft.MixedReality.Toolkit.IMixedRealityService>> Microsoft.MixedReality.Toolkit.MixedRealityToolkit::registeredMixedRealityServices
	List_1_t8665C2870C9F0DA5B6D62AF0F0323E984195D9CC * ___registeredMixedRealityServices_12;
	// Microsoft.MixedReality.Toolkit.MixedRealityToolkit Microsoft.MixedReality.Toolkit.MixedRealityToolkit::activeInstance
	MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * ___activeInstance_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.MixedRealityToolkit::newInstanceBeingInitialized
	bool ___newInstanceBeingInitialized_14;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.MixedRealityToolkit> Microsoft.MixedReality.Toolkit.MixedRealityToolkit::toolkitInstances
	List_1_t6C7AD014C867B7DDEC0F7E0E6E34237704C29074 * ___toolkitInstances_17;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.MixedRealityToolkit::UpdateAllServicesPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateAllServicesPerfMarker_18;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.MixedRealityToolkit::LateUpdateAllServicesPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___LateUpdateAllServicesPerfMarker_19;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.MixedRealityToolkit::ExecuteOnAllServicesInOrderPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___ExecuteOnAllServicesInOrderPerfMarker_20;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.MixedRealityToolkit::ExecuteOnAllServicesReverseOrderPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___ExecuteOnAllServicesReverseOrderPerfMarker_21;

public:
	inline static int32_t get_offset_of_isInitializing_4() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___isInitializing_4)); }
	inline bool get_isInitializing_4() const { return ___isInitializing_4; }
	inline bool* get_address_of_isInitializing_4() { return &___isInitializing_4; }
	inline void set_isInitializing_4(bool value)
	{
		___isInitializing_4 = value;
	}

	inline static int32_t get_offset_of_isApplicationQuitting_5() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___isApplicationQuitting_5)); }
	inline bool get_isApplicationQuitting_5() const { return ___isApplicationQuitting_5; }
	inline bool* get_address_of_isApplicationQuitting_5() { return &___isApplicationQuitting_5; }
	inline void set_isApplicationQuitting_5(bool value)
	{
		___isApplicationQuitting_5 = value;
	}

	inline static int32_t get_offset_of_internalShutdown_6() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___internalShutdown_6)); }
	inline bool get_internalShutdown_6() const { return ___internalShutdown_6; }
	inline bool* get_address_of_internalShutdown_6() { return &___internalShutdown_6; }
	inline void set_internalShutdown_6(bool value)
	{
		___internalShutdown_6 = value;
	}

	inline static int32_t get_offset_of_activeSystems_11() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___activeSystems_11)); }
	inline Dictionary_2_t800AAE737FB312BBA9170905905D74ED86BF5F59 * get_activeSystems_11() const { return ___activeSystems_11; }
	inline Dictionary_2_t800AAE737FB312BBA9170905905D74ED86BF5F59 ** get_address_of_activeSystems_11() { return &___activeSystems_11; }
	inline void set_activeSystems_11(Dictionary_2_t800AAE737FB312BBA9170905905D74ED86BF5F59 * value)
	{
		___activeSystems_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___activeSystems_11), (void*)value);
	}

	inline static int32_t get_offset_of_registeredMixedRealityServices_12() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___registeredMixedRealityServices_12)); }
	inline List_1_t8665C2870C9F0DA5B6D62AF0F0323E984195D9CC * get_registeredMixedRealityServices_12() const { return ___registeredMixedRealityServices_12; }
	inline List_1_t8665C2870C9F0DA5B6D62AF0F0323E984195D9CC ** get_address_of_registeredMixedRealityServices_12() { return &___registeredMixedRealityServices_12; }
	inline void set_registeredMixedRealityServices_12(List_1_t8665C2870C9F0DA5B6D62AF0F0323E984195D9CC * value)
	{
		___registeredMixedRealityServices_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___registeredMixedRealityServices_12), (void*)value);
	}

	inline static int32_t get_offset_of_activeInstance_13() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___activeInstance_13)); }
	inline MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * get_activeInstance_13() const { return ___activeInstance_13; }
	inline MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 ** get_address_of_activeInstance_13() { return &___activeInstance_13; }
	inline void set_activeInstance_13(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * value)
	{
		___activeInstance_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___activeInstance_13), (void*)value);
	}

	inline static int32_t get_offset_of_newInstanceBeingInitialized_14() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___newInstanceBeingInitialized_14)); }
	inline bool get_newInstanceBeingInitialized_14() const { return ___newInstanceBeingInitialized_14; }
	inline bool* get_address_of_newInstanceBeingInitialized_14() { return &___newInstanceBeingInitialized_14; }
	inline void set_newInstanceBeingInitialized_14(bool value)
	{
		___newInstanceBeingInitialized_14 = value;
	}

	inline static int32_t get_offset_of_toolkitInstances_17() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___toolkitInstances_17)); }
	inline List_1_t6C7AD014C867B7DDEC0F7E0E6E34237704C29074 * get_toolkitInstances_17() const { return ___toolkitInstances_17; }
	inline List_1_t6C7AD014C867B7DDEC0F7E0E6E34237704C29074 ** get_address_of_toolkitInstances_17() { return &___toolkitInstances_17; }
	inline void set_toolkitInstances_17(List_1_t6C7AD014C867B7DDEC0F7E0E6E34237704C29074 * value)
	{
		___toolkitInstances_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___toolkitInstances_17), (void*)value);
	}

	inline static int32_t get_offset_of_UpdateAllServicesPerfMarker_18() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___UpdateAllServicesPerfMarker_18)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateAllServicesPerfMarker_18() const { return ___UpdateAllServicesPerfMarker_18; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateAllServicesPerfMarker_18() { return &___UpdateAllServicesPerfMarker_18; }
	inline void set_UpdateAllServicesPerfMarker_18(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateAllServicesPerfMarker_18 = value;
	}

	inline static int32_t get_offset_of_LateUpdateAllServicesPerfMarker_19() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___LateUpdateAllServicesPerfMarker_19)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_LateUpdateAllServicesPerfMarker_19() const { return ___LateUpdateAllServicesPerfMarker_19; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_LateUpdateAllServicesPerfMarker_19() { return &___LateUpdateAllServicesPerfMarker_19; }
	inline void set_LateUpdateAllServicesPerfMarker_19(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___LateUpdateAllServicesPerfMarker_19 = value;
	}

	inline static int32_t get_offset_of_ExecuteOnAllServicesInOrderPerfMarker_20() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___ExecuteOnAllServicesInOrderPerfMarker_20)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_ExecuteOnAllServicesInOrderPerfMarker_20() const { return ___ExecuteOnAllServicesInOrderPerfMarker_20; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_ExecuteOnAllServicesInOrderPerfMarker_20() { return &___ExecuteOnAllServicesInOrderPerfMarker_20; }
	inline void set_ExecuteOnAllServicesInOrderPerfMarker_20(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___ExecuteOnAllServicesInOrderPerfMarker_20 = value;
	}

	inline static int32_t get_offset_of_ExecuteOnAllServicesReverseOrderPerfMarker_21() { return static_cast<int32_t>(offsetof(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields, ___ExecuteOnAllServicesReverseOrderPerfMarker_21)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_ExecuteOnAllServicesReverseOrderPerfMarker_21() const { return ___ExecuteOnAllServicesReverseOrderPerfMarker_21; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_ExecuteOnAllServicesReverseOrderPerfMarker_21() { return &___ExecuteOnAllServicesReverseOrderPerfMarker_21; }
	inline void set_ExecuteOnAllServicesReverseOrderPerfMarker_21(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___ExecuteOnAllServicesReverseOrderPerfMarker_21 = value;
	}
};


// System.MissingMethodException
struct MissingMethodException_t7D33DFD3009E4F19BE4DD0967F04D3878F348498  : public MissingMemberException_t165349A7E04FC51DAA5C2251C6DCDD2DD60255DD
{
public:
	// System.String System.MissingMethodException::signature
	String_t* ___signature_20;

public:
	inline static int32_t get_offset_of_signature_20() { return static_cast<int32_t>(offsetof(MissingMethodException_t7D33DFD3009E4F19BE4DD0967F04D3878F348498, ___signature_20)); }
	inline String_t* get_signature_20() const { return ___signature_20; }
	inline String_t** get_address_of_signature_20() { return &___signature_20; }
	inline void set_signature_20(String_t* value)
	{
		___signature_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___signature_20), (void*)value);
	}
};


// UnityEngine.EventSystems.UIBehaviour
struct UIBehaviour_t3C3C339CD5677BA7FC27C352FED8B78052A3FE70  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.ColliderNearInteractionTouchable
struct ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571  : public BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03
{
public:
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.ColliderNearInteractionTouchable::touchableCollider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___touchableCollider_6;

public:
	inline static int32_t get_offset_of_touchableCollider_6() { return static_cast<int32_t>(offsetof(ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571, ___touchableCollider_6)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_touchableCollider_6() const { return ___touchableCollider_6; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_touchableCollider_6() { return &___touchableCollider_6; }
	inline void set_touchableCollider_6(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___touchableCollider_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchableCollider_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.GazeProvider
struct GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::lockCursorWhenFocusLocked
	bool ___lockCursorWhenFocusLocked_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::setCursorInvisibleWhenFocusLocked
	bool ___setCursorInvisibleWhenFocusLocked_8;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeProvider::maxGazeCollisionDistance
	float ___maxGazeCollisionDistance_9;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.GazeProvider::raycastLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___raycastLayerMasks_10;
	// Microsoft.MixedReality.Toolkit.Physics.GazeStabilizer Microsoft.MixedReality.Toolkit.Input.GazeProvider::stabilizer
	GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D * ___stabilizer_11;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.GazeProvider::gazeTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___gazeTransform_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeProvider::minHeadVelocityThreshold
	float ___minHeadVelocityThreshold_13;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeProvider::maxHeadVelocityThreshold
	float ___maxHeadVelocityThreshold_14;
	// Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource Microsoft.MixedReality.Toolkit.Input.GazeProvider::gazeInputSource
	BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * ___gazeInputSource_15;
	// Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::gazePointer
	InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * ___gazePointer_16;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.GazeProvider::<GazeCursorPrefab>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CGazeCursorPrefabU3Ek__BackingField_17;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.GazeProvider::<GazeTarget>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CGazeTargetU3Ek__BackingField_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Input.GazeProvider::<HitInfo>k__BackingField
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___U3CHitInfoU3Ek__BackingField_19;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::<HitPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CHitPositionU3Ek__BackingField_20;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::<HitNormal>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CHitNormalU3Ek__BackingField_21;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::<HeadVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CHeadVelocityU3Ek__BackingField_22;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::<HeadMovementDirection>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CHeadMovementDirectionU3Ek__BackingField_23;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeProvider::lastHitDistance
	float ___lastHitDistance_24;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::delayInitialization
	bool ___delayInitialization_25;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::lastHeadPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lastHeadPosition_26;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Input.GazeProvider::<overrideHeadPosition>k__BackingField
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___U3CoverrideHeadPositionU3Ek__BackingField_27;
	// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Input.GazeProvider::<overrideHeadForward>k__BackingField
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___U3CoverrideHeadForwardU3Ek__BackingField_28;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.GazeProvider::latestEyeTrackingUpdate
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___latestEyeTrackingUpdate_33;
	// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.Input.GazeProvider::<IsEyeCalibrationValid>k__BackingField
	Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___U3CIsEyeCalibrationValidU3Ek__BackingField_35;
	// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.GazeProvider::<LatestEyeGaze>k__BackingField
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___U3CLatestEyeGazeU3Ek__BackingField_36;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::<IsEyeTrackingEnabled>k__BackingField
	bool ___U3CIsEyeTrackingEnabledU3Ek__BackingField_37;
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.GazeProvider::<Timestamp>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CTimestampU3Ek__BackingField_38;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::<UseHeadGazeOverride>k__BackingField
	bool ___U3CUseHeadGazeOverrideU3Ek__BackingField_39;

public:
	inline static int32_t get_offset_of_lockCursorWhenFocusLocked_7() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___lockCursorWhenFocusLocked_7)); }
	inline bool get_lockCursorWhenFocusLocked_7() const { return ___lockCursorWhenFocusLocked_7; }
	inline bool* get_address_of_lockCursorWhenFocusLocked_7() { return &___lockCursorWhenFocusLocked_7; }
	inline void set_lockCursorWhenFocusLocked_7(bool value)
	{
		___lockCursorWhenFocusLocked_7 = value;
	}

	inline static int32_t get_offset_of_setCursorInvisibleWhenFocusLocked_8() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___setCursorInvisibleWhenFocusLocked_8)); }
	inline bool get_setCursorInvisibleWhenFocusLocked_8() const { return ___setCursorInvisibleWhenFocusLocked_8; }
	inline bool* get_address_of_setCursorInvisibleWhenFocusLocked_8() { return &___setCursorInvisibleWhenFocusLocked_8; }
	inline void set_setCursorInvisibleWhenFocusLocked_8(bool value)
	{
		___setCursorInvisibleWhenFocusLocked_8 = value;
	}

	inline static int32_t get_offset_of_maxGazeCollisionDistance_9() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___maxGazeCollisionDistance_9)); }
	inline float get_maxGazeCollisionDistance_9() const { return ___maxGazeCollisionDistance_9; }
	inline float* get_address_of_maxGazeCollisionDistance_9() { return &___maxGazeCollisionDistance_9; }
	inline void set_maxGazeCollisionDistance_9(float value)
	{
		___maxGazeCollisionDistance_9 = value;
	}

	inline static int32_t get_offset_of_raycastLayerMasks_10() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___raycastLayerMasks_10)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_raycastLayerMasks_10() const { return ___raycastLayerMasks_10; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_raycastLayerMasks_10() { return &___raycastLayerMasks_10; }
	inline void set_raycastLayerMasks_10(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___raycastLayerMasks_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastLayerMasks_10), (void*)value);
	}

	inline static int32_t get_offset_of_stabilizer_11() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___stabilizer_11)); }
	inline GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D * get_stabilizer_11() const { return ___stabilizer_11; }
	inline GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D ** get_address_of_stabilizer_11() { return &___stabilizer_11; }
	inline void set_stabilizer_11(GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D * value)
	{
		___stabilizer_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___stabilizer_11), (void*)value);
	}

	inline static int32_t get_offset_of_gazeTransform_12() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___gazeTransform_12)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_gazeTransform_12() const { return ___gazeTransform_12; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_gazeTransform_12() { return &___gazeTransform_12; }
	inline void set_gazeTransform_12(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___gazeTransform_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeTransform_12), (void*)value);
	}

	inline static int32_t get_offset_of_minHeadVelocityThreshold_13() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___minHeadVelocityThreshold_13)); }
	inline float get_minHeadVelocityThreshold_13() const { return ___minHeadVelocityThreshold_13; }
	inline float* get_address_of_minHeadVelocityThreshold_13() { return &___minHeadVelocityThreshold_13; }
	inline void set_minHeadVelocityThreshold_13(float value)
	{
		___minHeadVelocityThreshold_13 = value;
	}

	inline static int32_t get_offset_of_maxHeadVelocityThreshold_14() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___maxHeadVelocityThreshold_14)); }
	inline float get_maxHeadVelocityThreshold_14() const { return ___maxHeadVelocityThreshold_14; }
	inline float* get_address_of_maxHeadVelocityThreshold_14() { return &___maxHeadVelocityThreshold_14; }
	inline void set_maxHeadVelocityThreshold_14(float value)
	{
		___maxHeadVelocityThreshold_14 = value;
	}

	inline static int32_t get_offset_of_gazeInputSource_15() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___gazeInputSource_15)); }
	inline BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * get_gazeInputSource_15() const { return ___gazeInputSource_15; }
	inline BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 ** get_address_of_gazeInputSource_15() { return &___gazeInputSource_15; }
	inline void set_gazeInputSource_15(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * value)
	{
		___gazeInputSource_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazeInputSource_15), (void*)value);
	}

	inline static int32_t get_offset_of_gazePointer_16() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___gazePointer_16)); }
	inline InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * get_gazePointer_16() const { return ___gazePointer_16; }
	inline InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 ** get_address_of_gazePointer_16() { return &___gazePointer_16; }
	inline void set_gazePointer_16(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * value)
	{
		___gazePointer_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gazePointer_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CGazeCursorPrefabU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CGazeCursorPrefabU3Ek__BackingField_17)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CGazeCursorPrefabU3Ek__BackingField_17() const { return ___U3CGazeCursorPrefabU3Ek__BackingField_17; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CGazeCursorPrefabU3Ek__BackingField_17() { return &___U3CGazeCursorPrefabU3Ek__BackingField_17; }
	inline void set_U3CGazeCursorPrefabU3Ek__BackingField_17(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CGazeCursorPrefabU3Ek__BackingField_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CGazeCursorPrefabU3Ek__BackingField_17), (void*)value);
	}

	inline static int32_t get_offset_of_U3CGazeTargetU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CGazeTargetU3Ek__BackingField_18)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CGazeTargetU3Ek__BackingField_18() const { return ___U3CGazeTargetU3Ek__BackingField_18; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CGazeTargetU3Ek__BackingField_18() { return &___U3CGazeTargetU3Ek__BackingField_18; }
	inline void set_U3CGazeTargetU3Ek__BackingField_18(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CGazeTargetU3Ek__BackingField_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CGazeTargetU3Ek__BackingField_18), (void*)value);
	}

	inline static int32_t get_offset_of_U3CHitInfoU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CHitInfoU3Ek__BackingField_19)); }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  get_U3CHitInfoU3Ek__BackingField_19() const { return ___U3CHitInfoU3Ek__BackingField_19; }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * get_address_of_U3CHitInfoU3Ek__BackingField_19() { return &___U3CHitInfoU3Ek__BackingField_19; }
	inline void set_U3CHitInfoU3Ek__BackingField_19(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  value)
	{
		___U3CHitInfoU3Ek__BackingField_19 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CHitInfoU3Ek__BackingField_19))->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CHitInfoU3Ek__BackingField_19))->___collider_10), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CHitPositionU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CHitPositionU3Ek__BackingField_20)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CHitPositionU3Ek__BackingField_20() const { return ___U3CHitPositionU3Ek__BackingField_20; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CHitPositionU3Ek__BackingField_20() { return &___U3CHitPositionU3Ek__BackingField_20; }
	inline void set_U3CHitPositionU3Ek__BackingField_20(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CHitPositionU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CHitNormalU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CHitNormalU3Ek__BackingField_21)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CHitNormalU3Ek__BackingField_21() const { return ___U3CHitNormalU3Ek__BackingField_21; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CHitNormalU3Ek__BackingField_21() { return &___U3CHitNormalU3Ek__BackingField_21; }
	inline void set_U3CHitNormalU3Ek__BackingField_21(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CHitNormalU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3CHeadVelocityU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CHeadVelocityU3Ek__BackingField_22)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CHeadVelocityU3Ek__BackingField_22() const { return ___U3CHeadVelocityU3Ek__BackingField_22; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CHeadVelocityU3Ek__BackingField_22() { return &___U3CHeadVelocityU3Ek__BackingField_22; }
	inline void set_U3CHeadVelocityU3Ek__BackingField_22(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CHeadVelocityU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3CHeadMovementDirectionU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CHeadMovementDirectionU3Ek__BackingField_23)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CHeadMovementDirectionU3Ek__BackingField_23() const { return ___U3CHeadMovementDirectionU3Ek__BackingField_23; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CHeadMovementDirectionU3Ek__BackingField_23() { return &___U3CHeadMovementDirectionU3Ek__BackingField_23; }
	inline void set_U3CHeadMovementDirectionU3Ek__BackingField_23(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CHeadMovementDirectionU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_lastHitDistance_24() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___lastHitDistance_24)); }
	inline float get_lastHitDistance_24() const { return ___lastHitDistance_24; }
	inline float* get_address_of_lastHitDistance_24() { return &___lastHitDistance_24; }
	inline void set_lastHitDistance_24(float value)
	{
		___lastHitDistance_24 = value;
	}

	inline static int32_t get_offset_of_delayInitialization_25() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___delayInitialization_25)); }
	inline bool get_delayInitialization_25() const { return ___delayInitialization_25; }
	inline bool* get_address_of_delayInitialization_25() { return &___delayInitialization_25; }
	inline void set_delayInitialization_25(bool value)
	{
		___delayInitialization_25 = value;
	}

	inline static int32_t get_offset_of_lastHeadPosition_26() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___lastHeadPosition_26)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_lastHeadPosition_26() const { return ___lastHeadPosition_26; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_lastHeadPosition_26() { return &___lastHeadPosition_26; }
	inline void set_lastHeadPosition_26(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___lastHeadPosition_26 = value;
	}

	inline static int32_t get_offset_of_U3CoverrideHeadPositionU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CoverrideHeadPositionU3Ek__BackingField_27)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_U3CoverrideHeadPositionU3Ek__BackingField_27() const { return ___U3CoverrideHeadPositionU3Ek__BackingField_27; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_U3CoverrideHeadPositionU3Ek__BackingField_27() { return &___U3CoverrideHeadPositionU3Ek__BackingField_27; }
	inline void set_U3CoverrideHeadPositionU3Ek__BackingField_27(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___U3CoverrideHeadPositionU3Ek__BackingField_27 = value;
	}

	inline static int32_t get_offset_of_U3CoverrideHeadForwardU3Ek__BackingField_28() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CoverrideHeadForwardU3Ek__BackingField_28)); }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  get_U3CoverrideHeadForwardU3Ek__BackingField_28() const { return ___U3CoverrideHeadForwardU3Ek__BackingField_28; }
	inline Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * get_address_of_U3CoverrideHeadForwardU3Ek__BackingField_28() { return &___U3CoverrideHeadForwardU3Ek__BackingField_28; }
	inline void set_U3CoverrideHeadForwardU3Ek__BackingField_28(Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  value)
	{
		___U3CoverrideHeadForwardU3Ek__BackingField_28 = value;
	}

	inline static int32_t get_offset_of_latestEyeTrackingUpdate_33() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___latestEyeTrackingUpdate_33)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_latestEyeTrackingUpdate_33() const { return ___latestEyeTrackingUpdate_33; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_latestEyeTrackingUpdate_33() { return &___latestEyeTrackingUpdate_33; }
	inline void set_latestEyeTrackingUpdate_33(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___latestEyeTrackingUpdate_33 = value;
	}

	inline static int32_t get_offset_of_U3CIsEyeCalibrationValidU3Ek__BackingField_35() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CIsEyeCalibrationValidU3Ek__BackingField_35)); }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  get_U3CIsEyeCalibrationValidU3Ek__BackingField_35() const { return ___U3CIsEyeCalibrationValidU3Ek__BackingField_35; }
	inline Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * get_address_of_U3CIsEyeCalibrationValidU3Ek__BackingField_35() { return &___U3CIsEyeCalibrationValidU3Ek__BackingField_35; }
	inline void set_U3CIsEyeCalibrationValidU3Ek__BackingField_35(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  value)
	{
		___U3CIsEyeCalibrationValidU3Ek__BackingField_35 = value;
	}

	inline static int32_t get_offset_of_U3CLatestEyeGazeU3Ek__BackingField_36() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CLatestEyeGazeU3Ek__BackingField_36)); }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  get_U3CLatestEyeGazeU3Ek__BackingField_36() const { return ___U3CLatestEyeGazeU3Ek__BackingField_36; }
	inline Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * get_address_of_U3CLatestEyeGazeU3Ek__BackingField_36() { return &___U3CLatestEyeGazeU3Ek__BackingField_36; }
	inline void set_U3CLatestEyeGazeU3Ek__BackingField_36(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  value)
	{
		___U3CLatestEyeGazeU3Ek__BackingField_36 = value;
	}

	inline static int32_t get_offset_of_U3CIsEyeTrackingEnabledU3Ek__BackingField_37() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CIsEyeTrackingEnabledU3Ek__BackingField_37)); }
	inline bool get_U3CIsEyeTrackingEnabledU3Ek__BackingField_37() const { return ___U3CIsEyeTrackingEnabledU3Ek__BackingField_37; }
	inline bool* get_address_of_U3CIsEyeTrackingEnabledU3Ek__BackingField_37() { return &___U3CIsEyeTrackingEnabledU3Ek__BackingField_37; }
	inline void set_U3CIsEyeTrackingEnabledU3Ek__BackingField_37(bool value)
	{
		___U3CIsEyeTrackingEnabledU3Ek__BackingField_37 = value;
	}

	inline static int32_t get_offset_of_U3CTimestampU3Ek__BackingField_38() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CTimestampU3Ek__BackingField_38)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CTimestampU3Ek__BackingField_38() const { return ___U3CTimestampU3Ek__BackingField_38; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CTimestampU3Ek__BackingField_38() { return &___U3CTimestampU3Ek__BackingField_38; }
	inline void set_U3CTimestampU3Ek__BackingField_38(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CTimestampU3Ek__BackingField_38 = value;
	}

	inline static int32_t get_offset_of_U3CUseHeadGazeOverrideU3Ek__BackingField_39() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA, ___U3CUseHeadGazeOverrideU3Ek__BackingField_39)); }
	inline bool get_U3CUseHeadGazeOverrideU3Ek__BackingField_39() const { return ___U3CUseHeadGazeOverrideU3Ek__BackingField_39; }
	inline bool* get_address_of_U3CUseHeadGazeOverrideU3Ek__BackingField_39() { return &___U3CUseHeadGazeOverrideU3Ek__BackingField_39; }
	inline void set_U3CUseHeadGazeOverrideU3Ek__BackingField_39(bool value)
	{
		___U3CUseHeadGazeOverrideU3Ek__BackingField_39 = value;
	}
};

struct GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeProvider::UpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdatePerfMarker_29;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeProvider::LateUpdatePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___LateUpdatePerfMarker_30;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeProvider::InitializeGazePointerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___InitializeGazePointerPerfMarker_31;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.GazeProvider::RaiseSourceDetectedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaiseSourceDetectedPerfMarker_32;
	// System.Single Microsoft.MixedReality.Toolkit.Input.GazeProvider::maxEyeTrackingTimeoutInSeconds
	float ___maxEyeTrackingTimeoutInSeconds_34;

public:
	inline static int32_t get_offset_of_UpdatePerfMarker_29() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields, ___UpdatePerfMarker_29)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdatePerfMarker_29() const { return ___UpdatePerfMarker_29; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdatePerfMarker_29() { return &___UpdatePerfMarker_29; }
	inline void set_UpdatePerfMarker_29(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdatePerfMarker_29 = value;
	}

	inline static int32_t get_offset_of_LateUpdatePerfMarker_30() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields, ___LateUpdatePerfMarker_30)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_LateUpdatePerfMarker_30() const { return ___LateUpdatePerfMarker_30; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_LateUpdatePerfMarker_30() { return &___LateUpdatePerfMarker_30; }
	inline void set_LateUpdatePerfMarker_30(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___LateUpdatePerfMarker_30 = value;
	}

	inline static int32_t get_offset_of_InitializeGazePointerPerfMarker_31() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields, ___InitializeGazePointerPerfMarker_31)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_InitializeGazePointerPerfMarker_31() const { return ___InitializeGazePointerPerfMarker_31; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_InitializeGazePointerPerfMarker_31() { return &___InitializeGazePointerPerfMarker_31; }
	inline void set_InitializeGazePointerPerfMarker_31(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___InitializeGazePointerPerfMarker_31 = value;
	}

	inline static int32_t get_offset_of_RaiseSourceDetectedPerfMarker_32() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields, ___RaiseSourceDetectedPerfMarker_32)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaiseSourceDetectedPerfMarker_32() const { return ___RaiseSourceDetectedPerfMarker_32; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaiseSourceDetectedPerfMarker_32() { return &___RaiseSourceDetectedPerfMarker_32; }
	inline void set_RaiseSourceDetectedPerfMarker_32(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaiseSourceDetectedPerfMarker_32 = value;
	}

	inline static int32_t get_offset_of_maxEyeTrackingTimeoutInSeconds_34() { return static_cast<int32_t>(offsetof(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields, ___maxEyeTrackingTimeoutInSeconds_34)); }
	inline float get_maxEyeTrackingTimeoutInSeconds_34() const { return ___maxEyeTrackingTimeoutInSeconds_34; }
	inline float* get_address_of_maxEyeTrackingTimeoutInSeconds_34() { return &___maxEyeTrackingTimeoutInSeconds_34; }
	inline void set_maxEyeTrackingTimeoutInSeconds_34(float value)
	{
		___maxEyeTrackingTimeoutInSeconds_34 = value;
	}
};


// UnityEngine.EventSystems.BaseRaycaster
struct BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966  : public UIBehaviour_t3C3C339CD5677BA7FC27C352FED8B78052A3FE70
{
public:
	// UnityEngine.EventSystems.BaseRaycaster UnityEngine.EventSystems.BaseRaycaster::m_RootRaycaster
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___m_RootRaycaster_4;

public:
	inline static int32_t get_offset_of_m_RootRaycaster_4() { return static_cast<int32_t>(offsetof(BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966, ___m_RootRaycaster_4)); }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * get_m_RootRaycaster_4() const { return ___m_RootRaycaster_4; }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 ** get_address_of_m_RootRaycaster_4() { return &___m_RootRaycaster_4; }
	inline void set_m_RootRaycaster_4(BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * value)
	{
		___m_RootRaycaster_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_RootRaycaster_4), (void*)value);
	}
};


// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77  : public UIBehaviour_t3C3C339CD5677BA7FC27C352FED8B78052A3FE70
{
public:
	// System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseInputModule> UnityEngine.EventSystems.EventSystem::m_SystemInputModules
	List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 * ___m_SystemInputModules_4;
	// UnityEngine.EventSystems.BaseInputModule UnityEngine.EventSystems.EventSystem::m_CurrentInputModule
	BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 * ___m_CurrentInputModule_5;
	// UnityEngine.GameObject UnityEngine.EventSystems.EventSystem::m_FirstSelected
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_FirstSelected_7;
	// System.Boolean UnityEngine.EventSystems.EventSystem::m_sendNavigationEvents
	bool ___m_sendNavigationEvents_8;
	// System.Int32 UnityEngine.EventSystems.EventSystem::m_DragThreshold
	int32_t ___m_DragThreshold_9;
	// UnityEngine.GameObject UnityEngine.EventSystems.EventSystem::m_CurrentSelected
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_CurrentSelected_10;
	// System.Boolean UnityEngine.EventSystems.EventSystem::m_HasFocus
	bool ___m_HasFocus_11;
	// System.Boolean UnityEngine.EventSystems.EventSystem::m_SelectionGuard
	bool ___m_SelectionGuard_12;
	// UnityEngine.EventSystems.BaseEventData UnityEngine.EventSystems.EventSystem::m_DummyData
	BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 * ___m_DummyData_13;

public:
	inline static int32_t get_offset_of_m_SystemInputModules_4() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_SystemInputModules_4)); }
	inline List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 * get_m_SystemInputModules_4() const { return ___m_SystemInputModules_4; }
	inline List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 ** get_address_of_m_SystemInputModules_4() { return &___m_SystemInputModules_4; }
	inline void set_m_SystemInputModules_4(List_1_t4FB5BF302DAD74D690156A022C4FA4D4081E9B26 * value)
	{
		___m_SystemInputModules_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_SystemInputModules_4), (void*)value);
	}

	inline static int32_t get_offset_of_m_CurrentInputModule_5() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_CurrentInputModule_5)); }
	inline BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 * get_m_CurrentInputModule_5() const { return ___m_CurrentInputModule_5; }
	inline BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 ** get_address_of_m_CurrentInputModule_5() { return &___m_CurrentInputModule_5; }
	inline void set_m_CurrentInputModule_5(BaseInputModule_t904837FCFA79B6C3CED862FF85C9C5F8D6F32939 * value)
	{
		___m_CurrentInputModule_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_CurrentInputModule_5), (void*)value);
	}

	inline static int32_t get_offset_of_m_FirstSelected_7() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_FirstSelected_7)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_FirstSelected_7() const { return ___m_FirstSelected_7; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_FirstSelected_7() { return &___m_FirstSelected_7; }
	inline void set_m_FirstSelected_7(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_FirstSelected_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_FirstSelected_7), (void*)value);
	}

	inline static int32_t get_offset_of_m_sendNavigationEvents_8() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_sendNavigationEvents_8)); }
	inline bool get_m_sendNavigationEvents_8() const { return ___m_sendNavigationEvents_8; }
	inline bool* get_address_of_m_sendNavigationEvents_8() { return &___m_sendNavigationEvents_8; }
	inline void set_m_sendNavigationEvents_8(bool value)
	{
		___m_sendNavigationEvents_8 = value;
	}

	inline static int32_t get_offset_of_m_DragThreshold_9() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_DragThreshold_9)); }
	inline int32_t get_m_DragThreshold_9() const { return ___m_DragThreshold_9; }
	inline int32_t* get_address_of_m_DragThreshold_9() { return &___m_DragThreshold_9; }
	inline void set_m_DragThreshold_9(int32_t value)
	{
		___m_DragThreshold_9 = value;
	}

	inline static int32_t get_offset_of_m_CurrentSelected_10() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_CurrentSelected_10)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_CurrentSelected_10() const { return ___m_CurrentSelected_10; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_CurrentSelected_10() { return &___m_CurrentSelected_10; }
	inline void set_m_CurrentSelected_10(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_CurrentSelected_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_CurrentSelected_10), (void*)value);
	}

	inline static int32_t get_offset_of_m_HasFocus_11() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_HasFocus_11)); }
	inline bool get_m_HasFocus_11() const { return ___m_HasFocus_11; }
	inline bool* get_address_of_m_HasFocus_11() { return &___m_HasFocus_11; }
	inline void set_m_HasFocus_11(bool value)
	{
		___m_HasFocus_11 = value;
	}

	inline static int32_t get_offset_of_m_SelectionGuard_12() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_SelectionGuard_12)); }
	inline bool get_m_SelectionGuard_12() const { return ___m_SelectionGuard_12; }
	inline bool* get_address_of_m_SelectionGuard_12() { return &___m_SelectionGuard_12; }
	inline void set_m_SelectionGuard_12(bool value)
	{
		___m_SelectionGuard_12 = value;
	}

	inline static int32_t get_offset_of_m_DummyData_13() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77, ___m_DummyData_13)); }
	inline BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 * get_m_DummyData_13() const { return ___m_DummyData_13; }
	inline BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 ** get_address_of_m_DummyData_13() { return &___m_DummyData_13; }
	inline void set_m_DummyData_13(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5 * value)
	{
		___m_DummyData_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_DummyData_13), (void*)value);
	}
};

struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_StaticFields
{
public:
	// System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> UnityEngine.EventSystems.EventSystem::m_EventSystems
	List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B * ___m_EventSystems_6;
	// System.Comparison`1<UnityEngine.EventSystems.RaycastResult> UnityEngine.EventSystems.EventSystem::s_RaycastComparer
	Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 * ___s_RaycastComparer_14;

public:
	inline static int32_t get_offset_of_m_EventSystems_6() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_StaticFields, ___m_EventSystems_6)); }
	inline List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B * get_m_EventSystems_6() const { return ___m_EventSystems_6; }
	inline List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B ** get_address_of_m_EventSystems_6() { return &___m_EventSystems_6; }
	inline void set_m_EventSystems_6(List_1_t882412D5BE0B5BFC1900366319F8B2EB544BDD8B * value)
	{
		___m_EventSystems_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystems_6), (void*)value);
	}

	inline static int32_t get_offset_of_s_RaycastComparer_14() { return static_cast<int32_t>(offsetof(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_StaticFields, ___s_RaycastComparer_14)); }
	inline Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 * get_s_RaycastComparer_14() const { return ___s_RaycastComparer_14; }
	inline Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 ** get_address_of_s_RaycastComparer_14() { return &___s_RaycastComparer_14; }
	inline void set_s_RaycastComparer_14(Comparison_1_t32541D3F4C935BBA3800256BD21A7CA8148AAC13 * value)
	{
		___s_RaycastComparer_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_RaycastComparer_14), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider
struct ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B  : public GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA
{
public:
	// Microsoft.MixedReality.Toolkit.Input.GazeConePointer Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::coneCastPointer
	GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * ___coneCastPointer_40;

public:
	inline static int32_t get_offset_of_coneCastPointer_40() { return static_cast<int32_t>(offsetof(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B, ___coneCastPointer_40)); }
	inline GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * get_coneCastPointer_40() const { return ___coneCastPointer_40; }
	inline GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C ** get_address_of_coneCastPointer_40() { return &___coneCastPointer_40; }
	inline void set_coneCastPointer_40(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * value)
	{
		___coneCastPointer_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___coneCastPointer_40), (void*)value);
	}
};

struct ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::UpdateConeCastPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___UpdateConeCastPerfMarker_41;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::InitializeConeCastGazePointerPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___InitializeConeCastGazePointerPerfMarker_42;

public:
	inline static int32_t get_offset_of_UpdateConeCastPerfMarker_41() { return static_cast<int32_t>(offsetof(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_StaticFields, ___UpdateConeCastPerfMarker_41)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_UpdateConeCastPerfMarker_41() const { return ___UpdateConeCastPerfMarker_41; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_UpdateConeCastPerfMarker_41() { return &___UpdateConeCastPerfMarker_41; }
	inline void set_UpdateConeCastPerfMarker_41(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___UpdateConeCastPerfMarker_41 = value;
	}

	inline static int32_t get_offset_of_InitializeConeCastGazePointerPerfMarker_42() { return static_cast<int32_t>(offsetof(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_StaticFields, ___InitializeConeCastGazePointerPerfMarker_42)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_InitializeConeCastGazePointerPerfMarker_42() const { return ___InitializeConeCastGazePointerPerfMarker_42; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_InitializeConeCastGazePointerPerfMarker_42() { return &___InitializeConeCastGazePointerPerfMarker_42; }
	inline void set_InitializeConeCastGazePointerPerfMarker_42(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___InitializeConeCastGazePointerPerfMarker_42 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  m_Items[1];

public:
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  value)
	{
		m_Items[index] = value;
	}
};
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject * m_Items[1];

public:
	inline RuntimeObject * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Physics.RayStep[]
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  m_Items[1];

public:
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Collider[]
struct ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * m_Items[1];

public:
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// !!0 UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<System.Object>(!!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared (RuntimeObject * ___original0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m7A72E1813C14D0E707F0A81C100E6C5B49213421_gshared (Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.HashSet`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HashSet_1__ctor_m8A209D312FD08A21AFB5551881E7A6946A07C0D5_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Int32>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m56FBD260A4D190AD833E9B108B1E80A574AA62C4_gshared (Dictionary_2_t81923CE2A312318AE13F58085CCF7FA8D879B77A * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133  HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.HashSet`1/Enumerator<System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.HashSet`1/Enumerator<System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UnityObjectExtensions::IsNull<System.Object>(!!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool UnityObjectExtensions_IsNull_TisRuntimeObject_mD2F6B37868F585FE8D3722DF3B849F5F04EBBBB2_gshared (RuntimeObject * ___interface0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>::ContainsKey(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_ContainsKey_m93EC95B6E113BF7A1AD4504EDB8B9991D8DABAC0_gshared (Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * __this, uint32_t ___key0, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<System.Object>(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_m7F5F67863B4DA45FB04D1ABB199E68AAF461012A_gshared (Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * __this, uint32_t ___key0, RuntimeObject * ___value1, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/ValueCollection<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>::get_Values()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ValueCollection_tB0D951D8825080125748D3B14160B1FD5796E4A0 * Dictionary_2_get_Values_mD051A1F1F7F3C085AD759EA9FE65B671B12F4B28_gshared (Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420  ValueCollection_GetEnumerator_mDFB1D7F5AD30C0605781A4588667B65D7ED31A2A_gshared (ValueCollection_tB0D951D8825080125748D3B14160B1FD5796E4A0 * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m5785B4386ABCEABE4C63734D2F040B4F4B32F5FE_gshared_inline (Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m98088E728CC2ECF0A82D82EFEEA169C7986337B4_gshared (Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m0A39D73AE8BD497CC848353F4E6333B40B4855C1_gshared (Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_Remove_mE91B048168FFBF63795719698B994AD15AAE352A_gshared (Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * __this, uint32_t ___key0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>::TryGetValue(!0,!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_TryGetValue_m78FF033B17E99F71B4BAD5200899D3B2CDFC5E7E_gshared (Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * __this, uint32_t ___key0, RuntimeObject ** ___value1, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE  Dictionary_2_GetEnumerator_m1CEE590349F8FEFE6CC2FD6C6E0CDC04B0EE8083_gshared (Dictionary_2_t9D3330644BF8CBACB84AB5EA2438CFB219E5D4D7 * __this, const RuntimeMethod* method);
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,System.Object>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA  Enumerator_get_Current_mAF80A40C735286660705B10E845B3AAC25909E8B_gshared_inline (Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.UInt32,System.Object>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m29DE50BBCB38063E44E72BF1C0F4488DEEF6DACE_gshared_inline (KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m04F91EFB2C11DE1ED39627288DD2CF031EC8819F_gshared (Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m93691FBE2D1361459DE48F5C0D9F0A988A78D18E_gshared (Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE * __this, const RuntimeMethod* method);
// System.Void System.Array::Resize<System.Object>(!!0[]&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Array_Resize_TisRuntimeObject_m867A1BD65D179315E1C238CBD162DD91D0F362CC_gshared (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** ___array0, int32_t ___newSize1, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<System.Object>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.Dictionary`2<System.Object,System.Int32>::get_Count()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Dictionary_2_get_Count_m8ACFA67F7D08FCE7BA7985290060ACF1E962BCF4_gshared (Dictionary_2_t81923CE2A312318AE13F58085CCF7FA8D879B77A * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.HashSet`1<System.Object>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t HashSet_1_get_Count_m3199849B2D9664DC8C8F48BC9962FAE119ED2BCA_gshared_inline (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Int32>::TryGetValue(!0,!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_TryGetValue_mE7571EF8ACAF5941AF78909A00CD9CE5FB07C69C_gshared (Dictionary_2_t81923CE2A312318AE13F58085CCF7FA8D879B77A * __this, RuntimeObject * ___key0, int32_t* ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Int32>::set_Item(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_set_Item_mC87D8EECD8406043786CC95870458389CEF82CDF_gshared (Dictionary_2_t81923CE2A312318AE13F58085CCF7FA8D879B77A * __this, RuntimeObject * ___key0, int32_t ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,System.Int32>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_m786A1D72D4E499C0776742D3B2921F47E3A54545_gshared (Dictionary_2_t81923CE2A312318AE13F58085CCF7FA8D879B77A * __this, RuntimeObject * ___key0, int32_t ___value1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1<System.Object>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HashSet_1_Add_m91C02F120E47946E978515CDAF67DA4867A244C4_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,System.Int32>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_Remove_m53A3271E51DB23EFC5BD1A0A2E26154B4C41AB1E_gshared (Dictionary_2_t81923CE2A312318AE13F58085CCF7FA8D879B77A * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1<System.Object>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HashSet_1_Remove_m7682B86D551DE9273BDB73DD727BC7744F78B143_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<System.Object>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1<System.Object>::Contains(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool HashSet_1_Contains_m46AC83542050A403FDE1B6323623C4DDC36A83B8_gshared (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.UInt32>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_gshared (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, uint32_t ___value0, const RuntimeMethod* method);
// !0 System.Nullable`1<System.UInt32>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.UInt32>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Vector3>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<UnityEngine.Vector3>::get_Value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_gshared (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start<System.Object>(!!0&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncVoidMethodBuilder_Start_TisRuntimeObject_m8590BDB280C38FD9D41163DF39805FFA6EA8F508_gshared (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, RuntimeObject ** ___stateMachine0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UnityObjectExtensions::TryGetMonoBehaviour<System.Object>(!!0,UnityEngine.MonoBehaviour&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool UnityObjectExtensions_TryGetMonoBehaviour_TisRuntimeObject_m1D14AA95B6684EE4118C0C05780D760C0E0E32F3_gshared (RuntimeObject * ___interface0, MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 ** ___monoBehaviour1, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Boolean>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_mD3154885E88D449C69AD9DEA6F9A3EF66A3FE996_gshared (Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Vector3>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_gshared (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);

// System.Single System.Math::Max(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Math_Max_m545895C37C1F738BBB653CA1F65E50FF1D197675 (float ___val10, float ___val21, const RuntimeMethod* method);
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Collider::get_enabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Collider_get_enabled_mED644D98C6AC2DF95BD86145E8D31AD7081C76EB (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.GameObject::get_activeInHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::OnValidate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseNearInteractionTouchable_OnValidate_m2F4F9F345E5A37329D0AE4C61BE9A930075517A8 (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<UnityEngine.Collider>()
inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseNearInteractionTouchable__ctor_m906D52C2F36E74C9A9ECBA83AA2B8B891165CB8B (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource::.ctor(System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[],Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseGenericInputSource__ctor_m861EC906EFD25C15C32208C00224C9A27BE981A4 (BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * __this, String_t* ___name0, IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* ___pointers1, int32_t ___sourceType2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::SetGazeInputSourceParent(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_SetGazeInputSourceParent_m72265C17199D9270B95B38374F857639D7B9B956 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, RuntimeObject* ___gazeInputSource0, const RuntimeMethod* method);
// Unity.Profiling.ProfilerMarker/AutoScope Unity.Profiling.ProfilerMarker::Auto()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HitPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::get_white()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_get_white_mE7F3AC4FF0D6F35E48049C73116A222CBE96D905 (const RuntimeMethod* method);
// System.Void UnityEngine.Debug::DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___start0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___dir1, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___color2, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GenericPointer::get_IsInteractionEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GenericPointer_get_IsInteractionEnabled_m02A243BF531B7E0F9B85553ECCD71DE45F72D574 (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeCursor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GenericPointer::get_IsFocusLocked()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_IsEyeTrackingEnabledAndValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseGenericInputSource::set_SourceType(Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_inline (BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::Dispose()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Utilities.CameraCache::get_Main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554 (const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC (bool ___condition0, String_t* ___message1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::.ctor(Microsoft.MixedReality.Toolkit.Input.GazeProvider,System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,UnityEngine.LayerMask[],System.Single,UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer__ctor_m270823DB2FF610490BE62247CF56147B46102B42 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * ___gazeProvider0, String_t* ___pointerName1, RuntimeObject* ___inputSourceParent2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___raycastLayerMasks3, float ___pointerExtent4, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___gazeTransform5, BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * ___stabilizer6, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeCursorPrefab()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<UnityEngine.GameObject>(!!0)
inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___original0, const RuntimeMethod* method)
{
	return ((  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared)(___original0, method);
}
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.MixedRealityPlayspace::AddChild(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPlayspace_AddChild_mA137BA9496C5D73FC8DB4F4C2F3E7BD09BAAEBC4 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::SetGazeCursor(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursor0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_IsTargetPositionLockedOnFocusLock(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, bool ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_InputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_MixedRealityInputAction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::get_Handedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_RaisePointerUp_mF96B93AA2230A04BFF438008B44F0F2BCC44A038 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___mixedRealityInputAction0, uint8_t ___handedness1, RuntimeObject* ___inputSource2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::RaisePointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_RaisePointerDown_mBFCAE9B287737D84081DFAEFBBA10549F8A4E563 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___mixedRealityInputAction0, uint8_t ___handedness1, RuntimeObject* ___inputSource2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider__ctor_mDA5A7EFB135962393638C41C9C8C649052C897A6 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::.ctor(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultRaycastProvider__ctor_m1E2D60B855B7511FFA81C761F5F48720647AE987 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * ___profile0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseCoreSystem::set_Registrar(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4_inline (BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseCoreSystem::.ctor(Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseCoreSystem__ctor_mB3771B3FDEAEF480DAB5C41BE63F3FDFB7B5384E (BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41 * __this, BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8 * ___profile0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Length()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSimplePhysicsStep(Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Single,UnityEngine.LayerMask[],System.Boolean,UnityEngine.RaycastHit&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityRaycaster_RaycastSimplePhysicsStep_mBA9AACC9AA39AE0591D905C3E5B680CC6C90821D (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___step0, float ___maxDistance1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, bool ___focusIndividualCompoundCollider3, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * ___physicsHit4, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::.ctor(System.Boolean,UnityEngine.RaycastHit)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76 (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * __this, bool ___raycastValid0, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  ___hitInfo1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Physics.MixedRealityRaycaster::RaycastSpherePhysicsStep(Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Single,System.Single,UnityEngine.LayerMask[],System.Boolean,UnityEngine.RaycastHit&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityRaycaster_RaycastSpherePhysicsStep_mC7E070F8EF825C6DF19A5E5391E0943F0ECB18E9 (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___step0, float ___radius1, float ___maxDistance2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks3, bool ___focusIndividualCompoundCollider4, RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * ___physicsHit5, const RuntimeMethod* method);
// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.EventSystemExtensions::Raycast(UnityEngine.EventSystems.EventSystem,UnityEngine.EventSystems.PointerEventData,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Physics.RaycastResultComparer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  EventSystemExtensions_Raycast_m09A9AB17BE29D37A371B92C1CA12266DF6550704 (EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___pointerEventData1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___layerMasks2, RaycastResultComparer_tFDB19FD5F400C27FE7C68EF1CCF31999219D06F4 * ___raycastResultComparer3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider__ctor_mD790A96134FA953445022E2119A9B2FB744E38E8 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * ___profile0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::.ctor()
inline void Dictionary_2__ctor_m912F79447880600D11A564725B769143AF5A0EAF (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D *, const RuntimeMethod*))Dictionary_2__ctor_m7A72E1813C14D0E707F0A81C100E6C5B49213421_gshared)(__this, method);
}
// System.Void System.Collections.Generic.HashSet`1<UnityEngine.GameObject>::.ctor()
inline void HashSet_1__ctor_m6DB682240050817EFD1E83DE1C3B438C84DAFB3E (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * __this, const RuntimeMethod* method)
{
	((  void (*) (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E *, const RuntimeMethod*))HashSet_1__ctor_m8A209D312FD08A21AFB5551881E7A6946A07C0D5_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>::.ctor()
inline void Dictionary_2__ctor_m368526B69AAFA3973FA788DFF139A03F9F7053C3 (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D *, const RuntimeMethod*))Dictionary_2__ctor_m56FBD260A4D190AD833E9B108B1E80A574AA62C4_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::.ctor()
inline void List_1__ctor_m7D00E162503419278D6716197652DED64BC6B9B5 (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::.ctor()
inline void Dictionary_2__ctor_mA7941677D87F6A96D673628B50F034ABA0BEDF24 (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 *, const RuntimeMethod*))Dictionary_2__ctor_m7A72E1813C14D0E707F0A81C100E6C5B49213421_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazePointerVisibilityStateMachine__ctor_mED2D3E357198480D43ED1DF72387BE5FB23E9FE8 (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences>::.ctor()
inline void List_1__ctor_m2DF5FAD40A74490653EABB46965F84D82786B041 (List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::get_FocusQueryBufferSize()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSystemProfile_get_FocusQueryBufferSize_mC19C7694A8F9EE68E50019978AF84C16CEB15BF0_inline (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::get_FocusIndividualCompoundCollider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInputSystemProfile_get_FocusIndividualCompoundCollider_m5AEF580FAEAD3FB6C7A16A5B29E389A6D34EC12A (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::get_ShouldUseGraphicsRaycast()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityInputSystemProfile_get_ShouldUseGraphicsRaycast_m31028570E4260FDC2C3C83C3F45ABDC8D8A30B9F_inline (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_PrimaryPointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler::Invoke(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrimaryPointerChangedHandler_Invoke_m5D0470464C6D56240DC7DA1522B2194CBB22AC3F (PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * __this, RuntimeObject* ___oldPointer0, RuntimeObject* ___newPointer1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::get_PointerProfile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821 (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PointingExtent()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_inline (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method);
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PointingRaycastLayerMasks()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_inline (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method);
// UnityEngine.LayerMask UnityEngine.LayerMask::op_Implicit(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300 (int32_t ___intVal0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem Microsoft.MixedReality.Toolkit.CoreServices::get_InputSystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8 (const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mF4626905368D6558695A823466A1AF65EADB9923 (String_t* ___str00, String_t* ___str11, String_t* ___str22, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1 (Delegate_t * ___a0, Delegate_t * ___b1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D (Delegate_t * ___source0, Delegate_t * ___value1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_IsSetupValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_get_IsSetupValid_m7F95D3E11E9ECC6509FCFB6E17EDDD7CED7E0333 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseService::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseService_Initialize_mB5ABF716215A9D4E5204D4E3B9EDB034A2A6E618 (BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Application::get_isPlaying()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Application_get_isPlaying_mF43B519662E7433DD90D883E5AE22EC3CFB65CA5 (const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E (bool ___condition0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::FindOrCreateUiRaycastCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_FindOrCreateUiRaycastCamera_mD0CA5FF0E5333568489C8183A0CE8A57A404A81B (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PrimaryPointerSelector()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * MixedRealityPointerProfile_get_PrimaryPointerSelector_mC5A2B5DB8C7BE27A5F396208C3E6B3D8CE27AE05 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method);
// System.Type Microsoft.MixedReality.Toolkit.Utilities.SystemType::get_Type()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Type_t * SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CD_inline (SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * __this, const RuntimeMethod* method);
// System.Boolean System.Type::op_Inequality(System.Type,System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Type_op_Inequality_m615014191FB05FD50F63A24EB9A6CCA785E7CEC9 (Type_t * ___left0, Type_t * ___right1, const RuntimeMethod* method);
// System.Object System.Activator::CreateInstance(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Activator_CreateInstance_mD06EE47879F606317C6DA91FB63E678CABAC6A16 (Type_t * ___type0, const RuntimeMethod* method);
// System.Collections.Generic.HashSet`1/Enumerator<!0> System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::GetEnumerator()
inline Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE (HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  (*) (HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F *, const RuntimeMethod*))HashSet_1_GetEnumerator_m874F2BBF69C804D425AFCF30B376C9718AA298B5_gshared)(__this, method);
}
// !0 System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::get_Current()
inline RuntimeObject* Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_inline (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::RegisterPointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___inputSource0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::MoveNext()
inline bool Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327 (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_MoveNext_m3C52626EAD0998616A661D927B94DD52E67118D4_gshared)(__this, method);
}
// System.Void System.Collections.Generic.HashSet`1/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::Dispose()
inline void Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498 (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *, const RuntimeMethod*))Enumerator_Dispose_mE2BD5476A999119F49555D958386A0688E9C0C01_gshared)(__this, method);
}
// Microsoft.MixedReality.Toolkit.MixedRealityToolkit Microsoft.MixedReality.Toolkit.MixedRealityToolkit::get_Instance()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * MixedRealityToolkit_get_Instance_m02A5ECDA0A8291AA2EDDC518554EF3FAA470DBAD_inline (const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.MixedRealityToolkit::get_IsProfileSwitching()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityToolkit_get_IsProfileSwitching_m44955CADC688AC70630E3754EC62F872FE497BBE_inline (MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::CleanUpUiRaycastCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_CleanUpUiRaycastCamera_mF637B34A052A3AF7D3E1055D57FD51C9D1FFEE96 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseEventSystem::Destroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseEventSystem_Destroy_m7B3C5682C43FE55F078723094DB38FCEBF56674E (BaseEventSystem_t0D724E08B21A1E822BE73F1F7F29CA92B10AF9D2 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.BaseService::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseService_Update_mAE9EBAC35F456E318362A34CA0ED90722C6C6F42 (BaseService_t4603D47AD64FBAEF691CE4F2F2A6AF43967F8C10 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdatePointers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdatePointers_mE03F4EA01DE023EB9A38137D4C610A14B1848458 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdateGazeProvider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdateGazeProvider_m5078BC0824402EC6E6F351380BBB9FABDE8D0C5B (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdateFocusedObjects()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdateFocusedObjects_mAA837F83E07556828F8352D172227B4E3B44576F (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_PrimaryPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, const RuntimeMethod* method);
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_FocusLayerMasks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::QueryScene(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2 (RuntimeObject* ___pointer0, RuntimeObject* ___raycastProvider1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit3, int32_t ___maxQuerySceneResults4, bool ___focusIndividualCompoundCollider5, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::RaycastGraphics(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.EventSystems.PointerEventData,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___graphicEventData1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit3, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetPrioritizedHitResult(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,UnityEngine.LayerMask[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit10, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit21, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UnityObjectExtensions::IsNull<Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider>(!!0)
inline bool UnityObjectExtensions_IsNull_TisIMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_mC60A871C49437C248EDBA5927395D076BA6D6D20 (RuntimeObject* ___interface0, const RuntimeMethod* method)
{
	return ((  bool (*) (RuntimeObject*, const RuntimeMethod*))UnityObjectExtensions_IsNull_TisRuntimeObject_mD2F6B37868F585FE8D3722DF3B849F5F04EBBBB2_gshared)(___interface0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryGetFocusDetails(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Physics.FocusDetails&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_TryGetFocusDetails_mC7FF52211D4CEEC4728550739BBAD27AF81A6F42 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * ___focusDetails1, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Object()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryGetPointerData(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE ** ___data1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_Details()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_Details(Microsoft.MixedReality.Toolkit.Physics.FocusDetails)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_set_Details_mF09692341E4DA354F6FD1AE4E5531C820D862488 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  ___value0, const RuntimeMethod* method);
// System.Int32 UnityEngine.Random::Range(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Random_Range_mD0C8F37FF3CAB1D87AAA6C45130BD59626BD6780 (int32_t ___min0, int32_t ___max1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::ContainsKey(!0)
inline bool Dictionary_2_ContainsKey_m0F317286EE60E66B8B15D073968940599A9C569D (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * __this, uint32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D *, uint32_t, const RuntimeMethod*))Dictionary_2_ContainsKey_m93EC95B6E113BF7A1AD4504EDB8B9991D8DABAC0_gshared)(__this, ___key0, method);
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::GenerateNewPointerId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t FocusProvider_GenerateNewPointerId_m696F40A9164B56CE76F9621800CF789979DB17E2 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.GameObject::Find(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GameObject_Find_m1470FB04EB6DB15CCC0D9745B70EE987B318E9BD (String_t* ___name0, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_mA4DFA8F4471418C248E95B55070665EF344B4B2D (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Object::set_name(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, String_t* ___value0, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<UnityEngine.Camera>(UnityEngine.GameObject)
inline Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * ComponentExtensions_EnsureComponent_TisCamera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_m3E111EC6D639E9E4BA0D62A81AA6754E146C160F (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method)
{
	return ((  Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared)(___gameObject0, method);
}
// System.Void UnityEngine.Behaviour::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B (Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_clearFlags(UnityEngine.CameraClearFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_clearFlags_m805DFBD136AA3E1E46A2E61441965D174E87FE50 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Color::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Color__ctor_m20DF490CEB364C4FC36D7EE392640DF5B7420D7C (Color_t119BCA590009762C7223FDD3AF9706653AC84ED2 * __this, float ___r0, float ___g1, float ___b2, float ___a3, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_backgroundColor(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_backgroundColor_mDB9CA1B37FE2D52493823914AC5BC9F8C1935D6F (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___value0, const RuntimeMethod* method);
// System.Int32 UnityEngine.Camera::get_cullingMask()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Camera_get_cullingMask_m0992E96D87A4221E38746EBD882780CEFF7C2BCD (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_cullingMask(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_cullingMask_m215DB1C878CF1ADEEF6800AF449EEEA7680ECCCD (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_orthographic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_orthographic_mB2549D26F5E220102D7478EB4C15F8F12D96FE09 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_orthographicSize(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_orthographicSize_mF15F37A294A7AA2ADD9519728A495DFA0A836428 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_nearClipPlane(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_nearClipPlane_m9D81E50F8658C16319BEF3774E78B93DEB208C6B (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_farClipPlane(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_farClipPlane_m52986DC40B7F577255C4D5A4F780FD8A7D862626 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Rect::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rect__ctor_m50B92C75005C9C5A0D05E6E0EBB43AFAF7C66280 (Rect_t35B976DE901B5423C11705E156938EA27AB402CE * __this, float ___x0, float ___y1, float ___width2, float ___height3, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_rect(UnityEngine.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_rect_m6DB9964EA6E519E2B07561C8CE6AA423980FEC11 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, Rect_t35B976DE901B5423C11705E156938EA27AB402CE  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_depth(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_depth_m4A83CCCF7370B8AD4BDB2CD5528A6E12A409AE58 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, float ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_renderingPath(UnityEngine.RenderingPath)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_renderingPath_m0322DAAE0B2429DD235D4C231AB035A0E3E4CB5A (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_useOcclusionCulling(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_useOcclusionCulling_mC794B18E634F5A2DEDA36C76E685DB881B822C41 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_allowHDR(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_allowHDR_mD5460B086C328CE83D294D01C5EABA2B4BAF8E0E (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_allowMSAA(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_allowMSAA_m05738C02C8AAB5DF3718D1DBC52E0BF4CF54753E (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_allowDynamicResolution(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_allowDynamicResolution_mD5528265C2748EE3EC0A62C092E0D8F66AAF20E7 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_targetDisplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_targetDisplay_mE38B403C22D4109BB5935863C24EAD2710177696 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_stereoTargetEye(UnityEngine.StereoTargetEyeMask)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_stereoTargetEye_mE0ED5F289154FCD153D5F35A0F92EABE04B845EA (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.RenderTexture::.ctor(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RenderTexture__ctor_mB54A3ABBD56D38AB762D0AB8B789E2771BC42A7D (RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * __this, int32_t ___width0, int32_t ___height1, int32_t ___depth2, const RuntimeMethod* method);
// System.Void UnityEngine.Camera::set_targetTexture(UnityEngine.RenderTexture)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Camera_set_targetTexture_m9D0DCEFF0C5596CBBC6FA7EE206F196CB0A8997D (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Object::Destroy(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___obj0, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA (String_t* ___format0, RuntimeObject * ___arg01, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::IsPointerRegistered(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_IsPointerRegistered_mD63752FBB3A7A5774246446DEDAFC56F97EAF222 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData__ctor_mEB63D3D2EA4F60ED0BCA0ED9038347455AEEFD6B (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::Add(!0,!1)
inline void Dictionary_2_Add_m394FACA53A551ECFEDCC3562140D68BF1F48E4B4 (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * __this, uint32_t ___key0, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D *, uint32_t, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *, const RuntimeMethod*))Dictionary_2_Add_m7F5F67863B4DA45FB04D1ABB199E68AAF461012A_gshared)(__this, ___key0, ___value1, method);
}
// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile::get_PointerMediator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * MixedRealityPointerProfile_get_PointerMediator_m340B6C52AAE2B7A451FF0830720951701E65BAD9 (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method);
// System.Object System.Activator::CreateInstance(System.Type,System.Object[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Activator_CreateInstance_mEE50708E1E8AAD4E5021A2FFDB992DDF65727E17 (Type_t * ___type0, ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___args1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::ContainsKey(!0)
inline bool Dictionary_2_ContainsKey_m26ABD682E36BA03DAC1643C8B8C4B6403A41361E (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * __this, uint32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 *, uint32_t, const RuntimeMethod*))Dictionary_2_ContainsKey_m93EC95B6E113BF7A1AD4504EDB8B9991D8DABAC0_gshared)(__this, ___key0, method);
}
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::Add(!0,!1)
inline void Dictionary_2_Add_m18BD44DB699847006DEB20C3FCB000F4F95B3101 (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * __this, uint32_t ___key0, RuntimeObject* ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 *, uint32_t, RuntimeObject*, const RuntimeMethod*))Dictionary_2_Add_m7F5F67863B4DA45FB04D1ABB199E68AAF461012A_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::RegisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_RegisterPointer_m96FFC15B10A3BEBE21BF60B613706DA77A139574 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method);
// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.EventSystem::get_current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * EventSystem_get_current_m3151477735829089F66A3E46AD6DAB14CFDDE7BD (const RuntimeMethod* method);
// System.Void UnityEngine.EventSystems.PointerEventData::.ctor(UnityEngine.EventSystems.EventSystem)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerEventData__ctor_m121A903CE81C0758A49C721F7C1668362BFAE7E4 (PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * __this, EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_CurrentPointerTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/ValueCollection<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::get_Values()
inline ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * __this, const RuntimeMethod* method)
{
	return ((  ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * (*) (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D *, const RuntimeMethod*))Dictionary_2_get_Values_mD051A1F1F7F3C085AD759EA9FE65B671B12F4B28_gshared)(__this, method);
}
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::GetEnumerator()
inline Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB (ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  (*) (ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 *, const RuntimeMethod*))ValueCollection_GetEnumerator_mDFB1D7F5AD30C0605781A4588667B65D7ED31A2A_gshared)(__this, method);
}
// !1 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::get_Current()
inline PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_inline (Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 * __this, const RuntimeMethod* method)
{
	return ((  PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * (*) (Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *, const RuntimeMethod*))Enumerator_get_Current_m5785B4386ABCEABE4C63734D2F040B4F4B32F5FE_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::MoveNext()
inline bool Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514 (Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *, const RuntimeMethod*))Enumerator_MoveNext_m98088E728CC2ECF0A82D82EFEEA169C7986337B4_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::Dispose()
inline void Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC (Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *, const RuntimeMethod*))Enumerator_Dispose_m0A39D73AE8BD497CC848353F4E6333B40B4855C1_gshared)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::Remove(!0)
inline bool Dictionary_2_Remove_mE2192AEE6449DD7B81E5CEBE4D85048B74BE1FDB (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * __this, uint32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D *, uint32_t, const RuntimeMethod*))Dictionary_2_Remove_mE91B048168FFBF63795719698B994AD15AAE352A_gshared)(__this, ___key0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::add_PrimaryPointerChanged(Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_add_PrimaryPointerChanged_mDE374491D0C26A60108DF9A055DECF31A5FD80D3 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::remove_PrimaryPointerChanged(Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_remove_PrimaryPointerChanged_m6A1A89E933DC765374BE0DD838BBD23E282685E9 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * ___value0, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_m2B16E36786DE77E74CA69B7E95F8A0F2932D40C0 (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * __this, uint32_t ___key0, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE ** ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D *, uint32_t, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE **, const RuntimeMethod*))Dictionary_2_TryGetValue_m78FF033B17E99F71B4BAD5200899D3B2CDFC5E7E_gshared)(__this, ___key0, ___value1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::ReconcilePointers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_ReconcilePointers_m8F15E83551BFB79B3ECD332EFA9BE437CC214E31 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::GetEnumerator()
inline Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C  Dictionary_2_GetEnumerator_mDDAD3CB1078A489FD43DD5A00BF489D874A0861B (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C  (*) (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 *, const RuntimeMethod*))Dictionary_2_GetEnumerator_m1CEE590349F8FEFE6CC2FD6C6E0CDC04B0EE8083_gshared)(__this, method);
}
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::get_Current()
inline KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7  Enumerator_get_Current_m442847DC7C76FD5F44910204F805D833E7CC90AD_inline (Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C * __this, const RuntimeMethod* method)
{
	return ((  KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7  (*) (Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C *, const RuntimeMethod*))Enumerator_get_Current_mAF80A40C735286660705B10E845B3AAC25909E8B_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::get_Value()
inline RuntimeObject* KeyValuePair_2_get_Value_mCCC2E8126391D8C614D82A09ADC3D5DA731ECC47_inline (KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7 * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7 *, const RuntimeMethod*))KeyValuePair_2_get_Value_m29DE50BBCB38063E44E72BF1C0F4488DEEF6DACE_gshared_inline)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::MoveNext()
inline bool Enumerator_MoveNext_m6EE95D7726D441076D476262B63BDB585B6A4428 (Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C *, const RuntimeMethod*))Enumerator_MoveNext_m04F91EFB2C11DE1ED39627288DD2CF031EC8819F_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::Dispose()
inline void Enumerator_Dispose_m9C9F25BC4E2669565B458C2C0E9CD6018B09A07E (Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C *, const RuntimeMethod*))Enumerator_Dispose_m93691FBE2D1361459DE48F5C0D9F0A988A78D18E_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdatePointer(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdatePointer_mDBB311C1FFC08015653C67F756472A7B529C2D8C (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * ___pointerData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::ResetFocusedObjects(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_ResetFocusedObjects_mED45382832E357CDD75BD1EAFCC27A68EC42C94A (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, bool ___clearPreviousObject0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_IsCurrentPointerTargetInvalid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_get_IsCurrentPointerTargetInvalid_m6A43C3957C1492BDC44A14CEE75C732B84DA376D (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::UpdateFocusLockedHit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_UpdateFocusLockedHit_m6FAA710DAC97452D71D91E04A808381BAD7A93EA (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method);
// UnityEngine.EventSystems.PointerEventData Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_GraphicEventData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.GameObject::get_layer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::TruncatePointerRayToHit(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::UpdateHit(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_UpdateHit_m212567FA45D65F83369E24C7B50CA30ED5020DCB (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hitResult0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Origin()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.RayStep::UpdateRayStep(UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___origin0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___terminus1, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.LayerExtensions::FindLayerListIndex(System.Int32,UnityEngine.LayerMask[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t LayerExtensions_FindLayerListIndex_m51F6EF70174B494C79470C9DC1E73F773141CEED (int32_t ___layer0, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___layerMasks1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_NumFarPointersActive(System.Int32)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_NumNearPointersActive(System.Int32)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UnityObjectExtensions::IsNull<Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer>(!!0)
inline bool UnityObjectExtensions_IsNull_TisIMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_m02E1C7B6423ABE0D2CC91810B9FD44204F54C8A2 (RuntimeObject* ___interface0, const RuntimeMethod* method)
{
	return ((  bool (*) (RuntimeObject*, const RuntimeMethod*))UnityObjectExtensions_IsNull_TisRuntimeObject_mD2F6B37868F585FE8D3722DF3B849F5F04EBBBB2_gshared)(___interface0, method);
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_NumNearPointersActive()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_NumFarPointersActive()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::get_IsGazePointerActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9 (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::UpdateState(System.Int32,System.Int32,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazePointerVisibilityStateMachine_UpdateState_m315458336BABBC8B925C821FCAAB66CA4488BA14 (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, int32_t ___numNearPointersActive0, int32_t ___numFarPointersActive1, int32_t ___numFarPointersWithoutCursorActive2, bool ___isEyeGazeValid3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_IsInteractionEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericPointer_set_IsInteractionEnabled_m7936A27B1F947E612A07F1A8949874B3D861787A (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::QuerySceneWithPointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityQueryablePointer,Microsoft.MixedReality.Toolkit.Physics.RayStep[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_QuerySceneWithPointers_mDD8CE9D22166D890B1AE8458756C8B774369E853 (RuntimeObject* ___queryPointer0, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___pointerRays1, RuntimeObject* ___raycastProvider2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks3, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit4, int32_t ___maxQuerySceneResults5, bool ___focusIndividualCompoundCollider6, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::QuerySceneInternal(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Physics.RayStep[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_QuerySceneInternal_mC2F2A339551DEF0A73A5F91AA6E8C84B3691C627 (RuntimeObject* ___pointer0, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___pointerRays1, RuntimeObject* ___raycastProvider2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks3, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit4, int32_t ___maxQuerySceneResults5, bool ___focusIndividualCompoundCollider6, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Set(Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit,Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Int32,System.Single,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___hit0, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___ray1, int32_t ___rayStepIndex2, float ___rayDistance3, bool ___focusIndividualCompoundCollider4, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogWarning(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568 (RuntimeObject * ___message0, const RuntimeMethod* method);
// UnityEngine.Vector4 UnityEngine.Vector4::op_Implicit(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  Vector4_op_Implicit_m5BFA8D95F88CB2AEA6E02B200A61B718314A8495 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___v0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Set(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Vector4,Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___hitObject0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitPointOnObject1, Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___hitNormalOnObject2, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___ray3, int32_t ___rayStepIndex4, float ___rayDistance5, const RuntimeMethod* method);
// System.String System.String::Format(System.String,System.Object,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A (String_t* ___format0, RuntimeObject * ___arg01, RuntimeObject * ___arg12, const RuntimeMethod* method);
// System.Void System.Array::Resize<UnityEngine.Collider>(!!0[]&,System.Int32)
inline void Array_Resize_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_mAC98FE438E7404FFE4CF7ABB9B33B126D970ADB5 (ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252** ___array0, int32_t ___newSize1, const RuntimeMethod* method)
{
	((  void (*) (ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252**, int32_t, const RuntimeMethod*))Array_Resize_TisRuntimeObject_m867A1BD65D179315E1C238CBD162DD91D0F362CC_gshared)(___array0, ___newSize1, method);
}
// System.Int32 UnityEngine.LayerMask::op_Implicit(UnityEngine.LayerMask)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t LayerMask_op_Implicit_m2AFFC7F931005437E8F356C953F439829AF4CFA5 (LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___mask0, const RuntimeMethod* method);
// System.Int32 UnityEngine.Physics::OverlapSphereNonAlloc(UnityEngine.Vector3,System.Single,UnityEngine.Collider[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Physics_OverlapSphereNonAlloc_mDC000E583161ABC0E2600518D97E2663EFBF1400 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, float ___radius1, ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* ___results2, int32_t ___layerMask3, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable>()
inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Collider::ClosestPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Collider_ClosestPoint_mA3CF53B6EE9CEEDB3BF2BCCE19E511CA659672B7 (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_sqrMagnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_sqrMagnitude_m1C6E190B4A933A183B308736DEC0DD64B0588968 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_UIRaycastCamera()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Camera::get_nearClipPlane()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Camera_get_nearClipPlane_mD9D3E3D27186BBAC2CC354CE3609E6118A5BF66C (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::RaycastGraphicsStep(UnityEngine.EventSystems.PointerEventData,Microsoft.MixedReality.Toolkit.Physics.RayStep,UnityEngine.LayerMask[],UnityEngine.EventSystems.RaycastResult&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_RaycastGraphicsStep_mA63D7EA8576A77A471642A3ED615A2BEDF050613 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___graphicEventData0, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___step1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * ___uiRaycastResult3, const RuntimeMethod* method);
// System.Boolean UnityEngine.EventSystems.RaycastResult::get_isValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool RaycastResult_get_isValid_m2F2241EF619EFFC0F609FAA35D4C64455712DE47 (RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Camera::ScreenToWorldPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Camera_ScreenToWorldPoint_m179BB999DC97A251D0892B39C98F3FACDF0617C5 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.EventSystems.RaycastResult::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * RaycastResult_get_gameObject_m9D77DEDFF498BAFE29A5F88E9F238400D04C8FDD (RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_UnaryNegation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Set(UnityEngine.EventSystems.RaycastResult,UnityEngine.Vector3,UnityEngine.Vector4,Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Set_m8A7D09DD40F6B3B582B9B541B1A0EB3EFBD75007 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___result0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitPointOnObject1, Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___hitNormalOnObject2, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___ray3, int32_t ___rayStepIndex4, float ___rayDistance5, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Direction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::LookRotation(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forward0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upwards1, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Int32 UnityEngine.Camera::get_pixelWidth()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Camera_get_pixelWidth_m67EC53853580E35527F32D6EA002FE21C234172E (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Camera::get_pixelHeight()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Camera_get_pixelHeight_m38879ACBA6B21C25E83AB07FA37A8E5EB7A51B05 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, float ___x0, float ___y1, const RuntimeMethod* method);
// System.Void UnityEngine.EventSystems.PointerEventData::set_position(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerEventData_set_position_m9BDCBF26C28C01F781ACB8FC87448CB4ADD0BBD5_inline (PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.EventSystems.PointerEventData::set_pointerCurrentRaycast(UnityEngine.EventSystems.RaycastResult)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerEventData_set_pointerCurrentRaycast_mA63CA749AC5410AF7D28F4C924BA3372E12F61FC_inline (PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * __this, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___value0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::get_Count()
inline int32_t List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_inline (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// System.Int32 System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>::get_Count()
inline int32_t Dictionary_2_get_Count_m021F96DD9C435F80DCE6226D69E73DB27935D86B (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D *, const RuntimeMethod*))Dictionary_2_get_Count_m8ACFA67F7D08FCE7BA7985290060ACF1E962BCF4_gshared)(__this, method);
}
// System.Int32 System.Collections.Generic.HashSet`1<UnityEngine.GameObject>::get_Count()
inline int32_t HashSet_1_get_Count_m14C7571C69F65285901AB0ECC9F47AAA31170CBF_inline (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E *, const RuntimeMethod*))HashSet_1_get_Count_m3199849B2D9664DC8C8F48BC9962FAE119ED2BCA_gshared_inline)(__this, method);
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_PreviousPointerTarget()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::Add(!0)
inline void List_1_Add_m99CC2297CB76E2597B79B8586B4CB7C941E7B89A (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * __this, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D *, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_mF177D51B543CBB936EDEA25816DCD84BCB7C277A (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___key0, int32_t* ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, int32_t*, const RuntimeMethod*))Dictionary_2_TryGetValue_mE7571EF8ACAF5941AF78909A00CD9CE5FB07C69C_gshared)(__this, ___key0, ___value1, method);
}
// System.Void System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>::set_Item(!0,!1)
inline void Dictionary_2_set_Item_m1FEE001AF4C735DD8484A19AB8A22AD0C1691225 (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___key0, int32_t ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, int32_t, const RuntimeMethod*))Dictionary_2_set_Item_mC87D8EECD8406043786CC95870458389CEF82CDF_gshared)(__this, ___key0, ___value1, method);
}
// System.Void System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>::Add(!0,!1)
inline void Dictionary_2_Add_m7DD01028342A7236D97768FA68FB892C076EB0E1 (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___key0, int32_t ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, int32_t, const RuntimeMethod*))Dictionary_2_Add_m786A1D72D4E499C0776742D3B2921F47E3A54545_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean System.Collections.Generic.HashSet`1<UnityEngine.GameObject>::Add(!0)
inline bool HashSet_1_Add_m683D71064E0E13E6835CF84CA743D8528E61B695 (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___item0, const RuntimeMethod* method)
{
	return ((  bool (*) (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))HashSet_1_Add_m91C02F120E47946E978515CDAF67DA4867A244C4_gshared)(__this, ___item0, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,System.Int32>::Remove(!0)
inline bool Dictionary_2_Remove_m3943E83168D0EA6E26E880A781C15902B23B848B (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))Dictionary_2_Remove_m53A3271E51DB23EFC5BD1A0A2E26154B4C41AB1E_gshared)(__this, ___key0, method);
}
// System.Boolean System.Collections.Generic.HashSet`1<UnityEngine.GameObject>::Remove(!0)
inline bool HashSet_1_Remove_m959CA76C6788170A88C252EF3809598CE4C8A847 (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___item0, const RuntimeMethod* method)
{
	return ((  bool (*) (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))HashSet_1_Remove_m7682B86D551DE9273BDB73DD727BC7744F78B143_gshared)(__this, ___item0, method);
}
// !0 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::get_Item(System.Int32)
inline PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * List_1_get_Item_mDF5BD58E49374DFC97242DEB16EC16F0CF17A710_inline (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * (*) (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D *, int32_t, const RuntimeMethod*))List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline)(__this, ___index0, method);
}
// System.Boolean System.Collections.Generic.HashSet`1<UnityEngine.GameObject>::Contains(!0)
inline bool HashSet_1_Contains_mCF3A1439E9FA729CCE16E11868395E30F3844229 (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___item0, const RuntimeMethod* method)
{
	return ((  bool (*) (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))HashSet_1_Contains_m46AC83542050A403FDE1B6323623C4DDC36A83B8_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData>::Clear()
inline void List_1_Clear_mFA5BD80EE1E2434CFD4954BB052090489038CF52 (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D *, const RuntimeMethod*))List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared)(__this, method);
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_SourceId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_m7F0D1B219279614C5BAE58B8A991A4369BE13E92 (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * __this, uint32_t ___key0, RuntimeObject** ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 *, uint32_t, RuntimeObject**, const RuntimeMethod*))Dictionary_2_TryGetValue_m78FF033B17E99F71B4BAD5200899D3B2CDFC5E7E_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator>::Remove(!0)
inline bool Dictionary_2_Remove_m8F84559E992C0C34492D2A0961ED7E2FED4EAD3A (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * __this, uint32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 *, uint32_t, const RuntimeMethod*))Dictionary_2_Remove_mE91B048168FFBF63795719698B994AD15AAE352A_gshared)(__this, ___key0, method);
}
// System.Void System.Nullable`1<System.UInt32>::.ctor(!0)
inline void Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, uint32_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, uint32_t, const RuntimeMethod*))Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_gshared)(__this, ___value0, method);
}
// !0 System.Nullable`1<System.UInt32>::GetValueOrDefault()
inline uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	return ((  uint32_t (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline)(__this, method);
}
// System.Boolean System.Nullable`1<System.UInt32>::get_HasValue()
inline bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *, const RuntimeMethod*))Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::UnregisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_UnregisterPointer_m58A22C294E07D6D209ECD47D063ACF6DCACBF5AA (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::OnSpeechKeywordRecognized(Microsoft.MixedReality.Toolkit.Input.SpeechEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazePointerVisibilityStateMachine_OnSpeechKeywordRecognized_mF32B08049E9F59365A300D646F2CFF49E7BECB0A (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * ___eventData0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_GazePointerBehavior()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method);
// System.Type System.Object::GetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60 (RuntimeObject * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetPointerBehavior(System.Type,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FocusProvider_GetPointerBehavior_mC409E0F24BB677E6BE05B04E9523B9A1AC9041DD (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, Type_t * ___type0, uint8_t ___handedness1, int32_t ___sourceType2, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences>::get_Item(System.Int32)
inline PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * List_1_get_Item_mB2A9AB24CB4B8E18AAAEE28CCD5347FDBF1A3A35_inline (List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * (*) (List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB *, int32_t, const RuntimeMethod*))List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline)(__this, ___index0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::Matches(System.Type,Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerPreferences_Matches_m928F429F57D6F6B8A8BD99661ED07DA5ADEF8035 (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, Type_t * ___queryType0, int32_t ___queryInputType1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::GetBehaviorForHandedness(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PointerPreferences_GetBehaviorForHandedness_m0FC3432ABBA91FD0C3502F3F8C8EED7B0774B92D (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, uint8_t ___h0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences>::get_Count()
inline int32_t List_1_get_Count_m72D83D81FB3C53817E45B7D1F4EB4AE50CAC0F81_inline (List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_PreviousPointerTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_Object(UnityEngine.GameObject)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_LastRaycastHit(Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_LastRaycastHit_mC83ADE39B36EFF37B4DD2CB65C307A2668CD6C6A_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_LastGraphicsRaycastResult(UnityEngine.EventSystems.RaycastResult)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_LastGraphicsRaycastResult_m13974D81605D43AF8D72A5A3B916F4FA937FD408_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_RayStepIndex(System.Int32)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_StartPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_RayDistance(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, float ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_Point(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_Normal(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.RayStep::get_Terminus()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Terminus_m8E84C6DCAB15719419C6F08450DDBDCD32EB1FCD_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Point()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::InverseTransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_PointLocalSpace(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Normal()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::InverseTransformDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_InverseTransformDirection_m6F0513F2EC19C204F2077E3C68DD1D45317CB5F2 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.FocusDetails::set_NormalLocalSpace(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_PointLocalSpace()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_NormalLocalSpace()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformDirection_m85FC1D7E1322E94F65DA59AEF3B1166850B183EF (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Physics.RayStep::Contains(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool RayStep_Contains_mE67CFFA25E74C8BF8A5F21AA73815E1F2AFC6D91 (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::Equals(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_Equals_mF811403FED4C02A999771AF453ACC93DA1A65D89 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * ___other0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector4::op_Implicit(UnityEngine.Vector4)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector4_op_Implicit_mEAB05A77FF8B3EE79C31499F0CF0A0D621A6496C (Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___v0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::Matches(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerPreferences_Matches_mCCF075326CB5F03D6868CDD6E02EA257A007FB7D (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, Type_t * ___queryType0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::.ctor(System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GenericPointer__ctor_mBCB9ECF1A0EFA7143892328F948985EDE9FA5DA7 (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, String_t* ___pointerName0, RuntimeObject* ___inputSourceParent1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_PrioritizedLayerMasksOverride(UnityEngine.LayerMask[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___value0, const RuntimeMethod* method);
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_LatestEyeGaze()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Ray::get_origin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187 (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Ray::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E (Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_UseHeadGazeOverride()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_overrideHeadPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<UnityEngine.Vector3>::get_HasValue()
inline bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, const RuntimeMethod*))Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline)(__this, method);
}
// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_overrideHeadForward()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<UnityEngine.Vector3>::get_Value()
inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9 (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	return ((  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, const RuntimeMethod*))Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.MixedRealityPlayspace::InverseTransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPlayspace_InverseTransformPoint_m454BFC64F823A342B54A6520B8B8F01BC611FDE3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.MixedRealityPlayspace::InverseTransformDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPlayspace_InverseTransformDirection_m25A34BA04FAA527011419A0B32AFB9DFE3090BDA (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldDirection0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.MixedRealityPlayspace::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPlayspace_TransformPoint_m0DB731A4C7C7B1B716BACC877D80EEC8BE5CD493 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___localPosition0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.MixedRealityPlayspace::TransformDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPlayspace_TransformDirection_m9A0E80985B969672AF851D515667817C24ECD2A4 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___localDirection0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.GenericPointer::get_Rays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* GenericPointer_get_Rays_m1E54223BF359DE3DE81C1E277A74C34309F88C9D_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Normalize(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Normalize_mDEA51D0C131125535DA2B49B7281E0086ED583DC (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.GenericPointer::get_PrioritizedLayerMasksOverride()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* GenericPointer_get_PrioritizedLayerMasksOverride_mD429394C41A6B8BC90262A853628C8910B59AB52_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, const RuntimeMethod* method);
// UnityEngine.RaycastHit Microsoft.MixedReality.Toolkit.Physics.ConeCastUtility::ConeCastBest(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.Single,UnityEngine.LayerMask,System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  ConeCastUtility_ConeCastBest_m4957EF18F53C161A7EF27496E5B5264737245206 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___origin0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction1, float ___maxRadius2, float ___maxDistance3, float ___coneAngle4, LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  ___layerMask5, float ___distanceWeight6, float ___angleWeight7, float ___distanceToCenterWeight8, float ___angleToCenterWeight9, const RuntimeMethod* method);
// UnityEngine.Collider UnityEngine.RaycastHit::get_collider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.RaycastHit::get_point()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RaycastHit_get_point_m0E564B2A72C7A744B889AE9D596F3EFA55059001 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.RaycastHit::get_distance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float RaycastHit_get_distance_m1CBA60855C35F29BBC348D374BBC76386A243543 (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_None()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_BaseCursor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_BaseCursor_m12C546412F2E84C09FEDD68427552AD2C775EC5C_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_IsActive(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_IsActive_m5B41E42C3E262AE6F0F8A562A065EA6A644A315D_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_IsFocusLocked(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_IsFocusLocked_m55F61AEAAFC3650E3B26C6B19CFFEA34FC03888E_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, bool ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.SpeechCommands Microsoft.MixedReality.Toolkit.Input.SpeechEventData::get_Command()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method);
// System.String Microsoft.MixedReality.Toolkit.Input.SpeechCommands::get_Keyword()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53 (SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B * __this, const RuntimeMethod* method);
// System.Boolean System.String::Equals(System.String,System.StringComparison)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_Equals_mB42D01789A129C548840C18E9065ACF9412F1F84 (String_t* __this, String_t* ___value0, int32_t ___comparisonType1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Behaviour::get_enabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Behaviour_get_enabled_mAA0C9ED5A3D1589C1C8AA22636543528DB353CFB (Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::SetGazeInputSourceParent(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InternalGazePointer_SetGazeInputSourceParent_m707074A81273E1577088FCB23D01193BBEF92A84 (InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * __this, RuntimeObject* ___gazeInputSource0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener_OnEnable_m6CA5222111D2EA860C0F38480674D00948767597 (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::RaiseSourceDetected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_RaiseSourceDetected_m86099E42089CD17E28713B8882A370154526096A (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CStartU3Ed__69__ctor_m0C891E72C97A5547625522F4B0EDD0593960C0A2 (U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC * __this, const RuntimeMethod* method);
// System.Runtime.CompilerServices.AsyncVoidMethodBuilder System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  AsyncVoidMethodBuilder_Create_m2EF884A75C3C230F0E6A63B1E23DC82F3B159130 (const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start<Microsoft.MixedReality.Toolkit.Input.GazeProvider/<Start>d__69>(!!0&)
inline void AsyncVoidMethodBuilder_Start_TisU3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC_mCF0205FB08F5B25182C21CA12E509B673EB0E5ED (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC ** ___stateMachine0, const RuntimeMethod* method)
{
	((  void (*) (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *, U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC **, const RuntimeMethod*))AsyncVoidMethodBuilder_Start_TisRuntimeObject_m8590BDB280C38FD9D41163DF39805FFA6EA8F508_gshared)(__this, ___stateMachine0, method);
}
// System.Single UnityEngine.Time::get_fixedDeltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_fixedDeltaTime_m76C241EDB6F824713AF57DCECD5765871770FA4C (const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HeadVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Division(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HeadVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::InverseLerp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_InverseLerp_m7054CDF25056E9B27D2467F91C95D628508F1F31 (float ___a0, float ___b1, float ___value2, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Clamp01(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Clamp01_m1E5F736941A7E6DC4DBCA88A1E38FE9FBFE0C42B (float ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Lerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, float ___t2, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HeadMovementDirection()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Slerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Slerp_mA40C2A3E6504A1F9D9BB238F3E238ADE997D1107 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, float ___t2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HeadMovementDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::get_red()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_get_red_m5562DD438931CF0D1FBBBB29BF7F8B752AF38957 (const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::get_green()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_get_green_mD53D8F980E92A0755759FBB2981E3DDEFCD084C0 (const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::Lerp(UnityEngine.Color,UnityEngine.Color,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_Lerp_mD37EF718F1BAC65A7416655F0BC902CE76559C46 (Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___a0, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___b1, float ___t2, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_DrawLine_mB6E9B16AF857C20116F7054ABAFC30B448E80FA2 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___start0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___end1, Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  ___color2, const RuntimeMethod* method);
// UnityEngine.Color UnityEngine.Color::get_yellow()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  Color_get_yellow_mC8BD62CCC364EA5FC4273D4C2E116D0E2DE135AE (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener_OnDisable_m73FB8CF4D56F72E3BEF936FCC5F25883AE90BDA5 (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UnityObjectExtensions::TryGetMonoBehaviour<Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor>(!!0,UnityEngine.MonoBehaviour&)
inline bool UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18 (RuntimeObject* ___interface0, MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 ** ___monoBehaviour1, const RuntimeMethod* method)
{
	return ((  bool (*) (RuntimeObject*, MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 **, const RuntimeMethod*))UnityObjectExtensions_TryGetMonoBehaviour_TisRuntimeObject_m1D14AA95B6684EE4118C0C05780D760C0E0E32F3_gshared)(___interface0, ___monoBehaviour1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InternalGazePointer_RaisePointerUp_m8D6B413319C69466C80235E341FCE3EA88FB519E (InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * __this, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___mixedRealityInputAction0, uint8_t ___handedness1, RuntimeObject* ___inputSource2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::RaisePointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InternalGazePointer_RaisePointerDown_mFC2D6EB28E48ABE59543829F0879D8BE943528EE (InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * __this, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___mixedRealityInputAction0, uint8_t ___handedness1, RuntimeObject* ___inputSource2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider/InternalGazePointer::.ctor(Microsoft.MixedReality.Toolkit.Input.GazeProvider,System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,UnityEngine.LayerMask[],System.Single,UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InternalGazePointer__ctor_mB0563C515A49907C1EB9E9FEA5A1E71B5680B79A (InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * __this, GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * ___gazeProvider0, String_t* ___pointerName1, RuntimeObject* ___inputSourceParent2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___raycastLayerMasks3, float ___pointerExtent4, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___gazeTransform5, BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * ___stabilizer6, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRaiseSourceDetectedU3Ed__83__ctor_mA557D7AC6FF02BD35203CA32D02AAA43AA3D913C (U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 * __this, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start<Microsoft.MixedReality.Toolkit.Input.GazeProvider/<RaiseSourceDetected>d__83>(!!0&)
inline void AsyncVoidMethodBuilder_Start_TisU3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1_m30B43EC395DAF36ED6BF21971BB32FDA0FDA194E (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 ** ___stateMachine0, const RuntimeMethod* method)
{
	((  void (*) (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *, U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 **, const RuntimeMethod*))AsyncVoidMethodBuilder_Start_TisRuntimeObject_m8590BDB280C38FD9D41163DF39805FFA6EA8F508_gshared)(__this, ___stateMachine0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HitInfo(Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___value0, const RuntimeMethod* method);
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Physics.RayStep::op_Implicit(Microsoft.MixedReality.Toolkit.Physics.RayStep)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  RayStep_op_Implicit_m0A5F02F80E996484E8BE6A3A8F76CCEB4B86BCDF (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___r0, const RuntimeMethod* method);
// System.DateTime System.DateTime::get_UtcNow()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1 (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::UpdateEyeGaze(Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeDataProvider,UnityEngine.Ray,System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_UpdateEyeGaze_mFF2D86BEF7A27FEB37C4476E685EC6BDAE4DC5DB (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, RuntimeObject* ___provider0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___eyeRay1, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___timestamp2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_GazeTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839 (float ___d0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HitPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HitNormal(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_parent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value0, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor>()
inline RuntimeObject* GameObject_GetComponent_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m96F21A23B24805F9F10AE4FB85A7F767DEE6DD2C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_IsEyeTrackingDataValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeProvider_get_IsEyeTrackingDataValid_mA1B6AA6538AC857C4D539C82DD6E5E2D13C15D50 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_IsEyeTrackingEnabled()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method);
// System.TimeSpan System.DateTime::op_Subtraction(System.DateTime,System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021 (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d10, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___d21, const RuntimeMethod* method);
// System.Double System.TimeSpan::get_TotalSeconds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA (TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_LatestEyeGaze(UnityEngine.Ray)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_Timestamp(System.DateTime)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Boolean>::.ctor(!0)
inline void Nullable_1__ctor_mD3154885E88D449C69AD9DEA6F9A3EF66A3FE996 (Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * __this, bool ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 *, bool, const RuntimeMethod*))Nullable_1__ctor_mD3154885E88D449C69AD9DEA6F9A3EF66A3FE996_gshared)(__this, ___value0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_IsEyeCalibrationValid(System.Nullable`1<System.Boolean>)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___value0, const RuntimeMethod* method);
// System.Void System.Nullable`1<UnityEngine.Vector3>::.ctor(!0)
inline void Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165 (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*))Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_gshared)(__this, ___value0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_overrideHeadPosition(System.Nullable`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_overrideHeadForward(System.Nullable`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener__ctor_m772E8CE6C735B09CA4990109CA6700A4C7EA86A3 (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputSystemGlobalHandlerListener_Start_m3F7B3567D47950736A655C05B9961B8C6C3EC60B (InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5 * __this, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker/AutoScope::.ctor(System.IntPtr)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_End(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A (intptr_t ___markerPtr0, const RuntimeMethod* method);
// System.IntPtr Unity.Profiling.ProfilerMarker::Internal_Create(System.String,System.UInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370 (String_t* ___name0, uint16_t ___flags1, const RuntimeMethod* method);
// System.Void System.ThrowHelper::ThrowArgumentOutOfRangeException()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550 (const RuntimeMethod* method);
// System.Void Unity.Profiling.ProfilerMarker::Internal_Begin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5 (intptr_t ___markerPtr0, const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.TouchableEventType Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::get_EventsToReceive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable_get_EventsToReceive_mD994A9266C1CCE25CC2512376A16CD775D3EC9FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 0));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1));
	{
		// public TouchableEventType EventsToReceive { get => eventsToReceive; set => eventsToReceive = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2));
		int32_t L_0 = __this->get_eventsToReceive_4();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::set_EventsToReceive(Microsoft.MixedReality.Toolkit.Input.TouchableEventType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseNearInteractionTouchable_set_EventsToReceive_mE15B76A78AFFBDF3F0371D4FE4EE2FEAD38369F1 (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable_set_EventsToReceive_mE15B76A78AFFBDF3F0371D4FE4EE2FEAD38369F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable_set_EventsToReceive_mE15B76A78AFFBDF3F0371D4FE4EE2FEAD38369F1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 4));
	{
		// public TouchableEventType EventsToReceive { get => eventsToReceive; set => eventsToReceive = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 5));
		int32_t L_0 = ___value0;
		__this->set_eventsToReceive_4(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::get_DebounceThreshold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9 (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable_get_DebounceThreshold_mCC8F9BD5EF5E2B282DC60628A21168DE913701F9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 6));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 7));
	{
		// public float DebounceThreshold { get => debounceThreshold; set => debounceThreshold = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 8));
		float L_0 = __this->get_debounceThreshold_5();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::set_DebounceThreshold(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseNearInteractionTouchable_set_DebounceThreshold_mE5701A5CEA4F9C911E002673CD606AEFFE17684F (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable_set_DebounceThreshold_mE5701A5CEA4F9C911E002673CD606AEFFE17684F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable_set_DebounceThreshold_mE5701A5CEA4F9C911E002673CD606AEFFE17684F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 9));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 10));
	{
		// public float DebounceThreshold { get => debounceThreshold; set => debounceThreshold = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 11));
		float L_0 = ___value0;
		__this->set_debounceThreshold_5(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::OnValidate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseNearInteractionTouchable_OnValidate_m2F4F9F345E5A37329D0AE4C61BE9A930075517A8 (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable_OnValidate_m2F4F9F345E5A37329D0AE4C61BE9A930075517A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable_OnValidate_m2F4F9F345E5A37329D0AE4C61BE9A930075517A8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 12));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 13));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 14));
		// debounceThreshold = Math.Max(debounceThreshold, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 15));
		float L_0 = __this->get_debounceThreshold_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 17));
		IL2CPP_RUNTIME_CLASS_INIT(Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var);
		float L_1 = Math_Max_m545895C37C1F738BBB653CA1F65E50FF1D197675(L_0, (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 17));
		__this->set_debounceThreshold_5(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 16));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseNearInteractionTouchable__ctor_m906D52C2F36E74C9A9ECBA83AA2B8B891165CB8B (BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseNearInteractionTouchable__ctor_m906D52C2F36E74C9A9ECBA83AA2B8B891165CB8B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseNearInteractionTouchable__ctor_m906D52C2F36E74C9A9ECBA83AA2B8B891165CB8B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 18));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 19));
	{
		// protected TouchableEventType eventsToReceive = TouchableEventType.Touch;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 20));
		__this->set_eventsToReceive_4(0);
		// protected float debounceThreshold = 0.01f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 21));
		__this->set_debounceThreshold_5((0.01f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 22));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 22));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.ColliderNearInteractionTouchable::get_ColliderEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ColliderNearInteractionTouchable_get_ColliderEnabled_mB5E2C860F9B2ADC762C263812C7737E1126164FF (ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ColliderNearInteractionTouchable_get_ColliderEnabled_mB5E2C860F9B2ADC762C263812C7737E1126164FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ColliderNearInteractionTouchable_get_ColliderEnabled_mB5E2C860F9B2ADC762C263812C7737E1126164FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 23));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 24));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 25));
		// public bool ColliderEnabled { get { return touchableCollider.enabled && touchableCollider.gameObject.activeInHierarchy; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 26));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = __this->get_touchableCollider_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 28));
		NullCheck(L_0);
		bool L_1 = Collider_get_enabled_mED644D98C6AC2DF95BD86145E8D31AD7081C76EB(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 28));
		if (!L_1)
		{
			goto IL_0020;
		}
	}
	{
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_2 = __this->get_touchableCollider_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 29));
		NullCheck(L_2);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 29));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 30));
		NullCheck(L_3);
		bool L_4 = GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 30));
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0021;
	}

IL_0020:
	{
		G_B3_0 = 0;
	}

IL_0021:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0024;
	}

IL_0024:
	{
		// public bool ColliderEnabled { get { return touchableCollider.enabled && touchableCollider.gameObject.activeInHierarchy; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 27));
		bool L_5 = V_0;
		return L_5;
	}
}
// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.ColliderNearInteractionTouchable::get_TouchableCollider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ColliderNearInteractionTouchable_get_TouchableCollider_m843BFDDB0B789C4CD8B88D5D3E65C480A7CA3C04 (ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ColliderNearInteractionTouchable_get_TouchableCollider_m843BFDDB0B789C4CD8B88D5D3E65C480A7CA3C04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ColliderNearInteractionTouchable_get_TouchableCollider_m843BFDDB0B789C4CD8B88D5D3E65C480A7CA3C04_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 31));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 32));
	{
		// public Collider TouchableCollider => touchableCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 33));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = __this->get_touchableCollider_6();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ColliderNearInteractionTouchable::OnValidate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ColliderNearInteractionTouchable_OnValidate_m0AE0EB2A0FF626C89BFAFF3F6CD019B5D57DB38F (ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ColliderNearInteractionTouchable_OnValidate_m0AE0EB2A0FF626C89BFAFF3F6CD019B5D57DB38F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ColliderNearInteractionTouchable_OnValidate_m0AE0EB2A0FF626C89BFAFF3F6CD019B5D57DB38F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 34));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 35));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 36));
		// base.OnValidate();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 37));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 40));
		BaseNearInteractionTouchable_OnValidate_m2F4F9F345E5A37329D0AE4C61BE9A930075517A8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 40));
		// touchableCollider = GetComponent<Collider>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 38));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 41));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6(__this, /*hidden argument*/Component_GetComponent_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_m6B8E8E0E0AF6B08652B81B7950FC5AF63EAD40C6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 41));
		__this->set_touchableCollider_6(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 39));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ColliderNearInteractionTouchable::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ColliderNearInteractionTouchable__ctor_m2A1511813F8161F6BED93070A58ACDCE899F00D3 (ColliderNearInteractionTouchable_tA44D7BA65C59C13BC3678D22051DCE0934E20571 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ColliderNearInteractionTouchable__ctor_m2A1511813F8161F6BED93070A58ACDCE899F00D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ColliderNearInteractionTouchable__ctor_m2A1511813F8161F6BED93070A58ACDCE899F00D3_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		BaseNearInteractionTouchable__ctor_m906D52C2F36E74C9A9ECBA83AA2B8B891165CB8B(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::get_GazePointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ConeCastGazeProvider_get_GazePointer_m6C2FCA5D93EAC9C05BDF44F2A72D55C9F73F3A6C (ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider_get_GazePointer_m6C2FCA5D93EAC9C05BDF44F2A72D55C9F73F3A6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider_get_GazePointer_m6C2FCA5D93EAC9C05BDF44F2A72D55C9F73F3A6C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 42));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 43));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		// public override IMixedRealityPointer GazePointer => coneCastPointer ?? InitializeGazePointer();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 44));
		GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_0 = __this->get_coneCastPointer_40();
		V_0 = L_0;
		RuntimeObject* L_1 = V_0;
		RuntimeObject* L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_0012;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 45));
		RuntimeObject* L_3 = VirtFuncInvoker0< RuntimeObject* >::Invoke(43 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::InitializeGazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 45));
		G_B2_0 = L_3;
	}

IL_0012:
	{
		return G_B2_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::get_GazeInputSource()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ConeCastGazeProvider_get_GazeInputSource_mC3DF1A8DDFE1CD7077D8FA73B191AA780CDE07B4 (ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider_get_GazeInputSource_mC3DF1A8DDFE1CD7077D8FA73B191AA780CDE07B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	RuntimeObject* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider_get_GazeInputSource_mC3DF1A8DDFE1CD7077D8FA73B191AA780CDE07B4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 46));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 47));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 48));
		// if (gazeInputSource == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 49));
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_0 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeInputSource_15();
		V_0 = (bool)((((RuntimeObject*)(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 50));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 51));
		// gazeInputSource = new BaseGenericInputSource("Gaze", sourceType: InputSourceType.Head);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 52));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 57));
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_2 = (BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 *)il2cpp_codegen_object_new(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899_il2cpp_TypeInfo_var);
		BaseGenericInputSource__ctor_m861EC906EFD25C15C32208C00224C9A27BE981A4(L_2, _stringLiteral2639467AD59E7AD40E38E8AD58D6F567684054D7, (IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)(IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)NULL, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 57));
		((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->set_gazeInputSource_15(L_2);
		// coneCastPointer.SetGazeInputSourceParent(gazeInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 53));
		GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_3 = __this->get_coneCastPointer_40();
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_4 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeInputSource_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 58));
		NullCheck(L_3);
		GazeConePointer_SetGazeInputSourceParent_m72265C17199D9270B95B38374F857639D7B9B956(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 58));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 54));
	}

IL_0034:
	{
		// return gazeInputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 55));
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_5 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeInputSource_15();
		V_1 = L_5;
		goto IL_003d;
	}

IL_003d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 56));
		RuntimeObject* L_6 = V_1;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConeCastGazeProvider_Update_m52E9A076A3631CCBC4B954E51687C7E167C4710D (ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider_Update_m52E9A076A3631CCBC4B954E51687C7E167C4710D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider_Update_m52E9A076A3631CCBC4B954E51687C7E167C4710D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 59));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 60));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	int32_t G_B12_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 61));
		// using (UpdateConeCastPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 62));
		IL2CPP_RUNTIME_CLASS_INIT(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_StaticFields*)il2cpp_codegen_static_fields_for(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_il2cpp_TypeInfo_var))->get_UpdateConeCastPerfMarker_41();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 85));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 85));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 63));
			// if (MixedRealityRaycaster.DebugEnabled && gazeTransform != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 64));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
			bool L_2 = ((MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var))->get_DebugEnabled_0();
			if (!L_2)
			{
				goto IL_0025;
			}
		}

IL_0017:
		{
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeTransform_12();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 86));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 86));
			G_B4_0 = ((int32_t)(L_4));
			goto IL_0026;
		}

IL_0025:
		{
			G_B4_0 = 0;
		}

IL_0026:
		{
			V_2 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 65));
			bool L_5 = V_2;
			if (!L_5)
			{
				goto IL_004e;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 66));
			// Debug.DrawRay(GazeOrigin, (HitPosition - GazeOrigin), Color.white);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 67));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 87));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 87));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 88));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 88));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 89));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 89));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 90));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_7, L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 90));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 91));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_10 = Color_get_white_mE7F3AC4FF0D6F35E48049C73116A222CBE96D905(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 91));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 92));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3(L_6, L_9, L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 92));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 68));
		}

IL_004e:
		{
			// if (setCursorInvisibleWhenFocusLocked && coneCastPointer != null &&
			//     coneCastPointer.IsInteractionEnabled && GazeCursor != null && coneCastPointer.IsFocusLocked == GazeCursor.IsVisible)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 69));
			bool L_11 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_setCursorInvisibleWhenFocusLocked_8();
			if (!L_11)
			{
				goto IL_008d;
			}
		}

IL_0056:
		{
			GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_12 = __this->get_coneCastPointer_40();
			if (!L_12)
			{
				goto IL_008d;
			}
		}

IL_005e:
		{
			GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_13 = __this->get_coneCastPointer_40();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 93));
			NullCheck(L_13);
			bool L_14 = GenericPointer_get_IsInteractionEnabled_m02A243BF531B7E0F9B85553ECCD71DE45F72D574(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 93));
			if (!L_14)
			{
				goto IL_008d;
			}
		}

IL_006b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 94));
			RuntimeObject* L_15 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 94));
			if (!L_15)
			{
				goto IL_008d;
			}
		}

IL_0073:
		{
			GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_16 = __this->get_coneCastPointer_40();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 95));
			NullCheck(L_16);
			bool L_17 = GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_inline(L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 95));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 96));
			RuntimeObject* L_18 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 96));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 97));
			NullCheck(L_18);
			bool L_19 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::get_IsVisible() */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 97));
			G_B12_0 = ((((int32_t)L_17) == ((int32_t)L_19))? 1 : 0);
			goto IL_008e;
		}

IL_008d:
		{
			G_B12_0 = 0;
		}

IL_008e:
		{
			V_3 = (bool)G_B12_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 70));
			bool L_20 = V_3;
			if (!L_20)
			{
				goto IL_00ae;
			}
		}

IL_0092:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 71));
			// GazeCursor.SetVisibility(!coneCastPointer.IsFocusLocked);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 72));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 98));
			RuntimeObject* L_21 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 98));
			GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_22 = __this->get_coneCastPointer_40();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 99));
			NullCheck(L_22);
			bool L_23 = GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_inline(L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 99));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 100));
			NullCheck(L_21);
			InterfaceActionInvoker1< bool >::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::SetVisibility(System.Boolean) */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_21, (bool)((((int32_t)L_23) == ((int32_t)0))? 1 : 0));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 100));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 73));
		}

IL_00ae:
		{
			// if (IsEyeTrackingEnabledAndValid)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 74));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 101));
			bool L_24 = GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 101));
			V_4 = L_24;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 75));
			bool L_25 = V_4;
			if (!L_25)
			{
				goto IL_00cb;
			}
		}

IL_00ba:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 76));
			// gazeInputSource.SourceType = InputSourceType.Eyes;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 77));
			BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_26 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeInputSource_15();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 102));
			NullCheck(L_26);
			BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_inline(L_26, 5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 102));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 78));
			goto IL_00da;
		}

IL_00cb:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 79));
			// gazeInputSource.SourceType = InputSourceType.Head;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 80));
			BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_27 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeInputSource_15();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 103));
			NullCheck(L_27);
			BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_inline(L_27, 4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 103));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 81));
		}

IL_00da:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 82));
			IL2CPP_LEAVE(0xEC, FINALLY_00dd);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00dd;
	}

FINALLY_00dd:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 83));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 104));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 104));
		IL2CPP_END_FINALLY(221)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(221)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xEC, IL_00ec)
	}

IL_00ec:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 84));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::InitializeGazePointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ConeCastGazeProvider_InitializeGazePointer_m22E2F7AE6B929FC2EECD51E314A8B5F87F68AA64 (ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider_InitializeGazePointer_m22E2F7AE6B929FC2EECD51E314A8B5F87F68AA64_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_4 = NULL;
	RuntimeObject* V_5 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider_InitializeGazePointer_m22E2F7AE6B929FC2EECD51E314A8B5F87F68AA64_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 106));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 107));
		// using (InitializeConeCastGazePointerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 108));
		IL2CPP_RUNTIME_CLASS_INIT(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_StaticFields*)il2cpp_codegen_static_fields_for(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_il2cpp_TypeInfo_var))->get_InitializeConeCastGazePointerPerfMarker_42();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 128));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 128));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 109));
			// if (gazeTransform == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 110));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeTransform_12();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 129));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 129));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 111));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_0032;
			}
		}

IL_0020:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 112));
			// gazeTransform = CameraCache.Main.transform;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 113));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 130));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_5 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 130));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 131));
			NullCheck(L_5);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 131));
			((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->set_gazeTransform_12(L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 114));
		}

IL_0032:
		{
			// Debug.Assert(gazeTransform != null, "No gaze transform to raycast from!");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 115));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeTransform_12();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 132));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_8 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_7, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 132));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 133));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_8, _stringLiteral5E21FDBF4EB092EFB59B08245853B3E5F13C3645, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 133));
			// coneCastPointer = new GazeConePointer(this, "Gaze Pointer", null, raycastLayerMasks, maxGazeCollisionDistance, gazeTransform, stabilizer);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 116));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_9 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_raycastLayerMasks_10();
			float L_10 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_maxGazeCollisionDistance_9();
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_gazeTransform_12();
			GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D * L_12 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_stabilizer_11();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 134));
			GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_13 = (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C *)il2cpp_codegen_object_new(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var);
			GazeConePointer__ctor_m270823DB2FF610490BE62247CF56147B46102B42(L_13, __this, _stringLiteral9462493F5F8F6760398CE1B00B9CE54DD7D17ED1, (RuntimeObject*)NULL, L_9, L_10, L_11, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 134));
			__this->set_coneCastPointer_40(L_13);
			// if ((GazeCursor == null) &&
			//     (GazeCursorPrefab != null))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 117));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 135));
			RuntimeObject* L_14 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 135));
			if (L_14)
			{
				goto IL_0089;
			}
		}

IL_007b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 136));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 136));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 137));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_16 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_15, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 137));
			G_B6_0 = ((int32_t)(L_16));
			goto IL_008a;
		}

IL_0089:
		{
			G_B6_0 = 0;
		}

IL_008a:
		{
			V_3 = (bool)G_B6_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 118));
			bool L_17 = V_3;
			if (!L_17)
			{
				goto IL_00b3;
			}
		}

IL_008e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 119));
			// GameObject cursor = Instantiate(GazeCursorPrefab);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 120));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 138));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_18 = GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 138));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 139));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90(L_18, /*hidden argument*/Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 139));
			V_4 = L_19;
			// MixedRealityPlayspace.AddChild(cursor.transform);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 121));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 140));
			NullCheck(L_20);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 140));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 141));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPlayspace_t26F34BB4D1D53C64B140AF101E96EB151A9770A4_il2cpp_TypeInfo_var);
			MixedRealityPlayspace_AddChild_mA137BA9496C5D73FC8DB4F4C2F3E7BD09BAAEBC4(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 141));
			// SetGazeCursor(cursor);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 122));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 142));
			GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C(__this, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 142));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 123));
		}

IL_00b3:
		{
			// coneCastPointer.IsTargetPositionLockedOnFocusLock = lockCursorWhenFocusLocked;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 124));
			GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_23 = __this->get_coneCastPointer_40();
			bool L_24 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA *)__this)->get_lockCursorWhenFocusLocked_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 143));
			NullCheck(L_23);
			GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5_inline(L_23, L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 143));
			// return coneCastPointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 125));
			GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_25 = __this->get_coneCastPointer_40();
			V_5 = L_25;
			IL2CPP_LEAVE(0xDE, FINALLY_00cf);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00cf;
	}

FINALLY_00cf:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 126));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 144));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 144));
		IL2CPP_END_FINALLY(207)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(207)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xDE, IL_00de)
	}

IL_00de:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 127));
		RuntimeObject* L_26 = V_5;
		return L_26;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::OnInputUp(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConeCastGazeProvider_OnInputUp_m901BF016975C91B814CAEF178474004F7A601436 (ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider_OnInputUp_m901BF016975C91B814CAEF178474004F7A601436_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider_OnInputUp_m901BF016975C91B814CAEF178474004F7A601436_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 145));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 146));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 147));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 148));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 149));
		goto IL_004f;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 150));
		// if (eventData.InputSource.Pointers[i].PointerId == GazePointer.PointerId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 151));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 161));
		NullCheck(L_0);
		RuntimeObject* L_1 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 161));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 162));
		NullCheck(L_1);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_2 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 162));
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		RuntimeObject* L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 163));
		NullCheck(L_5);
		uint32_t L_6 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 164));
		RuntimeObject* L_7 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 164));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 165));
		NullCheck(L_7);
		uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 165));
		V_1 = (bool)((((int32_t)L_6) == ((int32_t)L_8))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 152));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 153));
		// coneCastPointer.RaisePointerUp(eventData.MixedRealityInputAction, eventData.Handedness, eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 154));
		GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_10 = __this->get_coneCastPointer_40();
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 166));
		NullCheck(L_11);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_12 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 166));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_13 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 167));
		NullCheck(L_13);
		uint8_t L_14 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 167));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_15 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 168));
		NullCheck(L_15);
		RuntimeObject* L_16 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 168));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 169));
		NullCheck(L_10);
		GazeConePointer_RaisePointerUp_mF96B93AA2230A04BFF438008B44F0F2BCC44A038(L_10, L_12, L_14, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 169));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 155));
		goto IL_0063;
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 156));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 157));
		int32_t L_17 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_004f:
	{
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 158));
		int32_t L_18 = V_0;
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_19 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 170));
		NullCheck(L_19);
		RuntimeObject* L_20 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 170));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 171));
		NullCheck(L_20);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 171));
		NullCheck(L_21);
		V_2 = (bool)((((int32_t)L_18) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_21)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 159));
		bool L_22 = V_2;
		if (L_22)
		{
			goto IL_0005;
		}
	}

IL_0063:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 160));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::OnInputDown(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConeCastGazeProvider_OnInputDown_mB59282CB1D9CF59876A530FE2CFDC7FFEA0A62E1 (ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider_OnInputDown_mB59282CB1D9CF59876A530FE2CFDC7FFEA0A62E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider_OnInputDown_mB59282CB1D9CF59876A530FE2CFDC7FFEA0A62E1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 172));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 173));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 174));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 175));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 176));
		goto IL_004f;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 177));
		// if (eventData.InputSource.Pointers[i].PointerId == GazePointer.PointerId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 178));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 188));
		NullCheck(L_0);
		RuntimeObject* L_1 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 188));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 189));
		NullCheck(L_1);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_2 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 189));
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		RuntimeObject* L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 190));
		NullCheck(L_5);
		uint32_t L_6 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 190));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 191));
		RuntimeObject* L_7 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 191));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 192));
		NullCheck(L_7);
		uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 192));
		V_1 = (bool)((((int32_t)L_6) == ((int32_t)L_8))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 179));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 180));
		// coneCastPointer.RaisePointerDown(eventData.MixedRealityInputAction, eventData.Handedness, eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 181));
		GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * L_10 = __this->get_coneCastPointer_40();
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 193));
		NullCheck(L_11);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_12 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 193));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_13 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 194));
		NullCheck(L_13);
		uint8_t L_14 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 194));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_15 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 195));
		NullCheck(L_15);
		RuntimeObject* L_16 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 195));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 196));
		NullCheck(L_10);
		GazeConePointer_RaisePointerDown_mBFCAE9B287737D84081DFAEFBBA10549F8A4E563(L_10, L_12, L_14, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 196));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 182));
		goto IL_0063;
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 183));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 184));
		int32_t L_17 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_004f:
	{
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 185));
		int32_t L_18 = V_0;
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_19 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 197));
		NullCheck(L_19);
		RuntimeObject* L_20 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 197));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 198));
		NullCheck(L_20);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 198));
		NullCheck(L_21);
		V_2 = (bool)((((int32_t)L_18) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_21)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 186));
		bool L_22 = V_2;
		if (L_22)
		{
			goto IL_0005;
		}
	}

IL_0063:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 187));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConeCastGazeProvider__ctor_m9FD6C28376BFC6637FBFE33BD84D606C305D9B1E (ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider__ctor_m9FD6C28376BFC6637FBFE33BD84D606C305D9B1E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider__ctor_m9FD6C28376BFC6637FBFE33BD84D606C305D9B1E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 199));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 200));
	{
		// private GazeConePointer coneCastPointer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 201));
		__this->set_coneCastPointer_40((GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C *)NULL);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 202));
		IL2CPP_RUNTIME_CLASS_INIT(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var);
		GazeProvider__ctor_mDA5A7EFB135962393638C41C9C8C649052C897A6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 202));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.ConeCastGazeProvider::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConeCastGazeProvider__cctor_m5F2F2F48A595560CB3A7CE977FB992F489A667EA (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ConeCastGazeProvider__cctor_m5F2F2F48A595560CB3A7CE977FB992F489A667EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ConeCastGazeProvider__cctor_m5F2F2F48A595560CB3A7CE977FB992F489A667EA_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 203));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 204));
	{
		// private static readonly ProfilerMarker UpdateConeCastPerfMarker = new ProfilerMarker("[MRTK] ConeCastGazeProvider.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 205));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 207));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral2520BBA8384279CF8445027882D2A14F547254BE, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 207));
		((ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_StaticFields*)il2cpp_codegen_static_fields_for(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_il2cpp_TypeInfo_var))->set_UpdateConeCastPerfMarker_41(L_0);
		// private static readonly ProfilerMarker InitializeConeCastGazePointerPerfMarker = new ProfilerMarker("[MRTK] GazeProvider.InitializeGazePointer");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 206));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 208));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteralA23B9E54B916BE1708864B3FA3665FE53251DE69, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 208));
		((ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_StaticFields*)il2cpp_codegen_static_fields_for(ConeCastGazeProvider_t4BB1FCDDFD94BC5E5D2A3A5BD44C2710990BAC6B_il2cpp_TypeInfo_var))->set_InitializeConeCastGazePointerPerfMarker_42(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::.ctor(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultRaycastProvider__ctor_m609B044BCCF6FE9289DC96AB5314132243B50103 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, RuntimeObject* ___registrar0, MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * ___profile1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider__ctor_m609B044BCCF6FE9289DC96AB5314132243B50103_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___registrar0), (&___profile1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider__ctor_m609B044BCCF6FE9289DC96AB5314132243B50103_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 209));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 210));
	{
		// MixedRealityInputSystemProfile profile) : this(profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 211));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_0 = ___profile1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 215));
		DefaultRaycastProvider__ctor_m1E2D60B855B7511FFA81C761F5F48720647AE987(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 215));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 212));
		// Registrar = registrar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 213));
		RuntimeObject* L_1 = ___registrar0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 216));
		BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4_inline(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 216));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 214));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultRaycastProvider__ctor_m1E2D60B855B7511FFA81C761F5F48720647AE987 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * ___profile0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider__ctor_m1E2D60B855B7511FFA81C761F5F48720647AE987_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___profile0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider__ctor_m1E2D60B855B7511FFA81C761F5F48720647AE987_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 217));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 218));
	{
		// public override string Name { get; protected set; } = "Default Raycast Provider";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 219));
		__this->set_U3CNameU3Ek__BackingField_21(_stringLiteral0BD97560A03BD042B063790A8545702C9CE90189);
		// MixedRealityInputSystemProfile profile) : base(profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 220));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_0 = ___profile0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 223));
		BaseCoreSystem__ctor_mB3771B3FDEAEF480DAB5C41BE63F3FDFB7B5384E(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 223));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 221));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 222));
		return;
	}
}
// System.String Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::get_Name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* DefaultRaycastProvider_get_Name_mDF97CDD77CDF7DCA115DBE67B90C4DC8C8B3C648 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider_get_Name_mDF97CDD77CDF7DCA115DBE67B90C4DC8C8B3C648_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider_get_Name_mDF97CDD77CDF7DCA115DBE67B90C4DC8C8B3C648_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 224));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 225));
	{
		// public override string Name { get; protected set; } = "Default Raycast Provider";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 226));
		String_t* L_0 = __this->get_U3CNameU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::set_Name(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultRaycastProvider_set_Name_m466E6A95B41949BBA71238D12D723E502890A654 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider_set_Name_m466E6A95B41949BBA71238D12D723E502890A654_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider_set_Name_m466E6A95B41949BBA71238D12D723E502890A654_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 227));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 228));
	{
		// public override string Name { get; protected set; } = "Default Raycast Provider";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 229));
		String_t* L_0 = ___value0;
		__this->set_U3CNameU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::Raycast(Microsoft.MixedReality.Toolkit.Physics.RayStep,UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DefaultRaycastProvider_Raycast_mC0818F6918233A495D5B8390BA9DA31552033D40 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___step0, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks1, bool ___focusIndividualCompoundCollider2, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * ___hitInfo3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider_Raycast_mC0818F6918233A495D5B8390BA9DA31552033D40_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___step0), (&___prioritizedLayerMasks1), (&___focusIndividualCompoundCollider2), (&___hitInfo3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider_Raycast_mC0818F6918233A495D5B8390BA9DA31552033D40_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 230));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 231));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 232));
		// using (RaycastPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 233));
		IL2CPP_RUNTIME_CLASS_INIT(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields*)il2cpp_codegen_static_fields_for(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var))->get_RaycastPerfMarker_22();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 240));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 240));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 234));
		// bool result = MixedRealityRaycaster.RaycastSimplePhysicsStep(step, step.Length, prioritizedLayerMasks, focusIndividualCompoundCollider, out RaycastHit physicsHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 235));
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_2 = ___step0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 241));
		float L_3 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&___step0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 241));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_4 = ___prioritizedLayerMasks1;
		bool L_5 = ___focusIndividualCompoundCollider2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 242));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
		bool L_6 = MixedRealityRaycaster_RaycastSimplePhysicsStep_mBA9AACC9AA39AE0591D905C3E5B680CC6C90821D(L_2, L_3, L_4, L_5, (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 242));
		V_2 = L_6;
		// hitInfo = new MixedRealityRaycastHit(result, physicsHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 236));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_7 = ___hitInfo3;
		bool L_8 = V_2;
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  L_9 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 243));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_10;
		memset((&L_10), 0, sizeof(L_10));
		MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76((&L_10), L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 243));
		*(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_7 = L_10;
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_7)->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_7)->___collider_10), (void*)NULL);
		#endif
		// return result;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 237));
		bool L_11 = V_2;
		V_4 = L_11;
		IL2CPP_LEAVE(0x44, FINALLY_0035);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0035;
	}

FINALLY_0035:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 238));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 244));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 244));
		IL2CPP_END_FINALLY(53)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(53)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x44, IL_0044)
	}

IL_0044:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 239));
		bool L_12 = V_4;
		return L_12;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::SphereCast(Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Single,UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DefaultRaycastProvider_SphereCast_m37837B90CF6F84847CA0CB029D9E798FBC148E20 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___step0, float ___radius1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, bool ___focusIndividualCompoundCollider3, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * ___hitInfo4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider_SphereCast_m37837B90CF6F84847CA0CB029D9E798FBC148E20_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___step0), (&___radius1), (&___prioritizedLayerMasks2), (&___focusIndividualCompoundCollider3), (&___hitInfo4));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider_SphereCast_m37837B90CF6F84847CA0CB029D9E798FBC148E20_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 245));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 246));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 247));
		// using (SphereCastPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 248));
		IL2CPP_RUNTIME_CLASS_INIT(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields*)il2cpp_codegen_static_fields_for(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var))->get_SphereCastPerfMarker_23();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 255));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 255));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 249));
		// bool result = MixedRealityRaycaster.RaycastSpherePhysicsStep(step, radius, step.Length, prioritizedLayerMasks, focusIndividualCompoundCollider, out RaycastHit physicsHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 250));
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_2 = ___step0;
		float L_3 = ___radius1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 256));
		float L_4 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&___step0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 256));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_5 = ___prioritizedLayerMasks2;
		bool L_6 = ___focusIndividualCompoundCollider3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 257));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
		bool L_7 = MixedRealityRaycaster_RaycastSpherePhysicsStep_mC7E070F8EF825C6DF19A5E5391E0943F0ECB18E9(L_2, L_3, L_4, L_5, L_6, (RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 257));
		V_2 = L_7;
		// hitInfo = new MixedRealityRaycastHit(result, physicsHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 251));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_8 = ___hitInfo4;
		bool L_9 = V_2;
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  L_10 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 258));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_11;
		memset((&L_11), 0, sizeof(L_11));
		MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76((&L_11), L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 258));
		*(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_8 = L_11;
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_8)->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_8)->___collider_10), (void*)NULL);
		#endif
		// return result;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 252));
		bool L_12 = V_2;
		V_4 = L_12;
		IL2CPP_LEAVE(0x46, FINALLY_0037);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0037;
	}

FINALLY_0037:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 253));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 259));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 259));
		IL2CPP_END_FINALLY(55)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(55)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x46, IL_0046)
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 254));
		bool L_13 = V_4;
		return L_13;
	}
}
// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::GraphicsRaycast(UnityEngine.EventSystems.EventSystem,UnityEngine.EventSystems.PointerEventData,UnityEngine.LayerMask[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  DefaultRaycastProvider_GraphicsRaycast_m6B53D74B69D1E51D3117FC65530B6C2455CDB347 (DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757 * __this, EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___eventSystem0, PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___pointerEventData1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___layerMasks2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider_GraphicsRaycast_m6B53D74B69D1E51D3117FC65530B6C2455CDB347_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventSystem0), (&___pointerEventData1), (&___layerMasks2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider_GraphicsRaycast_m6B53D74B69D1E51D3117FC65530B6C2455CDB347_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 260));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 261));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 262));
		// using (GraphicsRaycastPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 263));
		IL2CPP_RUNTIME_CLASS_INIT(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields*)il2cpp_codegen_static_fields_for(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var))->get_GraphicsRaycastPerfMarker_24();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 268));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 268));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 264));
		// return eventSystem.Raycast(pointerEventData, layerMasks);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 265));
		EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_2 = ___eventSystem0;
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_3 = ___pointerEventData1;
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_4 = ___layerMasks2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 269));
		IL2CPP_RUNTIME_CLASS_INIT(EventSystemExtensions_t011350FAF4E155AA4C9A2271F524A7035CBCB17F_il2cpp_TypeInfo_var);
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_5 = EventSystemExtensions_Raycast_m09A9AB17BE29D37A371B92C1CA12266DF6550704(L_2, L_3, L_4, (RaycastResultComparer_tFDB19FD5F400C27FE7C68EF1CCF31999219D06F4 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 269));
		V_2 = L_5;
		IL2CPP_LEAVE(0x2B, FINALLY_001c);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_001c;
	}

FINALLY_001c:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 266));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 270));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 270));
		IL2CPP_END_FINALLY(28)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(28)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x2B, IL_002b)
	}

IL_002b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 267));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_6 = V_2;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.DefaultRaycastProvider::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DefaultRaycastProvider__cctor_m378DF7D03D7989CF6588D5A29F8593BBFDC89B0B (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DefaultRaycastProvider__cctor_m378DF7D03D7989CF6588D5A29F8593BBFDC89B0B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, DefaultRaycastProvider__cctor_m378DF7D03D7989CF6588D5A29F8593BBFDC89B0B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 271));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 272));
	{
		// private static readonly ProfilerMarker RaycastPerfMarker = new ProfilerMarker("[MRTK] DefaultRaycastProvider.Raycast");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 273));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 276));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteralB2276F613E143F4126F6A2B8A5916BF27A550714, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 276));
		((DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields*)il2cpp_codegen_static_fields_for(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var))->set_RaycastPerfMarker_22(L_0);
		// private static readonly ProfilerMarker SphereCastPerfMarker = new ProfilerMarker("[MRTK] DefaultRaycastProvider.SphereCast");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 274));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 277));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral10FA6F59AC8A06F4DED1C9B3EE6CF3AD56FFBF6A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 277));
		((DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields*)il2cpp_codegen_static_fields_for(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var))->set_SphereCastPerfMarker_23(L_1);
		// private static readonly ProfilerMarker GraphicsRaycastPerfMarker = new ProfilerMarker("[MRTK] DefaultRaycastProvider.GraphicsRaycast");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 275));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 278));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteralAF4D0CAF185E3CD30B7AFC740626A01295853909, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 278));
		((DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_StaticFields*)il2cpp_codegen_static_fields_for(DefaultRaycastProvider_t475452266FE8A30BB257C3C025074C8AB5037757_il2cpp_TypeInfo_var))->set_GraphicsRaycastPerfMarker_24(L_2);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::.ctor(Microsoft.MixedReality.Toolkit.IMixedRealityServiceRegistrar,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider__ctor_mABEC20663770E994A3AF9786AB507E8A44B30805 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___registrar0, MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * ___profile1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider__ctor_mABEC20663770E994A3AF9786AB507E8A44B30805_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___registrar0), (&___profile1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider__ctor_mABEC20663770E994A3AF9786AB507E8A44B30805_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 279));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 280));
	{
		// MixedRealityInputSystemProfile profile) : this(profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 281));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_0 = ___profile1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 285));
		FocusProvider__ctor_mD790A96134FA953445022E2119A9B2FB744E38E8(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 285));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 282));
		// Registrar = registrar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 283));
		RuntimeObject* L_1 = ___registrar0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 286));
		BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4_inline(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 286));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 284));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider__ctor_mD790A96134FA953445022E2119A9B2FB744E38E8 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * ___profile0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider__ctor_mD790A96134FA953445022E2119A9B2FB744E38E8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___profile0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider__ctor_mD790A96134FA953445022E2119A9B2FB744E38E8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 287));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 288));
	FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * G_B2_0 = NULL;
	FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * G_B1_0 = NULL;
	int32_t G_B3_0 = 0;
	FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * G_B3_1 = NULL;
	{
		// private readonly Dictionary<uint, PointerData> pointers = new Dictionary<uint, PointerData>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 289));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 314));
		Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_0 = (Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D *)il2cpp_codegen_object_new(Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m912F79447880600D11A564725B769143AF5A0EAF(L_0, /*hidden argument*/Dictionary_2__ctor_m912F79447880600D11A564725B769143AF5A0EAF_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 314));
		__this->set_pointers_21(L_0);
		// private readonly HashSet<GameObject> pendingOverallFocusEnterSet = new HashSet<GameObject>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 290));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 315));
		HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * L_1 = (HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E *)il2cpp_codegen_object_new(HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E_il2cpp_TypeInfo_var);
		HashSet_1__ctor_m6DB682240050817EFD1E83DE1C3B438C84DAFB3E(L_1, /*hidden argument*/HashSet_1__ctor_m6DB682240050817EFD1E83DE1C3B438C84DAFB3E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 315));
		__this->set_pendingOverallFocusEnterSet_22(L_1);
		// private readonly Dictionary<GameObject, int> pendingOverallFocusExitSet = new Dictionary<GameObject, int>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 291));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 316));
		Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_2 = (Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D *)il2cpp_codegen_object_new(Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m368526B69AAFA3973FA788DFF139A03F9F7053C3(L_2, /*hidden argument*/Dictionary_2__ctor_m368526B69AAFA3973FA788DFF139A03F9F7053C3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 316));
		__this->set_pendingOverallFocusExitSet_23(L_2);
		// private readonly List<PointerData> pendingPointerSpecificFocusChange = new List<PointerData>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 292));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 317));
		List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * L_3 = (List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D *)il2cpp_codegen_object_new(List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D_il2cpp_TypeInfo_var);
		List_1__ctor_m7D00E162503419278D6716197652DED64BC6B9B5(L_3, /*hidden argument*/List_1__ctor_m7D00E162503419278D6716197652DED64BC6B9B5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 317));
		__this->set_pendingPointerSpecificFocusChange_24(L_3);
		// private readonly Dictionary<uint, IMixedRealityPointerMediator> pointerMediators = new Dictionary<uint, IMixedRealityPointerMediator>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 293));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 318));
		Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * L_4 = (Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 *)il2cpp_codegen_object_new(Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_mA7941677D87F6A96D673628B50F034ABA0BEDF24(L_4, /*hidden argument*/Dictionary_2__ctor_mA7941677D87F6A96D673628B50F034ABA0BEDF24_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 318));
		__this->set_pointerMediators_25(L_4);
		// private readonly PointerHitResult hitResult3d = new PointerHitResult();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 294));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 319));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_5 = (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 *)il2cpp_codegen_object_new(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57_il2cpp_TypeInfo_var);
		PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 319));
		__this->set_hitResult3d_26(L_5);
		// private readonly PointerHitResult hitResultUi = new PointerHitResult();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 295));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 320));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_6 = (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 *)il2cpp_codegen_object_new(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57_il2cpp_TypeInfo_var);
		PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 320));
		__this->set_hitResultUi_27(L_6);
		// private readonly int maxQuerySceneResults = 128;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 296));
		__this->set_maxQuerySceneResults_29(((int32_t)128));
		// private readonly bool shouldUseGraphicsRaycast = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 297));
		__this->set_shouldUseGraphicsRaycast_30((bool)1);
		// private bool focusIndividualCompoundCollider = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 298));
		__this->set_focusIndividualCompoundCollider_31((bool)0);
		// public override string Name { get; protected set; } = "Focus Provider";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 299));
		__this->set_U3CNameU3Ek__BackingField_35(_stringLiteral9854CD25BE45E93D5FD3A7FE400E117B3FB9391A);
		// private LayerMask[] focusLayerMasks = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 300));
		__this->set_focusLayerMasks_36((LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)NULL);
		// private RenderTexture uiRaycastCameraTargetTexture = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 301));
		__this->set_uiRaycastCameraTargetTexture_37((RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 *)NULL);
		// private Camera uiRaycastCamera = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 302));
		__this->set_uiRaycastCamera_38((Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 *)NULL);
		// private Vector3 newUiRaycastPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 303));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 321));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 321));
		__this->set_newUiRaycastPosition_39(L_7);
		// private readonly GazePointerVisibilityStateMachine gazePointerStateMachine = new GazePointerVisibilityStateMachine();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 304));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 322));
		GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * L_8 = (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 *)il2cpp_codegen_object_new(GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155_il2cpp_TypeInfo_var);
		GazePointerVisibilityStateMachine__ctor_mED2D3E357198480D43ED1DF72387BE5FB23E9FE8(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 322));
		__this->set_gazePointerStateMachine_40(L_8);
		// private List<PointerPreferences> customPointerBehaviors = new List<PointerPreferences>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 305));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 323));
		List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * L_9 = (List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB *)il2cpp_codegen_object_new(List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB_il2cpp_TypeInfo_var);
		List_1__ctor_m2DF5FAD40A74490653EABB46965F84D82786B041(L_9, /*hidden argument*/List_1__ctor_m2DF5FAD40A74490653EABB46965F84D82786B041_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 323));
		__this->set_customPointerBehaviors_66(L_9);
		// public PointerBehavior GazePointerBehavior { get; set; } = PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 306));
		__this->set_U3CGazePointerBehaviorU3Ek__BackingField_67(0);
		// MixedRealityInputSystemProfile profile) : base(profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 307));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_10 = ___profile0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 324));
		BaseCoreSystem__ctor_mB3771B3FDEAEF480DAB5C41BE63F3FDFB7B5384E(__this, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 324));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 308));
		// maxQuerySceneResults = profile.FocusQueryBufferSize;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 309));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_11 = ___profile0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 325));
		NullCheck(L_11);
		int32_t L_12 = MixedRealityInputSystemProfile_get_FocusQueryBufferSize_mC19C7694A8F9EE68E50019978AF84C16CEB15BF0_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 325));
		__this->set_maxQuerySceneResults_29(L_12);
		// focusIndividualCompoundCollider = profile.FocusIndividualCompoundCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 310));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_13 = ___profile0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 326));
		NullCheck(L_13);
		bool L_14 = MixedRealityInputSystemProfile_get_FocusIndividualCompoundCollider_m5AEF580FAEAD3FB6C7A16A5B29E389A6D34EC12A(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 326));
		__this->set_focusIndividualCompoundCollider_31(L_14);
		// inputSystemProfile = profile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 311));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_15 = ___profile0;
		__this->set_inputSystemProfile_28(L_15);
		// shouldUseGraphicsRaycast = inputSystemProfile == null || inputSystemProfile.ShouldUseGraphicsRaycast;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 312));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_16 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 327));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_17 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_16, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 327));
		G_B1_0 = __this;
		if (L_17)
		{
			G_B2_0 = __this;
			goto IL_00f2;
		}
	}
	{
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_18 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 328));
		NullCheck(L_18);
		bool L_19 = MixedRealityInputSystemProfile_get_ShouldUseGraphicsRaycast_m31028570E4260FDC2C3C83C3F45ABDC8D8A30B9F_inline(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 328));
		G_B3_0 = ((int32_t)(L_19));
		G_B3_1 = G_B1_0;
		goto IL_00f3;
	}

IL_00f2:
	{
		G_B3_0 = 1;
		G_B3_1 = G_B2_0;
	}

IL_00f3:
	{
		NullCheck(G_B3_1);
		G_B3_1->set_shouldUseGraphicsRaycast_30((bool)G_B3_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 313));
		return;
	}
}
// System.Collections.Generic.IReadOnlyDictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator> Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_PointerMediators()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* FocusProvider_get_PointerMediators_mD8F0D49E23E94208637477A93B18A12BE38964EA (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_PointerMediators_mD8F0D49E23E94208637477A93B18A12BE38964EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_PointerMediators_mD8F0D49E23E94208637477A93B18A12BE38964EA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 329));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 330));
	{
		// public IReadOnlyDictionary<uint, IMixedRealityPointerMediator> PointerMediators => pointerMediators;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 331));
		Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * L_0 = __this->get_pointerMediators_25();
		return L_0;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_NumNearPointersActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 332));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 333));
	{
		// public int NumNearPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 334));
		int32_t L_0 = __this->get_U3CNumNearPointersActiveU3Ek__BackingField_32();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_NumNearPointersActive(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 335));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 336));
	{
		// public int NumNearPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 337));
		int32_t L_0 = ___value0;
		__this->set_U3CNumNearPointersActiveU3Ek__BackingField_32(L_0);
		return;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_NumFarPointersActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 339));
	{
		// public int NumFarPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 340));
		int32_t L_0 = __this->get_U3CNumFarPointersActiveU3Ek__BackingField_33();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_NumFarPointersActive(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 341));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 342));
	{
		// public int NumFarPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 343));
		int32_t L_0 = ___value0;
		__this->set_U3CNumFarPointersActiveU3Ek__BackingField_33(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_PrimaryPointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 344));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 345));
	{
		// get => primaryPointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 346));
		RuntimeObject* L_0 = __this->get_primaryPointer_34();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_PrimaryPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	RuntimeObject* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 347));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 348));
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * G_B3_0 = NULL;
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 349));
		// if (value != PrimaryPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 350));
		RuntimeObject* L_0 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 358));
		RuntimeObject* L_1 = FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 358));
		V_0 = (bool)((((int32_t)((((RuntimeObject*)(RuntimeObject*)L_0) == ((RuntimeObject*)(RuntimeObject*)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 351));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 352));
		// IMixedRealityPointer oldPointer = primaryPointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 353));
		RuntimeObject* L_3 = __this->get_primaryPointer_34();
		V_1 = L_3;
		// primaryPointer = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 354));
		RuntimeObject* L_4 = ___value0;
		__this->set_primaryPointer_34(L_4);
		// PrimaryPointerChanged?.Invoke(oldPointer, primaryPointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 355));
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_5 = __this->get_PrimaryPointerChanged_42();
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_6 = L_5;
		G_B2_0 = L_6;
		if (L_6)
		{
			G_B3_0 = L_6;
			goto IL_002c;
		}
	}
	{
		goto IL_0039;
	}

IL_002c:
	{
		RuntimeObject* L_7 = V_1;
		RuntimeObject* L_8 = __this->get_primaryPointer_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 359));
		NullCheck(G_B3_0);
		PrimaryPointerChangedHandler_Invoke_m5D0470464C6D56240DC7DA1522B2194CBB22AC3F(G_B3_0, L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 359));
	}

IL_0039:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 356));
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 357));
		return;
	}
}
// System.String Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_Name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* FocusProvider_get_Name_m8DFD7B5608E30F0B7BD4FFAE6C993B08D60698EB (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_Name_m8DFD7B5608E30F0B7BD4FFAE6C993B08D60698EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_Name_m8DFD7B5608E30F0B7BD4FFAE6C993B08D60698EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 360));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 361));
	{
		// public override string Name { get; protected set; } = "Focus Provider";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 362));
		String_t* L_0 = __this->get_U3CNameU3Ek__BackingField_35();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_Name(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_set_Name_m97C0822499F351DAE3CE42CAA38644304BD2F63E (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_set_Name_m97C0822499F351DAE3CE42CAA38644304BD2F63E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_set_Name_m97C0822499F351DAE3CE42CAA38644304BD2F63E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 363));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 364));
	{
		// public override string Name { get; protected set; } = "Focus Provider";
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 365));
		String_t* L_0 = ___value0;
		__this->set_U3CNameU3Ek__BackingField_35(L_0);
		return;
	}
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_Priority()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t FocusProvider_get_Priority_m4F66D276E24563F4A46992C3C2C8686A2B821880 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_Priority_m4F66D276E24563F4A46992C3C2C8686A2B821880_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_Priority_m4F66D276E24563F4A46992C3C2C8686A2B821880_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 366));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 367));
	{
		// public override uint Priority => 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 368));
		return 2;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.FocusProvider::Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusProvider.get_GlobalPointingExtent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float FocusProvider_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusProvider_get_GlobalPointingExtent_m71A07148AC407E19F5367FC0249B3AFF07F64F70 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusProvider_get_GlobalPointingExtent_m71A07148AC407E19F5367FC0249B3AFF07F64F70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_Microsoft_MixedReality_Toolkit_Input_IMixedRealityFocusProvider_get_GlobalPointingExtent_m71A07148AC407E19F5367FC0249B3AFF07F64F70_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 369));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 370));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 371));
		// if (inputSystemProfile != null && inputSystemProfile.PointerProfile != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 372));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_0 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 378));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 378));
		if (!L_1)
		{
			goto IL_0022;
		}
	}
	{
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_2 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 379));
		NullCheck(L_2);
		MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * L_3 = MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 379));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 380));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 380));
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0023;
	}

IL_0022:
	{
		G_B3_0 = 0;
	}

IL_0023:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 373));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_003b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 374));
		// return inputSystemProfile.PointerProfile.PointingExtent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 375));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_6 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 381));
		NullCheck(L_6);
		MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * L_7 = MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 381));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 382));
		NullCheck(L_7);
		float L_8 = MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 382));
		V_1 = L_8;
		goto IL_0043;
	}

IL_003b:
	{
		// return 10f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 376));
		V_1 = (10.0f);
		goto IL_0043;
	}

IL_0043:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 377));
		float L_9 = V_1;
		return L_9;
	}
}
// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_FocusLayerMasks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_2 = NULL;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_3 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 383));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 384));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 385));
		// if (focusLayerMasks == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 386));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_focusLayerMasks_36();
		V_0 = (bool)((((RuntimeObject*)(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 387));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0072;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 388));
		// if (inputSystemProfile != null && inputSystemProfile.PointerProfile != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 389));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_2 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 396));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 396));
		if (!L_3)
		{
			goto IL_0030;
		}
	}
	{
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_4 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 397));
		NullCheck(L_4);
		MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * L_5 = MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 397));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 398));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 398));
		G_B4_0 = ((int32_t)(L_6));
		goto IL_0031;
	}

IL_0030:
	{
		G_B4_0 = 0;
	}

IL_0031:
	{
		V_1 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 390));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0052;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 391));
		// return focusLayerMasks = inputSystemProfile.PointerProfile.PointingRaycastLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 392));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_8 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 399));
		NullCheck(L_8);
		MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * L_9 = MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 399));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 400));
		NullCheck(L_9);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_10 = MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_inline(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 400));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_11 = L_10;
		V_2 = L_11;
		__this->set_focusLayerMasks_36(L_11);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_12 = V_2;
		V_3 = L_12;
		goto IL_007b;
	}

IL_0052:
	{
		// return focusLayerMasks = new LayerMask[] { UnityPhysics.DefaultRaycastLayers };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 393));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_13 = (LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)SZArrayNew(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var, (uint32_t)1);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_14 = L_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 401));
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_15 = LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300(((int32_t)-5), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 401));
		NullCheck(L_14);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(0), (LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 )L_15);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_16 = L_14;
		V_2 = L_16;
		__this->set_focusLayerMasks_36(L_16);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_17 = V_2;
		V_3 = L_17;
		goto IL_007b;
	}

IL_0072:
	{
		// return focusLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 394));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_18 = __this->get_focusLayerMasks_36();
		V_3 = L_18;
		goto IL_007b;
	}

IL_007b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 395));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_19 = V_3;
		return L_19;
	}
}
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_UIRaycastCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 402));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 403));
	{
		// public Camera UIRaycastCamera => uiRaycastCamera;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 404));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_0 = __this->get_uiRaycastCamera_38();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_IsSetupValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_get_IsSetupValid_m7F95D3E11E9ECC6509FCFB6E17EDDD7CED7E0333 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_IsSetupValid_m7F95D3E11E9ECC6509FCFB6E17EDDD7CED7E0333_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_IsSetupValid_m7F95D3E11E9ECC6509FCFB6E17EDDD7CED7E0333_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 405));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 406));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 407));
		// if (CoreServices.InputSystem == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 408));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 425));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 425));
		V_0 = (bool)((((RuntimeObject*)(RuntimeObject*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 409));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 410));
		// Debug.LogError($"Unable to start {Name}. An Input System is required for this feature.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 411));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 426));
		String_t* L_2 = VirtFuncInvoker0< String_t* >::Invoke(18 /* System.String Microsoft.MixedReality.Toolkit.BaseService::get_Name() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 426));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 427));
		String_t* L_3 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralFF448159DC2D8E7C27FB42F3D195D5863191E18B, L_2, _stringLiteral3DA53827DA45EEF8CE51E69F81BFF90A6864DA69, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 427));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 428));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 428));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 412));
		V_1 = (bool)0;
		goto IL_0096;
	}

IL_002d:
	{
		// if (inputSystemProfile == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 413));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_4 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 429));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 429));
		V_2 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 414));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_005d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 415));
		// Debug.LogError($"Unable to start {Name}. An Input System Profile is required for this feature.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 416));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 430));
		String_t* L_7 = VirtFuncInvoker0< String_t* >::Invoke(18 /* System.String Microsoft.MixedReality.Toolkit.BaseService::get_Name() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 430));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 431));
		String_t* L_8 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralFF448159DC2D8E7C27FB42F3D195D5863191E18B, L_7, _stringLiteral1DC236E0545311F08FF0EE7096E70680FB6D80F0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 431));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 432));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 432));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 417));
		V_1 = (bool)0;
		goto IL_0096;
	}

IL_005d:
	{
		// if (inputSystemProfile.PointerProfile == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 418));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_9 = __this->get_inputSystemProfile_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 433));
		NullCheck(L_9);
		MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * L_10 = MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 433));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 434));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_11 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 434));
		V_3 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 419));
		bool L_12 = V_3;
		if (!L_12)
		{
			goto IL_0092;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 420));
		// Debug.LogError($"Unable to start {Name}. An Pointer Profile is required for this feature.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 421));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 435));
		String_t* L_13 = VirtFuncInvoker0< String_t* >::Invoke(18 /* System.String Microsoft.MixedReality.Toolkit.BaseService::get_Name() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 435));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 436));
		String_t* L_14 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralFF448159DC2D8E7C27FB42F3D195D5863191E18B, L_13, _stringLiteral4CE0747D6296B48012C9E5C3926A97ABC6309751, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 436));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 437));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 437));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 422));
		V_1 = (bool)0;
		goto IL_0096;
	}

IL_0092:
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 423));
		V_1 = (bool)1;
		goto IL_0096;
	}

IL_0096:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 424));
		bool L_15 = V_1;
		return L_15;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::add_PrimaryPointerChanged(Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_add_PrimaryPointerChanged_mDE374491D0C26A60108DF9A055DECF31A5FD80D3 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_add_PrimaryPointerChanged_mDE374491D0C26A60108DF9A055DECF31A5FD80D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * V_0 = NULL;
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * V_1 = NULL;
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_add_PrimaryPointerChanged_mDE374491D0C26A60108DF9A055DECF31A5FD80D3_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_0 = __this->get_PrimaryPointerChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_1 = V_0;
		V_1 = L_1;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_2 = V_1;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *)CastclassSealed((RuntimeObject*)L_4, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0_il2cpp_TypeInfo_var));
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 ** L_5 = __this->get_address_of_PrimaryPointerChanged_42();
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_6 = V_2;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_7 = V_1;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_8 = InterlockedCompareExchangeImpl<PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *>((PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 **)L_5, L_6, L_7);
		V_0 = L_8;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_9 = V_0;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_10 = V_1;
		if ((!(((RuntimeObject*)(PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *)L_9) == ((RuntimeObject*)(PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::remove_PrimaryPointerChanged(Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_remove_PrimaryPointerChanged_m6A1A89E933DC765374BE0DD838BBD23E282685E9 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_remove_PrimaryPointerChanged_m6A1A89E933DC765374BE0DD838BBD23E282685E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * V_0 = NULL;
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * V_1 = NULL;
	PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_remove_PrimaryPointerChanged_m6A1A89E933DC765374BE0DD838BBD23E282685E9_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_0 = __this->get_PrimaryPointerChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_1 = V_0;
		V_1 = L_1;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_2 = V_1;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *)CastclassSealed((RuntimeObject*)L_4, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0_il2cpp_TypeInfo_var));
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 ** L_5 = __this->get_address_of_PrimaryPointerChanged_42();
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_6 = V_2;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_7 = V_1;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_8 = InterlockedCompareExchangeImpl<PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *>((PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 **)L_5, L_6, L_7);
		V_0 = L_8;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_9 = V_0;
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_10 = V_1;
		if ((!(((RuntimeObject*)(PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *)L_9) == ((RuntimeObject*)(PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_Initialize_m7A3738C81654962938ACB58EAED2EE67150DC3CE (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_Initialize_m7A3738C81654962938ACB58EAED2EE67150DC3CE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Type_t * V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  V_4;
	memset((&V_4), 0, sizeof(V_4));
	RuntimeObject* V_5 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_Initialize_m7A3738C81654962938ACB58EAED2EE67150DC3CE_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 438));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 439));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B6_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	Type_t * G_B7_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 440));
		// if (!IsSetupValid) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 441));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 469));
		bool L_0 = FocusProvider_get_IsSetupValid_m7F95D3E11E9ECC6509FCFB6E17EDDD7CED7E0333(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 469));
		V_1 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 442));
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0014;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 443));
		// if (!IsSetupValid) { return; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 444));
		goto IL_00cc;
	}

IL_0014:
	{
		// base.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 445));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 470));
		BaseService_Initialize_mB5ABF716215A9D4E5204D4E3B9EDB034A2A6E618(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 470));
		// if (Application.isPlaying)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 446));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 471));
		bool L_2 = Application_get_isPlaying_mF43B519662E7433DD90D883E5AE22EC3CFB65CA5(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 471));
		V_2 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 447));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 448));
		// Debug.Assert(uiRaycastCamera == null);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 449));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_4 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 472));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 472));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 473));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 473));
		// FindOrCreateUiRaycastCamera();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 474));
		FocusProvider_FindOrCreateUiRaycastCamera_mD0CA5FF0E5333568489C8183A0CE8A57A404A81B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 474));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 451));
	}

IL_003f:
	{
		// var primaryPointerSelectorType = CoreServices.InputSystem?.InputSystemProfile.PointerProfile.PrimaryPointerSelector.Type;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 452));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 475));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_6 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 475));
		RuntimeObject* L_7 = L_6;
		G_B5_0 = L_7;
		if (L_7)
		{
			G_B6_0 = L_7;
			goto IL_004b;
		}
	}
	{
		G_B7_0 = ((Type_t *)(NULL));
		goto IL_005f;
	}

IL_004b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 476));
		NullCheck(G_B6_0);
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_8 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B6_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 476));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 477));
		NullCheck(L_8);
		MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * L_9 = MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 477));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 478));
		NullCheck(L_9);
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_10 = MixedRealityPointerProfile_get_PrimaryPointerSelector_mC5A2B5DB8C7BE27A5F396208C3E6B3D8CE27AE05(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 478));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 479));
		NullCheck(L_10);
		Type_t * L_11 = SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CD_inline(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 479));
		G_B7_0 = L_11;
	}

IL_005f:
	{
		V_0 = G_B7_0;
		// if (primaryPointerSelectorType != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 453));
		Type_t * L_12 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 480));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		bool L_13 = Type_op_Inequality_m615014191FB05FD50F63A24EB9A6CCA785E7CEC9(L_12, (Type_t *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 480));
		V_3 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 454));
		bool L_14 = V_3;
		if (!L_14)
		{
			goto IL_008a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 455));
		// primaryPointerSelector = Activator.CreateInstance(primaryPointerSelectorType) as IMixedRealityPrimaryPointerSelector;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 456));
		Type_t * L_15 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 481));
		RuntimeObject * L_16 = Activator_CreateInstance_mD06EE47879F606317C6DA91FB63E678CABAC6A16(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 481));
		__this->set_primaryPointerSelector_41(((RuntimeObject*)IsInst((RuntimeObject*)L_16, IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var)));
		// primaryPointerSelector.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 457));
		RuntimeObject* L_17 = __this->get_primaryPointerSelector_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 482));
		NullCheck(L_17);
		InterfaceActionInvoker0::Invoke(0 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector::Initialize() */, IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var, L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 482));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 458));
	}

IL_008a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 459));
		// foreach (var inputSource in CoreServices.InputSystem.DetectedInputSources)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 460));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 483));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_18 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 483));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 484));
		NullCheck(L_18);
		HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * L_19 = InterfaceFuncInvoker0< HashSet_1_t4B62E27C06ABCF605D70F1692276AF89D9332D4F * >::Invoke(4 /* System.Collections.Generic.HashSet`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_DetectedInputSources() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 484));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 485));
		NullCheck(L_19);
		Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE  L_20 = HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE(L_19, /*hidden argument*/HashSet_1_GetEnumerator_m8A1228A715959B32777005EB077477E70B1ABEFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 485));
		V_4 = L_20;
	}

IL_009c:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 461));
			goto IL_00b2;
		}

IL_009e:
		{
			// foreach (var inputSource in CoreServices.InputSystem.DetectedInputSources)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 462));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 486));
			RuntimeObject* L_21 = Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_inline((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)(&V_4), /*hidden argument*/Enumerator_get_Current_m1C82FFD35CC9988CB5C9FCB2C5F704BFDF815A7B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 486));
			V_5 = L_21;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 463));
			// RegisterPointers(inputSource);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 464));
			RuntimeObject* L_22 = V_5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 487));
			FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C(__this, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 487));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 465));
		}

IL_00b2:
		{
			// foreach (var inputSource in CoreServices.InputSystem.DetectedInputSources)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 466));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 488));
			bool L_23 = Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)(&V_4), /*hidden argument*/Enumerator_MoveNext_mC4139E4B68D7673458546A11B8F28BCA891F4327_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 488));
			if (L_23)
			{
				goto IL_009e;
			}
		}

IL_00bb:
		{
			IL2CPP_LEAVE(0xCC, FINALLY_00bd);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00bd;
	}

FINALLY_00bd:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 467));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 489));
		Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498((Enumerator_t05F27E173E575220A58F12FA3A05200F2221C7CE *)(&V_4), /*hidden argument*/Enumerator_Dispose_m9F2B474F8C61A3EEEBF15875ACFA549930F60498_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 489));
		IL2CPP_END_FINALLY(189)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(189)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xCC, IL_00cc)
	}

IL_00cc:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 468));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::Destroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_Destroy_m1CA724916714AE350112457E86E127996E1995BE (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_Destroy_m1CA724916714AE350112457E86E127996E1995BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_Destroy_m1CA724916714AE350112457E86E127996E1995BE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 490));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 491));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 492));
		// if (primaryPointerSelector != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 493));
		RuntimeObject* L_0 = __this->get_primaryPointerSelector_41();
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 494));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 495));
		// primaryPointerSelector.Destroy();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 496));
		RuntimeObject* L_2 = __this->get_primaryPointerSelector_41();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 505));
		NullCheck(L_2);
		InterfaceActionInvoker0::Invoke(1 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector::Destroy() */, IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 505));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 497));
	}

IL_001c:
	{
		// if (!MixedRealityToolkit.Instance.IsProfileSwitching)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 498));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 506));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_il2cpp_TypeInfo_var);
		MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * L_3 = MixedRealityToolkit_get_Instance_m02A5ECDA0A8291AA2EDDC518554EF3FAA470DBAD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 506));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 507));
		NullCheck(L_3);
		bool L_4 = MixedRealityToolkit_get_IsProfileSwitching_m44955CADC688AC70630E3754EC62F872FE497BBE_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 507));
		V_1 = (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 499));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0036;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 500));
		// CleanUpUiRaycastCamera();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 501));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 508));
		FocusProvider_CleanUpUiRaycastCamera_mF637B34A052A3AF7D3E1055D57FD51C9D1FFEE96(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 508));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 502));
	}

IL_0036:
	{
		// base.Destroy();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 503));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 509));
		BaseEventSystem_Destroy_m7B3C5682C43FE55F078723094DB38FCEBF56674E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 509));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 504));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_Update_mEACBB764A70644B70DDCA31E1ABD726C2C7EA305 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_Update_mEACBB764A70644B70DDCA31E1ABD726C2C7EA305_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_Update_mEACBB764A70644B70DDCA31E1ABD726C2C7EA305_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 510));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 511));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B5_0 = NULL;
	FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * G_B5_1 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * G_B4_1 = NULL;
	RuntimeObject* G_B6_0 = NULL;
	FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * G_B6_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 512));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 513));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_43();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 527));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 527));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 514));
			// if (!IsInitialized) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 515));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 528));
			bool L_2 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Microsoft.MixedReality.Toolkit.BaseService::get_IsInitialized() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 528));
			V_2 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 516));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_0020;
			}
		}

IL_001d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 517));
			// if (!IsInitialized) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 518));
			IL2CPP_LEAVE(0x67, FINALLY_0058);
		}

IL_0020:
		{
			// base.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 519));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 529));
			BaseService_Update_mAE9EBAC35F456E318362A34CA0ED90722C6C6F42(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 529));
			// UpdatePointers();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 520));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 530));
			FocusProvider_UpdatePointers_mE03F4EA01DE023EB9A38137D4C610A14B1848458(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 530));
			// UpdateGazeProvider();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 521));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 531));
			FocusProvider_UpdateGazeProvider_m5078BC0824402EC6E6F351380BBB9FABDE8D0C5B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 531));
			// UpdateFocusedObjects();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 522));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 532));
			FocusProvider_UpdateFocusedObjects_mAA837F83E07556828F8352D172227B4E3B44576F(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 532));
			// PrimaryPointer = primaryPointerSelector?.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 523));
			RuntimeObject* L_4 = __this->get_primaryPointerSelector_41();
			RuntimeObject* L_5 = L_4;
			G_B4_0 = L_5;
			G_B4_1 = __this;
			if (L_5)
			{
				G_B5_0 = L_5;
				G_B5_1 = __this;
				goto IL_004a;
			}
		}

IL_0046:
		{
			G_B6_0 = ((RuntimeObject*)(NULL));
			G_B6_1 = G_B4_1;
			goto IL_004f;
		}

IL_004a:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 533));
			NullCheck(G_B5_0);
			RuntimeObject* L_6 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector::Update() */, IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var, G_B5_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 533));
			G_B6_0 = L_6;
			G_B6_1 = G_B5_1;
		}

IL_004f:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 534));
			NullCheck(G_B6_1);
			FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2(G_B6_1, G_B6_0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 534));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 524));
			IL2CPP_LEAVE(0x67, FINALLY_0058);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0058;
	}

FINALLY_0058:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 525));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 535));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 535));
		IL2CPP_END_FINALLY(88)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(88)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x67, IL_0067)
	}

IL_0067:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 526));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdateGazeProvider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdateGazeProvider_m5078BC0824402EC6E6F351380BBB9FABDE8D0C5B (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_UpdateGazeProvider_m5078BC0824402EC6E6F351380BBB9FABDE8D0C5B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	RuntimeObject* V_3 = NULL;
	bool V_4 = false;
	RuntimeObject* V_5 = NULL;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_6 = NULL;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_UpdateGazeProvider_m5078BC0824402EC6E6F351380BBB9FABDE8D0C5B_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 536));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 537));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	int32_t G_B8_0 = 0;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* G_B11_0 = NULL;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* G_B10_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 538));
		// using (UpdateGazeProviderPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 539));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_UpdateGazeProviderPerfMarker_44();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 572));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 572));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 540));
			// if (gazeHitResult == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 541));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_2 = __this->get_gazeHitResult_46();
			V_2 = (bool)((((RuntimeObject*)(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 *)L_2) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 542));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_00e9;
			}
		}

IL_0020:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 543));
			// IMixedRealityPointer gazePointer = CoreServices.InputSystem.GazeProvider?.GazePointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 544));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 573));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_4 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 573));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 574));
			NullCheck(L_4);
			RuntimeObject* L_5 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_4);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 574));
			RuntimeObject* L_6 = L_5;
			G_B3_0 = L_6;
			if (L_6)
			{
				G_B4_0 = L_6;
				goto IL_0032;
			}
		}

IL_002e:
		{
			G_B5_0 = ((RuntimeObject*)(NULL));
			goto IL_0037;
		}

IL_0032:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 575));
			NullCheck(G_B4_0);
			RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B4_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 575));
			G_B5_0 = L_7;
		}

IL_0037:
		{
			V_3 = G_B5_0;
			// if (gazePointer != null && gazeProviderPointingData != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 545));
			RuntimeObject* L_8 = V_3;
			if (!L_8)
			{
				goto IL_0046;
			}
		}

IL_003b:
		{
			PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_9 = __this->get_gazeProviderPointingData_45();
			G_B8_0 = ((!(((RuntimeObject*)(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *)L_9) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			goto IL_0047;
		}

IL_0046:
		{
			G_B8_0 = 0;
		}

IL_0047:
		{
			V_4 = (bool)G_B8_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 546));
			bool L_10 = V_4;
			if (!L_10)
			{
				goto IL_00e5;
			}
		}

IL_0050:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 547));
			// hitResult3d.Clear();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 548));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_11 = __this->get_hitResult3d_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 576));
			NullCheck(L_11);
			PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7(L_11, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 576));
			// var raycastProvider = CoreServices.InputSystem.RaycastProvider;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 549));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 577));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_12 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 577));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 578));
			NullCheck(L_12);
			RuntimeObject* L_13 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(8 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_RaycastProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_12);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 578));
			V_5 = L_13;
			// LayerMask[] prioritizedLayerMasks = (gazePointer.PrioritizedLayerMasksOverride ?? FocusLayerMasks);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 550));
			RuntimeObject* L_14 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 579));
			NullCheck(L_14);
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_15 = InterfaceFuncInvoker0< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(18 /* UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PrioritizedLayerMasksOverride() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_14);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 579));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_16 = L_15;
			G_B10_0 = L_16;
			if (L_16)
			{
				G_B11_0 = L_16;
				goto IL_0079;
			}
		}

IL_0072:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 580));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_17 = FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 580));
			G_B11_0 = L_17;
		}

IL_0079:
		{
			V_6 = G_B11_0;
			// QueryScene(gazePointer, raycastProvider, prioritizedLayerMasks,
			//     hitResult3d, maxQuerySceneResults, focusIndividualCompoundCollider);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 551));
			RuntimeObject* L_18 = V_3;
			RuntimeObject* L_19 = V_5;
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_20 = V_6;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_21 = __this->get_hitResult3d_26();
			int32_t L_22 = __this->get_maxQuerySceneResults_29();
			bool L_23 = __this->get_focusIndividualCompoundCollider_31();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 581));
			IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
			FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2(L_18, L_19, L_20, L_21, L_22, L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 581));
			// if (shouldUseGraphicsRaycast)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 552));
			bool L_24 = __this->get_shouldUseGraphicsRaycast_30();
			V_7 = L_24;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 553));
			bool L_25 = V_7;
			if (!L_25)
			{
				goto IL_00c8;
			}
		}

IL_00a4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 554));
			// hitResultUi.Clear();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 555));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_26 = __this->get_hitResultUi_27();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 582));
			NullCheck(L_26);
			PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7(L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 582));
			// RaycastGraphics(gazePointer, gazeProviderPointingData, prioritizedLayerMasks, hitResultUi);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 556));
			RuntimeObject* L_27 = V_3;
			PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_28 = __this->get_gazeProviderPointingData_45();
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_29 = V_6;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_30 = __this->get_hitResultUi_27();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 583));
			FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5(__this, L_27, L_28, L_29, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 583));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 557));
		}

IL_00c8:
		{
			// gazeHitResult = GetPrioritizedHitResult(hitResult3d, hitResultUi, prioritizedLayerMasks);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 558));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_31 = __this->get_hitResult3d_26();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_32 = __this->get_hitResultUi_27();
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_33 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 584));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_34 = FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333(__this, L_31, L_32, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 584));
			__this->set_gazeHitResult_46(L_34);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 559));
			goto IL_00e8;
		}

IL_00e5:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 560));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 561));
			IL2CPP_LEAVE(0x137, FINALLY_0128);
		}

IL_00e8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 562));
		}

IL_00e9:
		{
			// if (!CoreServices.InputSystem.GazeProvider.IsNull())
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 563));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 585));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_35 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 585));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 586));
			NullCheck(L_35);
			RuntimeObject* L_36 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_35);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 586));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 587));
			bool L_37 = UnityObjectExtensions_IsNull_TisIMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_mC60A871C49437C248EDBA5927395D076BA6D6D20(L_36, /*hidden argument*/UnityObjectExtensions_IsNull_TisIMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_mC60A871C49437C248EDBA5927395D076BA6D6D20_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 587));
			V_8 = (bool)((((int32_t)L_37) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 564));
			bool L_38 = V_8;
			if (!L_38)
			{
				goto IL_011e;
			}
		}

IL_0101:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 565));
			// CoreServices.InputSystem.GazeProvider.UpdateGazeInfoFromHit(gazeHitResult.raycastHit);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 566));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 588));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_39 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 588));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 589));
			NullCheck(L_39);
			RuntimeObject* L_40 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_39);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 589));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_41 = __this->get_gazeHitResult_46();
			NullCheck(L_41);
			MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_42 = L_41->get_raycastHit_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 590));
			NullCheck(L_40);
			InterfaceActionInvoker1< MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  >::Invoke(15 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::UpdateGazeInfoFromHit(Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit) */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_40, L_42);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 590));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 567));
		}

IL_011e:
		{
			// gazeHitResult = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 568));
			__this->set_gazeHitResult_46((PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 *)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 569));
			IL2CPP_LEAVE(0x137, FINALLY_0128);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0128;
	}

FINALLY_0128:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 570));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 591));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 591));
		IL2CPP_END_FINALLY(296)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(296)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x137, IL_0137)
	}

IL_0137:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 571));
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetFocusedObject(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusProvider_GetFocusedObject_m83D55268C3BC0DC3C8D59C5F8AEE0053A7C84A90 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointingSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_GetFocusedObject_m83D55268C3BC0DC3C8D59C5F8AEE0053A7C84A90_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_4 = NULL;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointingSource0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_GetFocusedObject_m83D55268C3BC0DC3C8D59C5F8AEE0053A7C84A90_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 592));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 593));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 594));
		// using (GetFocusedObjectPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 595));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_GetFocusedObjectPerfMarker_47();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 609));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 609));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 596));
			// if (pointingSource == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 597));
			RuntimeObject* L_2 = ___pointingSource0;
			V_3 = (bool)((((RuntimeObject*)(RuntimeObject*)L_2) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 598));
			bool L_3 = V_3;
			if (!L_3)
			{
				goto IL_0029;
			}
		}

IL_0018:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 599));
			// Debug.LogError("No Pointer passed to get focused object");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 600));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 610));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(_stringLiteral69A6C3A1A9AAA5B81AF1DC3DAEF8B50B43A785D2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 610));
			// return null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 601));
			V_4 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
			IL2CPP_LEAVE(0x5B, FINALLY_004c);
		}

IL_0029:
		{
			// if (!TryGetFocusDetails(pointingSource, out focusDetails)) { return null; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 602));
			RuntimeObject* L_4 = ___pointingSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 611));
			bool L_5 = FocusProvider_TryGetFocusDetails_mC7FF52211D4CEEC4728550739BBAD27AF81A6F42(__this, L_4, (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 611));
			V_5 = (bool)((((int32_t)L_5) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 603));
			bool L_6 = V_5;
			if (!L_6)
			{
				goto IL_0041;
			}
		}

IL_003b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 604));
			// if (!TryGetFocusDetails(pointingSource, out focusDetails)) { return null; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 605));
			V_4 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
			IL2CPP_LEAVE(0x5B, FINALLY_004c);
		}

IL_0041:
		{
			// return focusDetails.Object;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 606));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 612));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 612));
			V_4 = L_7;
			IL2CPP_LEAVE(0x5B, FINALLY_004c);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_004c;
	}

FINALLY_004c:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 607));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 613));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 613));
		IL2CPP_END_FINALLY(76)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(76)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x5B, IL_005b)
	}

IL_005b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 608));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = V_4;
		return L_8;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryGetFocusDetails(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Physics.FocusDetails&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_TryGetFocusDetails_mC7FF52211D4CEEC4728550739BBAD27AF81A6F42 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * ___focusDetails1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_TryGetFocusDetails_mC7FF52211D4CEEC4728550739BBAD27AF81A6F42_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___focusDetails1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_TryGetFocusDetails_mC7FF52211D4CEEC4728550739BBAD27AF81A6F42_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 614));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 615));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 616));
		// using (TryGetFocusDetailsPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 617));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_TryGetFocusDetailsPerfMarker_48();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 628));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 628));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 618));
			// if (TryGetPointerData(pointer, out PointerData pointerData))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 619));
			RuntimeObject* L_2 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 629));
			bool L_3 = FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C(__this, L_2, (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE **)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 629));
			V_3 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 620));
			bool L_4 = V_3;
			if (!L_4)
			{
				goto IL_002f;
			}
		}

IL_001d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 621));
			// focusDetails = pointerData.Details;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 622));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_5 = ___focusDetails1;
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_6 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 630));
			NullCheck(L_6);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_7 = PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116(L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 630));
			*(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_5 = L_7;
			Il2CppCodeGenWriteBarrier((void**)&(((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_5)->___U3CObjectU3Ek__BackingField_3), (void*)NULL);
			#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
			Il2CppCodeGenWriteBarrier((void**)&((&(((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_5)->___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
			#endif
			#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
			Il2CppCodeGenWriteBarrier((void**)&((&(((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_5)->___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
			#endif
			#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
			Il2CppCodeGenWriteBarrier((void**)&((&(((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_5)->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
			#endif
			#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
			Il2CppCodeGenWriteBarrier((void**)&((&(((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_5)->___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
			#endif
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 623));
			V_4 = (bool)1;
			IL2CPP_LEAVE(0x4A, FINALLY_003b);
		}

IL_002f:
		{
			// focusDetails = default(FocusDetails);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 624));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_8 = ___focusDetails1;
			il2cpp_codegen_initobj(L_8, sizeof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 ));
			// return false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 625));
			V_4 = (bool)0;
			IL2CPP_LEAVE(0x4A, FINALLY_003b);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_003b;
	}

FINALLY_003b:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 626));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 631));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 631));
		IL2CPP_END_FINALLY(59)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(59)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x4A, IL_004a)
	}

IL_004a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 627));
		bool L_9 = V_4;
		return L_9;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryOverrideFocusDetails(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Physics.FocusDetails)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_TryOverrideFocusDetails_mE68AE884912636AE0ED1FDF97C160BCD4CF0FB20 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  ___focusDetails1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_TryOverrideFocusDetails_mE68AE884912636AE0ED1FDF97C160BCD4CF0FB20_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___focusDetails1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_TryOverrideFocusDetails_mE68AE884912636AE0ED1FDF97C160BCD4CF0FB20_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 632));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 633));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 634));
		// using (TryOverrideFocusDetailsPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 635));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_TryOverrideFocusDetailsPerfMarker_49();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 645));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 645));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 636));
			// if (TryGetPointerData(pointer, out PointerData pointerData))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 637));
			RuntimeObject* L_2 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 646));
			bool L_3 = FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C(__this, L_2, (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE **)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 646));
			V_3 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 638));
			bool L_4 = V_3;
			if (!L_4)
			{
				goto IL_002b;
			}
		}

IL_001d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 639));
			// pointerData.Details = focusDetails;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 640));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_5 = V_2;
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_6 = ___focusDetails1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 647));
			NullCheck(L_5);
			PointerData_set_Details_mF09692341E4DA354F6FD1AE4E5531C820D862488(L_5, L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 647));
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 641));
			V_4 = (bool)1;
			IL2CPP_LEAVE(0x3F, FINALLY_0030);
		}

IL_002b:
		{
			// return false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 642));
			V_4 = (bool)0;
			IL2CPP_LEAVE(0x3F, FINALLY_0030);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0030;
	}

FINALLY_0030:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 643));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 648));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 648));
		IL2CPP_END_FINALLY(48)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(48)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x3F, IL_003f)
	}

IL_003f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 644));
		bool L_7 = V_4;
		return L_7;
	}
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.FocusProvider::GenerateNewPointerId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t FocusProvider_GenerateNewPointerId_m696F40A9164B56CE76F9621800CF789979DB17E2 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_GenerateNewPointerId_m696F40A9164B56CE76F9621800CF789979DB17E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	uint32_t V_2 = 0;
	bool V_3 = false;
	uint32_t V_4 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_GenerateNewPointerId_m696F40A9164B56CE76F9621800CF789979DB17E2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 649));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 650));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 651));
		// using (GenerateNewPointerIdPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 652));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_GenerateNewPointerIdPerfMarker_50();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 662));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 662));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 653));
			// var newId = (uint)UnityEngine.Random.Range(1, int.MaxValue);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 654));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 663));
			int32_t L_2 = Random_Range_mD0C8F37FF3CAB1D87AAA6C45130BD59626BD6780(1, ((int32_t)2147483647LL), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 663));
			V_2 = L_2;
			// if (pointers.ContainsKey(newId))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 655));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_3 = __this->get_pointers_21();
			uint32_t L_4 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 664));
			NullCheck(L_3);
			bool L_5 = Dictionary_2_ContainsKey_m0F317286EE60E66B8B15D073968940599A9C569D(L_3, L_4, /*hidden argument*/Dictionary_2_ContainsKey_m0F317286EE60E66B8B15D073968940599A9C569D_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 664));
			V_3 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 656));
			bool L_6 = V_3;
			if (!L_6)
			{
				goto IL_0037;
			}
		}

IL_002c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 657));
			// return GenerateNewPointerId();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 658));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 665));
			uint32_t L_7 = FocusProvider_GenerateNewPointerId_m696F40A9164B56CE76F9621800CF789979DB17E2(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 665));
			V_4 = L_7;
			IL2CPP_LEAVE(0x4B, FINALLY_003c);
		}

IL_0037:
		{
			// return newId;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 659));
			uint32_t L_8 = V_2;
			V_4 = L_8;
			IL2CPP_LEAVE(0x4B, FINALLY_003c);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_003c;
	}

FINALLY_003c:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 660));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 666));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 666));
		IL2CPP_END_FINALLY(60)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(60)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x4B, IL_004b)
	}

IL_004b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 661));
		uint32_t L_9 = V_4;
		return L_9;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::FindOrCreateUiRaycastCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_FindOrCreateUiRaycastCamera_mD0CA5FF0E5333568489C8183A0CE8A57A404A81B (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_FindOrCreateUiRaycastCamera_mD0CA5FF0E5333568489C8183A0CE8A57A404A81B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_FindOrCreateUiRaycastCamera_mD0CA5FF0E5333568489C8183A0CE8A57A404A81B_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 667));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 668));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 669));
		// GameObject cameraObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 670));
		V_0 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
		// var existingUiRaycastCameraObject = GameObject.Find("UIRaycastCamera");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 705));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = GameObject_Find_m1470FB04EB6DB15CCC0D9745B70EE987B318E9BD(_stringLiteral519A567F6ECAF530BAF12DA104AE05B9CD88BA9F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 705));
		V_1 = L_0;
		// if (existingUiRaycastCameraObject != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 672));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 706));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 706));
		V_2 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 673));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 674));
		// cameraObject = existingUiRaycastCameraObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 675));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = V_1;
		V_0 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 676));
		goto IL_0033;
	}

IL_001f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 677));
		// cameraObject = new GameObject { name = "UIRaycastCamera" };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 678));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 707));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)il2cpp_codegen_object_new(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_il2cpp_TypeInfo_var);
		GameObject__ctor_mA4DFA8F4471418C248E95B55070665EF344B4B2D(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 707));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 708));
		NullCheck(L_6);
		Object_set_name_m538711B144CDE30F929376BCF72D0DC8F85D0826(L_6, _stringLiteral519A567F6ECAF530BAF12DA104AE05B9CD88BA9F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 708));
		V_0 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 679));
	}

IL_0033:
	{
		// uiRaycastCamera = cameraObject.EnsureComponent<Camera>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 680));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 709));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_8 = ComponentExtensions_EnsureComponent_TisCamera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_m3E111EC6D639E9E4BA0D62A81AA6754E146C160F(L_7, /*hidden argument*/ComponentExtensions_EnsureComponent_TisCamera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_m3E111EC6D639E9E4BA0D62A81AA6754E146C160F_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 709));
		__this->set_uiRaycastCamera_38(L_8);
		// uiRaycastCamera.enabled = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 681));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_9 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 710));
		NullCheck(L_9);
		Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(L_9, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 710));
		// uiRaycastCamera.clearFlags = CameraClearFlags.Color;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 682));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_10 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 711));
		NullCheck(L_10);
		Camera_set_clearFlags_m805DFBD136AA3E1E46A2E61441965D174E87FE50(L_10, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 711));
		// uiRaycastCamera.backgroundColor = new Color(0, 0, 0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 683));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_11 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 712));
		Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_12;
		memset((&L_12), 0, sizeof(L_12));
		Color__ctor_m20DF490CEB364C4FC36D7EE392640DF5B7420D7C((&L_12), (0.0f), (0.0f), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 712));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 713));
		NullCheck(L_11);
		Camera_set_backgroundColor_mDB9CA1B37FE2D52493823914AC5BC9F8C1935D6F(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 713));
		// uiRaycastCamera.cullingMask = CameraCache.Main.cullingMask;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 684));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_13 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 714));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_14 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 714));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 715));
		NullCheck(L_14);
		int32_t L_15 = Camera_get_cullingMask_m0992E96D87A4221E38746EBD882780CEFF7C2BCD(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 715));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 716));
		NullCheck(L_13);
		Camera_set_cullingMask_m215DB1C878CF1ADEEF6800AF449EEEA7680ECCCD(L_13, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 716));
		// uiRaycastCamera.orthographic = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 685));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_16 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 717));
		NullCheck(L_16);
		Camera_set_orthographic_mB2549D26F5E220102D7478EB4C15F8F12D96FE09(L_16, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 717));
		// uiRaycastCamera.orthographicSize = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 686));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_17 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 718));
		NullCheck(L_17);
		Camera_set_orthographicSize_mF15F37A294A7AA2ADD9519728A495DFA0A836428(L_17, (0.5f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 718));
		// uiRaycastCamera.nearClipPlane = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 687));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_18 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 719));
		NullCheck(L_18);
		Camera_set_nearClipPlane_m9D81E50F8658C16319BEF3774E78B93DEB208C6B(L_18, (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 719));
		// uiRaycastCamera.farClipPlane = 1000f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 688));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_19 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 720));
		NullCheck(L_19);
		Camera_set_farClipPlane_m52986DC40B7F577255C4D5A4F780FD8A7D862626(L_19, (1000.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 720));
		// uiRaycastCamera.rect = new Rect(0, 0, 1, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 689));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_20 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 721));
		Rect_t35B976DE901B5423C11705E156938EA27AB402CE  L_21;
		memset((&L_21), 0, sizeof(L_21));
		Rect__ctor_m50B92C75005C9C5A0D05E6E0EBB43AFAF7C66280((&L_21), (0.0f), (0.0f), (1.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 721));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 722));
		NullCheck(L_20);
		Camera_set_rect_m6DB9964EA6E519E2B07561C8CE6AA423980FEC11(L_20, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 722));
		// uiRaycastCamera.depth = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 690));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_22 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 723));
		NullCheck(L_22);
		Camera_set_depth_m4A83CCCF7370B8AD4BDB2CD5528A6E12A409AE58(L_22, (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 723));
		// uiRaycastCamera.renderingPath = RenderingPath.UsePlayerSettings;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 691));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_23 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 724));
		NullCheck(L_23);
		Camera_set_renderingPath_m0322DAAE0B2429DD235D4C231AB035A0E3E4CB5A(L_23, (-1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 724));
		// uiRaycastCamera.useOcclusionCulling = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 692));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_24 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 725));
		NullCheck(L_24);
		Camera_set_useOcclusionCulling_mC794B18E634F5A2DEDA36C76E685DB881B822C41(L_24, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 725));
		// uiRaycastCamera.allowHDR = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 693));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_25 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 726));
		NullCheck(L_25);
		Camera_set_allowHDR_mD5460B086C328CE83D294D01C5EABA2B4BAF8E0E(L_25, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 726));
		// uiRaycastCamera.allowMSAA = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 694));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_26 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 727));
		NullCheck(L_26);
		Camera_set_allowMSAA_m05738C02C8AAB5DF3718D1DBC52E0BF4CF54753E(L_26, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 727));
		// uiRaycastCamera.allowDynamicResolution = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 695));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_27 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 728));
		NullCheck(L_27);
		Camera_set_allowDynamicResolution_mD5528265C2748EE3EC0A62C092E0D8F66AAF20E7(L_27, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 728));
		// uiRaycastCamera.targetDisplay = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 696));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_28 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 729));
		NullCheck(L_28);
		Camera_set_targetDisplay_mE38B403C22D4109BB5935863C24EAD2710177696(L_28, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 729));
		// uiRaycastCamera.stereoTargetEye = StereoTargetEyeMask.Both;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 697));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_29 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 730));
		NullCheck(L_29);
		Camera_set_stereoTargetEye_mE0ED5F289154FCD153D5F35A0F92EABE04B845EA(L_29, 3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 730));
		// if (uiRaycastCameraTargetTexture == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 698));
		RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * L_30 = __this->get_uiRaycastCameraTargetTexture_37();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 731));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_31 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_30, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 731));
		V_3 = L_31;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 699));
		bool L_32 = V_3;
		if (!L_32)
		{
			goto IL_018d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 700));
		// uiRaycastCameraTargetTexture = new RenderTexture(128, 128, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 701));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 732));
		RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * L_33 = (RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 *)il2cpp_codegen_object_new(RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6_il2cpp_TypeInfo_var);
		RenderTexture__ctor_mB54A3ABBD56D38AB762D0AB8B789E2771BC42A7D(L_33, ((int32_t)128), ((int32_t)128), 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 732));
		__this->set_uiRaycastCameraTargetTexture_37(L_33);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 702));
	}

IL_018d:
	{
		// uiRaycastCamera.targetTexture = uiRaycastCameraTargetTexture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 703));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_34 = __this->get_uiRaycastCamera_38();
		RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * L_35 = __this->get_uiRaycastCameraTargetTexture_37();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 733));
		NullCheck(L_34);
		Camera_set_targetTexture_m9D0DCEFF0C5596CBBC6FA7EE206F196CB0A8997D(L_34, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 733));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 704));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::CleanUpUiRaycastCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_CleanUpUiRaycastCamera_mF637B34A052A3AF7D3E1055D57FD51C9D1FFEE96 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_CleanUpUiRaycastCamera_mF637B34A052A3AF7D3E1055D57FD51C9D1FFEE96_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_CleanUpUiRaycastCamera_mF637B34A052A3AF7D3E1055D57FD51C9D1FFEE96_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 734));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 735));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 736));
		// if (uiRaycastCameraTargetTexture != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 737));
		RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * L_0 = __this->get_uiRaycastCameraTargetTexture_37();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 750));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 750));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 738));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 739));
		// UnityEngine.Object.Destroy(uiRaycastCameraTargetTexture);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 740));
		RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 * L_3 = __this->get_uiRaycastCameraTargetTexture_37();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 751));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 751));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 741));
	}

IL_001f:
	{
		// uiRaycastCameraTargetTexture = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 742));
		__this->set_uiRaycastCameraTargetTexture_37((RenderTexture_tBC47D853E3DA6511CD6C49DBF78D47B890FCD2F6 *)NULL);
		// if (uiRaycastCamera != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 743));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_4 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 752));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 752));
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 744));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0049;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 745));
		// UnityEngine.Object.Destroy(uiRaycastCamera.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 746));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_7 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 753));
		NullCheck(L_7);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 753));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 754));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 754));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 747));
	}

IL_0049:
	{
		// uiRaycastCamera = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 748));
		__this->set_uiRaycastCamera_38((Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 *)NULL);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 749));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::IsPointerRegistered(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_IsPointerRegistered_mD63752FBB3A7A5774246446DEDAFC56F97EAF222 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_IsPointerRegistered_mD63752FBB3A7A5774246446DEDAFC56F97EAF222_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_0 = NULL;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_IsPointerRegistered_mD63752FBB3A7A5774246446DEDAFC56F97EAF222_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 755));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 756));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 757));
		// Debug.Assert(pointer.PointerId != 0, $"{pointer} does not have a valid pointer id!");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 758));
		RuntimeObject* L_0 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 761));
		NullCheck(L_0);
		uint32_t L_1 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 761));
		RuntimeObject* L_2 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 762));
		String_t* L_3 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralA8A5747A61C9521E48EBC6ABC5F60C305E97F415, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 762));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 763));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)((!(((uint32_t)L_1) <= ((uint32_t)0)))? 1 : 0), L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 763));
		// return TryGetPointerData(pointer, out _);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 759));
		RuntimeObject* L_4 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 764));
		bool L_5 = FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C(__this, L_4, (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE **)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 764));
		V_1 = L_5;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 760));
		bool L_6 = V_1;
		return L_6;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::RegisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_RegisterPointer_m96FFC15B10A3BEBE21BF60B613706DA77A139574 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_RegisterPointer_m96FFC15B10A3BEBE21BF60B613706DA77A139574_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_RegisterPointer_m96FFC15B10A3BEBE21BF60B613706DA77A139574_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 765));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 766));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 767));
		// using (RegisterPointerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 768));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_RegisterPointerPerfMarker_51();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 784));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 784));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 769));
			// Debug.Assert(pointer.PointerId != 0, $"{pointer} does not have a valid pointer id!");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 770));
			RuntimeObject* L_2 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 785));
			NullCheck(L_2);
			uint32_t L_3 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 785));
			RuntimeObject* L_4 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 786));
			String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralA8A5747A61C9521E48EBC6ABC5F60C305E97F415, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 786));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 787));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0), L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 787));
			// if (IsPointerRegistered(pointer)) { return false; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 771));
			RuntimeObject* L_6 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 788));
			bool L_7 = FocusProvider_IsPointerRegistered_mD63752FBB3A7A5774246446DEDAFC56F97EAF222(__this, L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 788));
			V_2 = L_7;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 772));
			bool L_8 = V_2;
			if (!L_8)
			{
				goto IL_003a;
			}
		}

IL_0035:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 773));
			// if (IsPointerRegistered(pointer)) { return false; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 774));
			V_3 = (bool)0;
			IL2CPP_LEAVE(0x83, FINALLY_0074);
		}

IL_003a:
		{
			// pointers.Add(pointer.PointerId, new PointerData(pointer));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 775));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_9 = __this->get_pointers_21();
			RuntimeObject* L_10 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 789));
			NullCheck(L_10);
			uint32_t L_11 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 789));
			RuntimeObject* L_12 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 790));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_13 = (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *)il2cpp_codegen_object_new(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var);
			PointerData__ctor_mEB63D3D2EA4F60ED0BCA0ED9038347455AEEFD6B(L_13, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 790));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 791));
			NullCheck(L_9);
			Dictionary_2_Add_m394FACA53A551ECFEDCC3562140D68BF1F48E4B4(L_9, L_11, L_13, /*hidden argument*/Dictionary_2_Add_m394FACA53A551ECFEDCC3562140D68BF1F48E4B4_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 791));
			// if (primaryPointerSelector != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 776));
			RuntimeObject* L_14 = __this->get_primaryPointerSelector_41();
			V_4 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_14) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 777));
			bool L_15 = V_4;
			if (!L_15)
			{
				goto IL_0070;
			}
		}

IL_0061:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 778));
			// primaryPointerSelector.RegisterPointer(pointer);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 779));
			RuntimeObject* L_16 = __this->get_primaryPointerSelector_41();
			RuntimeObject* L_17 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 792));
			NullCheck(L_16);
			InterfaceActionInvoker1< RuntimeObject* >::Invoke(2 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector::RegisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer) */, IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var, L_16, L_17);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 792));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 780));
		}

IL_0070:
		{
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 781));
			V_3 = (bool)1;
			IL2CPP_LEAVE(0x83, FINALLY_0074);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0074;
	}

FINALLY_0074:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 782));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 793));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 793));
		IL2CPP_END_FINALLY(116)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(116)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x83, IL_0083)
	}

IL_0083:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 783));
		bool L_18 = V_3;
		return L_18;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::RegisterPointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	Type_t * V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	int32_t V_8 = 0;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 794));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 795));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 4);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	Type_t * G_B6_0 = NULL;
	int32_t G_B20_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 796));
		// using (RegisterPointersPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 797));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_RegisterPointersPerfMarker_52();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 843));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 843));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 798));
			// if (inputSource.Pointers == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 799));
			RuntimeObject* L_2 = ___inputSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 844));
			NullCheck(L_2);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_3 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 844));
			V_4 = (bool)((((RuntimeObject*)(IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)L_3) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 800));
			bool L_4 = V_4;
			if (!L_4)
			{
				goto IL_0025;
			}
		}

IL_001f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 801));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 802));
			IL2CPP_LEAVE(0x164, FINALLY_0155);
		}

IL_0025:
		{
			// IMixedRealityPointerMediator mediator = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 803));
			V_2 = (RuntimeObject*)NULL;
			// var mediatorType = CoreServices.InputSystem?.InputSystemProfile.PointerProfile.PointerMediator.Type;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 804));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 845));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_5 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 845));
			RuntimeObject* L_6 = L_5;
			G_B4_0 = L_6;
			if (L_6)
			{
				G_B5_0 = L_6;
				goto IL_0033;
			}
		}

IL_002f:
		{
			G_B6_0 = ((Type_t *)(NULL));
			goto IL_0047;
		}

IL_0033:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 846));
			NullCheck(G_B5_0);
			MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_7 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B5_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 846));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 847));
			NullCheck(L_7);
			MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * L_8 = MixedRealityInputSystemProfile_get_PointerProfile_mDC3CDA9676141BCF2B6A3F10979A43F903D6A821(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 847));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 848));
			NullCheck(L_8);
			SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_9 = MixedRealityPointerProfile_get_PointerMediator_m340B6C52AAE2B7A451FF0830720951701E65BAD9(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 848));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 849));
			NullCheck(L_9);
			Type_t * L_10 = SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CD_inline(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 849));
			G_B6_0 = L_10;
		}

IL_0047:
		{
			V_3 = G_B6_0;
			// if (mediatorType != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 805));
			Type_t * L_11 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 850));
			IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
			bool L_12 = Type_op_Inequality_m615014191FB05FD50F63A24EB9A6CCA785E7CEC9(L_11, (Type_t *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 850));
			V_5 = L_12;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 806));
			bool L_13 = V_5;
			if (!L_13)
			{
				goto IL_008a;
			}
		}

IL_0055:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 807));
		}

IL_0056:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 808));
			// mediator = Activator.CreateInstance(mediatorType, this) as IMixedRealityPointerMediator;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 809));
			Type_t * L_14 = V_3;
			ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_15 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)SZArrayNew(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A_il2cpp_TypeInfo_var, (uint32_t)1);
			ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_16 = L_15;
			NullCheck(L_16);
			ArrayElementTypeCheck (L_16, __this);
			(L_16)->SetAt(static_cast<il2cpp_array_size_t>(0), (RuntimeObject *)__this);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 851));
			RuntimeObject * L_17 = Activator_CreateInstance_mEE50708E1E8AAD4E5021A2FFDB992DDF65727E17(L_14, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 851));
			V_2 = ((RuntimeObject*)IsInst((RuntimeObject*)L_17, IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_il2cpp_TypeInfo_var));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 810));
			goto IL_0081;
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__exception_local = (Exception_t *)e.ex;
			if(il2cpp_codegen_class_is_assignable_from (MissingMethodException_t7D33DFD3009E4F19BE4DD0967F04D3878F348498_il2cpp_TypeInfo_var, il2cpp_codegen_object_class(e.ex)))
				goto CATCH_0070;
			throw e;
		}

CATCH_0070:
		{ // begin catch(System.MissingMethodException)
			STORE_TRY_ID(methodExecutionContext, 0);
			// catch (MissingMethodException)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 811));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 812));
			// mediator = Activator.CreateInstance(mediatorType) as IMixedRealityPointerMediator;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 813));
			Type_t * L_18 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 852));
			RuntimeObject * L_19 = Activator_CreateInstance_mD06EE47879F606317C6DA91FB63E678CABAC6A16(L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 852));
			V_2 = ((RuntimeObject*)IsInst((RuntimeObject*)L_19, IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_il2cpp_TypeInfo_var));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 814));
			goto IL_0081;
		} // end catch (depth: 2)

IL_0081:
		{
			// mediator.SetPointerPreferences(this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 815));
			RuntimeObject* L_20 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 853));
			NullCheck(L_20);
			InterfaceActionInvoker1< RuntimeObject* >::Invoke(3 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator::SetPointerPreferences(Microsoft.MixedReality.Toolkit.Input.IPointerPreferences) */, IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_il2cpp_TypeInfo_var, L_20, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 853));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 816));
		}

IL_008a:
		{
			// if (mediator != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 817));
			RuntimeObject* L_21 = V_2;
			V_6 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_21) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 818));
			bool L_22 = V_6;
			if (!L_22)
			{
				goto IL_00d2;
			}
		}

IL_0094:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 819));
			// mediator.RegisterPointers(inputSource.Pointers);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 820));
			RuntimeObject* L_23 = V_2;
			RuntimeObject* L_24 = ___inputSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 854));
			NullCheck(L_24);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_25 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_24);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 854));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 855));
			NullCheck(L_23);
			InterfaceActionInvoker1< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator::RegisterPointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]) */, IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_il2cpp_TypeInfo_var, L_23, L_25);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 855));
			// if (!pointerMediators.ContainsKey(inputSource.SourceId))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 821));
			Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * L_26 = __this->get_pointerMediators_25();
			RuntimeObject* L_27 = ___inputSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 856));
			NullCheck(L_27);
			uint32_t L_28 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_27);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 856));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 857));
			NullCheck(L_26);
			bool L_29 = Dictionary_2_ContainsKey_m26ABD682E36BA03DAC1643C8B8C4B6403A41361E(L_26, L_28, /*hidden argument*/Dictionary_2_ContainsKey_m26ABD682E36BA03DAC1643C8B8C4B6403A41361E_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 857));
			V_7 = (bool)((((int32_t)L_29) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 822));
			bool L_30 = V_7;
			if (!L_30)
			{
				goto IL_00d1;
			}
		}

IL_00bc:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 823));
			// pointerMediators.Add(inputSource.SourceId, mediator);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 824));
			Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * L_31 = __this->get_pointerMediators_25();
			RuntimeObject* L_32 = ___inputSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 858));
			NullCheck(L_32);
			uint32_t L_33 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_32);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 858));
			RuntimeObject* L_34 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 859));
			NullCheck(L_31);
			Dictionary_2_Add_m18BD44DB699847006DEB20C3FCB000F4F95B3101(L_31, L_33, L_34, /*hidden argument*/Dictionary_2_Add_m18BD44DB699847006DEB20C3FCB000F4F95B3101_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 859));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 825));
		}

IL_00d1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 826));
		}

IL_00d2:
		{
			// for (int i = 0; i < inputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 827));
			V_8 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 828));
			goto IL_0140;
		}

IL_00d7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 829));
			// RegisterPointer(inputSource.Pointers[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 830));
			RuntimeObject* L_35 = ___inputSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 860));
			NullCheck(L_35);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_36 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_35);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 860));
			int32_t L_37 = V_8;
			NullCheck(L_36);
			int32_t L_38 = L_37;
			RuntimeObject* L_39 = (L_36)->GetAt(static_cast<il2cpp_array_size_t>(L_38));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 861));
			FocusProvider_RegisterPointer_m96FFC15B10A3BEBE21BF60B613706DA77A139574(__this, L_39, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 861));
			// if (!CoreServices.InputSystem.GazeProvider.IsNull()
			//     && inputSource.SourceId == CoreServices.InputSystem.GazeProvider.GazeInputSource.SourceId
			//     && gazeProviderPointingData == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 831));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 862));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_40 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 862));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 863));
			NullCheck(L_40);
			RuntimeObject* L_41 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_40);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 863));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 864));
			bool L_42 = UnityObjectExtensions_IsNull_TisIMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_mC60A871C49437C248EDBA5927395D076BA6D6D20(L_41, /*hidden argument*/UnityObjectExtensions_IsNull_TisIMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_mC60A871C49437C248EDBA5927395D076BA6D6D20_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 864));
			if (L_42)
			{
				goto IL_0120;
			}
		}

IL_00f9:
		{
			RuntimeObject* L_43 = ___inputSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 865));
			NullCheck(L_43);
			uint32_t L_44 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_43);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 865));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 866));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_45 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 866));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 867));
			NullCheck(L_45);
			RuntimeObject* L_46 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_45);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 867));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 868));
			NullCheck(L_46);
			RuntimeObject* L_47 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(2 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeInputSource() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_46);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 868));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 869));
			NullCheck(L_47);
			uint32_t L_48 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_47);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 869));
			if ((!(((uint32_t)L_44) == ((uint32_t)L_48))))
			{
				goto IL_0120;
			}
		}

IL_0115:
		{
			PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_49 = __this->get_gazeProviderPointingData_45();
			G_B20_0 = ((((RuntimeObject*)(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *)L_49) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			goto IL_0121;
		}

IL_0120:
		{
			G_B20_0 = 0;
		}

IL_0121:
		{
			V_9 = (bool)G_B20_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 832));
			bool L_50 = V_9;
			if (!L_50)
			{
				goto IL_0139;
			}
		}

IL_0127:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 833));
			// gazeProviderPointingData = new PointerEventData(EventSystem.current);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 834));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 870));
			IL2CPP_RUNTIME_CLASS_INIT(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_il2cpp_TypeInfo_var);
			EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_51 = EventSystem_get_current_m3151477735829089F66A3E46AD6DAB14CFDDE7BD(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 870));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 871));
			PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_52 = (PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *)il2cpp_codegen_object_new(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63_il2cpp_TypeInfo_var);
			PointerEventData__ctor_m121A903CE81C0758A49C721F7C1668362BFAE7E4(L_52, L_51, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 871));
			__this->set_gazeProviderPointingData_45(L_52);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 835));
		}

IL_0139:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 836));
			// for (int i = 0; i < inputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 837));
			int32_t L_53 = V_8;
			V_8 = ((int32_t)il2cpp_codegen_add((int32_t)L_53, (int32_t)1));
		}

IL_0140:
		{
			// for (int i = 0; i < inputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 838));
			int32_t L_54 = V_8;
			RuntimeObject* L_55 = ___inputSource0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 872));
			NullCheck(L_55);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_56 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_55);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 872));
			NullCheck(L_56);
			V_10 = (bool)((((int32_t)L_54) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_56)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 839));
			bool L_57 = V_10;
			if (L_57)
			{
				goto IL_00d7;
			}
		}

IL_0152:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 840));
			IL2CPP_LEAVE(0x164, FINALLY_0155);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0155;
	}

FINALLY_0155:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 841));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 873));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 873));
		IL2CPP_END_FINALLY(341)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(341)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x164, IL_0164)
	}

IL_0164:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 842));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::UnregisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_UnregisterPointer_m58A22C294E07D6D209ECD47D063ACF6DCACBF5AA (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_UnregisterPointer_m58A22C294E07D6D209ECD47D063ACF6DCACBF5AA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_6 = NULL;
	bool V_7 = false;
	Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  V_8;
	memset((&V_8), 0, sizeof(V_8));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_9 = NULL;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_6), (&V_7), (&V_9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_UnregisterPointer_m58A22C294E07D6D209ECD47D063ACF6DCACBF5AA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 874));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 875));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B9_0 = 0;
	RuntimeObject* G_B17_0 = NULL;
	RuntimeObject* G_B16_0 = NULL;
	RuntimeObject* G_B21_0 = NULL;
	RuntimeObject* G_B20_0 = NULL;
	RuntimeObject* G_B25_0 = NULL;
	RuntimeObject* G_B24_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 876));
		// using (UnregisterPointerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 877));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_UnregisterPointerPerfMarker_53();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 920));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 920));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 878));
			// Debug.Assert(pointer.PointerId != 0, $"{pointer} does not have a valid pointer id!");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 879));
			RuntimeObject* L_2 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 921));
			NullCheck(L_2);
			uint32_t L_3 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 921));
			RuntimeObject* L_4 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 922));
			String_t* L_5 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteralA8A5747A61C9521E48EBC6ABC5F60C305E97F415, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 922));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 923));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0), L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 923));
			// if (!TryGetPointerData(pointer, out PointerData pointerData)) { return false; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 880));
			RuntimeObject* L_6 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 924));
			bool L_7 = FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C(__this, L_6, (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE **)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 924));
			V_3 = (bool)((((int32_t)L_7) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 881));
			bool L_8 = V_3;
			if (!L_8)
			{
				goto IL_0043;
			}
		}

IL_003a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 882));
			// if (!TryGetPointerData(pointer, out PointerData pointerData)) { return false; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 883));
			V_4 = (bool)0;
			IL2CPP_LEAVE(0x16C, FINALLY_015d);
		}

IL_0043:
		{
			// if (pointerData.CurrentPointerTarget != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 884));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_9 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 925));
			NullCheck(L_9);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 925));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 926));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 926));
			V_5 = L_11;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 885));
			bool L_12 = V_5;
			if (!L_12)
			{
				goto IL_0111;
			}
		}

IL_0058:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 886));
			// GameObject unfocusedObject = pointerData.CurrentPointerTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 887));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_13 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 927));
			NullCheck(L_13);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 927));
			V_6 = L_14;
			// bool objectIsStillFocusedByOtherPointer = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 888));
			V_7 = (bool)0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 889));
			// foreach (var otherPointer in pointers.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 890));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_15 = __this->get_pointers_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 928));
			NullCheck(L_15);
			ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * L_16 = Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC(L_15, /*hidden argument*/Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 928));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 929));
			NullCheck(L_16);
			Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  L_17 = ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB(L_16, /*hidden argument*/ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 929));
			V_8 = L_17;
		}

IL_0077:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 891));
				goto IL_00ab;
			}

IL_0079:
			{
				// foreach (var otherPointer in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 892));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 930));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_18 = Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_inline((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_8), /*hidden argument*/Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 930));
				V_9 = L_18;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 893));
				// if (otherPointer.Pointer != pointer && otherPointer.CurrentPointerTarget == unfocusedObject)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 894));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_19 = V_9;
				NullCheck(L_19);
				RuntimeObject* L_20 = L_19->get_Pointer_0();
				RuntimeObject* L_21 = ___pointer0;
				if ((((RuntimeObject*)(RuntimeObject*)L_20) == ((RuntimeObject*)(RuntimeObject*)L_21)))
				{
					goto IL_009d;
				}
			}

IL_008d:
			{
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_22 = V_9;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 931));
				NullCheck(L_22);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_23 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_22, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 931));
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = V_6;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 932));
				IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
				bool L_25 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_23, L_24, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 932));
				G_B9_0 = ((int32_t)(L_25));
				goto IL_009e;
			}

IL_009d:
			{
				G_B9_0 = 0;
			}

IL_009e:
			{
				V_10 = (bool)G_B9_0;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 895));
				bool L_26 = V_10;
				if (!L_26)
				{
					goto IL_00aa;
				}
			}

IL_00a4:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 896));
				// objectIsStillFocusedByOtherPointer = true;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 897));
				V_7 = (bool)1;
				// break;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 898));
				goto IL_00b4;
			}

IL_00aa:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 899));
			}

IL_00ab:
			{
				// foreach (var otherPointer in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 900));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 933));
				bool L_27 = Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_8), /*hidden argument*/Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 933));
				if (L_27)
				{
					goto IL_0079;
				}
			}

IL_00b4:
			{
				IL2CPP_LEAVE(0xC5, FINALLY_00b6);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_00b6;
		}

FINALLY_00b6:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 901));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 934));
			Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_8), /*hidden argument*/Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 934));
			IL2CPP_END_FINALLY(182)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(182)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0xC5, IL_00c5)
		}

IL_00c5:
		{
			// CoreServices.InputSystem?.RaisePreFocusChanged(pointer, unfocusedObject, null);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 902));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 935));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_28 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 935));
			RuntimeObject* L_29 = L_28;
			G_B16_0 = L_29;
			if (L_29)
			{
				G_B17_0 = L_29;
				goto IL_00d0;
			}
		}

IL_00cd:
		{
			goto IL_00da;
		}

IL_00d0:
		{
			RuntimeObject* L_30 = ___pointer0;
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_31 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 936));
			NullCheck(G_B17_0);
			InterfaceActionInvoker3< RuntimeObject*, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(31 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePreFocusChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.GameObject,UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B17_0, L_30, L_31, (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 936));
		}

IL_00da:
		{
			// if (!objectIsStillFocusedByOtherPointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 903));
			bool L_32 = V_7;
			V_11 = (bool)((((int32_t)L_32) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 904));
			bool L_33 = V_11;
			if (!L_33)
			{
				goto IL_00fb;
			}
		}

IL_00e5:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 905));
			// CoreServices.InputSystem?.RaiseFocusExit(pointer, unfocusedObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 906));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 937));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_34 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 937));
			RuntimeObject* L_35 = L_34;
			G_B20_0 = L_35;
			if (L_35)
			{
				G_B21_0 = L_35;
				goto IL_00f1;
			}
		}

IL_00ee:
		{
			goto IL_00fa;
		}

IL_00f1:
		{
			RuntimeObject* L_36 = ___pointer0;
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_37 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 938));
			NullCheck(G_B21_0);
			InterfaceActionInvoker2< RuntimeObject*, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(34 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseFocusExit(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B21_0, L_36, L_37);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 938));
		}

IL_00fa:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 907));
		}

IL_00fb:
		{
			// CoreServices.InputSystem?.RaiseFocusChanged(pointer, unfocusedObject, null);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 908));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 939));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_38 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 939));
			RuntimeObject* L_39 = L_38;
			G_B24_0 = L_39;
			if (L_39)
			{
				G_B25_0 = L_39;
				goto IL_0106;
			}
		}

IL_0103:
		{
			goto IL_0110;
		}

IL_0106:
		{
			RuntimeObject* L_40 = ___pointer0;
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_41 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 940));
			NullCheck(G_B25_0);
			InterfaceActionInvoker3< RuntimeObject*, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(32 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseFocusChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.GameObject,UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B25_0, L_40, L_41, (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 940));
		}

IL_0110:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 909));
		}

IL_0111:
		{
			// pointers.Remove(pointerData.Pointer.PointerId);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 910));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_42 = __this->get_pointers_21();
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_43 = V_2;
			NullCheck(L_43);
			RuntimeObject* L_44 = L_43->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 941));
			NullCheck(L_44);
			uint32_t L_45 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_44);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 941));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 942));
			NullCheck(L_42);
			Dictionary_2_Remove_mE2192AEE6449DD7B81E5CEBE4D85048B74BE1FDB(L_42, L_45, /*hidden argument*/Dictionary_2_Remove_mE2192AEE6449DD7B81E5CEBE4D85048B74BE1FDB_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 942));
			// if (primaryPointerSelector != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 911));
			RuntimeObject* L_46 = __this->get_primaryPointerSelector_41();
			V_12 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_46) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 912));
			bool L_47 = V_12;
			if (!L_47)
			{
				goto IL_0158;
			}
		}

IL_0137:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 913));
			// primaryPointerSelector.UnregisterPointer(pointer);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 914));
			RuntimeObject* L_48 = __this->get_primaryPointerSelector_41();
			RuntimeObject* L_49 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 943));
			NullCheck(L_48);
			InterfaceActionInvoker1< RuntimeObject* >::Invoke(3 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector::UnregisterPointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer) */, IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var, L_48, L_49);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 943));
			// PrimaryPointer = primaryPointerSelector.Update();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 915));
			RuntimeObject* L_50 = __this->get_primaryPointerSelector_41();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 944));
			NullCheck(L_50);
			RuntimeObject* L_51 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(4 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityPrimaryPointerSelector::Update() */, IMixedRealityPrimaryPointerSelector_t7203827EBB45DC88997624F30F96462099990A12_il2cpp_TypeInfo_var, L_50);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 944));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 945));
			FocusProvider_set_PrimaryPointer_m0D9089F4858932B6F39B46D48370F48A71DB03D2(__this, L_51, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 945));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 916));
		}

IL_0158:
		{
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 917));
			V_4 = (bool)1;
			IL2CPP_LEAVE(0x16C, FINALLY_015d);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_015d;
	}

FINALLY_015d:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 918));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 946));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 946));
		IL2CPP_END_FINALLY(349)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(349)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x16C, IL_016c)
	}

IL_016c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 919));
		bool L_52 = V_4;
		return L_52;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::SubscribeToPrimaryPointerChanged(Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_SubscribeToPrimaryPointerChanged_mBBB806AA8C93E6BE1BFB28A5082BAE9311F7CD95 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * ___handler0, bool ___invokeHandlerWithCurrentPointer1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_SubscribeToPrimaryPointerChanged_mBBB806AA8C93E6BE1BFB28A5082BAE9311F7CD95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handler0), (&___invokeHandlerWithCurrentPointer1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_SubscribeToPrimaryPointerChanged_mBBB806AA8C93E6BE1BFB28A5082BAE9311F7CD95_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 974));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 975));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 976));
		// if (invokeHandlerWithCurrentPointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 977));
		bool L_0 = ___invokeHandlerWithCurrentPointer1;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 978));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 979));
		// handler(null, PrimaryPointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 980));
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_2 = ___handler0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 984));
		RuntimeObject* L_3 = FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 984));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 985));
		NullCheck(L_2);
		PrimaryPointerChangedHandler_Invoke_m5D0470464C6D56240DC7DA1522B2194CBB22AC3F(L_2, (RuntimeObject*)NULL, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 985));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 981));
	}

IL_0016:
	{
		// PrimaryPointerChanged += handler;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 982));
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_4 = ___handler0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 986));
		FocusProvider_add_PrimaryPointerChanged_mDE374491D0C26A60108DF9A055DECF31A5FD80D3(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 986));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 983));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UnsubscribeFromPrimaryPointerChanged(Microsoft.MixedReality.Toolkit.Input.PrimaryPointerChangedHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UnsubscribeFromPrimaryPointerChanged_mC3EEC0AD7106856E336241F9254C8A4EB808DE7F (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * ___handler0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_UnsubscribeFromPrimaryPointerChanged_mC3EEC0AD7106856E336241F9254C8A4EB808DE7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handler0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_UnsubscribeFromPrimaryPointerChanged_mC3EEC0AD7106856E336241F9254C8A4EB808DE7F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 987));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 988));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 989));
		// PrimaryPointerChanged -= handler;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 990));
		PrimaryPointerChangedHandler_tD2AB82F9D769405CDA9F07AC01D1411028C5A8C0 * L_0 = ___handler0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 992));
		FocusProvider_remove_PrimaryPointerChanged_m6A1A89E933DC765374BE0DD838BBD23E282685E9(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 992));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 991));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::TryGetPointerData(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE ** ___data1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___data1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_TryGetPointerData_m2BBBA06EF144843ED4A67A4AB25321CE6F0AE75C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 993));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 994));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 995));
		// using (TryGetPointerDataPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 996));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_TryGetPointerDataPerfMarker_54();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1006));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1006));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 997));
			// if (pointers.TryGetValue(pointer.PointerId, out data))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 998));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_2 = __this->get_pointers_21();
			RuntimeObject* L_3 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1007));
			NullCheck(L_3);
			uint32_t L_4 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_3);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1007));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE ** L_5 = ___data1;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1008));
			NullCheck(L_2);
			bool L_6 = Dictionary_2_TryGetValue_m2B16E36786DE77E74CA69B7E95F8A0F2932D40C0(L_2, L_4, (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE **)L_5, /*hidden argument*/Dictionary_2_TryGetValue_m2B16E36786DE77E74CA69B7E95F8A0F2932D40C0_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1008));
			V_2 = L_6;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 999));
			bool L_7 = V_2;
			if (!L_7)
			{
				goto IL_002b;
			}
		}

IL_0026:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1000));
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1001));
			V_3 = (bool)1;
			IL2CPP_LEAVE(0x41, FINALLY_0032);
		}

IL_002b:
		{
			// data = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1002));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE ** L_8 = ___data1;
			*((RuntimeObject **)L_8) = (RuntimeObject *)NULL;
			Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_8, (void*)(RuntimeObject *)NULL);
			// return false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1003));
			V_3 = (bool)0;
			IL2CPP_LEAVE(0x41, FINALLY_0032);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0032;
	}

FINALLY_0032:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1004));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1009));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1009));
		IL2CPP_END_FINALLY(50)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(50)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x41, IL_0041)
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1005));
		bool L_9 = V_3;
		return L_9;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdatePointers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdatePointers_mE03F4EA01DE023EB9A38137D4C610A14B1848458 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_UpdatePointers_mE03F4EA01DE023EB9A38137D4C610A14B1848458_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C  V_3;
	memset((&V_3), 0, sizeof(V_3));
	KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  V_5;
	memset((&V_5), 0, sizeof(V_5));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_6 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_UpdatePointers_mE03F4EA01DE023EB9A38137D4C610A14B1848458_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1010));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1011));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 4);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1012));
		// using (UpdatePointersPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1013));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_UpdatePointersPerfMarker_55();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1041));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1041));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1014));
			// if (inputSystemProfile == null) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1015));
			MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_2 = __this->get_inputSystemProfile_28();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1042));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1042));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1016));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_0026;
			}
		}

IL_0020:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1017));
			// if (inputSystemProfile == null) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1018));
			IL2CPP_LEAVE(0xC3, FINALLY_00b4);
		}

IL_0026:
		{
			// ReconcilePointers();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1019));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1043));
			FocusProvider_ReconcilePointers_m8F15E83551BFB79B3ECD332EFA9BE437CC214E31(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1043));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1020));
			// foreach (var pointerMediator in pointerMediators)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1021));
			Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * L_5 = __this->get_pointerMediators_25();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1044));
			NullCheck(L_5);
			Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C  L_6 = Dictionary_2_GetEnumerator_mDDAD3CB1078A489FD43DD5A00BF489D874A0861B(L_5, /*hidden argument*/Dictionary_2_GetEnumerator_mDDAD3CB1078A489FD43DD5A00BF489D874A0861B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1044));
			V_3 = L_6;
		}

IL_003a:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1022));
				goto IL_0054;
			}

IL_003c:
			{
				// foreach (var pointerMediator in pointerMediators)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1023));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1045));
				KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7  L_7 = Enumerator_get_Current_m442847DC7C76FD5F44910204F805D833E7CC90AD_inline((Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C *)(&V_3), /*hidden argument*/Enumerator_get_Current_m442847DC7C76FD5F44910204F805D833E7CC90AD_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1045));
				V_4 = L_7;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1024));
				// pointerMediator.Value.UpdatePointers();
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1025));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1046));
				RuntimeObject* L_8 = KeyValuePair_2_get_Value_mCCC2E8126391D8C614D82A09ADC3D5DA731ECC47_inline((KeyValuePair_2_t6D767AF83A8D68CCF32A24741D83448CD4F392F7 *)(&V_4), /*hidden argument*/KeyValuePair_2_get_Value_mCCC2E8126391D8C614D82A09ADC3D5DA731ECC47_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1046));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1047));
				NullCheck(L_8);
				InterfaceActionInvoker0::Invoke(2 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator::UpdatePointers() */, IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_il2cpp_TypeInfo_var, L_8);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1047));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1026));
			}

IL_0054:
			{
				// foreach (var pointerMediator in pointerMediators)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1027));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1048));
				bool L_9 = Enumerator_MoveNext_m6EE95D7726D441076D476262B63BDB585B6A4428((Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C *)(&V_3), /*hidden argument*/Enumerator_MoveNext_m6EE95D7726D441076D476262B63BDB585B6A4428_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1048));
				if (L_9)
				{
					goto IL_003c;
				}
			}

IL_005d:
			{
				IL2CPP_LEAVE(0x6E, FINALLY_005f);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_005f;
		}

FINALLY_005f:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1028));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1049));
			Enumerator_Dispose_m9C9F25BC4E2669565B458C2C0E9CD6018B09A07E((Enumerator_tD3E99B04679A3004CE4C196894447973AD654E7C *)(&V_3), /*hidden argument*/Enumerator_Dispose_m9C9F25BC4E2669565B458C2C0E9CD6018B09A07E_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1049));
			IL2CPP_END_FINALLY(95)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(95)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0x6E, IL_006e)
		}

IL_006e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1029));
			// foreach (var pointerData in pointers.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1030));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_10 = __this->get_pointers_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1050));
			NullCheck(L_10);
			ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * L_11 = Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC(L_10, /*hidden argument*/Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1050));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1051));
			NullCheck(L_11);
			Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  L_12 = ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB(L_11, /*hidden argument*/ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1051));
			V_5 = L_12;
		}

IL_0081:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 2);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1031));
				goto IL_0097;
			}

IL_0083:
			{
				// foreach (var pointerData in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1032));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1052));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_13 = Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_inline((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_5), /*hidden argument*/Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1052));
				V_6 = L_13;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1033));
				// UpdatePointer(pointerData);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1034));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_14 = V_6;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1053));
				FocusProvider_UpdatePointer_mDBB311C1FFC08015653C67F756472A7B529C2D8C(__this, L_14, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1053));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1035));
			}

IL_0097:
			{
				// foreach (var pointerData in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1036));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1054));
				bool L_15 = Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_5), /*hidden argument*/Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1054));
				if (L_15)
				{
					goto IL_0083;
				}
			}

IL_00a0:
			{
				IL2CPP_LEAVE(0xB1, FINALLY_00a2);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_00a2;
		}

FINALLY_00a2:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1037));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1055));
			Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_5), /*hidden argument*/Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1055));
			IL2CPP_END_FINALLY(162)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(162)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0xB1, IL_00b1)
		}

IL_00b1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1038));
			IL2CPP_LEAVE(0xC3, FINALLY_00b4);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00b4;
	}

FINALLY_00b4:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1039));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1056));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1056));
		IL2CPP_END_FINALLY(180)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(180)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xC3, IL_00c3)
	}

IL_00c3:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1040));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdatePointer(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdatePointer_mDBB311C1FFC08015653C67F756472A7B529C2D8C (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * ___pointerData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_UpdatePointer_mDBB311C1FFC08015653C67F756472A7B529C2D8C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	RuntimeObject* V_7 = NULL;
	int32_t V_8 = 0;
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * V_9 = NULL;
	RuntimeObject* V_10 = NULL;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_7), (&V_8), (&V_9), (&V_10));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_UpdatePointer_mDBB311C1FFC08015653C67F756472A7B529C2D8C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1057));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1058));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* G_B5_0 = NULL;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* G_B4_0 = NULL;
	int32_t G_B10_0 = 0;
	int32_t G_B14_0 = 0;
	int32_t G_B20_0 = 0;
	int32_t G_B25_0 = 0;
	int32_t G_B30_0 = 0;
	RuntimeObject* G_B35_0 = NULL;
	RuntimeObject* G_B34_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B36_0 = NULL;
	int32_t G_B38_0 = 0;
	int32_t G_B43_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1059));
		// using (UpdatePointerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1060));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_UpdatePointerPerfMarker_56();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1128));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1128));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1061));
			// pointerData.Pointer.OnPreSceneQuery();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1062));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_2 = ___pointerData0;
			NullCheck(L_2);
			RuntimeObject* L_3 = L_2->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1129));
			NullCheck(L_3);
			InterfaceActionInvoker0::Invoke(30 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::OnPreSceneQuery() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_3);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1129));
			// if (!pointerData.Pointer.IsInteractionEnabled)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1063));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_4 = ___pointerData0;
			NullCheck(L_4);
			RuntimeObject* L_5 = L_4->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1130));
			NullCheck(L_5);
			bool L_6 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsInteractionEnabled() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1130));
			V_2 = (bool)((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1064));
			bool L_7 = V_2;
			if (!L_7)
			{
				goto IL_003d;
			}
		}

IL_002e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1065));
			// pointerData.ResetFocusedObjects(false);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1066));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_8 = ___pointerData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1131));
			NullCheck(L_8);
			PointerData_ResetFocusedObjects_mED45382832E357CDD75BD1EAFCC27A68EC42C94A(L_8, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1131));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1067));
			goto IL_028e;
		}

IL_003d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1068));
			// LayerMask[] prioritizedLayerMasks = (pointerData.Pointer.PrioritizedLayerMasksOverride ?? FocusLayerMasks);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1069));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_9 = ___pointerData0;
			NullCheck(L_9);
			RuntimeObject* L_10 = L_9->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1132));
			NullCheck(L_10);
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_11 = InterfaceFuncInvoker0< LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(18 /* UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PrioritizedLayerMasksOverride() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1132));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_12 = L_11;
			G_B4_0 = L_12;
			if (L_12)
			{
				G_B5_0 = L_12;
				goto IL_0053;
			}
		}

IL_004c:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1133));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_13 = FocusProvider_get_FocusLayerMasks_m71F73D8B336F007E2082D5428A0ADFDEE8EB64FA(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1133));
			G_B5_0 = L_13;
		}

IL_0053:
		{
			V_3 = G_B5_0;
			// if (pointerData.IsCurrentPointerTargetInvalid)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1070));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_14 = ___pointerData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1134));
			NullCheck(L_14);
			bool L_15 = PointerData_get_IsCurrentPointerTargetInvalid_m6A43C3957C1492BDC44A14CEE75C732B84DA376D(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1134));
			V_4 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1071));
			bool L_16 = V_4;
			if (!L_16)
			{
				goto IL_006f;
			}
		}

IL_0060:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1072));
			// pointerData.Pointer.IsFocusLocked = false;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1073));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_17 = ___pointerData0;
			NullCheck(L_17);
			RuntimeObject* L_18 = L_17->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1135));
			NullCheck(L_18);
			InterfaceActionInvoker1< bool >::Invoke(14 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_IsFocusLocked(System.Boolean) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_18, (bool)0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1135));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1074));
		}

IL_006f:
		{
			// if (pointerData.Pointer.IsFocusLocked && pointerData.Pointer.IsTargetPositionLockedOnFocusLock)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1075));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_19 = ___pointerData0;
			NullCheck(L_19);
			RuntimeObject* L_20 = L_19->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1136));
			NullCheck(L_20);
			bool L_21 = InterfaceFuncInvoker0< bool >::Invoke(13 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsFocusLocked() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_20);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1136));
			if (!L_21)
			{
				goto IL_0089;
			}
		}

IL_007c:
		{
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_22 = ___pointerData0;
			NullCheck(L_22);
			RuntimeObject* L_23 = L_22->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1137));
			NullCheck(L_23);
			bool L_24 = InterfaceFuncInvoker0< bool >::Invoke(15 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsTargetPositionLockedOnFocusLock() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_23);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1137));
			G_B10_0 = ((int32_t)(L_24));
			goto IL_008a;
		}

IL_0089:
		{
			G_B10_0 = 0;
		}

IL_008a:
		{
			V_5 = (bool)G_B10_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1076));
			bool L_25 = V_5;
			if (!L_25)
			{
				goto IL_00e2;
			}
		}

IL_0090:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1077));
			// pointerData.UpdateFocusLockedHit();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1078));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_26 = ___pointerData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1138));
			NullCheck(L_26);
			PointerData_UpdateFocusLockedHit_m6FAA710DAC97452D71D91E04A808381BAD7A93EA(L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1138));
			// if (shouldUseGraphicsRaycast && EventSystem.current != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1079));
			bool L_27 = __this->get_shouldUseGraphicsRaycast_30();
			if (!L_27)
			{
				goto IL_00ad;
			}
		}

IL_00a0:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1139));
			IL2CPP_RUNTIME_CLASS_INIT(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_il2cpp_TypeInfo_var);
			EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_28 = EventSystem_get_current_m3151477735829089F66A3E46AD6DAB14CFDDE7BD(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1139));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1140));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_29 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_28, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1140));
			G_B14_0 = ((int32_t)(L_29));
			goto IL_00ae;
		}

IL_00ad:
		{
			G_B14_0 = 0;
		}

IL_00ae:
		{
			V_6 = (bool)G_B14_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1080));
			bool L_30 = V_6;
			if (!L_30)
			{
				goto IL_00dc;
			}
		}

IL_00b4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1081));
			// hitResultUi.Clear();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1082));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_31 = __this->get_hitResultUi_27();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1141));
			NullCheck(L_31);
			PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7(L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1141));
			// RaycastGraphics(pointerData.Pointer, pointerData.GraphicEventData, prioritizedLayerMasks, hitResultUi);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1083));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_32 = ___pointerData0;
			NullCheck(L_32);
			RuntimeObject* L_33 = L_32->get_Pointer_0();
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_34 = ___pointerData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1142));
			NullCheck(L_34);
			PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_35 = PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF(L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1142));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_36 = V_3;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_37 = __this->get_hitResultUi_27();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1143));
			FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5(__this, L_33, L_35, L_36, L_37, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1143));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1084));
		}

IL_00dc:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1085));
			goto IL_028d;
		}

IL_00e2:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1086));
			// var raycastProvider = CoreServices.InputSystem.RaycastProvider;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1087));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1144));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_38 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1144));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1145));
			NullCheck(L_38);
			RuntimeObject* L_39 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(8 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_RaycastProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_38);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1145));
			V_7 = L_39;
			// hitResult3d.Clear();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1088));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_40 = __this->get_hitResult3d_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1146));
			NullCheck(L_40);
			PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7(L_40, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1146));
			// QueryScene(pointerData.Pointer, raycastProvider, prioritizedLayerMasks, hitResult3d, maxQuerySceneResults, focusIndividualCompoundCollider);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1089));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_41 = ___pointerData0;
			NullCheck(L_41);
			RuntimeObject* L_42 = L_41->get_Pointer_0();
			RuntimeObject* L_43 = V_7;
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_44 = V_3;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_45 = __this->get_hitResult3d_26();
			int32_t L_46 = __this->get_maxQuerySceneResults_29();
			bool L_47 = __this->get_focusIndividualCompoundCollider_31();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1147));
			IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
			FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2(L_42, L_43, L_44, L_45, L_46, L_47, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1147));
			// int hitResult3dLayer = hitResult3d.hitObject != null ? hitResult3d.hitObject.layer : -1;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1090));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_48 = __this->get_hitResult3d_26();
			NullCheck(L_48);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_49 = L_48->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1148));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_50 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_49, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1148));
			if (L_50)
			{
				goto IL_0132;
			}
		}

IL_012f:
		{
			G_B20_0 = (-1);
			goto IL_0142;
		}

IL_0132:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_51 = __this->get_hitResult3d_26();
			NullCheck(L_51);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_52 = L_51->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1149));
			NullCheck(L_52);
			int32_t L_53 = GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8(L_52, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1149));
			G_B20_0 = L_53;
		}

IL_0142:
		{
			V_8 = G_B20_0;
			// if (hitResult3dLayer == 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1091));
			int32_t L_54 = V_8;
			V_11 = (bool)((((int32_t)L_54) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1092));
			bool L_55 = V_11;
			if (!L_55)
			{
				goto IL_0164;
			}
		}

IL_014f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1093));
			// TruncatePointerRayToHit(pointerData.Pointer, hitResult3d);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1094));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_56 = ___pointerData0;
			NullCheck(L_56);
			RuntimeObject* L_57 = L_56->get_Pointer_0();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_58 = __this->get_hitResult3d_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1150));
			FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310(__this, L_57, L_58, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1150));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1095));
		}

IL_0164:
		{
			// PointerHitResult hit = hitResult3d;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1096));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_59 = __this->get_hitResult3d_26();
			V_9 = L_59;
			// if (shouldUseGraphicsRaycast && EventSystem.current != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1097));
			bool L_60 = __this->get_shouldUseGraphicsRaycast_30();
			if (!L_60)
			{
				goto IL_0181;
			}
		}

IL_0174:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1151));
			IL2CPP_RUNTIME_CLASS_INIT(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_il2cpp_TypeInfo_var);
			EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_61 = EventSystem_get_current_m3151477735829089F66A3E46AD6DAB14CFDDE7BD(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1151));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1152));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_62 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_61, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1152));
			G_B25_0 = ((int32_t)(L_62));
			goto IL_0182;
		}

IL_0181:
		{
			G_B25_0 = 0;
		}

IL_0182:
		{
			V_12 = (bool)G_B25_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1098));
			bool L_63 = V_12;
			if (!L_63)
			{
				goto IL_01c1;
			}
		}

IL_0188:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1099));
			// hitResultUi.Clear();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1100));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_64 = __this->get_hitResultUi_27();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1153));
			NullCheck(L_64);
			PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7(L_64, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1153));
			// RaycastGraphics(pointerData.Pointer, pointerData.GraphicEventData, prioritizedLayerMasks, hitResultUi);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1101));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_65 = ___pointerData0;
			NullCheck(L_65);
			RuntimeObject* L_66 = L_65->get_Pointer_0();
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_67 = ___pointerData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1154));
			NullCheck(L_67);
			PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_68 = PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF(L_67, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1154));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_69 = V_3;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_70 = __this->get_hitResultUi_27();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1155));
			FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5(__this, L_66, L_68, L_69, L_70, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1155));
			// hit = GetPrioritizedHitResult(hit, hitResultUi, prioritizedLayerMasks);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1102));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_71 = V_9;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_72 = __this->get_hitResultUi_27();
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_73 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1156));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_74 = FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333(__this, L_71, L_72, L_73, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1156));
			V_9 = L_74;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1103));
		}

IL_01c1:
		{
			// if (hit != hitResult3d || hitResult3dLayer > 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1104));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_75 = V_9;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_76 = __this->get_hitResult3d_26();
			if ((!(((RuntimeObject*)(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 *)L_75) == ((RuntimeObject*)(PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 *)L_76))))
			{
				goto IL_01d2;
			}
		}

IL_01cb:
		{
			int32_t L_77 = V_8;
			G_B30_0 = ((((int32_t)L_77) > ((int32_t)0))? 1 : 0);
			goto IL_01d3;
		}

IL_01d2:
		{
			G_B30_0 = 1;
		}

IL_01d3:
		{
			V_13 = (bool)G_B30_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1105));
			bool L_78 = V_13;
			if (!L_78)
			{
				goto IL_01ee;
			}
		}

IL_01d9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1106));
			// TruncatePointerRayToHit(pointerData.Pointer, hitResult3d);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1107));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_79 = ___pointerData0;
			NullCheck(L_79);
			RuntimeObject* L_80 = L_79->get_Pointer_0();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_81 = __this->get_hitResult3d_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1157));
			FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310(__this, L_80, L_81, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1157));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1108));
		}

IL_01ee:
		{
			// if (pointerData.Pointer.IsFocusLocked && pointerData.Pointer.Result?.CurrentPointerTarget != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1109));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_82 = ___pointerData0;
			NullCheck(L_82);
			RuntimeObject* L_83 = L_82->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1158));
			NullCheck(L_83);
			bool L_84 = InterfaceFuncInvoker0< bool >::Invoke(13 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsFocusLocked() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_83);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1158));
			if (!L_84)
			{
				goto IL_021a;
			}
		}

IL_01fb:
		{
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_85 = ___pointerData0;
			NullCheck(L_85);
			RuntimeObject* L_86 = L_85->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1159));
			NullCheck(L_86);
			RuntimeObject* L_87 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Result() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_86);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1159));
			RuntimeObject* L_88 = L_87;
			G_B34_0 = L_88;
			if (L_88)
			{
				G_B35_0 = L_88;
				goto IL_020d;
			}
		}

IL_0209:
		{
			G_B36_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
			goto IL_0212;
		}

IL_020d:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1160));
			NullCheck(G_B35_0);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_89 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, G_B35_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1160));
			G_B36_0 = L_89;
		}

IL_0212:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1161));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_90 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(G_B36_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1161));
			G_B38_0 = ((int32_t)(L_90));
			goto IL_021b;
		}

IL_021a:
		{
			G_B38_0 = 0;
		}

IL_021b:
		{
			V_14 = (bool)G_B38_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1110));
			bool L_91 = V_14;
			if (!L_91)
			{
				goto IL_023a;
			}
		}

IL_0221:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1111));
			// hit.hitObject = pointerData.Pointer.Result.CurrentPointerTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1112));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_92 = V_9;
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_93 = ___pointerData0;
			NullCheck(L_93);
			RuntimeObject* L_94 = L_93->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1162));
			NullCheck(L_94);
			RuntimeObject* L_95 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Result() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_94);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1162));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1163));
			NullCheck(L_95);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_96 = InterfaceFuncInvoker0< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(2 /* UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_CurrentPointerTarget() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_95);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1163));
			NullCheck(L_92);
			L_92->set_hitObject_2(L_96);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1113));
		}

IL_023a:
		{
			// pointerData.UpdateHit(hit);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1114));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_97 = ___pointerData0;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_98 = V_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1164));
			NullCheck(L_97);
			PointerData_UpdateHit_m212567FA45D65F83369E24C7B50CA30ED5020DCB(L_97, L_98, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1164));
			// var gazePointer = CoreServices.InputSystem.GazeProvider.GazePointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1115));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1165));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_99 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1165));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1166));
			NullCheck(L_99);
			RuntimeObject* L_100 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_99);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1166));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1167));
			NullCheck(L_100);
			RuntimeObject* L_101 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, L_100);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1167));
			V_10 = L_101;
			// if (gazePointer != null && pointerData.Pointer.PointerId == gazePointer.PointerId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1116));
			RuntimeObject* L_102 = V_10;
			if (!L_102)
			{
				goto IL_026e;
			}
		}

IL_0258:
		{
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_103 = ___pointerData0;
			NullCheck(L_103);
			RuntimeObject* L_104 = L_103->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1168));
			NullCheck(L_104);
			uint32_t L_105 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_104);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1168));
			RuntimeObject* L_106 = V_10;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1169));
			NullCheck(L_106);
			uint32_t L_107 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_106);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1169));
			G_B43_0 = ((((int32_t)L_105) == ((int32_t)L_107))? 1 : 0);
			goto IL_026f;
		}

IL_026e:
		{
			G_B43_0 = 0;
		}

IL_026f:
		{
			V_15 = (bool)G_B43_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1117));
			bool L_108 = V_15;
			if (!L_108)
			{
				goto IL_027f;
			}
		}

IL_0275:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1118));
			// gazeHitResult = hit;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1119));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_109 = V_9;
			__this->set_gazeHitResult_46(L_109);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1120));
		}

IL_027f:
		{
			// pointerData.Pointer.Result = pointerData;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1121));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_110 = ___pointerData0;
			NullCheck(L_110);
			RuntimeObject* L_111 = L_110->get_Pointer_0();
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_112 = ___pointerData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1170));
			NullCheck(L_111);
			InterfaceActionInvoker1< RuntimeObject* >::Invoke(23 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_Result(Microsoft.MixedReality.Toolkit.Input.IPointerResult) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_111, L_112);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1170));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1122));
		}

IL_028d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1123));
		}

IL_028e:
		{
			// pointerData.Pointer.OnPostSceneQuery();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1124));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_113 = ___pointerData0;
			NullCheck(L_113);
			RuntimeObject* L_114 = L_113->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1171));
			NullCheck(L_114);
			InterfaceActionInvoker0::Invoke(31 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::OnPostSceneQuery() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_114);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1171));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1125));
			IL2CPP_LEAVE(0x2AC, FINALLY_029d);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_029d;
	}

FINALLY_029d:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1126));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1172));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1172));
		IL2CPP_END_FINALLY(669)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(669)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x2AC, IL_02ac)
	}

IL_02ac:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1127));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::TruncatePointerRayToHit(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___hit1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_TruncatePointerRayToHit_m77564E52C883DB92D3EBF2BB89ACBFBABE524310_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1173));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1174));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1175));
		// if (hit.rayStepIndex >= 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1176));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_0 = ___hit1;
		NullCheck(L_0);
		int32_t L_1 = L_0->get_rayStepIndex_6();
		V_0 = (bool)((((int32_t)((((int32_t)L_1) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1177));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0045;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1178));
		// RayStep rayStep = pointer.Rays[hit.rayStepIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1179));
		RuntimeObject* L_3 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1185));
		NullCheck(L_3);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1185));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_5 = ___hit1;
		NullCheck(L_5);
		int32_t L_6 = L_5->get_rayStepIndex_6();
		NullCheck(L_4);
		int32_t L_7 = L_6;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_8 = (L_4)->GetAt(static_cast<il2cpp_array_size_t>(L_7));
		V_1 = L_8;
		// Vector3 origin = rayStep.Origin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1180));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1186));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1186));
		V_2 = L_9;
		// Vector3 terminus = hit.raycastHit.point;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1181));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_10 = ___hit1;
		NullCheck(L_10);
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_11 = L_10->get_address_of_raycastHit_0();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = L_11->get_point_0();
		V_3 = L_12;
		// rayStep.UpdateRayStep(ref origin, ref terminus);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1182));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1187));
		RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_1), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1187));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1183));
	}

IL_0045:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1184));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetPrioritizedHitResult(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,UnityEngine.LayerMask[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit10, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit21, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * V_8 = NULL;
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hit10), (&___hit21), (&___prioritizedLayerMasks2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_GetPrioritizedHitResult_m3B9D7C4762554193259D7DC93EB7E3D169477333_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1188));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1189));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 5);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * G_B14_0 = NULL;
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * G_B19_0 = NULL;
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * G_B23_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1190));
		// using (GetPrioritizedHitResultPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1191));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_GetPrioritizedHitResultPerfMarker_57();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1219));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1219));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1192));
			// if (hit1.hitObject != null && hit2.hitObject != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1193));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_2 = ___hit10;
			NullCheck(L_2);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = L_2->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1220));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1220));
			if (!L_4)
			{
				goto IL_002c;
			}
		}

IL_001e:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_5 = ___hit21;
			NullCheck(L_5);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = L_5->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1221));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_7 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1221));
			G_B4_0 = ((int32_t)(L_7));
			goto IL_002d;
		}

IL_002c:
		{
			G_B4_0 = 0;
		}

IL_002d:
		{
			V_2 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1194));
			bool L_8 = V_2;
			if (!L_8)
			{
				goto IL_00be;
			}
		}

IL_0034:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1195));
			// if (prioritizedLayerMasks.Length > 1)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1196));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_9 = ___prioritizedLayerMasks2;
			NullCheck(L_9);
			V_3 = (bool)((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_9)->max_length))))) > ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1197));
			bool L_10 = V_3;
			if (!L_10)
			{
				goto IL_00a8;
			}
		}

IL_003f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1198));
			// int layerMaskIndex1 = hit1.hitObject.layer.FindLayerListIndex(prioritizedLayerMasks);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1199));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_11 = ___hit10;
			NullCheck(L_11);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = L_11->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1222));
			NullCheck(L_12);
			int32_t L_13 = GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8(L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1222));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_14 = ___prioritizedLayerMasks2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1223));
			int32_t L_15 = LayerExtensions_FindLayerListIndex_m51F6EF70174B494C79470C9DC1E73F773141CEED(L_13, L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1223));
			V_4 = L_15;
			// int layerMaskIndex2 = hit2.hitObject.layer.FindLayerListIndex(prioritizedLayerMasks);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1200));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_16 = ___hit21;
			NullCheck(L_16);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = L_16->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1224));
			NullCheck(L_17);
			int32_t L_18 = GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8(L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1224));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_19 = ___prioritizedLayerMasks2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1225));
			int32_t L_20 = LayerExtensions_FindLayerListIndex_m51F6EF70174B494C79470C9DC1E73F773141CEED(L_18, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1225));
			V_5 = L_20;
			// if (layerMaskIndex1 != layerMaskIndex2)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1201));
			int32_t L_21 = V_4;
			int32_t L_22 = V_5;
			V_6 = (bool)((((int32_t)((((int32_t)L_21) == ((int32_t)L_22))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1202));
			bool L_23 = V_6;
			if (!L_23)
			{
				goto IL_00a7;
			}
		}

IL_0075:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1203));
			// if (layerMaskIndex1 == -1)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1204));
			int32_t L_24 = V_4;
			V_7 = (bool)((((int32_t)L_24) == ((int32_t)(-1)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1205));
			bool L_25 = V_7;
			if (!L_25)
			{
				goto IL_0087;
			}
		}

IL_0081:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1206));
			// return hit2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1207));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_26 = ___hit21;
			V_8 = L_26;
			IL2CPP_LEAVE(0xE3, FINALLY_00d4);
		}

IL_0087:
		{
			// else if (layerMaskIndex2 == -1)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1208));
			int32_t L_27 = V_5;
			V_9 = (bool)((((int32_t)L_27) == ((int32_t)(-1)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1209));
			bool L_28 = V_9;
			if (!L_28)
			{
				goto IL_0098;
			}
		}

IL_0092:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1210));
			// return hit1;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1211));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_29 = ___hit10;
			V_8 = L_29;
			IL2CPP_LEAVE(0xE3, FINALLY_00d4);
		}

IL_0098:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1212));
			// return (layerMaskIndex1 < layerMaskIndex2) ? hit1 : hit2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1213));
			int32_t L_30 = V_4;
			int32_t L_31 = V_5;
			if ((((int32_t)L_30) < ((int32_t)L_31)))
			{
				goto IL_00a2;
			}
		}

IL_009f:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_32 = ___hit21;
			G_B14_0 = L_32;
			goto IL_00a3;
		}

IL_00a2:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_33 = ___hit10;
			G_B14_0 = L_33;
		}

IL_00a3:
		{
			V_8 = G_B14_0;
			IL2CPP_LEAVE(0xE3, FINALLY_00d4);
		}

IL_00a7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1214));
		}

IL_00a8:
		{
			// return (hit1.rayDistance < hit2.rayDistance) ? hit1 : hit2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1215));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_34 = ___hit10;
			NullCheck(L_34);
			float L_35 = L_34->get_rayDistance_7();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_36 = ___hit21;
			NullCheck(L_36);
			float L_37 = L_36->get_rayDistance_7();
			if ((((float)L_35) < ((float)L_37)))
			{
				goto IL_00b9;
			}
		}

IL_00b6:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_38 = ___hit21;
			G_B19_0 = L_38;
			goto IL_00ba;
		}

IL_00b9:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_39 = ___hit10;
			G_B19_0 = L_39;
		}

IL_00ba:
		{
			V_8 = G_B19_0;
			IL2CPP_LEAVE(0xE3, FINALLY_00d4);
		}

IL_00be:
		{
			// return (hit1.hitObject != null) ? hit1 : hit2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1216));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_40 = ___hit10;
			NullCheck(L_40);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_41 = L_40->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1226));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_42 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_41, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1226));
			if (L_42)
			{
				goto IL_00cf;
			}
		}

IL_00cc:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_43 = ___hit21;
			G_B23_0 = L_43;
			goto IL_00d0;
		}

IL_00cf:
		{
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_44 = ___hit10;
			G_B23_0 = L_44;
		}

IL_00d0:
		{
			V_8 = G_B23_0;
			IL2CPP_LEAVE(0xE3, FINALLY_00d4);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00d4;
	}

FINALLY_00d4:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1217));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1227));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1227));
		IL2CPP_END_FINALLY(212)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(212)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xE3, IL_00e3)
	}

IL_00e3:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1218));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_45 = V_8;
		return L_45;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::ReconcilePointers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_ReconcilePointers_m8F15E83551BFB79B3ECD332EFA9BE437CC214E31 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_ReconcilePointers_m8F15E83551BFB79B3ECD332EFA9BE437CC214E31_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * V_2 = NULL;
	int32_t V_3 = 0;
	Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  V_4;
	memset((&V_4), 0, sizeof(V_4));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_5 = NULL;
	RuntimeObject* V_6 = NULL;
	bool V_7 = false;
	bool V_8 = false;
	int32_t V_9 = 0;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	bool V_15 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_5), (&V_6), (&V_13), (&V_14));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_ReconcilePointers_m8F15E83551BFB79B3ECD332EFA9BE437CC214E31_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1228));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1229));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	int32_t G_B9_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B20_0 = 0;
	int32_t G_B25_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1230));
		// using (ReconcilePointersPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1231));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_ReconcilePointersPerfMarker_58();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1279));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1279));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1232));
			// var gazePointer = CoreServices.InputSystem.GazeProvider?.GazePointer as GenericPointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1233));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1280));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1280));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1281));
			NullCheck(L_2);
			RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1281));
			RuntimeObject* L_4 = L_3;
			G_B2_0 = L_4;
			if (L_4)
			{
				G_B3_0 = L_4;
				goto IL_0021;
			}
		}

IL_001d:
		{
			G_B4_0 = ((RuntimeObject*)(NULL));
			goto IL_0026;
		}

IL_0021:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1282));
			NullCheck(G_B3_0);
			RuntimeObject* L_5 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B3_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1282));
			G_B4_0 = L_5;
		}

IL_0026:
		{
			V_2 = ((GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A *)IsInstClass((RuntimeObject*)G_B4_0, GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A_il2cpp_TypeInfo_var));
			// NumFarPointersActive = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1234));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1283));
			FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_inline(__this, 0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1283));
			// NumNearPointersActive = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1235));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1284));
			FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_inline(__this, 0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1284));
			// int numFarPointersWithoutCursorActive = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1236));
			V_3 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1237));
			// foreach (var pointerData in pointers.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1238));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_6 = __this->get_pointers_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1285));
			NullCheck(L_6);
			ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * L_7 = Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC(L_6, /*hidden argument*/Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1285));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1286));
			NullCheck(L_7);
			Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  L_8 = ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB(L_7, /*hidden argument*/ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1286));
			V_4 = L_8;
		}

IL_0051:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1239));
				goto IL_0124;
			}

IL_0056:
			{
				// foreach (var pointerData in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1240));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1287));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_9 = Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_inline((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_4), /*hidden argument*/Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1287));
				V_5 = L_9;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1241));
				// if (pointerData.Pointer is IMixedRealityNearPointer nearPointer && !nearPointer.IsNull())
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1242));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_10 = V_5;
				NullCheck(L_10);
				RuntimeObject* L_11 = L_10->get_Pointer_0();
				RuntimeObject* L_12 = ((RuntimeObject*)IsInst((RuntimeObject*)L_11, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var));
				V_6 = L_12;
				if (!L_12)
				{
					goto IL_007d;
				}
			}

IL_0071:
			{
				RuntimeObject* L_13 = V_6;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1288));
				bool L_14 = UnityObjectExtensions_IsNull_TisIMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_m02E1C7B6423ABE0D2CC91810B9FD44204F54C8A2(L_13, /*hidden argument*/UnityObjectExtensions_IsNull_TisIMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_m02E1C7B6423ABE0D2CC91810B9FD44204F54C8A2_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1288));
				G_B9_0 = ((((int32_t)L_14) == ((int32_t)0))? 1 : 0);
				goto IL_007e;
			}

IL_007d:
			{
				G_B9_0 = 0;
			}

IL_007e:
			{
				V_7 = (bool)G_B9_0;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1243));
				bool L_15 = V_7;
				if (!L_15)
				{
					goto IL_00b6;
				}
			}

IL_0084:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1244));
				// if (nearPointer.IsInteractionEnabled || nearPointer.IsNearObject)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1245));
				RuntimeObject* L_16 = V_6;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1289));
				NullCheck(L_16);
				bool L_17 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsInteractionEnabled() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_16);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1289));
				if (L_17)
				{
					goto IL_0097;
				}
			}

IL_008e:
			{
				RuntimeObject* L_18 = V_6;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1290));
				NullCheck(L_18);
				bool L_19 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityNearPointer::get_IsNearObject() */, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var, L_18);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1290));
				G_B13_0 = ((int32_t)(L_19));
				goto IL_0098;
			}

IL_0097:
			{
				G_B13_0 = 1;
			}

IL_0098:
			{
				V_8 = (bool)G_B13_0;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1246));
				bool L_20 = V_8;
				if (!L_20)
				{
					goto IL_00b3;
				}
			}

IL_009e:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1247));
				// NumNearPointersActive++;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1248));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1291));
				int32_t L_21 = FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_inline(__this, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1291));
				V_9 = L_21;
				int32_t L_22 = V_9;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1292));
				FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_inline(__this, ((int32_t)il2cpp_codegen_add((int32_t)L_22, (int32_t)1)), /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1292));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1249));
			}

IL_00b3:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1250));
				goto IL_0123;
			}

IL_00b6:
			{
				// else if (
				//     // pointerData.Pointer.BaseCursor == null means this is a GGV Pointer
				//     pointerData.Pointer.BaseCursor != null
				//     && !(pointerData.Pointer == gazePointer)
				//     && pointerData.Pointer.IsInteractionEnabled)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1251));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_23 = V_5;
				NullCheck(L_23);
				RuntimeObject* L_24 = L_23->get_Pointer_0();
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1293));
				NullCheck(L_24);
				RuntimeObject* L_25 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_24);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1293));
				if (!L_25)
				{
					goto IL_00dc;
				}
			}

IL_00c4:
			{
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_26 = V_5;
				NullCheck(L_26);
				RuntimeObject* L_27 = L_26->get_Pointer_0();
				GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * L_28 = V_2;
				if ((((RuntimeObject*)(RuntimeObject*)L_27) == ((RuntimeObject*)(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A *)L_28)))
				{
					goto IL_00dc;
				}
			}

IL_00ce:
			{
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_29 = V_5;
				NullCheck(L_29);
				RuntimeObject* L_30 = L_29->get_Pointer_0();
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1294));
				NullCheck(L_30);
				bool L_31 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsInteractionEnabled() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_30);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1294));
				G_B20_0 = ((int32_t)(L_31));
				goto IL_00dd;
			}

IL_00dc:
			{
				G_B20_0 = 0;
			}

IL_00dd:
			{
				V_10 = (bool)G_B20_0;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1252));
				bool L_32 = V_10;
				if (!L_32)
				{
					goto IL_00fa;
				}
			}

IL_00e3:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1253));
				// NumFarPointersActive++;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1254));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1295));
				int32_t L_33 = FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_inline(__this, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1295));
				V_9 = L_33;
				int32_t L_34 = V_9;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1296));
				FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_inline(__this, ((int32_t)il2cpp_codegen_add((int32_t)L_34, (int32_t)1)), /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1296));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1255));
				goto IL_0123;
			}

IL_00fa:
			{
				// else if (pointerData.Pointer.BaseCursor == null
				//     && pointerData.Pointer.IsInteractionEnabled)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1256));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_35 = V_5;
				NullCheck(L_35);
				RuntimeObject* L_36 = L_35->get_Pointer_0();
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1297));
				NullCheck(L_36);
				RuntimeObject* L_37 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_36);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1297));
				if (L_37)
				{
					goto IL_0116;
				}
			}

IL_0108:
			{
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_38 = V_5;
				NullCheck(L_38);
				RuntimeObject* L_39 = L_38->get_Pointer_0();
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1298));
				NullCheck(L_39);
				bool L_40 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_IsInteractionEnabled() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_39);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1298));
				G_B25_0 = ((int32_t)(L_40));
				goto IL_0117;
			}

IL_0116:
			{
				G_B25_0 = 0;
			}

IL_0117:
			{
				V_11 = (bool)G_B25_0;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1257));
				bool L_41 = V_11;
				if (!L_41)
				{
					goto IL_0123;
				}
			}

IL_011d:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1258));
				// numFarPointersWithoutCursorActive++;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1259));
				int32_t L_42 = V_3;
				V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_42, (int32_t)1));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1260));
			}

IL_0123:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1261));
			}

IL_0124:
			{
				// foreach (var pointerData in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1262));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1299));
				bool L_43 = Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_4), /*hidden argument*/Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1299));
				if (L_43)
				{
					goto IL_0056;
				}
			}

IL_0130:
			{
				IL2CPP_LEAVE(0x141, FINALLY_0132);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_0132;
		}

FINALLY_0132:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1263));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1300));
			Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_4), /*hidden argument*/Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1300));
			IL2CPP_END_FINALLY(306)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(306)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0x141, IL_0141)
		}

IL_0141:
		{
			// if (gazePointer != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1264));
			GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * L_44 = V_2;
			V_12 = (bool)((!(((RuntimeObject*)(GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A *)L_44) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1265));
			bool L_45 = V_12;
			if (!L_45)
			{
				goto IL_01a9;
			}
		}

IL_014b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1266));
			// bool wasGazePointerActive = gazePointerStateMachine.IsGazePointerActive;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1267));
			GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * L_46 = __this->get_gazePointerStateMachine_40();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1301));
			NullCheck(L_46);
			bool L_47 = GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9(L_46, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1301));
			V_13 = L_47;
			// gazePointerStateMachine.UpdateState(
			//     NumNearPointersActive,
			//     NumFarPointersActive,
			//     numFarPointersWithoutCursorActive,
			//     CoreServices.InputSystem.EyeGazeProvider.IsEyeTrackingEnabledAndValid);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1268));
			GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * L_48 = __this->get_gazePointerStateMachine_40();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1302));
			int32_t L_49 = FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1302));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1303));
			int32_t L_50 = FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1303));
			int32_t L_51 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1304));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_52 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1304));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1305));
			NullCheck(L_52);
			RuntimeObject* L_53 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(10 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_EyeGazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_52);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1305));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1306));
			NullCheck(L_53);
			bool L_54 = InterfaceFuncInvoker0< bool >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeProvider::get_IsEyeTrackingEnabledAndValid() */, IMixedRealityEyeGazeProvider_t8E0C8967B6CF071E65333E83B8819A64E3E20D5F_il2cpp_TypeInfo_var, L_53);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1306));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1307));
			NullCheck(L_48);
			GazePointerVisibilityStateMachine_UpdateState_m315458336BABBC8B925C821FCAAB66CA4488BA14(L_48, L_49, L_50, L_51, L_54, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1307));
			// bool isGazePointerActive = gazePointerStateMachine.IsGazePointerActive;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1269));
			GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * L_55 = __this->get_gazePointerStateMachine_40();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1308));
			NullCheck(L_55);
			bool L_56 = GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9(L_55, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1308));
			V_14 = L_56;
			// if (wasGazePointerActive != isGazePointerActive)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1270));
			bool L_57 = V_13;
			bool L_58 = V_14;
			V_15 = (bool)((((int32_t)((((int32_t)L_57) == ((int32_t)L_58))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1271));
			bool L_59 = V_15;
			if (!L_59)
			{
				goto IL_01a8;
			}
		}

IL_019d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1272));
			// gazePointer.IsInteractionEnabled = isGazePointerActive;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1273));
			GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * L_60 = V_2;
			bool L_61 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1309));
			NullCheck(L_60);
			GenericPointer_set_IsInteractionEnabled_m7936A27B1F947E612A07F1A8949874B3D861787A(L_60, L_61, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1309));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1274));
		}

IL_01a8:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1275));
		}

IL_01a9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1276));
			IL2CPP_LEAVE(0x1BB, FINALLY_01ac);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_01ac;
	}

FINALLY_01ac:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1277));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1310));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1310));
		IL2CPP_END_FINALLY(428)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(428)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1BB, IL_01bb)
	}

IL_01bb:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1278));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::QueryScene(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2 (RuntimeObject* ___pointer0, RuntimeObject* ___raycastProvider1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit3, int32_t ___maxQuerySceneResults4, bool ___focusIndividualCompoundCollider5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* V_2 = NULL;
	RuntimeObject* V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___raycastProvider1), (&___prioritizedLayerMasks2), (&___hit3), (&___maxQuerySceneResults4), (&___focusIndividualCompoundCollider5));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_QueryScene_m6945D9CC2CB3800EFFF1645A04982888B9CA3BA2_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1311));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1312));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1313));
		// using (QueryScenePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1314));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_QueryScenePerfMarker_59();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1338));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1338));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1315));
			// RayStep[] pointerRays = pointer.Rays;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1316));
			RuntimeObject* L_2 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1339));
			NullCheck(L_2);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_3 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1339));
			V_2 = L_3;
			// if (pointerRays == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1317));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = V_2;
			V_4 = (bool)((((RuntimeObject*)(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8*)L_4) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1318));
			bool L_5 = V_4;
			if (!L_5)
			{
				goto IL_003f;
			}
		}

IL_0021:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1319));
			// Debug.LogError($"No valid rays for {pointer.PointerName} pointer.");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1320));
			RuntimeObject* L_6 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1340));
			NullCheck(L_6);
			String_t* L_7 = InterfaceFuncInvoker0< String_t* >::Invoke(3 /* System.String Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerName() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1340));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1341));
			String_t* L_8 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralB5672B826B48C4BDD228E0C126D9C47A56797A73, L_7, _stringLiteral99F6A1E6338F3AA00EEC343555842D1481D2945E, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1341));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1342));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1342));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1321));
			IL2CPP_LEAVE(0xAF, FINALLY_00a0);
		}

IL_003f:
		{
			// if (pointerRays.Length <= 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1322));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_9 = V_2;
			NullCheck(L_9);
			V_5 = (bool)((((int32_t)(((RuntimeArray*)L_9)->max_length)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1323));
			bool L_10 = V_5;
			if (!L_10)
			{
				goto IL_0068;
			}
		}

IL_004a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1324));
			// Debug.LogError($"No valid rays for {pointer.PointerName} pointer");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1325));
			RuntimeObject* L_11 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1343));
			NullCheck(L_11);
			String_t* L_12 = InterfaceFuncInvoker0< String_t* >::Invoke(3 /* System.String Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerName() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1343));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1344));
			String_t* L_13 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralB5672B826B48C4BDD228E0C126D9C47A56797A73, L_12, _stringLiteralE9A22CD1E2CDD58731BA99B0FC8D851DA52A95D8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1344));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1345));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1345));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1326));
			IL2CPP_LEAVE(0xAF, FINALLY_00a0);
		}

IL_0068:
		{
			// if (pointer is IMixedRealityQueryablePointer queryPointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1327));
			RuntimeObject* L_14 = ___pointer0;
			RuntimeObject* L_15 = ((RuntimeObject*)IsInst((RuntimeObject*)L_14, IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var));
			V_3 = L_15;
			V_6 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_15) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1328));
			bool L_16 = V_6;
			if (!L_16)
			{
				goto IL_008c;
			}
		}

IL_0079:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1329));
			// QuerySceneWithPointers(queryPointer, pointerRays, raycastProvider, prioritizedLayerMasks, hit, maxQuerySceneResults, focusIndividualCompoundCollider);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1330));
			RuntimeObject* L_17 = V_3;
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_18 = V_2;
			RuntimeObject* L_19 = ___raycastProvider1;
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_20 = ___prioritizedLayerMasks2;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_21 = ___hit3;
			int32_t L_22 = ___maxQuerySceneResults4;
			bool L_23 = ___focusIndividualCompoundCollider5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1346));
			IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
			FocusProvider_QuerySceneWithPointers_mDD8CE9D22166D890B1AE8458756C8B774369E853(L_17, L_18, L_19, L_20, L_21, L_22, L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1346));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1331));
			goto IL_009d;
		}

IL_008c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1332));
			// QuerySceneInternal(pointer, pointerRays, raycastProvider, prioritizedLayerMasks, hit, maxQuerySceneResults, focusIndividualCompoundCollider);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1333));
			RuntimeObject* L_24 = ___pointer0;
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_25 = V_2;
			RuntimeObject* L_26 = ___raycastProvider1;
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_27 = ___prioritizedLayerMasks2;
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_28 = ___hit3;
			int32_t L_29 = ___maxQuerySceneResults4;
			bool L_30 = ___focusIndividualCompoundCollider5;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1347));
			IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
			FocusProvider_QuerySceneInternal_mC2F2A339551DEF0A73A5F91AA6E8C84B3691C627(L_24, L_25, L_26, L_27, L_28, L_29, L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1347));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1334));
		}

IL_009d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1335));
			IL2CPP_LEAVE(0xAF, FINALLY_00a0);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00a0;
	}

FINALLY_00a0:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1336));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1348));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1348));
		IL2CPP_END_FINALLY(160)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(160)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xAF, IL_00af)
	}

IL_00af:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1337));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::QuerySceneWithPointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityQueryablePointer,Microsoft.MixedReality.Toolkit.Physics.RayStep[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_QuerySceneWithPointers_mDD8CE9D22166D890B1AE8458756C8B774369E853 (RuntimeObject* ___queryPointer0, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___pointerRays1, RuntimeObject* ___raycastProvider2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks3, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit4, int32_t ___maxQuerySceneResults5, bool ___focusIndividualCompoundCollider6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_QuerySceneWithPointers_mDD8CE9D22166D890B1AE8458756C8B774369E853_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_4 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	float V_6 = 0.0f;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___queryPointer0), (&___pointerRays1), (&___raycastProvider2), (&___prioritizedLayerMasks3), (&___hit4), (&___maxQuerySceneResults5), (&___focusIndividualCompoundCollider6));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_QuerySceneWithPointers_mDD8CE9D22166D890B1AE8458756C8B774369E853_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1349));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1350));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1351));
		// float rayStartDistance = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1352));
		V_0 = (0.0f);
		// for (int i = 0; i < pointerRays.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1353));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1354));
		goto IL_00fa;
	}

IL_000e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1355));
		// switch (queryPointer.SceneQueryType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1356));
		RuntimeObject* L_0 = ___queryPointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1383));
		NullCheck(L_0);
		int32_t L_1 = InterfaceFuncInvoker0< int32_t >::Invoke(24 /* Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_SceneQueryType() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1383));
		V_3 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1357));
		int32_t L_2 = V_3;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0031;
			}
			case 1:
			{
				goto IL_0064;
			}
			case 2:
			{
				goto IL_0031;
			}
			case 3:
			{
				goto IL_0071;
			}
		}
	}
	{
		goto IL_00c3;
	}

IL_0031:
	{
		// if (queryPointer.OnSceneQuery(prioritizedLayerMasks, focusIndividualCompoundCollider, out hitInfo))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1358));
		RuntimeObject* L_3 = ___queryPointer0;
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_4 = ___prioritizedLayerMasks3;
		bool L_5 = ___focusIndividualCompoundCollider6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1384));
		NullCheck(L_3);
		bool L_6 = InterfaceFuncInvoker3< bool, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*, bool, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityQueryablePointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&) */, IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var, L_3, L_4, L_5, (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)(&V_1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1384));
		V_7 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1359));
		bool L_7 = V_7;
		if (!L_7)
		{
			goto IL_005f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1360));
		// hit.Set(hitInfo, pointerRays[i], i, rayStartDistance + hitInfo.distance, focusIndividualCompoundCollider);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1361));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_8 = ___hit4;
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_9 = V_1;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_10 = ___pointerRays1;
		int32_t L_11 = V_2;
		NullCheck(L_10);
		int32_t L_12 = L_11;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_13 = (L_10)->GetAt(static_cast<il2cpp_array_size_t>(L_12));
		int32_t L_14 = V_2;
		float L_15 = V_0;
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_16 = V_1;
		float L_17 = L_16.get_distance_3();
		bool L_18 = ___focusIndividualCompoundCollider6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1385));
		NullCheck(L_8);
		PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418(L_8, L_9, L_13, L_14, ((float)il2cpp_codegen_add((float)L_15, (float)L_17)), L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1385));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1362));
	}

IL_005f:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1363));
		goto IL_00e6;
	}

IL_0064:
	{
		// Debug.LogWarning("Box Raycasting Mode not supported for pointers.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1364));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1386));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteral20F75AABCF4F4FFB7C74A98072694EA12ABD1091, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1386));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1365));
		goto IL_00e6;
	}

IL_0071:
	{
		// GameObject hitObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1366));
		V_4 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
		// Vector3 hitPoint = pointerRays[i].Origin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1367));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_19 = ___pointerRays1;
		int32_t L_20 = V_2;
		NullCheck(L_19);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1387));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_19)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_20))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1387));
		V_5 = L_21;
		// float hitDistance = Mathf.Infinity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1368));
		V_6 = (std::numeric_limits<float>::infinity());
		// if (queryPointer.OnSceneQuery(prioritizedLayerMasks, focusIndividualCompoundCollider, out hitObject, out hitPoint, out hitDistance))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1369));
		RuntimeObject* L_22 = ___queryPointer0;
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_23 = ___prioritizedLayerMasks3;
		bool L_24 = ___focusIndividualCompoundCollider6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1388));
		NullCheck(L_22);
		bool L_25 = InterfaceFuncInvoker5< bool, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*, bool, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F **, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *, float* >::Invoke(1 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityQueryablePointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,UnityEngine.GameObject&,UnityEngine.Vector3&,System.Single&) */, IMixedRealityQueryablePointer_tB0EE35998121C743E06E5F4EA0A1DDF338D1BE8B_il2cpp_TypeInfo_var, L_22, L_23, L_24, (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F **)(&V_4), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_5), (float*)(&V_6));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1388));
		V_8 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1370));
		bool L_26 = V_8;
		if (!L_26)
		{
			goto IL_00c1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1371));
		// hit.Set(hitObject, hitPoint, Vector3.zero, pointerRays[i], 0, hitDistance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1372));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_27 = ___hit4;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_28 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1389));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1389));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1390));
		IL2CPP_RUNTIME_CLASS_INIT(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_il2cpp_TypeInfo_var);
		Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  L_31 = Vector4_op_Implicit_m5BFA8D95F88CB2AEA6E02B200A61B718314A8495(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1390));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_32 = ___pointerRays1;
		int32_t L_33 = V_2;
		NullCheck(L_32);
		int32_t L_34 = L_33;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_35 = (L_32)->GetAt(static_cast<il2cpp_array_size_t>(L_34));
		float L_36 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1391));
		NullCheck(L_27);
		PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B(L_27, L_28, L_29, L_31, L_35, 0, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1391));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1373));
		goto IL_0109;
	}

IL_00c1:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1374));
		goto IL_00e6;
	}

IL_00c3:
	{
		// Debug.LogError($"Invalid raycast mode {queryPointer.SceneQueryType} for {queryPointer.PointerName} pointer.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1375));
		RuntimeObject* L_37 = ___queryPointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1392));
		NullCheck(L_37);
		int32_t L_38 = InterfaceFuncInvoker0< int32_t >::Invoke(24 /* Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_SceneQueryType() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_37);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1392));
		int32_t L_39 = L_38;
		RuntimeObject * L_40 = Box(SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229_il2cpp_TypeInfo_var, &L_39);
		RuntimeObject* L_41 = ___queryPointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1393));
		NullCheck(L_41);
		String_t* L_42 = InterfaceFuncInvoker0< String_t* >::Invoke(3 /* System.String Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerName() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_41);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1393));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1394));
		String_t* L_43 = String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A(_stringLiteralB6A91516978714C95B18BDD76CCB584B7B676715, L_40, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1394));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1395));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1395));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1376));
		goto IL_00e6;
	}

IL_00e6:
	{
		// rayStartDistance += pointerRays[i].Length;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1377));
		float L_44 = V_0;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_45 = ___pointerRays1;
		int32_t L_46 = V_2;
		NullCheck(L_45);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1396));
		float L_47 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_45)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_46))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1396));
		V_0 = ((float)il2cpp_codegen_add((float)L_44, (float)L_47));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1378));
		// for (int i = 0; i < pointerRays.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1379));
		int32_t L_48 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_48, (int32_t)1));
	}

IL_00fa:
	{
		// for (int i = 0; i < pointerRays.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1380));
		int32_t L_49 = V_2;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_50 = ___pointerRays1;
		NullCheck(L_50);
		V_9 = (bool)((((int32_t)L_49) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_50)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1381));
		bool L_51 = V_9;
		if (L_51)
		{
			goto IL_000e;
		}
	}

IL_0109:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1382));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::QuerySceneInternal(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Physics.RayStep[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_QuerySceneInternal_mC2F2A339551DEF0A73A5F91AA6E8C84B3691C627 (RuntimeObject* ___pointer0, RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___pointerRays1, RuntimeObject* ___raycastProvider2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks3, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit4, int32_t ___maxQuerySceneResults5, bool ___focusIndividualCompoundCollider6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_QuerySceneInternal_mC2F2A339551DEF0A73A5F91AA6E8C84B3691C627_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_6 = NULL;
	float V_7 = 0.0f;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* V_12 = NULL;
	int32_t V_13 = 0;
	LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  V_14;
	memset((&V_14), 0, sizeof(V_14));
	int32_t V_15 = 0;
	bool V_16 = false;
	bool V_17 = false;
	int32_t V_18 = 0;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * V_19 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_20;
	memset((&V_20), 0, sizeof(V_20));
	float V_21 = 0.0f;
	bool V_22 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_23;
	memset((&V_23), 0, sizeof(V_23));
	bool V_24 = false;
	bool V_25 = false;
	bool V_26 = false;
	bool V_27 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___pointerRays1), (&___raycastProvider2), (&___prioritizedLayerMasks3), (&___hit4), (&___maxQuerySceneResults5), (&___focusIndividualCompoundCollider6));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_4), (&V_5), (&V_6), (&V_7), (&V_14), (&V_15), (&V_18), (&V_19), (&V_20), (&V_21));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_QuerySceneInternal_mC2F2A339551DEF0A73A5F91AA6E8C84B3691C627_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1397));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1398));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1399));
		// float rayStartDistance = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1400));
		V_0 = (0.0f);
		// for (int i = 0; i < pointerRays.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1401));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1402));
		goto IL_0297;
	}

IL_000e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1403));
		// switch (pointer.SceneQueryType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1404));
		RuntimeObject* L_0 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1487));
		NullCheck(L_0);
		int32_t L_1 = InterfaceFuncInvoker0< int32_t >::Invoke(24 /* Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_SceneQueryType() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1487));
		V_3 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1405));
		int32_t L_2 = V_3;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0031;
			}
			case 1:
			{
				goto IL_006f;
			}
			case 2:
			{
				goto IL_007f;
			}
			case 3:
			{
				goto IL_00c3;
			}
		}
	}
	{
		goto IL_0260;
	}

IL_0031:
	{
		// if (raycastProvider.Raycast(pointerRays[i], prioritizedLayerMasks, focusIndividualCompoundCollider, out hitInfo))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1406));
		RuntimeObject* L_3 = ___raycastProvider2;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = ___pointerRays1;
		int32_t L_5 = V_2;
		NullCheck(L_4);
		int32_t L_6 = L_5;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_7 = (L_4)->GetAt(static_cast<il2cpp_array_size_t>(L_6));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_8 = ___prioritizedLayerMasks3;
		bool L_9 = ___focusIndividualCompoundCollider6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1488));
		NullCheck(L_3);
		bool L_10 = InterfaceFuncInvoker4< bool, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B , LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*, bool, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * >::Invoke(0 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider::Raycast(Microsoft.MixedReality.Toolkit.Physics.RayStep,UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&) */, IMixedRealityRaycastProvider_t58C978A5F14FD7DA2732FBFF9D2CED27E3DFF023_il2cpp_TypeInfo_var, L_3, L_7, L_8, L_9, (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)(&V_1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1488));
		V_8 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1407));
		bool L_11 = V_8;
		if (!L_11)
		{
			goto IL_006a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1408));
		// hit.Set(hitInfo, pointerRays[i], i, rayStartDistance + hitInfo.distance, focusIndividualCompoundCollider);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1409));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_12 = ___hit4;
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_13 = V_1;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_14 = ___pointerRays1;
		int32_t L_15 = V_2;
		NullCheck(L_14);
		int32_t L_16 = L_15;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_17 = (L_14)->GetAt(static_cast<il2cpp_array_size_t>(L_16));
		int32_t L_18 = V_2;
		float L_19 = V_0;
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_20 = V_1;
		float L_21 = L_20.get_distance_3();
		bool L_22 = ___focusIndividualCompoundCollider6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1489));
		NullCheck(L_12);
		PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418(L_12, L_13, L_17, L_18, ((float)il2cpp_codegen_add((float)L_19, (float)L_21)), L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1489));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1410));
		goto IL_02a6;
	}

IL_006a:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1411));
		goto IL_0283;
	}

IL_006f:
	{
		// Debug.LogWarning("Box Raycasting Mode not supported for pointers.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1412));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1490));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteral20F75AABCF4F4FFB7C74A98072694EA12ABD1091, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1490));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1413));
		goto IL_0283;
	}

IL_007f:
	{
		// if (raycastProvider.SphereCast(pointerRays[i], pointer.SphereCastRadius, prioritizedLayerMasks, focusIndividualCompoundCollider, out hitInfo))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1414));
		RuntimeObject* L_23 = ___raycastProvider2;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_24 = ___pointerRays1;
		int32_t L_25 = V_2;
		NullCheck(L_24);
		int32_t L_26 = L_25;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_27 = (L_24)->GetAt(static_cast<il2cpp_array_size_t>(L_26));
		RuntimeObject* L_28 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1491));
		NullCheck(L_28);
		float L_29 = InterfaceFuncInvoker0< float >::Invoke(26 /* System.Single Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_SphereCastRadius() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_28);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1491));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_30 = ___prioritizedLayerMasks3;
		bool L_31 = ___focusIndividualCompoundCollider6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1492));
		NullCheck(L_23);
		bool L_32 = InterfaceFuncInvoker5< bool, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B , float, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*, bool, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * >::Invoke(1 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider::SphereCast(Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Single,UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&) */, IMixedRealityRaycastProvider_t58C978A5F14FD7DA2732FBFF9D2CED27E3DFF023_il2cpp_TypeInfo_var, L_23, L_27, L_29, L_30, L_31, (MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)(&V_1));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1492));
		V_9 = L_32;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1415));
		bool L_33 = V_9;
		if (!L_33)
		{
			goto IL_00be;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1416));
		// hit.Set(hitInfo, pointerRays[i], i, rayStartDistance + hitInfo.distance, focusIndividualCompoundCollider);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1417));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_34 = ___hit4;
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_35 = V_1;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_36 = ___pointerRays1;
		int32_t L_37 = V_2;
		NullCheck(L_36);
		int32_t L_38 = L_37;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_39 = (L_36)->GetAt(static_cast<il2cpp_array_size_t>(L_38));
		int32_t L_40 = V_2;
		float L_41 = V_0;
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_42 = V_1;
		float L_43 = L_42.get_distance_3();
		bool L_44 = ___focusIndividualCompoundCollider6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1493));
		NullCheck(L_34);
		PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418(L_34, L_35, L_39, L_40, ((float)il2cpp_codegen_add((float)L_41, (float)L_43)), L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1493));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1418));
		goto IL_02a6;
	}

IL_00be:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1419));
		goto IL_0283;
	}

IL_00c3:
	{
		// if (colliders == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1420));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_45 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_colliders_60();
		V_10 = (bool)((((RuntimeObject*)(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)L_45) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1421));
		bool L_46 = V_10;
		if (!L_46)
		{
			goto IL_00e1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1422));
		// colliders = new Collider[maxQuerySceneResults];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1423));
		int32_t L_47 = ___maxQuerySceneResults5;
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_48 = (ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)SZArrayNew(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252_il2cpp_TypeInfo_var, (uint32_t)L_47);
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_colliders_60(L_48);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1424));
		goto IL_0104;
	}

IL_00e1:
	{
		// else if (colliders.Length != maxQuerySceneResults)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1425));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_49 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_colliders_60();
		NullCheck(L_49);
		int32_t L_50 = ___maxQuerySceneResults5;
		V_11 = (bool)((((int32_t)((((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_49)->max_length))))) == ((int32_t)L_50))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1426));
		bool L_51 = V_11;
		if (!L_51)
		{
			goto IL_0104;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1427));
		// Array.Resize(ref colliders, maxQuerySceneResults);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1428));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		int32_t L_52 = ___maxQuerySceneResults5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1494));
		Array_Resize_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_mAC98FE438E7404FFE4CF7ABB9B33B126D970ADB5((ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252**)(((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_address_of_colliders_60()), L_52, /*hidden argument*/Array_Resize_TisCollider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_mAC98FE438E7404FFE4CF7ABB9B33B126D970ADB5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1494));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1429));
	}

IL_0104:
	{
		// Vector3 testPoint = pointer.Rays[i].Origin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1430));
		RuntimeObject* L_53 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1495));
		NullCheck(L_53);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_54 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_53);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1495));
		int32_t L_55 = V_2;
		NullCheck(L_54);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1496));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_56 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_54)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_55))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1496));
		V_4 = L_56;
		// Vector3 objectHitPoint = testPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1431));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_57 = V_4;
		V_5 = L_57;
		// GameObject closest = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1432));
		V_6 = (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL;
		// float closestDistance = Mathf.Infinity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1433));
		V_7 = (std::numeric_limits<float>::infinity());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1434));
		// foreach (LayerMask layerMask in prioritizedLayerMasks)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1435));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_58 = ___prioritizedLayerMasks3;
		V_12 = L_58;
		V_13 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1436));
		goto IL_0253;
	}

IL_0131:
	{
		// foreach (LayerMask layerMask in prioritizedLayerMasks)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1437));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_59 = V_12;
		int32_t L_60 = V_13;
		NullCheck(L_59);
		int32_t L_61 = L_60;
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_62 = (L_59)->GetAt(static_cast<il2cpp_array_size_t>(L_61));
		V_14 = L_62;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1438));
		// int numColliders = UnityPhysics.OverlapSphereNonAlloc(pointer.Rays[i].Origin, pointer.SphereCastRadius, colliders, layerMask);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1439));
		RuntimeObject* L_63 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1497));
		NullCheck(L_63);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_64 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_63);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1497));
		int32_t L_65 = V_2;
		NullCheck(L_64);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1498));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_64)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_65))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1498));
		RuntimeObject* L_67 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1499));
		NullCheck(L_67);
		float L_68 = InterfaceFuncInvoker0< float >::Invoke(26 /* System.Single Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_SphereCastRadius() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_67);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1499));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_69 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_colliders_60();
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_70 = V_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1500));
		int32_t L_71 = LayerMask_op_Implicit_m2AFFC7F931005437E8F356C953F439829AF4CFA5(L_70, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1500));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1501));
		int32_t L_72 = Physics_OverlapSphereNonAlloc_mDC000E583161ABC0E2600518D97E2663EFBF1400(L_66, L_68, L_69, L_71, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1501));
		V_15 = L_72;
		// if (numColliders > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1440));
		int32_t L_73 = V_15;
		V_16 = (bool)((((int32_t)L_73) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1441));
		bool L_74 = V_16;
		if (!L_74)
		{
			goto IL_0216;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1442));
		// if (numColliders >= maxQuerySceneResults)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1443));
		int32_t L_75 = V_15;
		int32_t L_76 = ___maxQuerySceneResults5;
		V_17 = (bool)((((int32_t)((((int32_t)L_75) < ((int32_t)L_76))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1444));
		bool L_77 = V_17;
		if (!L_77)
		{
			goto IL_019e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1445));
		// Debug.LogWarning($"Maximum number of {numColliders} colliders found in FocusProvider overlap query. Consider increasing the focus query buffer size in the input profile.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1446));
		int32_t L_78 = V_15;
		int32_t L_79 = L_78;
		RuntimeObject * L_80 = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &L_79);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1502));
		String_t* L_81 = String_Format_m0ACDD8B34764E4040AED0B3EEB753567E4576BFA(_stringLiteral4AE1CF073F5FD921C5BF2B9EA7F8CBC6A5B61CCB, L_80, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1502));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1503));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(L_81, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1503));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1447));
	}

IL_019e:
	{
		// for (int colliderIndex = 0; colliderIndex < numColliders; colliderIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1448));
		V_18 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1449));
		goto IL_0209;
	}

IL_01a3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1450));
		// Collider collider = colliders[colliderIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1451));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* L_82 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_colliders_60();
		int32_t L_83 = V_18;
		NullCheck(L_82);
		int32_t L_84 = L_83;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_85 = (L_82)->GetAt(static_cast<il2cpp_array_size_t>(L_84));
		V_19 = L_85;
		// if (collider.GetComponent<NearInteractionGrabbable>() == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1452));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_86 = V_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1504));
		NullCheck(L_86);
		NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * L_87 = Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC(L_86, /*hidden argument*/Component_GetComponent_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m71B8004E818AA1C762454374A4F5B07E2E92BBAC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1504));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1505));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_88 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_87, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1505));
		V_22 = L_88;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1453));
		bool L_89 = V_22;
		if (!L_89)
		{
			goto IL_01c4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1454));
		// continue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1455));
		goto IL_0203;
	}

IL_01c4:
	{
		// Vector3 closestPointToCollider = collider.ClosestPoint(testPoint);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1456));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_90 = V_19;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_91 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1506));
		NullCheck(L_90);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_92 = Collider_ClosestPoint_mA3CF53B6EE9CEEDB3BF2BCCE19E511CA659672B7(L_90, L_91, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1506));
		V_20 = L_92;
		// float distance = (testPoint - closestPointToCollider).sqrMagnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1457));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_93 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_94 = V_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1507));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_95 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_93, L_94, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1507));
		V_23 = L_95;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1508));
		float L_96 = Vector3_get_sqrMagnitude_m1C6E190B4A933A183B308736DEC0DD64B0588968((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_23), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1508));
		V_21 = L_96;
		// if (distance < closestDistance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1458));
		float L_97 = V_21;
		float L_98 = V_7;
		V_24 = (bool)((((float)L_97) < ((float)L_98))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1459));
		bool L_99 = V_24;
		if (!L_99)
		{
			goto IL_0202;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1460));
		// closestDistance = distance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1461));
		float L_100 = V_21;
		V_7 = L_100;
		// closest = collider.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1462));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_101 = V_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1509));
		NullCheck(L_101);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_102 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_101, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1509));
		V_6 = L_102;
		// objectHitPoint = closestPointToCollider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1463));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_103 = V_20;
		V_5 = L_103;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1464));
	}

IL_0202:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1465));
	}

IL_0203:
	{
		// for (int colliderIndex = 0; colliderIndex < numColliders; colliderIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1466));
		int32_t L_104 = V_18;
		V_18 = ((int32_t)il2cpp_codegen_add((int32_t)L_104, (int32_t)1));
	}

IL_0209:
	{
		// for (int colliderIndex = 0; colliderIndex < numColliders; colliderIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1467));
		int32_t L_105 = V_18;
		int32_t L_106 = V_15;
		V_25 = (bool)((((int32_t)L_105) < ((int32_t)L_106))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1468));
		bool L_107 = V_25;
		if (L_107)
		{
			goto IL_01a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1469));
	}

IL_0216:
	{
		// if (closest != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1470));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_108 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1510));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_109 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_108, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1510));
		V_26 = L_109;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1471));
		bool L_110 = V_26;
		if (!L_110)
		{
			goto IL_024c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1472));
		// hit.Set(closest, objectHitPoint, Vector3.zero, pointer.Rays[i], 0, closestDistance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1473));
		PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_111 = ___hit4;
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_112 = V_6;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_113 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1511));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_114 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1511));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1512));
		IL2CPP_RUNTIME_CLASS_INIT(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_il2cpp_TypeInfo_var);
		Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  L_115 = Vector4_op_Implicit_m5BFA8D95F88CB2AEA6E02B200A61B718314A8495(L_114, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1512));
		RuntimeObject* L_116 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1513));
		NullCheck(L_116);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_117 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_116);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1513));
		int32_t L_118 = V_2;
		NullCheck(L_117);
		int32_t L_119 = L_118;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_120 = (L_117)->GetAt(static_cast<il2cpp_array_size_t>(L_119));
		float L_121 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1514));
		NullCheck(L_111);
		PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B(L_111, L_112, L_113, L_115, L_120, 0, L_121, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1514));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1474));
		goto IL_02a6;
	}

IL_024c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1475));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1476));
		int32_t L_122 = V_13;
		V_13 = ((int32_t)il2cpp_codegen_add((int32_t)L_122, (int32_t)1));
	}

IL_0253:
	{
		// foreach (LayerMask layerMask in prioritizedLayerMasks)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1477));
		int32_t L_123 = V_13;
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_124 = V_12;
		NullCheck(L_124);
		if ((((int32_t)L_123) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_124)->max_length)))))))
		{
			goto IL_0131;
		}
	}
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1478));
		goto IL_0283;
	}

IL_0260:
	{
		// Debug.LogError($"Invalid raycast mode {pointer.SceneQueryType} for {pointer.PointerName} pointer.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1479));
		RuntimeObject* L_125 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1515));
		NullCheck(L_125);
		int32_t L_126 = InterfaceFuncInvoker0< int32_t >::Invoke(24 /* Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_SceneQueryType() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_125);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1515));
		int32_t L_127 = L_126;
		RuntimeObject * L_128 = Box(SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229_il2cpp_TypeInfo_var, &L_127);
		RuntimeObject* L_129 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1516));
		NullCheck(L_129);
		String_t* L_130 = InterfaceFuncInvoker0< String_t* >::Invoke(3 /* System.String Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerName() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_129);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1516));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1517));
		String_t* L_131 = String_Format_m19325298DBC61AAC016C16F7B3CF97A8A3DEA34A(_stringLiteralB6A91516978714C95B18BDD76CCB584B7B676715, L_128, L_130, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1517));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1518));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_131, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1518));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1480));
		goto IL_0283;
	}

IL_0283:
	{
		// rayStartDistance += pointerRays[i].Length;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1481));
		float L_132 = V_0;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_133 = ___pointerRays1;
		int32_t L_134 = V_2;
		NullCheck(L_133);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1519));
		float L_135 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_133)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_134))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1519));
		V_0 = ((float)il2cpp_codegen_add((float)L_132, (float)L_135));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1482));
		// for (int i = 0; i < pointerRays.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1483));
		int32_t L_136 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_136, (int32_t)1));
	}

IL_0297:
	{
		// for (int i = 0; i < pointerRays.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1484));
		int32_t L_137 = V_2;
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_138 = ___pointerRays1;
		NullCheck(L_138);
		V_27 = (bool)((((int32_t)L_137) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_138)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1485));
		bool L_139 = V_27;
		if (L_139)
		{
			goto IL_000e;
		}
	}

IL_02a6:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1486));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::RaycastGraphics(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.EventSystems.PointerEventData,UnityEngine.LayerMask[],Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___graphicEventData1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hit3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  V_2;
	memset((&V_2), 0, sizeof(V_2));
	float V_3 = 0.0f;
	bool V_4 = false;
	int32_t V_5 = 0;
	bool V_6 = false;
	bool V_7 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_8;
	memset((&V_8), 0, sizeof(V_8));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_9;
	memset((&V_9), 0, sizeof(V_9));
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___graphicEventData1), (&___prioritizedLayerMasks2), (&___hit3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_5), (&V_8), (&V_9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_RaycastGraphics_m7598D855EBDADFFB68B2555581B9521D4F6A47B5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1520));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1521));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	int32_t G_B13_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1522));
		// using (RaycastGraphicsPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1523));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_RaycastGraphicsPerfMarker_61();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1560));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1560));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1524));
			// Debug.Assert(UIRaycastCamera != null, "Missing UIRaycastCamera!");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1525));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1561));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_2 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1561));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1562));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1562));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1563));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_3, _stringLiteral9AD3443FCE8F085946115EBA3E5912232D94C78F, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1563));
			// Debug.Assert(UIRaycastCamera.nearClipPlane == 0, "Near plane must be zero for raycast distances to be correct");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1526));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1564));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_4 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1564));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1565));
			NullCheck(L_4);
			float L_5 = Camera_get_nearClipPlane_mD9D3E3D27186BBAC2CC354CE3609E6118A5BF66C(L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1565));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1566));
			Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)((((float)L_5) == ((float)(0.0f)))? 1 : 0), _stringLiteral9D1476E3D18FB7ACAA23D3FEF2C03677E2861EF8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1566));
			// RaycastResult raycastResult = default(RaycastResult);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1527));
			il2cpp_codegen_initobj((&V_2), sizeof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 ));
			// if (pointer.Rays == null || pointer.Rays.Length <= 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1528));
			RuntimeObject* L_6 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1567));
			NullCheck(L_6);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_7 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1567));
			if (!L_7)
			{
				goto IL_0060;
			}
		}

IL_0054:
		{
			RuntimeObject* L_8 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1568));
			NullCheck(L_8);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_9 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_8);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1568));
			NullCheck(L_9);
			G_B4_0 = ((((int32_t)(((RuntimeArray*)L_9)->max_length)) == ((int32_t)0))? 1 : 0);
			goto IL_0061;
		}

IL_0060:
		{
			G_B4_0 = 1;
		}

IL_0061:
		{
			V_4 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1529));
			bool L_10 = V_4;
			if (!L_10)
			{
				goto IL_0088;
			}
		}

IL_0067:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1530));
			// Debug.LogError($"No valid rays for {pointer.PointerName} pointer.");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1531));
			RuntimeObject* L_11 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1569));
			NullCheck(L_11);
			String_t* L_12 = InterfaceFuncInvoker0< String_t* >::Invoke(3 /* System.String Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerName() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1569));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1570));
			String_t* L_13 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteralB5672B826B48C4BDD228E0C126D9C47A56797A73, L_12, _stringLiteral99F6A1E6338F3AA00EEC343555842D1481D2945E, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1570));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1571));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1571));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1532));
			IL2CPP_LEAVE(0x1E5, FINALLY_01d6);
		}

IL_0088:
		{
			// float totalDistance = 0.0f;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1533));
			V_3 = (0.0f);
			// for (int i = 0; i < pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1534));
			V_5 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1535));
			goto IL_01be;
		}

IL_0096:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1536));
			// if (RaycastGraphicsStep(graphicEventData, pointer.Rays[i], prioritizedLayerMasks, out raycastResult))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1537));
			PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_14 = ___graphicEventData1;
			RuntimeObject* L_15 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1572));
			NullCheck(L_15);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_16 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_15);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1572));
			int32_t L_17 = V_5;
			NullCheck(L_16);
			int32_t L_18 = L_17;
			RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_19 = (L_16)->GetAt(static_cast<il2cpp_array_size_t>(L_18));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_20 = ___prioritizedLayerMasks2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1573));
			bool L_21 = FocusProvider_RaycastGraphicsStep_mA63D7EA8576A77A471642A3ED615A2BEDF050613(__this, L_14, L_19, L_20, (RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1573));
			V_6 = L_21;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1538));
			bool L_22 = V_6;
			if (!L_22)
			{
				goto IL_01a2;
			}
		}

IL_00b7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1539));
			// if (raycastResult.isValid &&
			//     raycastResult.distance < pointer.Rays[i].Length &&
			//     raycastResult.module != null &&
			//     raycastResult.module.eventCamera == UIRaycastCamera)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1540));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1574));
			bool L_23 = RaycastResult_get_isValid_m2F2241EF619EFFC0F609FAA35D4C64455712DE47((RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1574));
			if (!L_23)
			{
				goto IL_0101;
			}
		}

IL_00c1:
		{
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_24 = V_2;
			float L_25 = L_24.get_distance_2();
			RuntimeObject* L_26 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1575));
			NullCheck(L_26);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_27 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_26);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1575));
			int32_t L_28 = V_5;
			NullCheck(L_27);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1576));
			float L_29 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_27)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_28))), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1576));
			if ((!(((float)L_25) < ((float)L_29))))
			{
				goto IL_0101;
			}
		}

IL_00db:
		{
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_30 = V_2;
			BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * L_31 = L_30.get_module_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1577));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_32 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_31, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1577));
			if (!L_32)
			{
				goto IL_0101;
			}
		}

IL_00e9:
		{
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_33 = V_2;
			BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * L_34 = L_33.get_module_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1578));
			NullCheck(L_34);
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_35 = VirtFuncInvoker0< Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * >::Invoke(18 /* UnityEngine.Camera UnityEngine.EventSystems.BaseRaycaster::get_eventCamera() */, L_34);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1578));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1579));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_36 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1579));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1580));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_37 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_35, L_36, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1580));
			G_B13_0 = ((int32_t)(L_37));
			goto IL_0102;
		}

IL_0101:
		{
			G_B13_0 = 0;
		}

IL_0102:
		{
			V_7 = (bool)G_B13_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1541));
			bool L_38 = V_7;
			if (!L_38)
			{
				goto IL_01a1;
			}
		}

IL_010b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1542));
			// totalDistance += raycastResult.distance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1543));
			float L_39 = V_3;
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_40 = V_2;
			float L_41 = L_40.get_distance_2();
			V_3 = ((float)il2cpp_codegen_add((float)L_39, (float)L_41));
			// newUiRaycastPosition.x = raycastResult.screenPosition.x;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1544));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_42 = __this->get_address_of_newUiRaycastPosition_39();
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_43 = V_2;
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_44 = L_43.get_screenPosition_9();
			float L_45 = L_44.get_x_0();
			L_42->set_x_2(L_45);
			// newUiRaycastPosition.y = raycastResult.screenPosition.y;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1545));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_46 = __this->get_address_of_newUiRaycastPosition_39();
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_47 = V_2;
			Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_48 = L_47.get_screenPosition_9();
			float L_49 = L_48.get_y_1();
			L_46->set_y_3(L_49);
			// newUiRaycastPosition.z = raycastResult.distance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1546));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_50 = __this->get_address_of_newUiRaycastPosition_39();
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_51 = V_2;
			float L_52 = L_51.get_distance_2();
			L_50->set_z_4(L_52);
			// Vector3 worldPos = UIRaycastCamera.ScreenToWorldPoint(newUiRaycastPosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1547));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1581));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_53 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1581));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_54 = __this->get_newUiRaycastPosition_39();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1582));
			NullCheck(L_53);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = Camera_ScreenToWorldPoint_m179BB999DC97A251D0892B39C98F3FACDF0617C5(L_53, L_54, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1582));
			V_8 = L_55;
			// Vector3 normal = -raycastResult.gameObject.transform.forward;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1548));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1583));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_56 = RaycastResult_get_gameObject_m9D77DEDFF498BAFE29A5F88E9F238400D04C8FDD((RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)(&V_2), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1583));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1584));
			NullCheck(L_56);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_57 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_56, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1584));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1585));
			NullCheck(L_57);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_58 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_57, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1585));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1586));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_59 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_58, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1586));
			V_9 = L_59;
			// hit.Set(raycastResult, worldPos, normal, pointer.Rays[i], i, totalDistance);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1549));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_60 = ___hit3;
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_61 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_62 = V_8;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_63 = V_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1587));
			IL2CPP_RUNTIME_CLASS_INIT(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_il2cpp_TypeInfo_var);
			Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  L_64 = Vector4_op_Implicit_m5BFA8D95F88CB2AEA6E02B200A61B718314A8495(L_63, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1587));
			RuntimeObject* L_65 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1588));
			NullCheck(L_65);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_66 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_65);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1588));
			int32_t L_67 = V_5;
			NullCheck(L_66);
			int32_t L_68 = L_67;
			RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_69 = (L_66)->GetAt(static_cast<il2cpp_array_size_t>(L_68));
			int32_t L_70 = V_5;
			float L_71 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1589));
			NullCheck(L_60);
			PointerHitResult_Set_m8A7D09DD40F6B3B582B9B541B1A0EB3EFBD75007(L_60, L_61, L_62, L_64, L_69, L_70, L_71, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1589));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1550));
			IL2CPP_LEAVE(0x1E5, FINALLY_01d6);
		}

IL_01a1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1551));
		}

IL_01a2:
		{
			// totalDistance += pointer.Rays[i].Length;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1552));
			float L_72 = V_3;
			RuntimeObject* L_73 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1590));
			NullCheck(L_73);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_74 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_73);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1590));
			int32_t L_75 = V_5;
			NullCheck(L_74);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1591));
			float L_76 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_74)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_75))), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1591));
			V_3 = ((float)il2cpp_codegen_add((float)L_72, (float)L_76));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1553));
			// for (int i = 0; i < pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1554));
			int32_t L_77 = V_5;
			V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_77, (int32_t)1));
		}

IL_01be:
		{
			// for (int i = 0; i < pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1555));
			int32_t L_78 = V_5;
			RuntimeObject* L_79 = ___pointer0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1592));
			NullCheck(L_79);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_80 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_79);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1592));
			NullCheck(L_80);
			V_10 = (bool)((((int32_t)L_78) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_80)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1556));
			bool L_81 = V_10;
			if (L_81)
			{
				goto IL_0096;
			}
		}

IL_01d3:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1557));
			IL2CPP_LEAVE(0x1E5, FINALLY_01d6);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_01d6;
	}

FINALLY_01d6:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1558));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1593));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1593));
		IL2CPP_END_FINALLY(470)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(470)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1E5, IL_01e5)
	}

IL_01e5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1559));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider::RaycastGraphicsStep(UnityEngine.EventSystems.PointerEventData,Microsoft.MixedReality.Toolkit.Physics.RayStep,UnityEngine.LayerMask[],UnityEngine.EventSystems.RaycastResult&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FocusProvider_RaycastGraphicsStep_mA63D7EA8576A77A471642A3ED615A2BEDF050613 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * ___graphicEventData0, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___step1, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks2, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * ___uiRaycastResult3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_RaycastGraphicsStep_mA63D7EA8576A77A471642A3ED615A2BEDF050613_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___graphicEventData0), (&___step1), (&___prioritizedLayerMasks2), (&___uiRaycastResult3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_RaycastGraphicsStep_mA63D7EA8576A77A471642A3ED615A2BEDF050613_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1594));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1595));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1596));
		// using (RaycastGraphicsStepPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1597));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_RaycastGraphicsStepPerfMarker_62();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1608));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1608));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1598));
		// Debug.Assert(step.Direction != Vector3.zero, "RayStep Direction is Invalid.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1599));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1609));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&___step1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1609));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1610));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1610));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1611));
		bool L_4 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1611));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1612));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_4, _stringLiteral5315A4F18D223125A659ABC3F4FE97FC8792AC5E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1612));
		// UIRaycastCamera.transform.position = step.Origin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1600));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1613));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_5 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1613));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1614));
		NullCheck(L_5);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1614));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1615));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&___step1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1615));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1616));
		NullCheck(L_6);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1616));
		// UIRaycastCamera.transform.rotation = Quaternion.LookRotation(step.Direction, Vector3.up);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1601));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1617));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_8 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1617));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1618));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1618));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1619));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&___step1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1619));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1620));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1620));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1621));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1621));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1622));
		NullCheck(L_9);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(L_9, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1622));
		// graphicEventData.position = new Vector2(UIRaycastCamera.pixelWidth * 0.5f, UIRaycastCamera.pixelHeight * 0.5f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1602));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_13 = ___graphicEventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1623));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_14 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1623));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1624));
		NullCheck(L_14);
		int32_t L_15 = Camera_get_pixelWidth_m67EC53853580E35527F32D6EA002FE21C234172E(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1624));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1625));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_16 = FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1625));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1626));
		NullCheck(L_16);
		int32_t L_17 = Camera_get_pixelHeight_m38879ACBA6B21C25E83AB07FA37A8E5EB7A51B05(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1626));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1627));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_18;
		memset((&L_18), 0, sizeof(L_18));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_18), ((float)il2cpp_codegen_multiply((float)(((float)((float)L_15))), (float)(0.5f))), ((float)il2cpp_codegen_multiply((float)(((float)((float)L_17))), (float)(0.5f))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1627));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1628));
		NullCheck(L_13);
		PointerEventData_set_position_m9BDCBF26C28C01F781ACB8FC87448CB4ADD0BBD5_inline(L_13, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1628));
		// uiRaycastResult = CoreServices.InputSystem.RaycastProvider.GraphicsRaycast(EventSystem.current, graphicEventData, prioritizedLayerMasks);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1603));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * L_19 = ___uiRaycastResult3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1629));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_20 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1629));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1630));
		NullCheck(L_20);
		RuntimeObject* L_21 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(8 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_RaycastProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1630));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1631));
		IL2CPP_RUNTIME_CLASS_INIT(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_il2cpp_TypeInfo_var);
		EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_22 = EventSystem_get_current_m3151477735829089F66A3E46AD6DAB14CFDDE7BD(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1631));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_23 = ___graphicEventData0;
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_24 = ___prioritizedLayerMasks2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1632));
		NullCheck(L_21);
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_25 = InterfaceFuncInvoker3< RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 , EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 *, PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* >::Invoke(2 /* UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityRaycastProvider::GraphicsRaycast(UnityEngine.EventSystems.EventSystem,UnityEngine.EventSystems.PointerEventData,UnityEngine.LayerMask[]) */, IMixedRealityRaycastProvider_t58C978A5F14FD7DA2732FBFF9D2CED27E3DFF023_il2cpp_TypeInfo_var, L_21, L_22, L_23, L_24);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1632));
		*(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)L_19 = L_25;
		Il2CppCodeGenWriteBarrier((void**)&(((RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)L_19)->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)L_19)->___module_1), (void*)NULL);
		#endif
		// graphicEventData.pointerCurrentRaycast = uiRaycastResult;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1604));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_26 = ___graphicEventData0;
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * L_27 = ___uiRaycastResult3;
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_28 = (*(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)L_27);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1633));
		NullCheck(L_26);
		PointerEventData_set_pointerCurrentRaycast_mA63CA749AC5410AF7D28F4C924BA3372E12F61FC_inline(L_26, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1633));
		// return (uiRaycastCamera.gameObject != null);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1605));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_29 = __this->get_uiRaycastCamera_38();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1634));
		NullCheck(L_29);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_30 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1634));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1635));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_31 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_30, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1635));
		V_2 = L_31;
		IL2CPP_LEAVE(0xE4, FINALLY_00d5);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00d5;
	}

FINALLY_00d5:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1606));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1636));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1636));
		IL2CPP_END_FINALLY(213)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(213)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xE4, IL_00e4)
	}

IL_00e4:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1607));
		bool L_32 = V_2;
		return L_32;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::UpdateFocusedObjects()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_UpdateFocusedObjects_mAA837F83E07556828F8352D172227B4E3B44576F (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_UpdateFocusedObjects_mAA837F83E07556828F8352D172227B4E3B44576F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  V_2;
	memset((&V_2), 0, sizeof(V_2));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_3 = NULL;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  V_10;
	memset((&V_10), 0, sizeof(V_10));
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_11 = NULL;
	bool V_12 = false;
	int32_t V_13 = 0;
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * V_14 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_15 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_16 = NULL;
	int32_t V_17 = 0;
	bool V_18 = false;
	bool V_19 = false;
	bool V_20 = false;
	bool V_21 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_6), (&V_11), (&V_13), (&V_14), (&V_15), (&V_16), (&V_17));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_UpdateFocusedObjects_mAA837F83E07556828F8352D172227B4E3B44576F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1637));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1638));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 4);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B30_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1639));
		// using (UpdateFocusedObjectsPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1640));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_UpdateFocusedObjectsPerfMarker_63();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1730));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1730));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1641));
			// Debug.Assert(pendingPointerSpecificFocusChange.Count == 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1642));
			List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * L_2 = __this->get_pendingPointerSpecificFocusChange_24();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1731));
			NullCheck(L_2);
			int32_t L_3 = List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_inline(L_2, /*hidden argument*/List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1731));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1732));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_3) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1732));
			// Debug.Assert(pendingOverallFocusExitSet.Count == 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1643));
			Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_4 = __this->get_pendingOverallFocusExitSet_23();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1733));
			NullCheck(L_4);
			int32_t L_5 = Dictionary_2_get_Count_m021F96DD9C435F80DCE6226D69E73DB27935D86B(L_4, /*hidden argument*/Dictionary_2_get_Count_m021F96DD9C435F80DCE6226D69E73DB27935D86B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1733));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1734));
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_5) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1734));
			// Debug.Assert(pendingOverallFocusEnterSet.Count == 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1644));
			HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * L_6 = __this->get_pendingOverallFocusEnterSet_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1735));
			NullCheck(L_6);
			int32_t L_7 = HashSet_1_get_Count_m14C7571C69F65285901AB0ECC9F47AAA31170CBF_inline(L_6, /*hidden argument*/HashSet_1_get_Count_m14C7571C69F65285901AB0ECC9F47AAA31170CBF_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1735));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1736));
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_7) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1736));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1645));
			// foreach (var pointer in pointers.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1646));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_8 = __this->get_pointers_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1737));
			NullCheck(L_8);
			ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * L_9 = Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC(L_8, /*hidden argument*/Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1737));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1738));
			NullCheck(L_9);
			Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  L_10 = ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB(L_9, /*hidden argument*/ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1738));
			V_2 = L_10;
		}

IL_005e:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 1);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1647));
				goto IL_0118;
			}

IL_0063:
			{
				// foreach (var pointer in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1648));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1739));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_11 = Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_inline((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_2), /*hidden argument*/Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1739));
				V_3 = L_11;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1649));
				// if (pointer.PreviousPointerTarget != pointer.CurrentPointerTarget)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1650));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_12 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1740));
				NullCheck(L_12);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline(L_12, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1740));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_14 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1741));
				NullCheck(L_14);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_14, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1741));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1742));
				IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
				bool L_16 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_13, L_15, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1742));
				V_4 = L_16;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1651));
				bool L_17 = V_4;
				if (!L_17)
				{
					goto IL_0117;
				}
			}

IL_0086:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1652));
				// pendingPointerSpecificFocusChange.Add(pointer);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1653));
				List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * L_18 = __this->get_pendingPointerSpecificFocusChange_24();
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_19 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1743));
				NullCheck(L_18);
				List_1_Add_m99CC2297CB76E2597B79B8586B4CB7C941E7B89A(L_18, L_19, /*hidden argument*/List_1_Add_m99CC2297CB76E2597B79B8586B4CB7C941E7B89A_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1743));
				// if (pointer.PreviousPointerTarget != null)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1654));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_20 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1744));
				NullCheck(L_20);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline(L_20, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1744));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1745));
				IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
				bool L_22 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_21, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1745));
				V_5 = L_22;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1655));
				bool L_23 = V_5;
				if (!L_23)
				{
					goto IL_00f0;
				}
			}

IL_00a6:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1656));
				// if (pendingOverallFocusExitSet.TryGetValue(pointer.PreviousPointerTarget, out numExits))
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1657));
				Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_24 = __this->get_pendingOverallFocusExitSet_23();
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_25 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1746));
				NullCheck(L_25);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_26 = PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline(L_25, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1746));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1747));
				NullCheck(L_24);
				bool L_27 = Dictionary_2_TryGetValue_mF177D51B543CBB936EDEA25816DCD84BCB7C277A(L_24, L_26, (int32_t*)(&V_6), /*hidden argument*/Dictionary_2_TryGetValue_mF177D51B543CBB936EDEA25816DCD84BCB7C277A_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1747));
				V_7 = L_27;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1658));
				bool L_28 = V_7;
				if (!L_28)
				{
					goto IL_00da;
				}
			}

IL_00c0:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1659));
				// pendingOverallFocusExitSet[pointer.PreviousPointerTarget] = numExits + 1;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1660));
				Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_29 = __this->get_pendingOverallFocusExitSet_23();
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_30 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1748));
				NullCheck(L_30);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_31 = PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline(L_30, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1748));
				int32_t L_32 = V_6;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1749));
				NullCheck(L_29);
				Dictionary_2_set_Item_m1FEE001AF4C735DD8484A19AB8A22AD0C1691225(L_29, L_31, ((int32_t)il2cpp_codegen_add((int32_t)L_32, (int32_t)1)), /*hidden argument*/Dictionary_2_set_Item_m1FEE001AF4C735DD8484A19AB8A22AD0C1691225_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1749));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1661));
				goto IL_00ef;
			}

IL_00da:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1662));
				// pendingOverallFocusExitSet.Add(pointer.PreviousPointerTarget, 1);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1663));
				Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_33 = __this->get_pendingOverallFocusExitSet_23();
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_34 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1750));
				NullCheck(L_34);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_35 = PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline(L_34, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1750));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1751));
				NullCheck(L_33);
				Dictionary_2_Add_m7DD01028342A7236D97768FA68FB892C076EB0E1(L_33, L_35, 1, /*hidden argument*/Dictionary_2_Add_m7DD01028342A7236D97768FA68FB892C076EB0E1_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1751));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1664));
			}

IL_00ef:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1665));
			}

IL_00f0:
			{
				// if (pointer.CurrentPointerTarget != null)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1666));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_36 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1752));
				NullCheck(L_36);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_37 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_36, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1752));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1753));
				IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
				bool L_38 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_37, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1753));
				V_8 = L_38;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1667));
				bool L_39 = V_8;
				if (!L_39)
				{
					goto IL_0116;
				}
			}

IL_0102:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1668));
				// pendingOverallFocusEnterSet.Add(pointer.CurrentPointerTarget);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1669));
				HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * L_40 = __this->get_pendingOverallFocusEnterSet_22();
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_41 = V_3;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1754));
				NullCheck(L_41);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_42 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_41, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1754));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1755));
				NullCheck(L_40);
				HashSet_1_Add_m683D71064E0E13E6835CF84CA743D8528E61B695(L_40, L_42, /*hidden argument*/HashSet_1_Add_m683D71064E0E13E6835CF84CA743D8528E61B695_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1755));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1670));
			}

IL_0116:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1671));
			}

IL_0117:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1672));
			}

IL_0118:
			{
				// foreach (var pointer in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1673));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1756));
				bool L_43 = Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_2), /*hidden argument*/Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1756));
				if (L_43)
				{
					goto IL_0063;
				}
			}

IL_0124:
			{
				IL2CPP_LEAVE(0x135, FINALLY_0126);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_0126;
		}

FINALLY_0126:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1674));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1757));
			Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_2), /*hidden argument*/Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1757));
			IL2CPP_END_FINALLY(294)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(294)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0x135, IL_0135)
		}

IL_0135:
		{
			// if (pendingPointerSpecificFocusChange.Count == 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1675));
			List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * L_44 = __this->get_pendingPointerSpecificFocusChange_24();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1758));
			NullCheck(L_44);
			int32_t L_45 = List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_inline(L_44, /*hidden argument*/List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1758));
			V_9 = (bool)((((int32_t)L_45) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1676));
			bool L_46 = V_9;
			if (!L_46)
			{
				goto IL_014f;
			}
		}

IL_0149:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1677));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1678));
			IL2CPP_LEAVE(0x31F, FINALLY_0310);
		}

IL_014f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1679));
			// foreach (var pointer in pointers.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1680));
			Dictionary_2_t0573F8D431F15E7FA094F2C1E068AFE814C8868D * L_47 = __this->get_pointers_21();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1759));
			NullCheck(L_47);
			ValueCollection_tF07741929E248654386F93B652F5EC72611F2496 * L_48 = Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC(L_47, /*hidden argument*/Dictionary_2_get_Values_mF0F62F6E2C45A65ABE03C0BADBFAB8FB86F29FAC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1759));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1760));
			NullCheck(L_48);
			Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829  L_49 = ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB(L_48, /*hidden argument*/ValueCollection_GetEnumerator_mCD63124C6CAE385FF670392ECC1E0B12EFE049FB_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1760));
			V_10 = L_49;
		}

IL_0162:
		try
		{ // begin try (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 2);
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1681));
				goto IL_01aa;
			}

IL_0164:
			{
				// foreach (var pointer in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1682));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1761));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_50 = Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_inline((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_10), /*hidden argument*/Enumerator_get_Current_mBB58744852FAC2A8944AA86A032B166A31AE8E8D_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1761));
				V_11 = L_50;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1683));
				// if (pointer.CurrentPointerTarget != null)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1684));
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_51 = V_11;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1762));
				NullCheck(L_51);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_52 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_51, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1762));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1763));
				IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
				bool L_53 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_52, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1763));
				V_12 = L_53;
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1685));
				bool L_54 = V_12;
				if (!L_54)
				{
					goto IL_0196;
				}
			}

IL_0181:
			{
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1686));
				// pendingOverallFocusExitSet.Remove(pointer.CurrentPointerTarget);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1687));
				Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_55 = __this->get_pendingOverallFocusExitSet_23();
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_56 = V_11;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1764));
				NullCheck(L_56);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_57 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_56, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1764));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1765));
				NullCheck(L_55);
				Dictionary_2_Remove_m3943E83168D0EA6E26E880A781C15902B23B848B(L_55, L_57, /*hidden argument*/Dictionary_2_Remove_m3943E83168D0EA6E26E880A781C15902B23B848B_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1765));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1688));
			}

IL_0196:
			{
				// pendingOverallFocusEnterSet.Remove(pointer.PreviousPointerTarget);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1689));
				HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * L_58 = __this->get_pendingOverallFocusEnterSet_22();
				PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_59 = V_11;
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1766));
				NullCheck(L_59);
				GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_60 = PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline(L_59, /*hidden argument*/NULL);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1766));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1767));
				NullCheck(L_58);
				HashSet_1_Remove_m959CA76C6788170A88C252EF3809598CE4C8A847(L_58, L_60, /*hidden argument*/HashSet_1_Remove_m959CA76C6788170A88C252EF3809598CE4C8A847_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1767));
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1690));
			}

IL_01aa:
			{
				// foreach (var pointer in pointers.Values)
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1691));
				STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1768));
				bool L_61 = Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_10), /*hidden argument*/Enumerator_MoveNext_m1AFF62B9A2C8FF6369B08ECEB5DF038287221514_RuntimeMethod_var);
				CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1768));
				if (L_61)
				{
					goto IL_0164;
				}
			}

IL_01b3:
			{
				IL2CPP_LEAVE(0x1C4, FINALLY_01b5);
			}
		} // end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			__last_unhandled_exception = (Exception_t *)e.ex;
			goto FINALLY_01b5;
		}

FINALLY_01b5:
		{ // begin finally (depth: 2)
			STORE_TRY_ID(methodExecutionContext, 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1692));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1769));
			Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC((Enumerator_tF1F0F4E091672F682B601F4A12B05255AF031829 *)(&V_10), /*hidden argument*/Enumerator_Dispose_m61E24D525A64BD2F7BE358F02A359F1FD20A48EC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1769));
			IL2CPP_END_FINALLY(437)
		} // end finally (depth: 2)
		IL2CPP_CLEANUP(437)
		{
			IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
			IL2CPP_JUMP_TBL(0x1C4, IL_01c4)
		}

IL_01c4:
		{
			// for (int iChange = 0; iChange < pendingPointerSpecificFocusChange.Count; iChange++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1693));
			V_13 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1694));
			goto IL_02c1;
		}

IL_01cc:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1695));
			// PointerData change = pendingPointerSpecificFocusChange[iChange];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1696));
			List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * L_62 = __this->get_pendingPointerSpecificFocusChange_24();
			int32_t L_63 = V_13;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1770));
			NullCheck(L_62);
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_64 = List_1_get_Item_mDF5BD58E49374DFC97242DEB16EC16F0CF17A710_inline(L_62, L_63, /*hidden argument*/List_1_get_Item_mDF5BD58E49374DFC97242DEB16EC16F0CF17A710_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1770));
			V_14 = L_64;
			// GameObject pendingUnfocusObject = change.PreviousPointerTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1697));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_65 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1771));
			NullCheck(L_65);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_66 = PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline(L_65, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1771));
			V_15 = L_66;
			// GameObject pendingFocusObject = change.CurrentPointerTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1698));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_67 = V_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1772));
			NullCheck(L_67);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_68 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(L_67, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1772));
			V_16 = L_68;
			// CoreServices.InputSystem.RaisePreFocusChanged(change.Pointer, pendingUnfocusObject, pendingFocusObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1699));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1773));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_69 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1773));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_70 = V_14;
			NullCheck(L_70);
			RuntimeObject* L_71 = L_70->get_Pointer_0();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_72 = V_15;
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_73 = V_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1774));
			NullCheck(L_69);
			InterfaceActionInvoker3< RuntimeObject*, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(31 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePreFocusChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.GameObject,UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_69, L_71, L_72, L_73);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1774));
			// if (pendingUnfocusObject != null && pendingOverallFocusExitSet.TryGetValue(pendingUnfocusObject, out numExits))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1700));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_74 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1775));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_75 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_74, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1775));
			if (!L_75)
			{
				goto IL_021f;
			}
		}

IL_020e:
		{
			Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_76 = __this->get_pendingOverallFocusExitSet_23();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_77 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1776));
			NullCheck(L_76);
			bool L_78 = Dictionary_2_TryGetValue_mF177D51B543CBB936EDEA25816DCD84BCB7C277A(L_76, L_77, (int32_t*)(&V_17), /*hidden argument*/Dictionary_2_TryGetValue_mF177D51B543CBB936EDEA25816DCD84BCB7C277A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1776));
			G_B30_0 = ((int32_t)(L_78));
			goto IL_0220;
		}

IL_021f:
		{
			G_B30_0 = 0;
		}

IL_0220:
		{
			V_18 = (bool)G_B30_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1701));
			bool L_79 = V_18;
			if (!L_79)
			{
				goto IL_026d;
			}
		}

IL_0226:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1702));
			// if (numExits > 1)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1703));
			int32_t L_80 = V_17;
			V_19 = (bool)((((int32_t)L_80) > ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1704));
			bool L_81 = V_19;
			if (!L_81)
			{
				goto IL_0248;
			}
		}

IL_0232:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1705));
			// pendingOverallFocusExitSet[pendingUnfocusObject] = numExits - 1;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1706));
			Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_82 = __this->get_pendingOverallFocusExitSet_23();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_83 = V_15;
			int32_t L_84 = V_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1777));
			NullCheck(L_82);
			Dictionary_2_set_Item_m1FEE001AF4C735DD8484A19AB8A22AD0C1691225(L_82, L_83, ((int32_t)il2cpp_codegen_subtract((int32_t)L_84, (int32_t)1)), /*hidden argument*/Dictionary_2_set_Item_m1FEE001AF4C735DD8484A19AB8A22AD0C1691225_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1777));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1707));
			goto IL_026c;
		}

IL_0248:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1708));
			// CoreServices.InputSystem.RaiseFocusExit(change.Pointer, pendingUnfocusObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1709));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1778));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_85 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1778));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_86 = V_14;
			NullCheck(L_86);
			RuntimeObject* L_87 = L_86->get_Pointer_0();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_88 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1779));
			NullCheck(L_85);
			InterfaceActionInvoker2< RuntimeObject*, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(34 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseFocusExit(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_85, L_87, L_88);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1779));
			// pendingOverallFocusExitSet.Remove(pendingUnfocusObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1710));
			Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_89 = __this->get_pendingOverallFocusExitSet_23();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_90 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1780));
			NullCheck(L_89);
			Dictionary_2_Remove_m3943E83168D0EA6E26E880A781C15902B23B848B(L_89, L_90, /*hidden argument*/Dictionary_2_Remove_m3943E83168D0EA6E26E880A781C15902B23B848B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1780));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1711));
		}

IL_026c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1712));
		}

IL_026d:
		{
			// if (pendingOverallFocusEnterSet.Contains(pendingFocusObject))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1713));
			HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * L_91 = __this->get_pendingOverallFocusEnterSet_22();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_92 = V_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1781));
			NullCheck(L_91);
			bool L_93 = HashSet_1_Contains_mCF3A1439E9FA729CCE16E11868395E30F3844229(L_91, L_92, /*hidden argument*/HashSet_1_Contains_mCF3A1439E9FA729CCE16E11868395E30F3844229_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1781));
			V_20 = L_93;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1714));
			bool L_94 = V_20;
			if (!L_94)
			{
				goto IL_02a4;
			}
		}

IL_0280:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1715));
			// CoreServices.InputSystem.RaiseFocusEnter(change.Pointer, pendingFocusObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1716));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1782));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_95 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1782));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_96 = V_14;
			NullCheck(L_96);
			RuntimeObject* L_97 = L_96->get_Pointer_0();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_98 = V_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1783));
			NullCheck(L_95);
			InterfaceActionInvoker2< RuntimeObject*, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(33 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseFocusEnter(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_95, L_97, L_98);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1783));
			// pendingOverallFocusEnterSet.Remove(pendingFocusObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1717));
			HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * L_99 = __this->get_pendingOverallFocusEnterSet_22();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_100 = V_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1784));
			NullCheck(L_99);
			HashSet_1_Remove_m959CA76C6788170A88C252EF3809598CE4C8A847(L_99, L_100, /*hidden argument*/HashSet_1_Remove_m959CA76C6788170A88C252EF3809598CE4C8A847_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1784));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1718));
		}

IL_02a4:
		{
			// CoreServices.InputSystem.RaiseFocusChanged(change.Pointer, pendingUnfocusObject, pendingFocusObject);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1719));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1785));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_101 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1785));
			PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_102 = V_14;
			NullCheck(L_102);
			RuntimeObject* L_103 = L_102->get_Pointer_0();
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_104 = V_15;
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_105 = V_16;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1786));
			NullCheck(L_101);
			InterfaceActionInvoker3< RuntimeObject*, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(32 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseFocusChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.GameObject,UnityEngine.GameObject) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_101, L_103, L_104, L_105);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1786));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1720));
			// for (int iChange = 0; iChange < pendingPointerSpecificFocusChange.Count; iChange++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1721));
			int32_t L_106 = V_13;
			V_13 = ((int32_t)il2cpp_codegen_add((int32_t)L_106, (int32_t)1));
		}

IL_02c1:
		{
			// for (int iChange = 0; iChange < pendingPointerSpecificFocusChange.Count; iChange++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1722));
			int32_t L_107 = V_13;
			List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * L_108 = __this->get_pendingPointerSpecificFocusChange_24();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1787));
			NullCheck(L_108);
			int32_t L_109 = List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_inline(L_108, /*hidden argument*/List_1_get_Count_m76DD59F3229E2ADAAC35E203E25659754A64C653_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1787));
			V_21 = (bool)((((int32_t)L_107) < ((int32_t)L_109))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1723));
			bool L_110 = V_21;
			if (L_110)
			{
				goto IL_01cc;
			}
		}

IL_02d9:
		{
			// Debug.Assert(pendingOverallFocusExitSet.Count == 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1724));
			Dictionary_2_t96FB2F26C7CE603F75E00CA02CCD843EA785C29D * L_111 = __this->get_pendingOverallFocusExitSet_23();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1788));
			NullCheck(L_111);
			int32_t L_112 = Dictionary_2_get_Count_m021F96DD9C435F80DCE6226D69E73DB27935D86B(L_111, /*hidden argument*/Dictionary_2_get_Count_m021F96DD9C435F80DCE6226D69E73DB27935D86B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1788));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1789));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_112) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1789));
			// Debug.Assert(pendingOverallFocusEnterSet.Count == 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1725));
			HashSet_1_t0C44F460B51C051B426D52ACDF3D6639DD4B3D2E * L_113 = __this->get_pendingOverallFocusEnterSet_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1790));
			NullCheck(L_113);
			int32_t L_114 = HashSet_1_get_Count_m14C7571C69F65285901AB0ECC9F47AAA31170CBF_inline(L_113, /*hidden argument*/HashSet_1_get_Count_m14C7571C69F65285901AB0ECC9F47AAA31170CBF_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1790));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1791));
			Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_114) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1791));
			// pendingPointerSpecificFocusChange.Clear();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1726));
			List_1_tBCBEB3920240D8E26AD373E765B37AFF2688708D * L_115 = __this->get_pendingPointerSpecificFocusChange_24();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1792));
			NullCheck(L_115);
			List_1_Clear_mFA5BD80EE1E2434CFD4954BB052090489038CF52(L_115, /*hidden argument*/List_1_Clear_mFA5BD80EE1E2434CFD4954BB052090489038CF52_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1792));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1727));
			IL2CPP_LEAVE(0x31F, FINALLY_0310);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0310;
	}

FINALLY_0310:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1728));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1793));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1793));
		IL2CPP_END_FINALLY(784)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(784)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x31F, IL_031f)
	}

IL_031f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1729));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_OnSourceDetected_mE4215E66924F767E36F68CA1316524EB5CF57189 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_OnSourceDetected_mE4215E66924F767E36F68CA1316524EB5CF57189_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_OnSourceDetected_mE4215E66924F767E36F68CA1316524EB5CF57189_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1794));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1795));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1796));
		// using (OnSourceDetectedPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1797));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_OnSourceDetectedPerfMarker_64();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1803));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1803));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1798));
		// RegisterPointers(eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1799));
		SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1804));
		NullCheck(L_2);
		RuntimeObject* L_3 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1804));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1805));
		FocusProvider_RegisterPointers_m31B35D92208D711C2B8DAFF2D3AF2DB28AF3031C(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1805));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1800));
		IL2CPP_LEAVE(0x2F, FINALLY_0020);
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0020;
	}

FINALLY_0020:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1801));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1806));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1806));
		IL2CPP_END_FINALLY(32)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(32)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x2F, IL_002f)
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1802));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_OnSourceLost_m93B9003EF1E9EDF760F7F776DE40A51C2FB76F5E (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_OnSourceLost_m93B9003EF1E9EDF760F7F776DE40A51C2FB76F5E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	RuntimeObject* V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	int32_t V_5 = 0;
	RuntimeObject* V_6 = NULL;
	bool V_7 = false;
	bool V_8 = false;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_9;
	memset((&V_9), 0, sizeof(V_9));
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  V_10;
	memset((&V_10), 0, sizeof(V_10));
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_OnSourceLost_m93B9003EF1E9EDF760F7F776DE40A51C2FB76F5E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1807));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1808));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B7_0 = NULL;
	RuntimeObject* G_B9_0 = NULL;
	int32_t G_B12_0 = 0;
	RuntimeObject* G_B15_0 = NULL;
	uint32_t G_B15_1 = 0;
	RuntimeObject* G_B14_0 = NULL;
	uint32_t G_B14_1 = 0;
	Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  G_B16_0;
	memset((&G_B16_0), 0, sizeof(G_B16_0));
	uint32_t G_B16_1 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1809));
		// using (OnSourceLostPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1810));
		IL2CPP_RUNTIME_CLASS_INIT(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->get_OnSourceLostPerfMarker_65();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1845));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1845));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1811));
			// if (eventData.InputSource.Pointers == null) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1812));
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_2 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1846));
			NullCheck(L_2);
			RuntimeObject* L_3 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1846));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1847));
			NullCheck(L_3);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_4 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_3);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1847));
			V_3 = (bool)((((RuntimeObject*)(IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)L_4) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1813));
			bool L_5 = V_3;
			if (!L_5)
			{
				goto IL_0028;
			}
		}

IL_0022:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1814));
			// if (eventData.InputSource.Pointers == null) { return; }
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1815));
			IL2CPP_LEAVE(0x156, FINALLY_0147);
		}

IL_0028:
		{
			// if (pointerMediators.TryGetValue(eventData.SourceId, out mediator))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1816));
			Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * L_6 = __this->get_pointerMediators_25();
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_7 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1848));
			NullCheck(L_7);
			uint32_t L_8 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1848));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1849));
			NullCheck(L_6);
			bool L_9 = Dictionary_2_TryGetValue_m7F0D1B219279614C5BAE58B8A991A4369BE13E92(L_6, L_8, (RuntimeObject**)(&V_2), /*hidden argument*/Dictionary_2_TryGetValue_m7F0D1B219279614C5BAE58B8A991A4369BE13E92_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1849));
			V_4 = L_9;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1817));
			bool L_10 = V_4;
			if (!L_10)
			{
				goto IL_0055;
			}
		}

IL_0041:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1818));
			// mediator.UnregisterPointers(eventData.InputSource.Pointers);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1819));
			RuntimeObject* L_11 = V_2;
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_12 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1850));
			NullCheck(L_12);
			RuntimeObject* L_13 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1850));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1851));
			NullCheck(L_13);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_14 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_13);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1851));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1852));
			NullCheck(L_11);
			InterfaceActionInvoker1< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(1 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointerMediator::UnregisterPointers(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]) */, IMixedRealityPointerMediator_t3B26EF816EC0E32125C7882943D9E4E9C1A6E8BE_il2cpp_TypeInfo_var, L_11, L_14);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1852));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1820));
		}

IL_0055:
		{
			// pointerMediators.Remove(eventData.SourceId);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1821));
			Dictionary_2_tA66A7415D01B9AD2FD33CA192AB509B8B621CEB7 * L_15 = __this->get_pointerMediators_25();
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_16 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1853));
			NullCheck(L_16);
			uint32_t L_17 = BaseInputEventData_get_SourceId_mA8E6FC8B3D2614D61EFA3A25178C69E82E35408F(L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1853));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1854));
			NullCheck(L_15);
			Dictionary_2_Remove_m8F84559E992C0C34492D2A0961ED7E2FED4EAD3A(L_15, L_17, /*hidden argument*/Dictionary_2_Remove_m8F84559E992C0C34492D2A0961ED7E2FED4EAD3A_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1854));
			// for (var i = 0; i < eventData.InputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1822));
			V_5 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1823));
			goto IL_012a;
		}

IL_006f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1824));
			// var gazePointer = CoreServices.InputSystem.GazeProvider?.GazePointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1825));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1855));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_18 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1855));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1856));
			NullCheck(L_18);
			RuntimeObject* L_19 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1856));
			RuntimeObject* L_20 = L_19;
			G_B7_0 = L_20;
			if (L_20)
			{
				G_B8_0 = L_20;
				goto IL_0081;
			}
		}

IL_007d:
		{
			G_B9_0 = ((RuntimeObject*)(NULL));
			goto IL_0086;
		}

IL_0081:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1857));
			NullCheck(G_B8_0);
			RuntimeObject* L_21 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazePointer() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B8_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1857));
			G_B9_0 = L_21;
		}

IL_0086:
		{
			V_6 = G_B9_0;
			// if (gazePointer != null && eventData.InputSource.Pointers[i].PointerId == gazePointer.PointerId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1826));
			RuntimeObject* L_22 = V_6;
			if (!L_22)
			{
				goto IL_00aa;
			}
		}

IL_008c:
		{
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_23 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1858));
			NullCheck(L_23);
			RuntimeObject* L_24 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1858));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1859));
			NullCheck(L_24);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_25 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_24);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1859));
			int32_t L_26 = V_5;
			NullCheck(L_25);
			int32_t L_27 = L_26;
			RuntimeObject* L_28 = (L_25)->GetAt(static_cast<il2cpp_array_size_t>(L_27));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1860));
			NullCheck(L_28);
			uint32_t L_29 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_28);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1860));
			RuntimeObject* L_30 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1861));
			NullCheck(L_30);
			uint32_t L_31 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_30);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1861));
			G_B12_0 = ((((int32_t)L_29) == ((int32_t)L_31))? 1 : 0);
			goto IL_00ab;
		}

IL_00aa:
		{
			G_B12_0 = 0;
		}

IL_00ab:
		{
			V_7 = (bool)G_B12_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1827));
			bool L_32 = V_7;
			if (!L_32)
			{
				goto IL_010e;
			}
		}

IL_00b1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1828));
			// if (eventData.InputSource.SourceId == CoreServices.InputSystem.GazeProvider?.GazeInputSource.SourceId)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1829));
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_33 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1862));
			NullCheck(L_33);
			RuntimeObject* L_34 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1862));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1863));
			NullCheck(L_34);
			uint32_t L_35 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_34);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1863));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1864));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_36 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1864));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1865));
			NullCheck(L_36);
			RuntimeObject* L_37 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(9 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_GazeProvider() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_36);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1865));
			RuntimeObject* L_38 = L_37;
			G_B14_0 = L_38;
			G_B14_1 = L_35;
			if (L_38)
			{
				G_B15_0 = L_38;
				G_B15_1 = L_35;
				goto IL_00d7;
			}
		}

IL_00ca:
		{
			il2cpp_codegen_initobj((&V_10), sizeof(Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 ));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_39 = V_10;
			G_B16_0 = L_39;
			G_B16_1 = G_B14_1;
			goto IL_00e6;
		}

IL_00d7:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1866));
			NullCheck(G_B15_0);
			RuntimeObject* L_40 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(2 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityGazeProvider::get_GazeInputSource() */, IMixedRealityGazeProvider_t93587EAC169723DC852D0943E9D85294681700FE_il2cpp_TypeInfo_var, G_B15_0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1866));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1867));
			NullCheck(L_40);
			uint32_t L_41 = InterfaceFuncInvoker0< uint32_t >::Invoke(0 /* System.UInt32 Microsoft.MixedReality.Toolkit.IMixedRealityEventSource::get_SourceId() */, IMixedRealityEventSource_tCDAABC4976E965E99580F716B1B2CDD9CDBE1865_il2cpp_TypeInfo_var, L_40);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1867));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1868));
			Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043  L_42;
			memset((&L_42), 0, sizeof(L_42));
			Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B((&L_42), L_41, /*hidden argument*/Nullable_1__ctor_m0BAB60B3FBDBDDB13DF6079EF4ADB85F73754A5B_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1868));
			G_B16_0 = L_42;
			G_B16_1 = G_B15_1;
		}

IL_00e6:
		{
			V_9 = G_B16_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1869));
			uint32_t L_43 = Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_9), /*hidden argument*/Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1869));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1870));
			bool L_44 = Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_inline((Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 *)(&V_9), /*hidden argument*/Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1870));
			V_8 = (bool)((int32_t)((int32_t)((((int32_t)G_B16_1) == ((int32_t)L_43))? 1 : 0)&(int32_t)L_44));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1830));
			bool L_45 = V_8;
			if (!L_45)
			{
				goto IL_010a;
			}
		}

IL_00ff:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1831));
			// gazeProviderPointingData = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1832));
			__this->set_gazeProviderPointingData_45((PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1833));
			goto IL_010d;
		}

IL_010a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1834));
			// continue;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1835));
			goto IL_0124;
		}

IL_010d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1836));
		}

IL_010e:
		{
			// UnregisterPointer(eventData.InputSource.Pointers[i]);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1837));
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_46 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1871));
			NullCheck(L_46);
			RuntimeObject* L_47 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_46, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1871));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1872));
			NullCheck(L_47);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_48 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_47);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1872));
			int32_t L_49 = V_5;
			NullCheck(L_48);
			int32_t L_50 = L_49;
			RuntimeObject* L_51 = (L_48)->GetAt(static_cast<il2cpp_array_size_t>(L_50));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1873));
			FocusProvider_UnregisterPointer_m58A22C294E07D6D209ECD47D063ACF6DCACBF5AA(__this, L_51, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1873));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1838));
		}

IL_0124:
		{
			// for (var i = 0; i < eventData.InputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1839));
			int32_t L_52 = V_5;
			V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_52, (int32_t)1));
		}

IL_012a:
		{
			// for (var i = 0; i < eventData.InputSource.Pointers.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1840));
			int32_t L_53 = V_5;
			SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * L_54 = ___eventData0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1874));
			NullCheck(L_54);
			RuntimeObject* L_55 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_54, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1874));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1875));
			NullCheck(L_55);
			IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_56 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_55);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1875));
			NullCheck(L_56);
			V_11 = (bool)((((int32_t)L_53) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_56)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1841));
			bool L_57 = V_11;
			if (L_57)
			{
				goto IL_006f;
			}
		}

IL_0144:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1842));
			IL2CPP_LEAVE(0x156, FINALLY_0147);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0147;
	}

FINALLY_0147:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1843));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1876));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1876));
		IL2CPP_END_FINALLY(327)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(327)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x156, IL_0156)
	}

IL_0156:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1844));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::OnSpeechKeywordRecognized(Microsoft.MixedReality.Toolkit.Input.SpeechEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_OnSpeechKeywordRecognized_m92FF19F8FCE054558B2F1BFE5C58FC86B9716D6C (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_OnSpeechKeywordRecognized_m92FF19F8FCE054558B2F1BFE5C58FC86B9716D6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_OnSpeechKeywordRecognized_m92FF19F8FCE054558B2F1BFE5C58FC86B9716D6C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1877));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1878));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1879));
		// gazePointerStateMachine.OnSpeechKeywordRecognized(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1880));
		GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * L_0 = __this->get_gazePointerStateMachine_40();
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1882));
		NullCheck(L_0);
		GazePointerVisibilityStateMachine_OnSpeechKeywordRecognized_mF32B08049E9F59365A300D646F2CFF49E7BECB0A(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1882));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1881));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetPointerBehavior(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FocusProvider_GetPointerBehavior_m8C108749C84CC8B9B787DC6439CD7F3687F0FFF9 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_GetPointerBehavior_m8C108749C84CC8B9B787DC6439CD7F3687F0FFF9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_GetPointerBehavior_m8C108749C84CC8B9B787DC6439CD7F3687F0FFF9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1883));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1884));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1885));
		// if (pointer.Controller == null || pointer.InputSourceParent == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1886));
		RuntimeObject* L_0 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1892));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1892));
		if (!L_1)
		{
			goto IL_0014;
		}
	}
	{
		RuntimeObject* L_2 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1893));
		NullCheck(L_2);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(5 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_InputSourceParent() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1893));
		G_B3_0 = ((((RuntimeObject*)(RuntimeObject*)L_3) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		goto IL_0015;
	}

IL_0014:
	{
		G_B3_0 = 1;
	}

IL_0015:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1887));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0023;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1888));
		// return GazePointerBehavior;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1889));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1894));
		int32_t L_5 = FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1894));
		V_1 = L_5;
		goto IL_0048;
	}

IL_0023:
	{
		// return GetPointerBehavior(
		//     pointer.GetType(),
		//     pointer.Controller.ControllerHandedness,
		//     pointer.InputSourceParent.SourceType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1890));
		RuntimeObject* L_6 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1895));
		NullCheck(L_6);
		Type_t * L_7 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1895));
		RuntimeObject* L_8 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1896));
		NullCheck(L_8);
		RuntimeObject* L_9 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1896));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1897));
		NullCheck(L_9);
		uint8_t L_10 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1897));
		RuntimeObject* L_11 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1898));
		NullCheck(L_11);
		RuntimeObject* L_12 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(5 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_InputSourceParent() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1898));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1899));
		NullCheck(L_12);
		int32_t L_13 = InterfaceFuncInvoker0< int32_t >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Input.InputSourceType Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_SourceType() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1899));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1900));
		int32_t L_14 = FocusProvider_GetPointerBehavior_mC409E0F24BB677E6BE05B04E9523B9A1AC9041DD(__this, L_7, L_10, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1900));
		V_1 = L_14;
		goto IL_0048;
	}

IL_0048:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1891));
		int32_t L_15 = V_1;
		return L_15;
	}
}
// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider::GetPointerBehavior(System.Type,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FocusProvider_GetPointerBehavior_mC409E0F24BB677E6BE05B04E9523B9A1AC9041DD (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, Type_t * ___type0, uint8_t ___handedness1, int32_t ___sourceType2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_GetPointerBehavior_mC409E0F24BB677E6BE05B04E9523B9A1AC9041DD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___type0), (&___handedness1), (&___sourceType2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_GetPointerBehavior_mC409E0F24BB677E6BE05B04E9523B9A1AC9041DD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1908));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1909));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1910));
		// for (int i = 0; i < customPointerBehaviors.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1911));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1912));
		goto IL_0038;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1913));
		// if (customPointerBehaviors[i].Matches(type, sourceType))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1914));
		List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * L_0 = __this->get_customPointerBehaviors_66();
		int32_t L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1924));
		NullCheck(L_0);
		PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * L_2 = List_1_get_Item_mB2A9AB24CB4B8E18AAAEE28CCD5347FDBF1A3A35_inline(L_0, L_1, /*hidden argument*/List_1_get_Item_mB2A9AB24CB4B8E18AAAEE28CCD5347FDBF1A3A35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1924));
		Type_t * L_3 = ___type0;
		int32_t L_4 = ___sourceType2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1925));
		NullCheck(L_2);
		bool L_5 = PointerPreferences_Matches_m928F429F57D6F6B8A8BD99661ED07DA5ADEF8035(L_2, L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1925));
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1915));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1916));
		// return customPointerBehaviors[i].GetBehaviorForHandedness(handedness);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1917));
		List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * L_7 = __this->get_customPointerBehaviors_66();
		int32_t L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1926));
		NullCheck(L_7);
		PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * L_9 = List_1_get_Item_mB2A9AB24CB4B8E18AAAEE28CCD5347FDBF1A3A35_inline(L_7, L_8, /*hidden argument*/List_1_get_Item_mB2A9AB24CB4B8E18AAAEE28CCD5347FDBF1A3A35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1926));
		uint8_t L_10 = ___handedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1927));
		NullCheck(L_9);
		int32_t L_11 = PointerPreferences_GetBehaviorForHandedness_m0FC3432ABBA91FD0C3502F3F8C8EED7B0774B92D(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1927));
		V_2 = L_11;
		goto IL_004e;
	}

IL_0033:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1918));
		// for (int i = 0; i < customPointerBehaviors.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1919));
		int32_t L_12 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_0038:
	{
		// for (int i = 0; i < customPointerBehaviors.Count; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1920));
		int32_t L_13 = V_0;
		List_1_t39F08D62F21719877D7FD3B071B05FF3847F36BB * L_14 = __this->get_customPointerBehaviors_66();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1928));
		NullCheck(L_14);
		int32_t L_15 = List_1_get_Count_m72D83D81FB3C53817E45B7D1F4EB4AE50CAC0F81_inline(L_14, /*hidden argument*/List_1_get_Count_m72D83D81FB3C53817E45B7D1F4EB4AE50CAC0F81_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1928));
		V_3 = (bool)((((int32_t)L_13) < ((int32_t)L_15))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1921));
		bool L_16 = V_3;
		if (L_16)
		{
			goto IL_0005;
		}
	}
	{
		// return PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1922));
		V_2 = 0;
		goto IL_004e;
	}

IL_004e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1923));
		int32_t L_17 = V_2;
		return L_17;
	}
}
// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider::get_GazePointerBehavior()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1929));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1930));
	{
		// public PointerBehavior GazePointerBehavior { get; set; } = PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1931));
		int32_t L_0 = __this->get_U3CGazePointerBehaviorU3Ek__BackingField_67();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::set_GazePointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider_set_GazePointerBehavior_m0D016956A037DD9A3B88CCA7BCE80BB3A7C06BE6 (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_set_GazePointerBehavior_m0D016956A037DD9A3B88CCA7BCE80BB3A7C06BE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_set_GazePointerBehavior_m0D016956A037DD9A3B88CCA7BCE80BB3A7C06BE6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1932));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1933));
	{
		// public PointerBehavior GazePointerBehavior { get; set; } = PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1934));
		int32_t L_0 = ___value0;
		__this->set_U3CGazePointerBehaviorU3Ek__BackingField_67(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FocusProvider__cctor_m8E8669D726AC2B374E6807566626BBF96D13D1F5 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider__cctor_m8E8669D726AC2B374E6807566626BBF96D13D1F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider__cctor_m8E8669D726AC2B374E6807566626BBF96D13D1F5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1968));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1969));
	{
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] FocusProvider.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1970));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1991));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral822E76432AAA6315A9A7D801DD9BF30414E69DEB, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1991));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_43(L_0);
		// private static readonly ProfilerMarker UpdateGazeProviderPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.UpdateGazeProvider");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1971));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1992));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral4EBC84BC13C240477ACDA471A1E13F7BF296C046, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1992));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_UpdateGazeProviderPerfMarker_44(L_1);
		// private static readonly ProfilerMarker GetFocusedObjectPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.GetFocusedObject");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1972));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1993));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral47C4ADE81AF6B7BC6D16FBA0C2771B5028B3118C, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1993));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_GetFocusedObjectPerfMarker_47(L_2);
		// private static readonly ProfilerMarker TryGetFocusDetailsPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.TryGetFocusDetails");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1973));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1994));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteral156984DEF8EFBE78DC1680C363474C8682DF4996, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1994));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_TryGetFocusDetailsPerfMarker_48(L_3);
		// private static readonly ProfilerMarker TryOverrideFocusDetailsPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.TryOverrideFocusDetails");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1974));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1995));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_4;
		memset((&L_4), 0, sizeof(L_4));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_4), _stringLiteral98CAE0DAD6010C2085E1DF38C07E95AF70E986C9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1995));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_TryOverrideFocusDetailsPerfMarker_49(L_4);
		// private static readonly ProfilerMarker GenerateNewPointerIdPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.GetNewPointerId");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1975));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1996));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_5;
		memset((&L_5), 0, sizeof(L_5));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_5), _stringLiteral5793A48AD839F50C43036FBF1D80BE1E07F88E69, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1996));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_GenerateNewPointerIdPerfMarker_50(L_5);
		// private static readonly ProfilerMarker RegisterPointerPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.RegisterPointer");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1976));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1997));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_6;
		memset((&L_6), 0, sizeof(L_6));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_6), _stringLiteralAFB9CD7CA3AC37208DD2FEE05FE26F3D788587FC, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1997));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_RegisterPointerPerfMarker_51(L_6);
		// private static readonly ProfilerMarker RegisterPointersPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.RegisterPointers");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1977));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1998));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_7;
		memset((&L_7), 0, sizeof(L_7));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_7), _stringLiteralB213207F3F050E3E46579CF916A2F2A129C8F77A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1998));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_RegisterPointersPerfMarker_52(L_7);
		// private static readonly ProfilerMarker UnregisterPointerPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.UnregisterPointer");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1978));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1999));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_8;
		memset((&L_8), 0, sizeof(L_8));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_8), _stringLiteralBB2550C6DFBEE03C2509AAC70C7596F931DC172E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1999));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_UnregisterPointerPerfMarker_53(L_8);
		// private static readonly ProfilerMarker TryGetPointerDataPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.TryGetPointerData");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1979));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2000));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_9;
		memset((&L_9), 0, sizeof(L_9));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_9), _stringLiteralFB5DD07948F077D02999B5ED33F06CA8B2183259, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2000));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_TryGetPointerDataPerfMarker_54(L_9);
		// private static readonly ProfilerMarker UpdatePointersPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.UpdatePointers");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1980));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2001));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_10;
		memset((&L_10), 0, sizeof(L_10));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_10), _stringLiteral76F6C3A6766257CE5DAFE2102208DC454339E2E1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2001));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_UpdatePointersPerfMarker_55(L_10);
		// private static readonly ProfilerMarker UpdatePointerPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.UpdatePointer");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1981));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2002));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_11;
		memset((&L_11), 0, sizeof(L_11));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_11), _stringLiteralA5F6E2C006D1E2E614251536BF7B399E54423B85, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2002));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_UpdatePointerPerfMarker_56(L_11);
		// private static readonly ProfilerMarker GetPrioritizedHitResultPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.GetPrioritizedHitResult");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1982));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2003));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_12;
		memset((&L_12), 0, sizeof(L_12));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_12), _stringLiteralA97F2BE9EF6E7E5EF5F3111CCEB23E8CA8A1FC33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2003));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_GetPrioritizedHitResultPerfMarker_57(L_12);
		// private static readonly ProfilerMarker ReconcilePointersPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.ReconcilePointers");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1983));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2004));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_13;
		memset((&L_13), 0, sizeof(L_13));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_13), _stringLiteralE2F4EA0D3CE82807F5E9A40A167BCC258A58C9D4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2004));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_ReconcilePointersPerfMarker_58(L_13);
		// private static readonly ProfilerMarker QueryScenePerfMarker = new ProfilerMarker("[MRTK] FocusProvider.QueryScene");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1984));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2005));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_14;
		memset((&L_14), 0, sizeof(L_14));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_14), _stringLiteral90CD92D70C6A93416F0D73D2EC13DBE6CB37FAD9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2005));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_QueryScenePerfMarker_59(L_14);
		// private static Collider[] colliders = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1985));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_colliders_60((ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252*)NULL);
		// private static readonly ProfilerMarker RaycastGraphicsPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.RaycastGraphics");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1986));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2006));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_15;
		memset((&L_15), 0, sizeof(L_15));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_15), _stringLiteral96D403F2D889925B4010239BE3D61013ECD02D2A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2006));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_RaycastGraphicsPerfMarker_61(L_15);
		// private static readonly ProfilerMarker RaycastGraphicsStepPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.RaycastGraphicsStep");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1987));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2007));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_16;
		memset((&L_16), 0, sizeof(L_16));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_16), _stringLiteralE0D77E4E25133A9AD11311284A4C0E9A0E83E686, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2007));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_RaycastGraphicsStepPerfMarker_62(L_16);
		// private static readonly ProfilerMarker UpdateFocusedObjectsPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.UpdateFocusedObjects");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1988));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2008));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_17;
		memset((&L_17), 0, sizeof(L_17));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_17), _stringLiteral4A4081840234CA066285FE6CB5447DC5DC51462B, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2008));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_UpdateFocusedObjectsPerfMarker_63(L_17);
		// private static readonly ProfilerMarker OnSourceDetectedPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.OnSourceDetected");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1989));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2009));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_18;
		memset((&L_18), 0, sizeof(L_18));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_18), _stringLiteral631F333A1AEC3FBDD1820BDEE2A0E26FAE39F2B2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2009));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_OnSourceDetectedPerfMarker_64(L_18);
		// private static readonly ProfilerMarker OnSourceLostPerfMarker = new ProfilerMarker("[MRTK] FocusProvider.OnSourceLost");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1990));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2010));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_19;
		memset((&L_19), 0, sizeof(L_19));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_19), _stringLiteralD7F0B1BC83BB9DAB70C3EC14B2A61E2FFD199A36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2010));
		((FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_StaticFields*)il2cpp_codegen_static_fields_for(FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3_il2cpp_TypeInfo_var))->set_OnSourceLostPerfMarker_65(L_19);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_StartPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PointerData_get_StartPoint_m39E31ECB6F4646616DE31EC412F836232C814193 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_StartPoint_m39E31ECB6F4646616DE31EC412F836232C814193_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_StartPoint_m39E31ECB6F4646616DE31EC412F836232C814193_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2082));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2083));
	{
		// public Vector3 StartPoint { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2084));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CStartPointU3Ek__BackingField_1();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_StartPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2085));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2086));
	{
		// public Vector3 StartPoint { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2087));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CStartPointU3Ek__BackingField_1(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_Details()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2088));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2089));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2090));
		// return focusDetails;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2091));
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_0 = __this->get_focusDetails_5();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2092));
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_Details(Microsoft.MixedReality.Toolkit.Physics.FocusDetails)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_set_Details_mF09692341E4DA354F6FD1AE4E5531C820D862488 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_set_Details_mF09692341E4DA354F6FD1AE4E5531C820D862488_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_set_Details_mF09692341E4DA354F6FD1AE4E5531C820D862488_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2093));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2094));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2095));
		// focusDetails = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2096));
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_0 = ___value0;
		__this->set_focusDetails_5(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2097));
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_CurrentPointerTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2098));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2099));
	{
		// public GameObject CurrentPointerTarget => focusDetails.Object;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2100));
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_0 = __this->get_address_of_focusDetails_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2101));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2101));
		return L_1;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_PreviousPointerTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2102));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2103));
	{
		// public GameObject PreviousPointerTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2104));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CPreviousPointerTargetU3Ek__BackingField_2();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_PreviousPointerTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2106));
	{
		// public GameObject PreviousPointerTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2107));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_U3CPreviousPointerTargetU3Ek__BackingField_2(L_0);
		return;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_RayStepIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PointerData_get_RayStepIndex_mA68E4F7DA2576FFA120034E407612854821CEC03 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_RayStepIndex_mA68E4F7DA2576FFA120034E407612854821CEC03_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_RayStepIndex_mA68E4F7DA2576FFA120034E407612854821CEC03_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2108));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2109));
	{
		// public int RayStepIndex { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2110));
		int32_t L_0 = __this->get_U3CRayStepIndexU3Ek__BackingField_3();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::set_RayStepIndex(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2111));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2112));
	{
		// public int RayStepIndex { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2113));
		int32_t L_0 = ___value0;
		__this->set_U3CRayStepIndexU3Ek__BackingField_3(L_0);
		return;
	}
}
// UnityEngine.EventSystems.PointerEventData Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_GraphicEventData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_GraphicEventData_mFD3BB895D9B1B17816605A9A300B7D809C527ADF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2114));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2115));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2116));
		// if (graphicData == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2117));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_0 = __this->get_graphicData_4();
		V_0 = (bool)((((RuntimeObject*)(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2118));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2119));
		// graphicData = new PointerEventData(EventSystem.current);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2120));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2125));
		IL2CPP_RUNTIME_CLASS_INIT(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77_il2cpp_TypeInfo_var);
		EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * L_2 = EventSystem_get_current_m3151477735829089F66A3E46AD6DAB14CFDDE7BD(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2125));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2126));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_3 = (PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *)il2cpp_codegen_object_new(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63_il2cpp_TypeInfo_var);
		PointerEventData__ctor_m121A903CE81C0758A49C721F7C1668362BFAE7E4(L_3, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2126));
		__this->set_graphicData_4(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2121));
	}

IL_0020:
	{
		// Debug.Assert(graphicData != null);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2122));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_4 = __this->get_graphicData_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2127));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((!(((RuntimeObject*)(PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 *)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2127));
		// return graphicData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2123));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_5 = __this->get_graphicData_4();
		V_1 = L_5;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2124));
		PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * L_6 = V_1;
		return L_6;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::get_IsCurrentPointerTargetInvalid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_get_IsCurrentPointerTargetInvalid_m6A43C3957C1492BDC44A14CEE75C732B84DA376D (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_IsCurrentPointerTargetInvalid_m6A43C3957C1492BDC44A14CEE75C732B84DA376D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_IsCurrentPointerTargetInvalid_m6A43C3957C1492BDC44A14CEE75C732B84DA376D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2128));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2129));
	int32_t G_B5_0 = 0;
	int32_t G_B7_0 = 0;
	{
		// public bool IsCurrentPointerTargetInvalid => ((CurrentPointerTarget != null && !CurrentPointerTarget.activeInHierarchy)) ||
		//     (CurrentPointerTarget == null && !ReferenceEquals(CurrentPointerTarget, null));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2130));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2131));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2131));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2132));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2132));
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2133));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2133));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2134));
		NullCheck(L_2);
		bool L_3 = GameObject_get_activeInHierarchy_mDEE60F1B28281974BA9880EC448682F3DAABB1EF(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2134));
		if (!L_3)
		{
			goto IL_0037;
		}
	}

IL_001b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2135));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2135));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2136));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2136));
		if (!L_5)
		{
			goto IL_0034;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2137));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2137));
		G_B5_0 = ((!(((RuntimeObject*)(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)L_6) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0035;
	}

IL_0034:
	{
		G_B5_0 = 0;
	}

IL_0035:
	{
		G_B7_0 = G_B5_0;
		goto IL_0038;
	}

IL_0037:
	{
		G_B7_0 = 1;
	}

IL_0038:
	{
		return (bool)G_B7_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData__ctor_mEB63D3D2EA4F60ED0BCA0ED9038347455AEEFD6B (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, RuntimeObject* ___pointer0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData__ctor_mEB63D3D2EA4F60ED0BCA0ED9038347455AEEFD6B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData__ctor_mEB63D3D2EA4F60ED0BCA0ED9038347455AEEFD6B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2139));
	{
		// private FocusDetails focusDetails = new FocusDetails();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2140));
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_0 = __this->get_address_of_focusDetails_5();
		il2cpp_codegen_initobj(L_0, sizeof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 ));
		// public PointerData(IMixedRealityPointer pointer)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2141));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2145));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2145));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2142));
		// Pointer = pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2143));
		RuntimeObject* L_1 = ___pointer0;
		__this->set_Pointer_0(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2144));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::UpdateHit(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_UpdateHit_m212567FA45D65F83369E24C7B50CA30ED5020DCB (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * ___hitResult0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_UpdateHit_m212567FA45D65F83369E24C7B50CA30ED5020DCB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  V_4;
	memset((&V_4), 0, sizeof(V_4));
	RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  V_5;
	memset((&V_5), 0, sizeof(V_5));
	float V_6 = 0.0f;
	int32_t V_7 = 0;
	bool V_8 = false;
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hitResult0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4), (&V_5), (&V_6), (&V_7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_UpdateHit_m212567FA45D65F83369E24C7B50CA30ED5020DCB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2146));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2147));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2148));
		// using (UpdateHitPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2149));
		IL2CPP_RUNTIME_CLASS_INIT(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields*)il2cpp_codegen_static_fields_for(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var))->get_UpdateHitPerfMarker_6();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2200));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2200));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2150));
			// if (hitResult.hitObject != CurrentPointerTarget)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2151));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_2 = ___hitResult0;
			NullCheck(L_2);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = L_2->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2201));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2201));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2202));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_5 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2202));
			V_2 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2152));
			bool L_6 = V_2;
			if (!L_6)
			{
				goto IL_0033;
			}
		}

IL_0025:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2153));
			// Pointer.OnPreCurrentPointerTargetChange();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2154));
			RuntimeObject* L_7 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2203));
			NullCheck(L_7);
			InterfaceActionInvoker0::Invoke(32 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::OnPreCurrentPointerTargetChange() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_7);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2203));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2155));
		}

IL_0033:
		{
			// PreviousPointerTarget = CurrentPointerTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2156));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2204));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2204));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2205));
			PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_inline(__this, L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2205));
			// focusDetails.Object = hitResult.hitObject;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2157));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_9 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_10 = ___hitResult0;
			NullCheck(L_10);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = L_10->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2206));
			FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_9, L_11, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2206));
			// focusDetails.LastRaycastHit = hitResult.raycastHit;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2158));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_12 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_13 = ___hitResult0;
			NullCheck(L_13);
			MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_14 = L_13->get_raycastHit_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2207));
			FocusDetails_set_LastRaycastHit_mC83ADE39B36EFF37B4DD2CB65C307A2668CD6C6A_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_12, L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2207));
			// focusDetails.LastGraphicsRaycastResult = hitResult.graphicsRaycastResult;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2159));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_15 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_16 = ___hitResult0;
			NullCheck(L_16);
			RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_17 = L_16->get_graphicsRaycastResult_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2208));
			FocusDetails_set_LastGraphicsRaycastResult_m13974D81605D43AF8D72A5A3B916F4FA937FD408_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_15, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2208));
			// if (hitResult.rayStepIndex >= 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2160));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_18 = ___hitResult0;
			NullCheck(L_18);
			int32_t L_19 = L_18->get_rayStepIndex_6();
			V_3 = (bool)((((int32_t)((((int32_t)L_19) < ((int32_t)0))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2161));
			bool L_20 = V_3;
			if (!L_20)
			{
				goto IL_00e2;
			}
		}

IL_0086:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2162));
			// RayStepIndex = hitResult.rayStepIndex;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2163));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_21 = ___hitResult0;
			NullCheck(L_21);
			int32_t L_22 = L_21->get_rayStepIndex_6();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2209));
			PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_inline(__this, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2209));
			// StartPoint = hitResult.ray.Origin;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2164));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_23 = ___hitResult0;
			NullCheck(L_23);
			RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * L_24 = L_23->get_address_of_ray_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2210));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2210));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2211));
			PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_inline(__this, L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2211));
			// focusDetails.RayDistance = hitResult.rayDistance;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2165));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_26 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_27 = ___hitResult0;
			NullCheck(L_27);
			float L_28 = L_27->get_rayDistance_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2212));
			FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_26, L_28, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2212));
			// focusDetails.Point = hitResult.hitPointOnObject;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2166));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_29 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_30 = ___hitResult0;
			NullCheck(L_30);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = L_30->get_hitPointOnObject_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2213));
			FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_29, L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2213));
			// focusDetails.Normal = hitResult.hitNormalOnObject;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2167));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_32 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_33 = ___hitResult0;
			NullCheck(L_33);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = L_33->get_hitNormalOnObject_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2214));
			FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_32, L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2214));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2168));
			goto IL_01ae;
		}

IL_00e2:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2169));
			// RayStep firstStep = Pointer.Rays[0];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2170));
			RuntimeObject* L_35 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2215));
			NullCheck(L_35);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_36 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_35);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2215));
			NullCheck(L_36);
			int32_t L_37 = 0;
			RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_38 = (L_36)->GetAt(static_cast<il2cpp_array_size_t>(L_37));
			V_4 = L_38;
			// RayStep finalStep = Pointer.Rays[Pointer.Rays.Length - 1];
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2171));
			RuntimeObject* L_39 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2216));
			NullCheck(L_39);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_40 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_39);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2216));
			RuntimeObject* L_41 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2217));
			NullCheck(L_41);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_42 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_41);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2217));
			NullCheck(L_42);
			NullCheck(L_40);
			int32_t L_43 = ((int32_t)il2cpp_codegen_subtract((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_42)->max_length)))), (int32_t)1));
			RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_44 = (L_40)->GetAt(static_cast<il2cpp_array_size_t>(L_43));
			V_5 = L_44;
			// RayStepIndex = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2172));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2218));
			PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_inline(__this, 0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2218));
			// StartPoint = firstStep.Origin;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2173));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2219));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2219));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2220));
			PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_inline(__this, L_45, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2220));
			// float rayDist = 0.0f;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2174));
			V_6 = (0.0f);
			// for (int i = 0; i < Pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2175));
			V_7 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2176));
			goto IL_015d;
		}

IL_0139:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2177));
			// rayDist += Pointer.Rays[i].Length;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2178));
			float L_46 = V_6;
			RuntimeObject* L_47 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2221));
			NullCheck(L_47);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_48 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_47);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2221));
			int32_t L_49 = V_7;
			NullCheck(L_48);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2222));
			float L_50 = RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_48)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_49))), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2222));
			V_6 = ((float)il2cpp_codegen_add((float)L_46, (float)L_50));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2179));
			// for (int i = 0; i < Pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2180));
			int32_t L_51 = V_7;
			V_7 = ((int32_t)il2cpp_codegen_add((int32_t)L_51, (int32_t)1));
		}

IL_015d:
		{
			// for (int i = 0; i < Pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2181));
			int32_t L_52 = V_7;
			RuntimeObject* L_53 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2223));
			NullCheck(L_53);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_54 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_53);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2223));
			NullCheck(L_54);
			V_8 = (bool)((((int32_t)L_52) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_54)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2182));
			bool L_55 = V_8;
			if (L_55)
			{
				goto IL_0139;
			}
		}

IL_0174:
		{
			// focusDetails.RayDistance = rayDist;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2183));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_56 = __this->get_address_of_focusDetails_5();
			float L_57 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2224));
			FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_56, L_57, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2224));
			// focusDetails.Point = finalStep.Terminus;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2184));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_58 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2225));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_59 = RayStep_get_Terminus_m8E84C6DCAB15719419C6F08450DDBDCD32EB1FCD_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2225));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2226));
			FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_58, L_59, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2226));
			// focusDetails.Normal = -finalStep.Direction;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2185));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_60 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2227));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_5), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2227));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2228));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_62 = Vector3_op_UnaryNegation_m2AFBBF22801F9BCA5A4EBE642A29F433FE1339C2(L_61, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2228));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2229));
			FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_60, L_62, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2229));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2186));
		}

IL_01ae:
		{
			// if (hitResult.hitObject != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2187));
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_63 = ___hitResult0;
			NullCheck(L_63);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_64 = L_63->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2230));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_65 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_64, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2230));
			V_9 = L_65;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2188));
			bool L_66 = V_9;
			if (!L_66)
			{
				goto IL_0212;
			}
		}

IL_01c0:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2189));
			// focusDetails.PointLocalSpace = hitResult.hitObject.transform.InverseTransformPoint(focusDetails.Point);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2190));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_67 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_68 = ___hitResult0;
			NullCheck(L_68);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_69 = L_68->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2231));
			NullCheck(L_69);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_70 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_69, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2231));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_71 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2232));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_72 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_71, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2232));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2233));
			NullCheck(L_70);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_73 = Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47(L_70, L_72, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2233));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2234));
			FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_67, L_73, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2234));
			// focusDetails.NormalLocalSpace = hitResult.hitObject.transform.InverseTransformDirection(focusDetails.Normal);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2191));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_74 = __this->get_address_of_focusDetails_5();
			PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * L_75 = ___hitResult0;
			NullCheck(L_75);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_76 = L_75->get_hitObject_2();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2235));
			NullCheck(L_76);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_77 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_76, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2235));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_78 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2236));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_79 = FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_78, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2236));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2237));
			NullCheck(L_77);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_80 = Transform_InverseTransformDirection_m6F0513F2EC19C204F2077E3C68DD1D45317CB5F2(L_77, L_79, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2237));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2238));
			FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_74, L_80, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2238));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2192));
			goto IL_0236;
		}

IL_0212:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2193));
			// focusDetails.PointLocalSpace = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2194));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_81 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2239));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_82 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2239));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2240));
			FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_81, L_82, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2240));
			// focusDetails.NormalLocalSpace = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2195));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_83 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2241));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_84 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2241));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2242));
			FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_83, L_84, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2242));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2196));
		}

IL_0236:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2197));
			IL2CPP_LEAVE(0x248, FINALLY_0239);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0239;
	}

FINALLY_0239:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2198));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2243));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2243));
		IL2CPP_END_FINALLY(569)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(569)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x248, IL_0248)
	}

IL_0248:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2199));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::UpdateFocusLockedHit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_UpdateFocusLockedHit_m6FAA710DAC97452D71D91E04A808381BAD7A93EA (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_UpdateFocusLockedHit_m6FAA710DAC97452D71D91E04A808381BAD7A93EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	int32_t V_3 = 0;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_UpdateFocusLockedHit_m6FAA710DAC97452D71D91E04A808381BAD7A93EA_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2244));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2245));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2246));
		// using (UpdateFocusLockedHitPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2247));
		IL2CPP_RUNTIME_CLASS_INIT(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields*)il2cpp_codegen_static_fields_for(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var))->get_UpdateFocusLockedHitPerfMarker_7();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2274));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2274));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2248));
			// PreviousPointerTarget = focusDetails.Object;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2249));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_2 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2275));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2275));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2276));
			PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_inline(__this, L_3, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2276));
			// if (focusDetails.Object != null && focusDetails.Object.transform != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2250));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_4 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2277));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2277));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2278));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2278));
			if (!L_6)
			{
				goto IL_004d;
			}
		}

IL_0035:
		{
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_7 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2279));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2279));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2280));
			NullCheck(L_8);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2280));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2281));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_10 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_9, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2281));
			G_B4_0 = ((int32_t)(L_10));
			goto IL_004e;
		}

IL_004d:
		{
			G_B4_0 = 0;
		}

IL_004e:
		{
			V_2 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2251));
			bool L_11 = V_2;
			if (!L_11)
			{
				goto IL_0107;
			}
		}

IL_0055:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2252));
			// focusDetails.Point = focusDetails.Object.transform.TransformPoint(focusDetails.PointLocalSpace);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2253));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_12 = __this->get_address_of_focusDetails_5();
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_13 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2282));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2282));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2283));
			NullCheck(L_14);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2283));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_16 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2284));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2284));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2285));
			NullCheck(L_15);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_15, L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2285));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2286));
			FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_12, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2286));
			// focusDetails.Normal = focusDetails.Object.transform.TransformDirection(focusDetails.NormalLocalSpace);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2254));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_19 = __this->get_address_of_focusDetails_5();
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_20 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2287));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2287));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2288));
			NullCheck(L_21);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2288));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_23 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2289));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2289));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2290));
			NullCheck(L_22);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Transform_TransformDirection_m85FC1D7E1322E94F65DA59AEF3B1166850B183EF(L_22, L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2290));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2291));
			FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_19, L_25, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2291));
			// focusDetails.PointLocalSpace = focusDetails.Object.transform.InverseTransformPoint(focusDetails.Point);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2255));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_26 = __this->get_address_of_focusDetails_5();
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_27 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2292));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_28 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_27, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2292));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2293));
			NullCheck(L_28);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_29 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_28, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2293));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_30 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2294));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_30, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2294));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2295));
			NullCheck(L_29);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47(L_29, L_31, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2295));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2296));
			FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_26, L_32, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2296));
			// focusDetails.NormalLocalSpace = focusDetails.Object.transform.InverseTransformDirection(focusDetails.Normal);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2256));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_33 = __this->get_address_of_focusDetails_5();
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_34 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2297));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_35 = FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2297));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2298));
			NullCheck(L_35);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_36 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2298));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_37 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2299));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_38 = FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_37, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2299));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2300));
			NullCheck(L_36);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = Transform_InverseTransformDirection_m6F0513F2EC19C204F2077E3C68DD1D45317CB5F2(L_36, L_38, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2300));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2301));
			FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_33, L_39, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2301));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2257));
		}

IL_0107:
		{
			// StartPoint = Pointer.Rays[0].Origin;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2258));
			RuntimeObject* L_40 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2302));
			NullCheck(L_40);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_41 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_40);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2302));
			NullCheck(L_41);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2303));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_41)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2303));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2304));
			PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_inline(__this, L_42, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2304));
			// for (int i = 0; i < Pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2259));
			V_3 = 0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2260));
			goto IL_0160;
		}

IL_0128:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2261));
			// if (Pointer.Rays[i].Contains(focusDetails.Point))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2262));
			RuntimeObject* L_43 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2305));
			NullCheck(L_43);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_44 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_43);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2305));
			int32_t L_45 = V_3;
			NullCheck(L_44);
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_46 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2306));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_46, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2306));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2307));
			bool L_48 = RayStep_Contains_mE67CFFA25E74C8BF8A5F21AA73815E1F2AFC6D91((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_44)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_45))), L_47, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2307));
			V_4 = L_48;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2263));
			bool L_49 = V_4;
			if (!L_49)
			{
				goto IL_015b;
			}
		}

IL_0150:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2264));
			// RayStepIndex = i;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2265));
			int32_t L_50 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2308));
			PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_inline(__this, L_50, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2308));
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2266));
			goto IL_0176;
		}

IL_015b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2267));
			// for (int i = 0; i < Pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2268));
			int32_t L_51 = V_3;
			V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_51, (int32_t)1));
		}

IL_0160:
		{
			// for (int i = 0; i < Pointer.Rays.Length; i++)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2269));
			int32_t L_52 = V_3;
			RuntimeObject* L_53 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2309));
			NullCheck(L_53);
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_54 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_53);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2309));
			NullCheck(L_54);
			V_5 = (bool)((((int32_t)L_52) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_54)->max_length))))))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2270));
			bool L_55 = V_5;
			if (L_55)
			{
				goto IL_0128;
			}
		}

IL_0176:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2271));
			IL2CPP_LEAVE(0x188, FINALLY_0179);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0179;
	}

FINALLY_0179:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2272));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2310));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2310));
		IL2CPP_END_FINALLY(377)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(377)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x188, IL_0188)
	}

IL_0188:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2273));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::ResetFocusedObjects(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData_ResetFocusedObjects_mED45382832E357CDD75BD1EAFCC27A68EC42C94A (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, bool ___clearPreviousObject0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_ResetFocusedObjects_mED45382832E357CDD75BD1EAFCC27A68EC42C94A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___clearPreviousObject0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_ResetFocusedObjects_mED45382832E357CDD75BD1EAFCC27A68EC42C94A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2311));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2312));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * G_B5_0 = NULL;
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * G_B4_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B6_0 = NULL;
	PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * G_B6_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2313));
		// using (ResetFocusedObjectPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2314));
		IL2CPP_RUNTIME_CLASS_INIT(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields*)il2cpp_codegen_static_fields_for(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var))->get_ResetFocusedObjectPerfMarker_8();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2330));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2330));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2315));
			// if (CurrentPointerTarget != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2316));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2331));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2331));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2332));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2332));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2317));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_002e;
			}
		}

IL_0020:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2318));
			// Pointer.OnPreCurrentPointerTargetChange();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2319));
			RuntimeObject* L_5 = __this->get_Pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2333));
			NullCheck(L_5);
			InterfaceActionInvoker0::Invoke(32 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::OnPreCurrentPointerTargetChange() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2333));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2320));
		}

IL_002e:
		{
			// PreviousPointerTarget = clearPreviousObject ? null : CurrentPointerTarget;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2321));
			bool L_6 = ___clearPreviousObject0;
			G_B4_0 = __this;
			if (L_6)
			{
				G_B5_0 = __this;
				goto IL_003a;
			}
		}

IL_0032:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2334));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = PointerData_get_CurrentPointerTarget_m9F441FF17278CFB56939D79073781D984714411B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2334));
			G_B6_0 = L_7;
			G_B6_1 = G_B4_0;
			goto IL_003b;
		}

IL_003a:
		{
			G_B6_0 = ((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)(NULL));
			G_B6_1 = G_B5_0;
		}

IL_003b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2335));
			NullCheck(G_B6_1);
			PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_inline(G_B6_1, G_B6_0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2335));
			// focusDetails.Point = Details.Point;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2322));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_8 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2336));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_9 = PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2336));
			V_3 = L_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2337));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2337));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2338));
			FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_8, L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2338));
			// focusDetails.Normal = Details.Normal;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2323));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_11 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2339));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_12 = PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2339));
			V_3 = L_12;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2340));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2340));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2341));
			FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_11, L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2341));
			// focusDetails.NormalLocalSpace = Details.NormalLocalSpace;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2324));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_14 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2342));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_15 = PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2342));
			V_3 = L_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2343));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2343));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2344));
			FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_14, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2344));
			// focusDetails.PointLocalSpace = Details.PointLocalSpace;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2325));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_17 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2345));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_18 = PointerData_get_Details_m9093F96671299910158FA42506668BE2F5943116(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2345));
			V_3 = L_18;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2346));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2346));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2347));
			FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_17, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2347));
			// focusDetails.Object = null;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2326));
			FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * L_20 = __this->get_address_of_focusDetails_5();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2348));
			FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)L_20, (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2348));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2327));
			IL2CPP_LEAVE(0xC8, FINALLY_00b9);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00b9;
	}

FINALLY_00b9:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2328));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2349));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2349));
		IL2CPP_END_FINALLY(185)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(185)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xC8, IL_00c8)
	}

IL_00c8:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2329));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::Equals(Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_Equals_mF811403FED4C02A999771AF453ACC93DA1A65D89 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * ___other0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_Equals_mF811403FED4C02A999771AF453ACC93DA1A65D89_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___other0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_Equals_mF811403FED4C02A999771AF453ACC93DA1A65D89_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2350));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2351));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2352));
		// if (ReferenceEquals(null, other))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2353));
		PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_0 = ___other0;
		V_0 = (bool)((((RuntimeObject*)(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2354));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2355));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2356));
		V_1 = (bool)0;
		goto IL_0036;
	}

IL_000e:
	{
		// if (ReferenceEquals(this, other))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2357));
		PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_2 = ___other0;
		V_2 = (bool)((((RuntimeObject*)(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *)__this) == ((RuntimeObject*)(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *)L_2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2358));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2359));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2360));
		V_1 = (bool)1;
		goto IL_0036;
	}

IL_001b:
	{
		// return Pointer.PointerId == other.Pointer.PointerId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2361));
		RuntimeObject* L_4 = __this->get_Pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2363));
		NullCheck(L_4);
		uint32_t L_5 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2363));
		PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * L_6 = ___other0;
		NullCheck(L_6);
		RuntimeObject* L_7 = L_6->get_Pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2364));
		NullCheck(L_7);
		uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2364));
		V_1 = (bool)((((int32_t)L_5) == ((int32_t)L_8))? 1 : 0);
		goto IL_0036;
	}

IL_0036:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2362));
		bool L_9 = V_1;
		return L_9;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::Equals(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_Equals_m63C98EFF3EACA2DD5290628AB4E9D0C8884BE12D (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, RuntimeObject * ___obj0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_Equals_m63C98EFF3EACA2DD5290628AB4E9D0C8884BE12D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___obj0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_Equals_m63C98EFF3EACA2DD5290628AB4E9D0C8884BE12D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2365));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2366));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2367));
		// if (ReferenceEquals(null, obj))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2368));
		RuntimeObject * L_0 = ___obj0;
		V_0 = (bool)((((RuntimeObject*)(RuntimeObject *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2369));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2370));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2371));
		V_1 = (bool)0;
		goto IL_0044;
	}

IL_000e:
	{
		// if (ReferenceEquals(this, obj))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2372));
		RuntimeObject * L_2 = ___obj0;
		V_2 = (bool)((((RuntimeObject*)(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *)__this) == ((RuntimeObject*)(RuntimeObject *)L_2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2373));
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2374));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2375));
		V_1 = (bool)1;
		goto IL_0044;
	}

IL_001b:
	{
		// if (obj.GetType() != GetType())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2376));
		RuntimeObject * L_4 = ___obj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2382));
		NullCheck(L_4);
		Type_t * L_5 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2382));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2383));
		Type_t * L_6 = Object_GetType_m2E0B62414ECCAA3094B703790CE88CBB2F83EA60(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2383));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2384));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		bool L_7 = Type_op_Inequality_m615014191FB05FD50F63A24EB9A6CCA785E7CEC9(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2384));
		V_3 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2377));
		bool L_8 = V_3;
		if (!L_8)
		{
			goto IL_0035;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2378));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2379));
		V_1 = (bool)0;
		goto IL_0044;
	}

IL_0035:
	{
		// return Equals((PointerData)obj);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2380));
		RuntimeObject * L_9 = ___obj0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2385));
		bool L_10 = PointerData_Equals_mF811403FED4C02A999771AF453ACC93DA1A65D89(__this, ((PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE *)CastclassClass((RuntimeObject*)L_9, PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2385));
		V_1 = L_10;
		goto IL_0044;
	}

IL_0044:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2381));
		bool L_11 = V_1;
		return L_11;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::GetHashCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PointerData_GetHashCode_m52CD9C53BDDA2B4F10E28414F3A4E1A8A4A109E5 (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_GetHashCode_m52CD9C53BDDA2B4F10E28414F3A4E1A8A4A109E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_GetHashCode_m52CD9C53BDDA2B4F10E28414F3A4E1A8A4A109E5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2386));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2387));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2388));
		// return Pointer != null ? Pointer.GetHashCode() : 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2389));
		RuntimeObject* L_0 = __this->get_Pointer_0();
		if (L_0)
		{
			goto IL_000c;
		}
	}
	{
		G_B3_0 = 0;
		goto IL_0017;
	}

IL_000c:
	{
		RuntimeObject* L_1 = __this->get_Pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2391));
		NullCheck(L_1);
		int32_t L_2 = VirtFuncInvoker0< int32_t >::Invoke(2 /* System.Int32 System.Object::GetHashCode() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2391));
		G_B3_0 = L_2;
	}

IL_0017:
	{
		V_0 = G_B3_0;
		goto IL_001a;
	}

IL_001a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2390));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerData::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData__cctor_m1F78988B6CA16240E52E0B27E5A4966EEF4EF247 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData__cctor_m1F78988B6CA16240E52E0B27E5A4966EEF4EF247_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData__cctor_m1F78988B6CA16240E52E0B27E5A4966EEF4EF247_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2392));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2393));
	{
		// private static readonly ProfilerMarker UpdateHitPerfMarker = new ProfilerMarker("[MRTK] PointerData.UpdateHit");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2394));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2397));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral8DA4A0E485F343C1C5726926406CBF9F99E0AD4F, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2397));
		((PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields*)il2cpp_codegen_static_fields_for(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var))->set_UpdateHitPerfMarker_6(L_0);
		// private static readonly ProfilerMarker UpdateFocusLockedHitPerfMarker = new ProfilerMarker("[MRTK] PointerData.UpdateFocusLockedHit");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2395));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2398));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral8F3E367B3505B59CF3B1B5A41E3F0DC040044645, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2398));
		((PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields*)il2cpp_codegen_static_fields_for(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var))->set_UpdateFocusLockedHitPerfMarker_7(L_1);
		// private static readonly ProfilerMarker ResetFocusedObjectPerfMarker = new ProfilerMarker("[MRTK] PointerData.ResetFocusedObject");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2396));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2399));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteral36721154D988860C109684EC2159A7363633268E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2399));
		((PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_StaticFields*)il2cpp_codegen_static_fields_for(PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE_il2cpp_TypeInfo_var))->set_ResetFocusedObjectPerfMarker_8(L_2);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHitResult_Clear_m7A8C2FCD0273A70A6D3FCAE2A2697E74F87A9CF7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2011));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2012));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2013));
		// raycastHit = default(MixedRealityRaycastHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2014));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_0 = __this->get_address_of_raycastHit_0();
		il2cpp_codegen_initobj(L_0, sizeof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A ));
		// graphicsRaycastResult = default(RaycastResult);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2015));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * L_1 = __this->get_address_of_graphicsRaycastResult_1();
		il2cpp_codegen_initobj(L_1, sizeof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 ));
		// hitObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2016));
		__this->set_hitObject_2((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// hitPointOnObject = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2017));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2023));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2023));
		__this->set_hitPointOnObject_3(L_2);
		// hitNormalOnObject = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2018));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2024));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2024));
		__this->set_hitNormalOnObject_4(L_3);
		// ray = default(RayStep);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2019));
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * L_4 = __this->get_address_of_ray_5();
		il2cpp_codegen_initobj(L_4, sizeof(RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B ));
		// rayStepIndex = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2020));
		__this->set_rayStepIndex_6((-1));
		// rayDistance = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2021));
		__this->set_rayDistance_7((0.0f));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2022));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Set(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Vector4,Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___hitObject0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitPointOnObject1, Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___hitNormalOnObject2, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___ray3, int32_t ___rayStepIndex4, float ___rayDistance5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hitObject0), (&___hitPointOnObject1), (&___hitNormalOnObject2), (&___ray3), (&___rayStepIndex4), (&___rayDistance5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHitResult_Set_mC05D114BA8D9DE68B75203FA2D440075E576737B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2025));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2026));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2027));
		// raycastHit = default(MixedRealityRaycastHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2028));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_0 = __this->get_address_of_raycastHit_0();
		il2cpp_codegen_initobj(L_0, sizeof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A ));
		// graphicsRaycastResult = default(RaycastResult);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2029));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * L_1 = __this->get_address_of_graphicsRaycastResult_1();
		il2cpp_codegen_initobj(L_1, sizeof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 ));
		// this.hitObject = hitObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2030));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = ___hitObject0;
		__this->set_hitObject_2(L_2);
		// this.hitPointOnObject = hitPointOnObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2031));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = ___hitPointOnObject1;
		__this->set_hitPointOnObject_3(L_3);
		// this.hitNormalOnObject = hitNormalOnObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2032));
		Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  L_4 = ___hitNormalOnObject2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2037));
		IL2CPP_RUNTIME_CLASS_INIT(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector4_op_Implicit_mEAB05A77FF8B3EE79C31499F0CF0A0D621A6496C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2037));
		__this->set_hitNormalOnObject_4(L_5);
		// this.ray = ray;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2033));
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_6 = ___ray3;
		__this->set_ray_5(L_6);
		// this.rayStepIndex = rayStepIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2034));
		int32_t L_7 = ___rayStepIndex4;
		__this->set_rayStepIndex_6(L_7);
		// this.rayDistance = rayDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2035));
		float L_8 = ___rayDistance5;
		__this->set_rayDistance_7(L_8);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2036));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Set(Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit,Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Int32,System.Single,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___hit0, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___ray1, int32_t ___rayStepIndex2, float ___rayDistance3, bool ___focusIndividualCompoundCollider4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___hit0), (&___ray1), (&___rayStepIndex2), (&___rayDistance3), (&___focusIndividualCompoundCollider4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHitResult_Set_m4351B24F1AF27F888B4BFC4A87FE4AA97B8F6418_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2038));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2039));
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * G_B2_0 = NULL;
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * G_B1_0 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * G_B3_0 = NULL;
	PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * G_B3_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2040));
		// raycastHit = hit;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2041));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_0 = ___hit0;
		__this->set_raycastHit_0(L_0);
		// graphicsRaycastResult = default(RaycastResult);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2042));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * L_1 = __this->get_address_of_graphicsRaycastResult_1();
		il2cpp_codegen_initobj(L_1, sizeof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 ));
		// hitObject = focusIndividualCompoundCollider ? hit.collider.gameObject : hit.transform.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2043));
		bool L_2 = ___focusIndividualCompoundCollider4;
		G_B1_0 = __this;
		if (L_2)
		{
			G_B2_0 = __this;
			goto IL_0026;
		}
	}
	{
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_3 = ___hit0;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = L_3.get_transform_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2050));
		NullCheck(L_4);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2050));
		G_B3_0 = L_5;
		G_B3_1 = G_B1_0;
		goto IL_0031;
	}

IL_0026:
	{
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_6 = ___hit0;
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_7 = L_6.get_collider_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2051));
		NullCheck(L_7);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2051));
		G_B3_0 = L_8;
		G_B3_1 = G_B2_0;
	}

IL_0031:
	{
		NullCheck(G_B3_1);
		G_B3_1->set_hitObject_2(G_B3_0);
		// hitPointOnObject = hit.point;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2044));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_9 = ___hit0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = L_9.get_point_0();
		__this->set_hitPointOnObject_3(L_10);
		// hitNormalOnObject = hit.normal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2045));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_11 = ___hit0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = L_11.get_normal_1();
		__this->set_hitNormalOnObject_4(L_12);
		// this.ray = ray;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2046));
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_13 = ___ray1;
		__this->set_ray_5(L_13);
		// this.rayStepIndex = rayStepIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2047));
		int32_t L_14 = ___rayStepIndex2;
		__this->set_rayStepIndex_6(L_14);
		// this.rayDistance = rayDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2048));
		float L_15 = ___rayDistance3;
		__this->set_rayDistance_7(L_15);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2049));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::Set(UnityEngine.EventSystems.RaycastResult,UnityEngine.Vector3,UnityEngine.Vector4,Microsoft.MixedReality.Toolkit.Physics.RayStep,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult_Set_m8A7D09DD40F6B3B582B9B541B1A0EB3EFBD75007 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___result0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___hitPointOnObject1, Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  ___hitNormalOnObject2, RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  ___ray3, int32_t ___rayStepIndex4, float ___rayDistance5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHitResult_Set_m8A7D09DD40F6B3B582B9B541B1A0EB3EFBD75007_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___result0), (&___hitPointOnObject1), (&___hitNormalOnObject2), (&___ray3), (&___rayStepIndex4), (&___rayDistance5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHitResult_Set_m8A7D09DD40F6B3B582B9B541B1A0EB3EFBD75007_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2052));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2053));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2054));
		// raycastHit = default(MixedRealityRaycastHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2055));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_0 = __this->get_address_of_raycastHit_0();
		il2cpp_codegen_initobj(L_0, sizeof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A ));
		// raycastHit.point = hitPointOnObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2056));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_1 = __this->get_address_of_raycastHit_0();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___hitPointOnObject1;
		L_1->set_point_0(L_2);
		// raycastHit.normal = hitNormalOnObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2057));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_3 = __this->get_address_of_raycastHit_0();
		Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  L_4 = ___hitNormalOnObject2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2069));
		IL2CPP_RUNTIME_CLASS_INIT(Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector4_op_Implicit_mEAB05A77FF8B3EE79C31499F0CF0A0D621A6496C(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2069));
		L_3->set_normal_1(L_5);
		// raycastHit.distance = rayDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2058));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_6 = __this->get_address_of_raycastHit_0();
		float L_7 = ___rayDistance5;
		L_6->set_distance_3(L_7);
		// raycastHit.transform = result.gameObject.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2059));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_8 = __this->get_address_of_raycastHit_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2070));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = RaycastResult_get_gameObject_m9D77DEDFF498BAFE29A5F88E9F238400D04C8FDD((RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)(&___result0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2070));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2071));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2071));
		L_8->set_transform_7(L_10);
		// raycastHit.raycastValid = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2060));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_11 = __this->get_address_of_raycastHit_0();
		L_11->set_raycastValid_9((bool)1);
		// graphicsRaycastResult = result;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2061));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_12 = ___result0;
		__this->set_graphicsRaycastResult_1(L_12);
		// this.hitObject = result.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2062));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2072));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_13 = RaycastResult_get_gameObject_m9D77DEDFF498BAFE29A5F88E9F238400D04C8FDD((RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 *)(&___result0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2072));
		__this->set_hitObject_2(L_13);
		// this.hitPointOnObject = hitPointOnObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2063));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = ___hitPointOnObject1;
		__this->set_hitPointOnObject_3(L_14);
		// this.hitNormalOnObject = hitNormalOnObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2064));
		Vector4_tD148D6428C3F8FF6CD998F82090113C2B490B76E  L_15 = ___hitNormalOnObject2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2073));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Vector4_op_Implicit_mEAB05A77FF8B3EE79C31499F0CF0A0D621A6496C(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2073));
		__this->set_hitNormalOnObject_4(L_16);
		// this.ray = ray;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2065));
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_17 = ___ray3;
		__this->set_ray_5(L_17);
		// this.rayStepIndex = rayStepIndex;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2066));
		int32_t L_18 = ___rayStepIndex4;
		__this->set_rayStepIndex_6(L_18);
		// this.rayDistance = rayDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2067));
		float L_19 = ___rayDistance5;
		__this->set_rayDistance_7(L_19);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2068));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerHitResult::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4 (PointerHitResult_tE797663CBF1DB29A37FE75F213744FF0B2D89C57 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerHitResult__ctor_m50D5FF02DF0DF10455FF29DC0A10C66DE4C6A6F4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2074));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2075));
	{
		// public Vector3 hitPointOnObject = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2076));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2079));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2079));
		__this->set_hitPointOnObject_3(L_0);
		// public Vector3 hitNormalOnObject = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2077));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2080));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2080));
		__this->set_hitNormalOnObject_4(L_1);
		// public int rayStepIndex = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2078));
		__this->set_rayStepIndex_6((-1));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2081));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2081));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::Matches(System.Type,Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerPreferences_Matches_m928F429F57D6F6B8A8BD99661ED07DA5ADEF8035 (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, Type_t * ___queryType0, int32_t ___queryInputType1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerPreferences_Matches_m928F429F57D6F6B8A8BD99661ED07DA5ADEF8035_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___queryType0), (&___queryInputType1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerPreferences_Matches_m928F429F57D6F6B8A8BD99661ED07DA5ADEF8035_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2400));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2401));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2402));
		// return Matches(queryType) && queryInputType == InputSourceType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2403));
		Type_t * L_0 = ___queryType0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2405));
		bool L_1 = PointerPreferences_Matches_mCCF075326CB5F03D6868CDD6E02EA257A007FB7D(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2405));
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		int32_t L_2 = ___queryInputType1;
		int32_t L_3 = __this->get_InputSourceType_0();
		G_B3_0 = ((((int32_t)L_2) == ((int32_t)L_3))? 1 : 0);
		goto IL_0016;
	}

IL_0015:
	{
		G_B3_0 = 0;
	}

IL_0016:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0019;
	}

IL_0019:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2404));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::Matches(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerPreferences_Matches_mCCF075326CB5F03D6868CDD6E02EA257A007FB7D (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, Type_t * ___queryType0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerPreferences_Matches_mCCF075326CB5F03D6868CDD6E02EA257A007FB7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___queryType0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerPreferences_Matches_mCCF075326CB5F03D6868CDD6E02EA257A007FB7D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2406));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2407));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2408));
		// return queryType.IsAssignableFrom(PointerType);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2409));
		Type_t * L_0 = ___queryType0;
		Type_t * L_1 = __this->get_PointerType_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2411));
		NullCheck(L_0);
		bool L_2 = VirtFuncInvoker1< bool, Type_t * >::Invoke(110 /* System.Boolean System.Type::IsAssignableFrom(System.Type) */, L_0, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2411));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2410));
		bool L_3 = V_0;
		return L_3;
	}
}
// Microsoft.MixedReality.Toolkit.Input.PointerBehavior Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::GetBehaviorForHandedness(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PointerPreferences_GetBehaviorForHandedness_m0FC3432ABBA91FD0C3502F3F8C8EED7B0774B92D (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, uint8_t ___h0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerPreferences_GetBehaviorForHandedness_m0FC3432ABBA91FD0C3502F3F8C8EED7B0774B92D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___h0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerPreferences_GetBehaviorForHandedness_m0FC3432ABBA91FD0C3502F3F8C8EED7B0774B92D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2412));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2413));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2414));
		// if ((h & Handedness.Right) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2415));
		uint8_t L_0 = ___h0;
		V_0 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&(int32_t)2))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2416));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2417));
		// return Right;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2418));
		int32_t L_2 = __this->get_Right_3();
		V_1 = L_2;
		goto IL_0041;
	}

IL_0015:
	{
		// if ((h & Handedness.Left) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2419));
		uint8_t L_3 = ___h0;
		V_2 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_3&(int32_t)1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2420));
		bool L_4 = V_2;
		if (!L_4)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2421));
		// return Left;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2422));
		int32_t L_5 = __this->get_Left_2();
		V_1 = L_5;
		goto IL_0041;
	}

IL_0029:
	{
		// if ((h & Handedness.Other) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2423));
		uint8_t L_6 = ___h0;
		V_3 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_6&(int32_t)4))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2424));
		bool L_7 = V_3;
		if (!L_7)
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2425));
		// return Other;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2426));
		int32_t L_8 = __this->get_Other_4();
		V_1 = L_8;
		goto IL_0041;
	}

IL_003d:
	{
		// return PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2427));
		V_1 = 0;
		goto IL_0041;
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2428));
		int32_t L_9 = V_1;
		return L_9;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::SetBehaviorForHandedness(Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.PointerBehavior)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerPreferences_SetBehaviorForHandedness_m35701B3FDD9F7771FD85D6B90F22CC8A11D35C58 (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, uint8_t ___h0, int32_t ___b1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerPreferences_SetBehaviorForHandedness_m35701B3FDD9F7771FD85D6B90F22CC8A11D35C58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___h0), (&___b1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerPreferences_SetBehaviorForHandedness_m35701B3FDD9F7771FD85D6B90F22CC8A11D35C58_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2429));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2430));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2431));
		// if ((h & Handedness.Right) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2432));
		uint8_t L_0 = ___h0;
		V_0 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_0&(int32_t)2))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2433));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0014;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2434));
		// Right = b;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2435));
		int32_t L_2 = ___b1;
		__this->set_Right_3(L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2436));
	}

IL_0014:
	{
		// if ((h & Handedness.Left) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2437));
		uint8_t L_3 = ___h0;
		V_1 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_3&(int32_t)1))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2438));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2439));
		// Left = b;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2440));
		int32_t L_5 = ___b1;
		__this->set_Left_2(L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2441));
	}

IL_0027:
	{
		// if ((h & Handedness.Other) != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2442));
		uint8_t L_6 = ___h0;
		V_2 = (bool)((!(((uint32_t)((int32_t)((int32_t)L_6&(int32_t)4))) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2443));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2444));
		// Other = b;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2445));
		int32_t L_8 = ___b1;
		__this->set_Other_4(L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2446));
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2447));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.FocusProvider/PointerPreferences::.ctor(System.Type,Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerPreferences__ctor_m34D253857646441959DFFDF4B3911A857F83CB44 (PointerPreferences_t0B8ED47B07682330911364C9D4E9507FBA7AF386 * __this, Type_t * ___pointerType0, int32_t ___inputType1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerPreferences__ctor_m34D253857646441959DFFDF4B3911A857F83CB44_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerType0), (&___inputType1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerPreferences__ctor_m34D253857646441959DFFDF4B3911A857F83CB44_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2448));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2449));
	{
		// public PointerPreferences(Type pointerType, InputSourceType inputType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2458));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2458));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2451));
		// Left = PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2452));
		__this->set_Left_2(0);
		// Right = PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2453));
		__this->set_Right_3(0);
		// Other = PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2454));
		__this->set_Other_4(0);
		// InputSourceType = inputType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2455));
		int32_t L_0 = ___inputType1;
		__this->set_InputSourceType_0(L_0);
		// PointerType = pointerType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2456));
		Type_t * L_1 = ___pointerType0;
		__this->set_PointerType_1(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2457));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GazeConePointer::get_Controller()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GazeConePointer_get_Controller_mE10C9404FA0552FC1B96D7E4CBB057F26616D5F5 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_get_Controller_mE10C9404FA0552FC1B96D7E4CBB057F26616D5F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_get_Controller_mE10C9404FA0552FC1B96D7E4CBB057F26616D5F5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2459));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2460));
	{
		// public override IMixedRealityController Controller { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2461));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_set_Controller_m91C73758E322A187DDA23601F4A8052EB0CD0CC4 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_set_Controller_m91C73758E322A187DDA23601F4A8052EB0CD0CC4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_set_Controller_m91C73758E322A187DDA23601F4A8052EB0CD0CC4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2462));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2463));
	{
		// public override IMixedRealityController Controller { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2464));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CControllerU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.GazeConePointer::get_PointerExtent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float GazeConePointer_get_PointerExtent_mA2E973D1F8C7063C453E5DB4DA78DE21986097FF (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_get_PointerExtent_mA2E973D1F8C7063C453E5DB4DA78DE21986097FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_get_PointerExtent_mA2E973D1F8C7063C453E5DB4DA78DE21986097FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2465));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2466));
	{
		// get => pointerExtent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2467));
		float L_0 = __this->get_pointerExtent_22();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::set_PointerExtent(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_set_PointerExtent_m006BCA524760FCADE4A5D4518F0094D4D4A40239 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_set_PointerExtent_m006BCA524760FCADE4A5D4518F0094D4D4A40239_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_set_PointerExtent_m006BCA524760FCADE4A5D4518F0094D4D4A40239_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2468));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2469));
	{
		// set => pointerExtent = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2470));
		float L_0 = ___value0;
		__this->set_pointerExtent_22(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::SetGazeInputSourceParent(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_SetGazeInputSourceParent_m72265C17199D9270B95B38374F857639D7B9B956 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, RuntimeObject* ___gazeInputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_SetGazeInputSourceParent_m72265C17199D9270B95B38374F857639D7B9B956_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___gazeInputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_SetGazeInputSourceParent_m72265C17199D9270B95B38374F857639D7B9B956_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2471));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2472));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2473));
		// InputSourceParent = gazeInputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2474));
		RuntimeObject* L_0 = ___gazeInputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2476));
		VirtActionInvoker1< RuntimeObject* >::Invoke(43 /* System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_InputSourceParent(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2476));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2475));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::.ctor(Microsoft.MixedReality.Toolkit.Input.GazeProvider,System.String,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,UnityEngine.LayerMask[],System.Single,UnityEngine.Transform,Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer__ctor_m270823DB2FF610490BE62247CF56147B46102B42 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * ___gazeProvider0, String_t* ___pointerName1, RuntimeObject* ___inputSourceParent2, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___raycastLayerMasks3, float ___pointerExtent4, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___gazeTransform5, BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * ___stabilizer6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer__ctor_m270823DB2FF610490BE62247CF56147B46102B42_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___gazeProvider0), (&___pointerName1), (&___inputSourceParent2), (&___raycastLayerMasks3), (&___pointerExtent4), (&___gazeTransform5), (&___stabilizer6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer__ctor_m270823DB2FF610490BE62247CF56147B46102B42_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2477));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2478));
	{
		// private bool isDown = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2479));
		__this->set_isDown_23((bool)0);
		// private Handedness currentHandedness = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2480));
		__this->set_currentHandedness_25(0);
		// public float coneCastSphereRadius = 0.05f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2481));
		__this->set_coneCastSphereRadius_26((0.05f));
		// public float coneCastRange = 10.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2482));
		__this->set_coneCastRange_27((10.0f));
		// public float coneCastAngle = 1.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2483));
		__this->set_coneCastAngle_28((1.5f));
		// public float coneCastDistanceWeight = 0.25f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2484));
		__this->set_coneCastDistanceWeight_29((0.25f));
		// public float coneCastAngleWeight = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2485));
		__this->set_coneCastAngleWeight_30((1.0f));
		// public float coneCastDistanceToCenterWeight = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2486));
		__this->set_coneCastDistanceToCenterWeight_31((0.5f));
		// public float coneCastAngleToCenterWeight = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2487));
		__this->set_coneCastAngleToCenterWeight_32((0.0f));
		// : base(pointerName, inputSourceParent)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2488));
		String_t* L_0 = ___pointerName1;
		RuntimeObject* L_1 = ___inputSourceParent2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2497));
		GenericPointer__ctor_mBCB9ECF1A0EFA7143892328F948985EDE9FA5DA7(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2497));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2489));
		// this.gazeProvider = gazeProvider;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2490));
		GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_2 = ___gazeProvider0;
		__this->set_gazeProvider_20(L_2);
		// PrioritizedLayerMasksOverride = raycastLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2491));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_3 = ___raycastLayerMasks3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2498));
		GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2498));
		// this.pointerExtent = pointerExtent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2492));
		float L_4 = ___pointerExtent4;
		__this->set_pointerExtent_22(L_4);
		// this.gazeTransform = gazeTransform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2493));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = ___gazeTransform5;
		__this->set_gazeTransform_18(L_5);
		// this.stabilizer = stabilizer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2494));
		BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * L_6 = ___stabilizer6;
		__this->set_stabilizer_19(L_6);
		// IsInteractionEnabled = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2495));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2499));
		GenericPointer_set_IsInteractionEnabled_m7936A27B1F947E612A07F1A8949874B3D861787A(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2499));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2496));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::OnPreSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_OnPreSceneQuery_m7AF98F1C32725D3F3CC450CF678C049FF1B4C44F (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_OnPreSceneQuery_m7AF98F1C32725D3F3CC450CF678C049FF1B4C44F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_OnPreSceneQuery_m7AF98F1C32725D3F3CC450CF678C049FF1B4C44F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2500));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2501));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B7_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2502));
		// using (OnPreSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2503));
		IL2CPP_RUNTIME_CLASS_INIT(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_StaticFields*)il2cpp_codegen_static_fields_for(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var))->get_OnPreSceneQueryPerfMarker_35();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2536));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2536));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2504));
			// if (gazeProvider.IsEyeTrackingEnabledAndValid)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2505));
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_2 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2537));
			NullCheck(L_2);
			bool L_3 = GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E(L_2, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2537));
			V_5 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2506));
			bool L_4 = V_5;
			if (!L_4)
			{
				goto IL_0052;
			}
		}

IL_0021:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2507));
			// newGazeOrigin = gazeProvider.LatestEyeGaze.origin;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2508));
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_5 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2538));
			NullCheck(L_5);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_6 = GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_inline(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2538));
			V_6 = L_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2539));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Ray_get_origin_m3773CA7B1E2F26F6F1447652B485D86C0BEC5187((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_6), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2539));
			V_2 = L_7;
			// newGazeNormal = gazeProvider.LatestEyeGaze.direction;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2509));
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_8 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2540));
			NullCheck(L_8);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_9 = GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_inline(L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2540));
			V_6 = L_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2541));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_6), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2541));
			V_3 = L_10;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2510));
			goto IL_0130;
		}

IL_0052:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2511));
			// if (gazeProvider.UseHeadGazeOverride && gazeProvider.overrideHeadPosition.HasValue && gazeProvider.overrideHeadForward.HasValue)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2512));
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_11 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2542));
			NullCheck(L_11);
			bool L_12 = GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_inline(L_11, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2542));
			if (!L_12)
			{
				goto IL_008c;
			}
		}

IL_0060:
		{
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_13 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2543));
			NullCheck(L_13);
			Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_14 = GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_inline(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2543));
			V_8 = L_14;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2544));
			bool L_15 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)(&V_8), /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2544));
			if (!L_15)
			{
				goto IL_008c;
			}
		}

IL_0076:
		{
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_16 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2545));
			NullCheck(L_16);
			Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_17 = GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_inline(L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2545));
			V_8 = L_17;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2546));
			bool L_18 = Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_inline((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)(&V_8), /*hidden argument*/Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2546));
			G_B7_0 = ((int32_t)(L_18));
			goto IL_008d;
		}

IL_008c:
		{
			G_B7_0 = 0;
		}

IL_008d:
		{
			V_7 = (bool)G_B7_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2513));
			bool L_19 = V_7;
			if (!L_19)
			{
				goto IL_00c1;
			}
		}

IL_0093:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2514));
			// newGazeOrigin = gazeProvider.overrideHeadPosition.Value;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2515));
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_20 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2547));
			NullCheck(L_20);
			Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_21 = GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_inline(L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2547));
			V_8 = L_21;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2548));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)(&V_8), /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2548));
			V_2 = L_22;
			// newGazeNormal = gazeProvider.overrideHeadForward.Value;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2516));
			GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * L_23 = __this->get_gazeProvider_20();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2549));
			NullCheck(L_23);
			Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_24 = GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_inline(L_23, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2549));
			V_8 = L_24;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2550));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9((Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 *)(&V_8), /*hidden argument*/Nullable_1_get_Value_m59310BC9FCEE79F371FF375D192DCCF0E27BDCB9_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2550));
			V_3 = L_25;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2517));
			goto IL_00db;
		}

IL_00c1:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2518));
			// newGazeOrigin = gazeTransform.position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2519));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_26 = __this->get_gazeTransform_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2551));
			NullCheck(L_26);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2551));
			V_2 = L_27;
			// newGazeNormal = gazeTransform.forward;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2520));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_28 = __this->get_gazeTransform_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2552));
			NullCheck(L_28);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_28, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2552));
			V_3 = L_29;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2521));
		}

IL_00db:
		{
			// if (stabilizer != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2522));
			BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * L_30 = __this->get_stabilizer_19();
			V_9 = (bool)((!(((RuntimeObject*)(BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 *)L_30) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2523));
			bool L_31 = V_9;
			if (!L_31)
			{
				goto IL_012f;
			}
		}

IL_00ea:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2524));
			// stabilizer.UpdateStability(MixedRealityPlayspace.InverseTransformPoint(newGazeOrigin), MixedRealityPlayspace.InverseTransformDirection(newGazeNormal));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2525));
			BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * L_32 = __this->get_stabilizer_19();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2553));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPlayspace_t26F34BB4D1D53C64B140AF101E96EB151A9770A4_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = MixedRealityPlayspace_InverseTransformPoint_m454BFC64F823A342B54A6520B8B8F01BC611FDE3(L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2553));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2554));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = MixedRealityPlayspace_InverseTransformDirection_m25A34BA04FAA527011419A0B32AFB9DFE3090BDA(L_35, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2554));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2555));
			NullCheck(L_32);
			VirtActionInvoker2< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(13 /* System.Void Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer::UpdateStability(UnityEngine.Vector3,UnityEngine.Vector3) */, L_32, L_34, L_36);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2555));
			// newGazeOrigin = MixedRealityPlayspace.TransformPoint(stabilizer.StablePosition);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2526));
			BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * L_37 = __this->get_stabilizer_19();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2556));
			NullCheck(L_37);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_38 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(9 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer::get_StablePosition() */, L_37);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2556));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2557));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = MixedRealityPlayspace_TransformPoint_m0DB731A4C7C7B1B716BACC877D80EEC8BE5CD493(L_38, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2557));
			V_2 = L_39;
			// newGazeNormal = MixedRealityPlayspace.TransformDirection(stabilizer.StableRay.direction);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2527));
			BaseRayStabilizer_t8DDFBB2055DD7A931C6691B82F80509F39DB6B84 * L_40 = __this->get_stabilizer_19();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2558));
			NullCheck(L_40);
			Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_41 = VirtFuncInvoker0< Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  >::Invoke(11 /* UnityEngine.Ray Microsoft.MixedReality.Toolkit.Physics.BaseRayStabilizer::get_StableRay() */, L_40);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2558));
			V_6 = L_41;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2559));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = Ray_get_direction_m9E6468CD87844B437FC4B93491E63D388322F76E((Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 *)(&V_6), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2559));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2560));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_43 = MixedRealityPlayspace_TransformDirection_m9A0E80985B969672AF851D515667817C24ECD2A4(L_42, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2560));
			V_3 = L_43;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2528));
		}

IL_012f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2529));
		}

IL_0130:
		{
			// Vector3 endPoint = newGazeOrigin + (newGazeNormal * pointerExtent);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2530));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_44 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = V_3;
			float L_46 = __this->get_pointerExtent_22();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2561));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_45, L_46, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2561));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2562));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_44, L_47, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2562));
			V_4 = L_48;
			// Rays[0].UpdateRayStep(ref newGazeOrigin, ref endPoint);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2531));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2563));
			RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_49 = GenericPointer_get_Rays_m1E54223BF359DE3DE81C1E277A74C34309F88C9D_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2563));
			NullCheck(L_49);
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2564));
			RayStep_UpdateRayStep_m0DE049BE901CA24E0A30DA98F9649E390D6B987F((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_49)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_4), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2564));
			// coneCastHit = ConeCastUtility.ConeCastBest(newGazeOrigin, Vector3.Normalize(newGazeNormal), coneCastSphereRadius, coneCastRange, coneCastAngle, PrioritizedLayerMasksOverride[0], coneCastDistanceWeight, coneCastAngleWeight, coneCastDistanceToCenterWeight, coneCastAngleToCenterWeight);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2532));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = V_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2565));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52 = Vector3_Normalize_mDEA51D0C131125535DA2B49B7281E0086ED583DC(L_51, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2565));
			float L_53 = __this->get_coneCastSphereRadius_26();
			float L_54 = __this->get_coneCastRange_27();
			float L_55 = __this->get_coneCastAngle_28();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2566));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_56 = GenericPointer_get_PrioritizedLayerMasksOverride_mD429394C41A6B8BC90262A853628C8910B59AB52_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2566));
			NullCheck(L_56);
			int32_t L_57 = 0;
			LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_58 = (L_56)->GetAt(static_cast<il2cpp_array_size_t>(L_57));
			float L_59 = __this->get_coneCastDistanceWeight_29();
			float L_60 = __this->get_coneCastAngleWeight_30();
			float L_61 = __this->get_coneCastDistanceToCenterWeight_31();
			float L_62 = __this->get_coneCastAngleToCenterWeight_32();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2567));
			IL2CPP_RUNTIME_CLASS_INIT(ConeCastUtility_t9AD9ED2231B514A755B27FBBD78F6DEBCED96E5B_il2cpp_TypeInfo_var);
			RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  L_63 = ConeCastUtility_ConeCastBest_m4957EF18F53C161A7EF27496E5B5264737245206(L_50, L_52, L_53, L_54, L_55, L_58, L_59, L_60, L_61, L_62, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2567));
			__this->set_coneCastHit_34(L_63);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2533));
			IL2CPP_LEAVE(0x1B4, FINALLY_01a5);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_01a5;
	}

FINALLY_01a5:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2534));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2568));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2568));
		IL2CPP_END_FINALLY(421)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(421)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1B4, IL_01b4)
	}

IL_01b4:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2535));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeConePointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeConePointer_OnSceneQuery_mA34D560C879D566AD6A5267496E588136809CC71 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks0, bool ___focusIndividualCompoundCollider1, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * ___hitInfo2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_OnSceneQuery_mA34D560C879D566AD6A5267496E588136809CC71_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___prioritizedLayerMasks0), (&___focusIndividualCompoundCollider1), (&___hitInfo2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_OnSceneQuery_mA34D560C879D566AD6A5267496E588136809CC71_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2569));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2570));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2571));
		// PrioritizedLayerMasksOverride = prioritizedLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2572));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = ___prioritizedLayerMasks0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2582));
		GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482_inline(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2582));
		// if (coneCastHit.collider != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2573));
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * L_1 = __this->get_address_of_coneCastHit_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2583));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_2 = RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2583));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2584));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2584));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2574));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0035;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2575));
		// hitInfo = new MixedRealityRaycastHit(true, coneCastHit);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2576));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_5 = ___hitInfo2;
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3  L_6 = __this->get_coneCastHit_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2585));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_7;
		memset((&L_7), 0, sizeof(L_7));
		MixedRealityRaycastHit__ctor_m2217BA8449EF5FD465E94E3821DEBA362CA1EA76((&L_7), (bool)1, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2585));
		*(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_5 = L_7;
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_5)->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A *)L_5)->___collider_10), (void*)NULL);
		#endif
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2577));
		V_1 = (bool)1;
		goto IL_0041;
	}

IL_0035:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2578));
		// hitInfo = new MixedRealityRaycastHit();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2579));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * L_8 = ___hitInfo2;
		il2cpp_codegen_initobj(L_8, sizeof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A ));
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2580));
		V_1 = (bool)0;
		goto IL_0041;
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2581));
		bool L_9 = V_1;
		return L_9;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeConePointer::OnSceneQuery(UnityEngine.LayerMask[],System.Boolean,UnityEngine.GameObject&,UnityEngine.Vector3&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeConePointer_OnSceneQuery_mCA6778C3951C3A4108E2C6951E4D33061C6232B5 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___prioritizedLayerMasks0, bool ___focusIndividualCompoundCollider1, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** ___hitObject2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___hitPoint3, float* ___hitDistance4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_OnSceneQuery_mCA6778C3951C3A4108E2C6951E4D33061C6232B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___prioritizedLayerMasks0), (&___focusIndividualCompoundCollider1), (&___hitObject2), (&___hitPoint3), (&___hitDistance4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_OnSceneQuery_mCA6778C3951C3A4108E2C6951E4D33061C6232B5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2586));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2587));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2588));
		// PrioritizedLayerMasksOverride = prioritizedLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2589));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = ___prioritizedLayerMasks0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2603));
		GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482_inline(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2603));
		// if (coneCastHit.collider != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2590));
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * L_1 = __this->get_address_of_coneCastHit_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2604));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_2 = RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2604));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2605));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2605));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2591));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0055;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2592));
		// hitObject = coneCastHit.collider.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2593));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** L_5 = ___hitObject2;
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * L_6 = __this->get_address_of_coneCastHit_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2606));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_7 = RaycastHit_get_collider_mE70B84C4312B567344F60992A6067855F2C3A7A9((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2606));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2607));
		NullCheck(L_7);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2607));
		*((RuntimeObject **)L_5) = (RuntimeObject *)L_8;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_5, (void*)(RuntimeObject *)L_8);
		// hitPoint = coneCastHit.point;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2594));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_9 = ___hitPoint3;
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * L_10 = __this->get_address_of_coneCastHit_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2608));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = RaycastHit_get_point_m0E564B2A72C7A744B889AE9D596F3EFA55059001((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2608));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_9 = L_11;
		// hitDistance = coneCastHit.distance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2595));
		float* L_12 = ___hitDistance4;
		RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 * L_13 = __this->get_address_of_coneCastHit_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2609));
		float L_14 = RaycastHit_get_distance_m1CBA60855C35F29BBC348D374BBC76386A243543((RaycastHit_t19695F18F9265FE5425062BBA6A4D330480538C3 *)L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2609));
		*((float*)L_12) = (float)L_14;
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2596));
		V_1 = (bool)1;
		goto IL_0071;
	}

IL_0055:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2597));
		// hitObject = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2598));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** L_15 = ___hitObject2;
		*((RuntimeObject **)L_15) = (RuntimeObject *)NULL;
		Il2CppCodeGenWriteBarrier((void**)(RuntimeObject **)L_15, (void*)(RuntimeObject *)NULL);
		// hitPoint = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2599));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_16 = ___hitPoint3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2610));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2610));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_16 = L_17;
		// hitDistance = Mathf.Infinity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2600));
		float* L_18 = ___hitDistance4;
		*((float*)L_18) = (float)(std::numeric_limits<float>::infinity());
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2601));
		V_1 = (bool)0;
		goto IL_0071;
	}

IL_0071:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2602));
		bool L_19 = V_1;
		return L_19;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::OnPostSceneQuery()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_OnPostSceneQuery_mF1B9480315AFC474EBEBBC50433BA933B6BB5A89 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_OnPostSceneQuery_mF1B9480315AFC474EBEBBC50433BA933B6BB5A89_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_OnPostSceneQuery_mF1B9480315AFC474EBEBBC50433BA933B6BB5A89_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2611));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2612));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2613));
		// using (OnPostSceneQueryPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2614));
		IL2CPP_RUNTIME_CLASS_INIT(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_StaticFields*)il2cpp_codegen_static_fields_for(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var))->get_OnPostSceneQueryPerfMarker_36();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2624));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2624));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2615));
			// if (isDown)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2616));
			bool L_2 = __this->get_isDown_23();
			V_2 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2617));
			bool L_3 = V_2;
			if (!L_3)
			{
				goto IL_0039;
			}
		}

IL_001a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2618));
			// CoreServices.InputSystem.RaisePointerDragged(this, MixedRealityInputAction.None, Controller.ControllerHandedness);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2619));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2625));
			IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
			RuntimeObject* L_4 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2625));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2626));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
			MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_5 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2626));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2627));
			RuntimeObject* L_6 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.GenericPointer::get_Controller() */, __this);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2627));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2628));
			NullCheck(L_6);
			uint8_t L_7 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2628));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2629));
			NullCheck(L_4);
			InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(36 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDragged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, L_4, __this, L_5, L_7, (RuntimeObject*)NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2629));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2620));
		}

IL_0039:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2621));
			IL2CPP_LEAVE(0x4B, FINALLY_003c);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_003c;
	}

FINALLY_003c:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2622));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2630));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2630));
		IL2CPP_END_FINALLY(60)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(60)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x4B, IL_004b)
	}

IL_004b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2623));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::OnPreCurrentPointerTargetChange()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_OnPreCurrentPointerTargetChange_m74AE677C3FC71178F4B4550AB5D38131DC9BDE03 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_OnPreCurrentPointerTargetChange_m74AE677C3FC71178F4B4550AB5D38131DC9BDE03_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_OnPreCurrentPointerTargetChange_m74AE677C3FC71178F4B4550AB5D38131DC9BDE03_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2631));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2632));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2633));
		// public override void OnPreCurrentPointerTargetChange() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2634));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeConePointer::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeConePointer_get_Position_m67DADD17CFCA5F96D0ABD29476EAB8EC2C9E7950 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_get_Position_m67DADD17CFCA5F96D0ABD29476EAB8EC2C9E7950_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_get_Position_m67DADD17CFCA5F96D0ABD29476EAB8EC2C9E7950_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2635));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2636));
	{
		// public override Vector3 Position => gazeTransform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2637));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_gazeTransform_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2638));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2638));
		return L_1;
	}
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.GazeConePointer::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GazeConePointer_get_Rotation_mC08537B8CBB48A1D4CDB2CD9CBEE0ED621E68DBF (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_get_Rotation_mC08537B8CBB48A1D4CDB2CD9CBEE0ED621E68DBF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_get_Rotation_mC08537B8CBB48A1D4CDB2CD9CBEE0ED621E68DBF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2639));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2640));
	{
		// public override Quaternion Rotation => gazeTransform.rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2641));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_gazeTransform_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2642));
		NullCheck(L_0);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2642));
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_Reset_m55E97C0DBB554B8F71BA5AE59F1E2C024281EEC6 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_Reset_m55E97C0DBB554B8F71BA5AE59F1E2C024281EEC6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_Reset_m55E97C0DBB554B8F71BA5AE59F1E2C024281EEC6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2643));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2644));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2645));
		// Controller = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2646));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2651));
		VirtActionInvoker1< RuntimeObject* >::Invoke(41 /* System.Void Microsoft.MixedReality.Toolkit.Input.GenericPointer::set_Controller(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, __this, (RuntimeObject*)NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2651));
		// BaseCursor = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2647));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2652));
		GenericPointer_set_BaseCursor_m12C546412F2E84C09FEDD68427552AD2C775EC5C_inline(__this, (RuntimeObject*)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2652));
		// IsActive = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2648));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2653));
		GenericPointer_set_IsActive_m5B41E42C3E262AE6F0F8A562A065EA6A644A315D_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2653));
		// IsFocusLocked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2649));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2654));
		GenericPointer_set_IsFocusLocked_m55F61AEAAFC3650E3B26C6B19CFFEA34FC03888E_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2654));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2650));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::RaisePointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_RaisePointerDown_mBFCAE9B287737D84081DFAEFBBA10549F8A4E563 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___mixedRealityInputAction0, uint8_t ___handedness1, RuntimeObject* ___inputSource2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_RaisePointerDown_mBFCAE9B287737D84081DFAEFBBA10549F8A4E563_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___mixedRealityInputAction0), (&___handedness1), (&___inputSource2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_RaisePointerDown_mBFCAE9B287737D84081DFAEFBBA10549F8A4E563_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2655));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2656));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2657));
		// isDown = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2658));
		__this->set_isDown_23((bool)1);
		// currentHandedness = handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2659));
		uint8_t L_0 = ___handedness1;
		__this->set_currentHandedness_25(L_0);
		// currentInputSource = inputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2660));
		RuntimeObject* L_1 = ___inputSource2;
		__this->set_currentInputSource_24(L_1);
		// CoreServices.InputSystem?.RaisePointerDown(this, mixedRealityInputAction, handedness, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2661));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2663));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2663));
		RuntimeObject* L_3 = L_2;
		G_B1_0 = L_3;
		if (L_3)
		{
			G_B2_0 = L_3;
			goto IL_0021;
		}
	}
	{
		goto IL_002b;
	}

IL_0021:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = ___mixedRealityInputAction0;
		uint8_t L_5 = ___handedness1;
		RuntimeObject* L_6 = ___inputSource2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2664));
		NullCheck(G_B2_0);
		InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(35 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B2_0, __this, L_4, L_5, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2664));
	}

IL_002b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2662));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer_RaisePointerUp_mF96B93AA2230A04BFF438008B44F0F2BCC44A038 (GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C * __this, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___mixedRealityInputAction0, uint8_t ___handedness1, RuntimeObject* ___inputSource2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer_RaisePointerUp_mF96B93AA2230A04BFF438008B44F0F2BCC44A038_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___mixedRealityInputAction0), (&___handedness1), (&___inputSource2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer_RaisePointerUp_mF96B93AA2230A04BFF438008B44F0F2BCC44A038_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2665));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2666));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2667));
		// isDown = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2668));
		__this->set_isDown_23((bool)0);
		// currentHandedness = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2669));
		__this->set_currentHandedness_25(0);
		// currentInputSource = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2670));
		__this->set_currentInputSource_24((RuntimeObject*)NULL);
		// CoreServices.InputSystem?.RaisePointerClicked(this, mixedRealityInputAction, 0, handedness, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2674));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2674));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_0021;
		}
	}
	{
		goto IL_002c;
	}

IL_0021:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = ___mixedRealityInputAction0;
		uint8_t L_3 = ___handedness1;
		RuntimeObject* L_4 = ___inputSource2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2675));
		NullCheck(G_B2_0);
		InterfaceActionInvoker5< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , int32_t, uint8_t, RuntimeObject* >::Invoke(37 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerClicked(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.Int32,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B2_0, __this, L_2, 0, L_3, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2675));
	}

IL_002c:
	{
		// CoreServices.InputSystem?.RaisePointerUp(this, mixedRealityInputAction, handedness, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2672));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2676));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_5 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2676));
		RuntimeObject* L_6 = L_5;
		G_B4_0 = L_6;
		if (L_6)
		{
			G_B5_0 = L_6;
			goto IL_0037;
		}
	}
	{
		goto IL_0041;
	}

IL_0037:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_7 = ___mixedRealityInputAction0;
		uint8_t L_8 = ___handedness1;
		RuntimeObject* L_9 = ___inputSource2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2677));
		NullCheck(G_B5_0);
		InterfaceActionInvoker4< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , uint8_t, RuntimeObject* >::Invoke(38 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePointerUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B5_0, __this, L_7, L_8, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2677));
	}

IL_0041:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2673));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeConePointer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeConePointer__cctor_m30F35673A926D04156FE5A679482D82DE39C2359 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeConePointer__cctor_m30F35673A926D04156FE5A679482D82DE39C2359_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeConePointer__cctor_m30F35673A926D04156FE5A679482D82DE39C2359_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2678));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2679));
	{
		// private static readonly ProfilerMarker OnPreSceneQueryPerfMarker = new ProfilerMarker("[MRTK] InternalConeCastPointer.OnPreSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2680));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2682));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral0A898EC9B058E6071937435925849581C90AB444, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2682));
		((GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_StaticFields*)il2cpp_codegen_static_fields_for(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var))->set_OnPreSceneQueryPerfMarker_35(L_0);
		// private static readonly ProfilerMarker OnPostSceneQueryPerfMarker = new ProfilerMarker("[MRTK] InternalConeCastPointer.OnPostSceneQuery");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2681));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2683));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral6C1C31777627D5436BBFF19C463F955267E0F244, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2683));
		((GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_StaticFields*)il2cpp_codegen_static_fields_for(GazeConePointer_t149FCE5C419AF49F1D4678F4C4D77D6203F86C4C_il2cpp_TypeInfo_var))->set_OnPostSceneQueryPerfMarker_36(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::get_IsGazePointerActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9 (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazePointerVisibilityStateMachine_get_IsGazePointerActive_m04337C74BF86ABFD25FAB0257227806833C08BB9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2684));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2685));
	{
		// public bool IsGazePointerActive => gazePointerState != GazePointerState.GazePointerInactive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2686));
		int32_t L_0 = __this->get_gazePointerState_0();
		return (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::UpdateState(System.Int32,System.Int32,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazePointerVisibilityStateMachine_UpdateState_m315458336BABBC8B925C821FCAAB66CA4488BA14 (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, int32_t ___numNearPointersActive0, int32_t ___numFarPointersActive1, int32_t ___numFarPointersWithoutCursorActive2, bool ___isEyeGazeValid3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazePointerVisibilityStateMachine_UpdateState_m315458336BABBC8B925C821FCAAB66CA4488BA14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___numNearPointersActive0), (&___numFarPointersActive1), (&___numFarPointersWithoutCursorActive2), (&___isEyeGazeValid3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazePointerVisibilityStateMachine_UpdateState_m315458336BABBC8B925C821FCAAB66CA4488BA14_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2687));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2688));
	int32_t G_B5_0 = 0;
	int32_t G_B18_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2689));
		// if (eyeGazeValid != isEyeGazeValid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2690));
		bool L_0 = __this->get_eyeGazeValid_2();
		bool L_1 = ___isEyeGazeValid3;
		V_1 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2691));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2692));
		// activateGazeKeywordIsSet = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2693));
		__this->set_activateGazeKeywordIsSet_1((bool)0);
		// eyeGazeValid = isEyeGazeValid;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2694));
		bool L_3 = ___isEyeGazeValid3;
		__this->set_eyeGazeValid_2(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2695));
	}

IL_0023:
	{
		// bool canGazeCursorShow = numFarPointersActive == 0 && numNearPointersActive == 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2696));
		int32_t L_4 = ___numFarPointersActive1;
		if (L_4)
		{
			goto IL_002c;
		}
	}
	{
		int32_t L_5 = ___numNearPointersActive0;
		G_B5_0 = ((((int32_t)L_5) == ((int32_t)0))? 1 : 0);
		goto IL_002d;
	}

IL_002c:
	{
		G_B5_0 = 0;
	}

IL_002d:
	{
		V_0 = (bool)G_B5_0;
		// switch (gazePointerState)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2697));
		int32_t L_6 = __this->get_gazePointerState_0();
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2698));
		int32_t L_7 = V_2;
		switch (L_7)
		{
			case 0:
			{
				goto IL_0049;
			}
			case 1:
			{
				goto IL_005c;
			}
			case 2:
			{
				goto IL_0078;
			}
		}
	}
	{
		goto IL_00b6;
	}

IL_0049:
	{
		// if (!canGazeCursorShow)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2699));
		bool L_8 = V_0;
		V_3 = (bool)((((int32_t)L_8) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2700));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2701));
		// gazePointerState = GazePointerState.GazePointerInactive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2702));
		__this->set_gazePointerState_0(2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2703));
	}

IL_005a:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2704));
		goto IL_00b8;
	}

IL_005c:
	{
		// if (!canGazeCursorShow)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2705));
		bool L_10 = V_0;
		V_4 = (bool)((((int32_t)L_10) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2706));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_0076;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2707));
		// activateGazeKeywordIsSet = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2708));
		__this->set_activateGazeKeywordIsSet_1((bool)0);
		// gazePointerState = GazePointerState.GazePointerInactive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2709));
		__this->set_gazePointerState_0(2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2710));
	}

IL_0076:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2711));
		goto IL_00b8;
	}

IL_0078:
	{
		// if (activateGazeKeywordIsSet)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2712));
		bool L_12 = __this->get_activateGazeKeywordIsSet_1();
		V_5 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2713));
		bool L_13 = V_5;
		if (!L_13)
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2714));
		// activateGazeKeywordIsSet = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2715));
		__this->set_activateGazeKeywordIsSet_1((bool)0);
		// gazePointerState = GazePointerState.GazePointerActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2716));
		__this->set_gazePointerState_0(1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2717));
	}

IL_0094:
	{
		// if (canGazeCursorShow && numFarPointersWithoutCursorActive > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2718));
		bool L_14 = V_0;
		if (!L_14)
		{
			goto IL_009d;
		}
	}
	{
		int32_t L_15 = ___numFarPointersWithoutCursorActive2;
		G_B18_0 = ((((int32_t)L_15) > ((int32_t)0))? 1 : 0);
		goto IL_009e;
	}

IL_009d:
	{
		G_B18_0 = 0;
	}

IL_009e:
	{
		V_6 = (bool)G_B18_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2719));
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_00b4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2720));
		// activateGazeKeywordIsSet = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2721));
		__this->set_activateGazeKeywordIsSet_1((bool)0);
		// gazePointerState = GazePointerState.GazePointerActive;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2722));
		__this->set_gazePointerState_0(1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2723));
	}

IL_00b4:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2724));
		goto IL_00b8;
	}

IL_00b6:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2725));
		goto IL_00b8;
	}

IL_00b8:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2726));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::OnSpeechKeywordRecognized(Microsoft.MixedReality.Toolkit.Input.SpeechEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazePointerVisibilityStateMachine_OnSpeechKeywordRecognized_mF32B08049E9F59365A300D646F2CFF49E7BECB0A (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazePointerVisibilityStateMachine_OnSpeechKeywordRecognized_mF32B08049E9F59365A300D646F2CFF49E7BECB0A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazePointerVisibilityStateMachine_OnSpeechKeywordRecognized_mF32B08049E9F59365A300D646F2CFF49E7BECB0A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2727));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2728));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2729));
		// if (eventData.Command.Keyword.Equals("select", StringComparison.CurrentCultureIgnoreCase))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2730));
		SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2736));
		NullCheck(L_0);
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_1 = SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2736));
		V_1 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2737));
		String_t* L_2 = SpeechCommands_get_Keyword_m78458C7B3D0DE8B7FD8CE0CB1C70FEEAB45D4B53((SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2737));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2738));
		NullCheck(L_2);
		bool L_3 = String_Equals_mB42D01789A129C548840C18E9065ACF9412F1F84(L_2, _stringLiteral81448FE273247B533B9F018E96C158CAB7901247, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2738));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2731));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2732));
		// activateGazeKeywordIsSet = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2733));
		__this->set_activateGazeKeywordIsSet_1((bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2734));
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2735));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazePointerVisibilityStateMachine::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazePointerVisibilityStateMachine__ctor_mED2D3E357198480D43ED1DF72387BE5FB23E9FE8 (GazePointerVisibilityStateMachine_tC7F374A3E81F3CB2B722F10EC91905D231FA1155 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazePointerVisibilityStateMachine__ctor_mED2D3E357198480D43ED1DF72387BE5FB23E9FE8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazePointerVisibilityStateMachine__ctor_mED2D3E357198480D43ED1DF72387BE5FB23E9FE8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2739));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2740));
	{
		// private GazePointerState gazePointerState = GazePointerState.Initial;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2741));
		__this->set_gazePointerState_0(0);
		// private bool activateGazeKeywordIsSet = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2742));
		__this->set_activateGazeKeywordIsSet_1((bool)0);
		// private bool eyeGazeValid = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2743));
		__this->set_eyeGazeValid_2((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2744));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2744));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_Enabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeProvider_get_Enabled_mF416D5C5885F5A49D7F51A9C298142E3496EB4E1 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_Enabled_mF416D5C5885F5A49D7F51A9C298142E3496EB4E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_Enabled_mF416D5C5885F5A49D7F51A9C298142E3496EB4E1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2745));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2746));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2747));
		// get { return enabled; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2748));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2750));
		bool L_0 = Behaviour_get_enabled_mAA0C9ED5A3D1589C1C8AA22636543528DB353CFB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2750));
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return enabled; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2749));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_Enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_Enabled_mEA928483F7FB0A48025358C8C8AC5A02AAAC8D13 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_Enabled_mEA928483F7FB0A48025358C8C8AC5A02AAAC8D13_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_Enabled_mEA928483F7FB0A48025358C8C8AC5A02AAAC8D13_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2751));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2752));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2753));
		// set { enabled = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2754));
		bool L_0 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2756));
		Behaviour_set_enabled_m9755D3B17D7022D23D1E4C618BD9A6B66A5ADC6B(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2756));
		// set { enabled = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2755));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeInputSource()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GazeProvider_get_GazeInputSource_mA9F431D196E30AC68B29FFC096A4AD3205C59480 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazeInputSource_mA9F431D196E30AC68B29FFC096A4AD3205C59480_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	RuntimeObject* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazeInputSource_mA9F431D196E30AC68B29FFC096A4AD3205C59480_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2757));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2758));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2759));
		// if (gazeInputSource == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2760));
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_0 = __this->get_gazeInputSource_15();
		V_0 = (bool)((((RuntimeObject*)(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2761));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2762));
		// gazeInputSource = new BaseGenericInputSource("Gaze", sourceType: InputSourceType.Head);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2763));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2768));
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_2 = (BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 *)il2cpp_codegen_object_new(BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899_il2cpp_TypeInfo_var);
		BaseGenericInputSource__ctor_m861EC906EFD25C15C32208C00224C9A27BE981A4(L_2, _stringLiteral2639467AD59E7AD40E38E8AD58D6F567684054D7, (IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)(IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778*)NULL, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2768));
		__this->set_gazeInputSource_15(L_2);
		// gazePointer.SetGazeInputSourceParent(gazeInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2764));
		InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_3 = __this->get_gazePointer_16();
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_4 = __this->get_gazeInputSource_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2769));
		NullCheck(L_3);
		InternalGazePointer_SetGazeInputSourceParent_m707074A81273E1577088FCB23D01193BBEF92A84(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2769));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2765));
	}

IL_0034:
	{
		// return gazeInputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2766));
		BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_5 = __this->get_gazeInputSource_15();
		V_1 = L_5;
		goto IL_003d;
	}

IL_003d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2767));
		RuntimeObject* L_6 = V_1;
		return L_6;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GazeProvider_get_GazePointer_m31B37DCFB3D6F7D47EB7F48056225C00E28D2686 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazePointer_m31B37DCFB3D6F7D47EB7F48056225C00E28D2686_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RuntimeObject* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazePointer_m31B37DCFB3D6F7D47EB7F48056225C00E28D2686_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2770));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2771));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		// public virtual IMixedRealityPointer GazePointer => gazePointer ?? InitializeGazePointer();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2772));
		InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_0 = __this->get_gazePointer_16();
		V_0 = L_0;
		RuntimeObject* L_1 = V_0;
		RuntimeObject* L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_0012;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2773));
		RuntimeObject* L_3 = VirtFuncInvoker0< RuntimeObject* >::Invoke(43 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::InitializeGazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2773));
		G_B2_0 = L_3;
	}

IL_0012:
	{
		return G_B2_0;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeCursorPrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2775));
	{
		// public GameObject GazeCursorPrefab { internal get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2776));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CGazeCursorPrefabU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_GazeCursorPrefab(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_GazeCursorPrefab_m5D0475472A57FE0B5C36CEA5662DE3C565721818 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_GazeCursorPrefab_m5D0475472A57FE0B5C36CEA5662DE3C565721818_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_GazeCursorPrefab_m5D0475472A57FE0B5C36CEA5662DE3C565721818_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2777));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2778));
	{
		// public GameObject GazeCursorPrefab { internal get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2779));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_U3CGazeCursorPrefabU3Ek__BackingField_17(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeCursor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2780));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2781));
	{
		// public IMixedRealityCursor GazeCursor => GazePointer.BaseCursor;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2782));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2783));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2784));
		NullCheck(L_0);
		RuntimeObject* L_1 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2784));
		return L_1;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeTarget()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GazeProvider_get_GazeTarget_m2AC96216E6152031751A1E20692A3D3327D8EBFE (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazeTarget_m2AC96216E6152031751A1E20692A3D3327D8EBFE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazeTarget_m2AC96216E6152031751A1E20692A3D3327D8EBFE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2785));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2786));
	{
		// public GameObject GazeTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2787));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CGazeTargetU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_GazeTarget(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2788));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2789));
	{
		// public GameObject GazeTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2790));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_U3CGazeTargetU3Ek__BackingField_18(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HitInfo()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  GazeProvider_get_HitInfo_m820884DE1238370F0F71B140EBE330B7A6C63FDB (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HitInfo_m820884DE1238370F0F71B140EBE330B7A6C63FDB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HitInfo_m820884DE1238370F0F71B140EBE330B7A6C63FDB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2791));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2792));
	{
		// public MixedRealityRaycastHit HitInfo { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2793));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_0 = __this->get_U3CHitInfoU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HitInfo(Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2794));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2795));
	{
		// public MixedRealityRaycastHit HitInfo { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2796));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_0 = ___value0;
		__this->set_U3CHitInfoU3Ek__BackingField_19(L_0);
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HitPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2797));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2798));
	{
		// public Vector3 HitPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2799));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CHitPositionU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HitPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2800));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2801));
	{
		// public Vector3 HitPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2802));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHitPositionU3Ek__BackingField_20(L_0);
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HitNormal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HitNormal_m33EA4ACD92EDC50726934D57D5C3F10898010044 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HitNormal_m33EA4ACD92EDC50726934D57D5C3F10898010044_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HitNormal_m33EA4ACD92EDC50726934D57D5C3F10898010044_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2803));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2804));
	{
		// public Vector3 HitNormal { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2805));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CHitNormalU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HitNormal(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2806));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2807));
	{
		// public Vector3 HitNormal { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2808));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHitNormalU3Ek__BackingField_21(L_0);
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2809));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2810));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	{
		// public Vector3 GazeOrigin => GazePointer != null ? GazePointer.Rays[0].Origin : Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2811));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2812));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2812));
		if (L_0)
		{
			goto IL_000f;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2813));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2813));
		G_B3_0 = L_1;
		goto IL_0025;
	}

IL_000f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2814));
		RuntimeObject* L_2 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2814));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2815));
		NullCheck(L_2);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_3 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2815));
		NullCheck(L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2816));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_3)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2816));
		G_B3_0 = L_4;
	}

IL_0025:
	{
		return G_B3_0;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_GazeDirection_m53CC33922D404BA7E1D58D006504E7202CB5C19E (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazeDirection_m53CC33922D404BA7E1D58D006504E7202CB5C19E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazeDirection_m53CC33922D404BA7E1D58D006504E7202CB5C19E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2817));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2818));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	{
		// public Vector3 GazeDirection => GazePointer != null ? GazePointer.Rays[0].Direction : Vector3.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2819));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2820));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2820));
		if (L_0)
		{
			goto IL_000f;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2821));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2821));
		G_B3_0 = L_1;
		goto IL_0025;
	}

IL_000f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2822));
		RuntimeObject* L_2 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2822));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2823));
		NullCheck(L_2);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_3 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2823));
		NullCheck(L_3);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2824));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)((L_3)->GetAddressAt(static_cast<il2cpp_array_size_t>(0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2824));
		G_B3_0 = L_4;
	}

IL_0025:
	{
		return G_B3_0;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HeadVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2825));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2826));
	{
		// public Vector3 HeadVelocity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2827));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CHeadVelocityU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HeadVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2828));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2829));
	{
		// public Vector3 HeadVelocity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2830));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHeadVelocityU3Ek__BackingField_22(L_0);
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_HeadMovementDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2831));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2832));
	{
		// public Vector3 HeadMovementDirection { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2833));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CHeadMovementDirectionU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_HeadMovementDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2834));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2835));
	{
		// public Vector3 HeadMovementDirection { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2836));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHeadMovementDirectionU3Ek__BackingField_23(L_0);
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GameObjectReference()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GazeProvider_get_GameObjectReference_m1B9C8AC88096DEE850A313B94EB0271B6F0A8514 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GameObjectReference_m1B9C8AC88096DEE850A313B94EB0271B6F0A8514_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GameObjectReference_m1B9C8AC88096DEE850A313B94EB0271B6F0A8514_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2837));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2838));
	{
		// public GameObject GameObjectReference => gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2839));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2840));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2840));
		return L_0;
	}
}
// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_overrideHeadPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2841));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2842));
	{
		// public Vector3? overrideHeadPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2843));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = __this->get_U3CoverrideHeadPositionU3Ek__BackingField_27();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_overrideHeadPosition(System.Nullable`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2844));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2845));
	{
		// public Vector3? overrideHeadPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2846));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = ___value0;
		__this->set_U3CoverrideHeadPositionU3Ek__BackingField_27(L_0);
		return;
	}
}
// System.Nullable`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_overrideHeadForward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2847));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2848));
	{
		// public Vector3? overrideHeadForward { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2849));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = __this->get_U3CoverrideHeadForwardU3Ek__BackingField_28();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_overrideHeadForward(System.Nullable`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2850));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2851));
	{
		// public Vector3? overrideHeadForward { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2852));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = ___value0;
		__this->set_U3CoverrideHeadForwardU3Ek__BackingField_28(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::OnValidate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_OnValidate_m4BAECE593C665064CC8EC1D0A3E6B185D49ADFC7 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_OnValidate_m4BAECE593C665064CC8EC1D0A3E6B185D49ADFC7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_OnValidate_m4BAECE593C665064CC8EC1D0A3E6B185D49ADFC7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2853));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2854));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2855));
		// if (minHeadVelocityThreshold > maxHeadVelocityThreshold)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2856));
		float L_0 = __this->get_minHeadVelocityThreshold_13();
		float L_1 = __this->get_maxHeadVelocityThreshold_14();
		V_0 = (bool)((((float)L_0) > ((float)L_1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2857));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_002c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2858));
		// Debug.LogWarning("Minimum head velocity threshold should be less than the maximum velocity threshold. Changing now.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2859));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2863));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteral31351EB3BB34B8DCEEBFFE2B08F3667A02C42130, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2863));
		// minHeadVelocityThreshold = maxHeadVelocityThreshold;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2860));
		float L_3 = __this->get_maxHeadVelocityThreshold_14();
		__this->set_minHeadVelocityThreshold_13(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2861));
	}

IL_002c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2862));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_OnEnable_m4A9056C6B0C7E1BC0ACEC38AE285BB0CE9077EFB (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_OnEnable_m4A9056C6B0C7E1BC0ACEC38AE285BB0CE9077EFB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_OnEnable_m4A9056C6B0C7E1BC0ACEC38AE285BB0CE9077EFB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2864));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2865));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2866));
		// base.OnEnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2867));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2874));
		InputSystemGlobalHandlerListener_OnEnable_m6CA5222111D2EA860C0F38480674D00948767597(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2874));
		// if (!delayInitialization)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2868));
		bool L_0 = __this->get_delayInitialization_25();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2869));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2870));
		// RaiseSourceDetected();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2871));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2875));
		GazeProvider_RaiseSourceDetected_m86099E42089CD17E28713B8882A370154526096A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2875));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2872));
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2873));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_Start_m955439DDAA92F3C3884BF643EE629E47B81C57A4 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_Start_m955439DDAA92F3C3884BF643EE629E47B81C57A4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC * V_0 = NULL;
	AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_Start_m955439DDAA92F3C3884BF643EE629E47B81C57A4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC * L_0 = (U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC *)il2cpp_codegen_object_new(U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC_il2cpp_TypeInfo_var);
		U3CStartU3Ed__69__ctor_m0C891E72C97A5547625522F4B0EDD0593960C0A2(L_0, /*hidden argument*/NULL);
		V_0 = L_0;
		U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC * L_1 = V_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_2(__this);
		U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC * L_2 = V_0;
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  L_3 = AsyncVoidMethodBuilder_Create_m2EF884A75C3C230F0E6A63B1E23DC82F3B159130(/*hidden argument*/NULL);
		NullCheck(L_2);
		L_2->set_U3CU3Et__builder_1(L_3);
		U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC * L_4 = V_0;
		NullCheck(L_4);
		L_4->set_U3CU3E1__state_0((-1));
		U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC * L_5 = V_0;
		NullCheck(L_5);
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  L_6 = L_5->get_U3CU3Et__builder_1();
		V_1 = L_6;
		AsyncVoidMethodBuilder_Start_TisU3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC_mCF0205FB08F5B25182C21CA12E509B673EB0E5ED((AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *)(&V_1), (U3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC **)(&V_0), /*hidden argument*/AsyncVoidMethodBuilder_Start_TisU3CStartU3Ed__69_t282C175F05ED901EC8F329274394F6C25508C4BC_mCF0205FB08F5B25182C21CA12E509B673EB0E5ED_RuntimeMethod_var);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_Update_m1BD5604750D3099D29839B772F85DACA9F696494 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_Update_m1BD5604750D3099D29839B772F85DACA9F696494_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_Update_m1BD5604750D3099D29839B772F85DACA9F696494_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2876));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2877));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B4_0 = 0;
	int32_t G_B12_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2878));
		// using (UpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2879));
		IL2CPP_RUNTIME_CLASS_INIT(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->get_UpdatePerfMarker_29();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2902));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2902));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2880));
			// if (MixedRealityRaycaster.DebugEnabled && gazeTransform != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2881));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
			bool L_2 = ((MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var))->get_DebugEnabled_0();
			if (!L_2)
			{
				goto IL_0025;
			}
		}

IL_0017:
		{
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = __this->get_gazeTransform_12();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2903));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_4 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_3, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2903));
			G_B4_0 = ((int32_t)(L_4));
			goto IL_0026;
		}

IL_0025:
		{
			G_B4_0 = 0;
		}

IL_0026:
		{
			V_2 = (bool)G_B4_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2882));
			bool L_5 = V_2;
			if (!L_5)
			{
				goto IL_004e;
			}
		}

IL_002a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2883));
			// Debug.DrawRay(GazeOrigin, (HitPosition - GazeOrigin), Color.white);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2884));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2904));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2904));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2905));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2905));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2906));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2906));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2907));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_7, L_8, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2907));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2908));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_10 = Color_get_white_mE7F3AC4FF0D6F35E48049C73116A222CBE96D905(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2908));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2909));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_DrawRay_m0D11229E8004FAAE411E457CD7DB316DEF6F9DE3(L_6, L_9, L_10, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2909));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2885));
		}

IL_004e:
		{
			// if (setCursorInvisibleWhenFocusLocked && gazePointer != null &&
			//     gazePointer.IsInteractionEnabled && GazeCursor != null && gazePointer.IsFocusLocked == GazeCursor.IsVisible)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2886));
			bool L_11 = __this->get_setCursorInvisibleWhenFocusLocked_8();
			if (!L_11)
			{
				goto IL_008d;
			}
		}

IL_0056:
		{
			InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_12 = __this->get_gazePointer_16();
			if (!L_12)
			{
				goto IL_008d;
			}
		}

IL_005e:
		{
			InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_13 = __this->get_gazePointer_16();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2910));
			NullCheck(L_13);
			bool L_14 = GenericPointer_get_IsInteractionEnabled_m02A243BF531B7E0F9B85553ECCD71DE45F72D574(L_13, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2910));
			if (!L_14)
			{
				goto IL_008d;
			}
		}

IL_006b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2911));
			RuntimeObject* L_15 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2911));
			if (!L_15)
			{
				goto IL_008d;
			}
		}

IL_0073:
		{
			InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_16 = __this->get_gazePointer_16();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2912));
			NullCheck(L_16);
			bool L_17 = GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_inline(L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2912));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2913));
			RuntimeObject* L_18 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2913));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2914));
			NullCheck(L_18);
			bool L_19 = InterfaceFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::get_IsVisible() */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_18);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2914));
			G_B12_0 = ((((int32_t)L_17) == ((int32_t)L_19))? 1 : 0);
			goto IL_008e;
		}

IL_008d:
		{
			G_B12_0 = 0;
		}

IL_008e:
		{
			V_3 = (bool)G_B12_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2887));
			bool L_20 = V_3;
			if (!L_20)
			{
				goto IL_00ae;
			}
		}

IL_0092:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2888));
			// GazeCursor.SetVisibility(!gazePointer.IsFocusLocked);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2889));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2915));
			RuntimeObject* L_21 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2915));
			InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_22 = __this->get_gazePointer_16();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2916));
			NullCheck(L_22);
			bool L_23 = GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_inline(L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2916));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2917));
			NullCheck(L_21);
			InterfaceActionInvoker1< bool >::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::SetVisibility(System.Boolean) */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_21, (bool)((((int32_t)L_23) == ((int32_t)0))? 1 : 0));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2917));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2890));
		}

IL_00ae:
		{
			// if (IsEyeTrackingEnabledAndValid)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2891));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2918));
			bool L_24 = GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2918));
			V_4 = L_24;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2892));
			bool L_25 = V_4;
			if (!L_25)
			{
				goto IL_00cb;
			}
		}

IL_00ba:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2893));
			// gazeInputSource.SourceType = InputSourceType.Eyes;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2894));
			BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_26 = __this->get_gazeInputSource_15();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2919));
			NullCheck(L_26);
			BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_inline(L_26, 5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2919));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2895));
			goto IL_00da;
		}

IL_00cb:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2896));
			// gazeInputSource.SourceType = InputSourceType.Head;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2897));
			BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * L_27 = __this->get_gazeInputSource_15();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2920));
			NullCheck(L_27);
			BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_inline(L_27, 4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2920));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2898));
		}

IL_00da:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2899));
			IL2CPP_LEAVE(0xEC, FINALLY_00dd);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00dd;
	}

FINALLY_00dd:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2900));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2921));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2921));
		IL2CPP_END_FINALLY(221)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(221)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xEC, IL_00ec)
	}

IL_00ec:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2901));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_LateUpdate_mED6AECF92BD19DFDF2D2B7CCDD8D05B3841970EB (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_LateUpdate_mED6AECF92BD19DFDF2D2B7CCDD8D05B3841970EB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	float V_4 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	float V_6 = 0.0f;
	bool V_7 = false;
	bool V_8 = false;
	float V_9 = 0.0f;
	bool V_10 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_11;
	memset((&V_11), 0, sizeof(V_11));
	bool V_12 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_4), (&V_5), (&V_6), (&V_9));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_LateUpdate_mED6AECF92BD19DFDF2D2B7CCDD8D05B3841970EB_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2922));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2923));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B10_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2924));
		// using (LateUpdatePerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2925));
		IL2CPP_RUNTIME_CLASS_INIT(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->get_LateUpdatePerfMarker_30();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2959));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2959));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2926));
			// Vector3 headPosition = GazeOrigin;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2927));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2960));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = GazeProvider_get_GazeOrigin_mD1C0B8F13CE1F154828FF3D1EAB7E149A5FE629B(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2960));
			V_2 = L_2;
			// Vector3 headDelta = headPosition - lastHeadPosition;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2928));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_2;
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = __this->get_lastHeadPosition_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2961));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_3, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2961));
			V_3 = L_5;
			// if (headDelta.sqrMagnitude < MovementThreshold * MovementThreshold)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2929));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2962));
			float L_6 = Vector3_get_sqrMagnitude_m1C6E190B4A933A183B308736DEC0DD64B0588968((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2962));
			V_7 = (bool)((((float)L_6) < ((float)(0.0001f)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2930));
			bool L_7 = V_7;
			if (!L_7)
			{
				goto IL_0040;
			}
		}

IL_0038:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2931));
			// headDelta = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2932));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2963));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2963));
			V_3 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2933));
		}

IL_0040:
		{
			// if (Time.fixedDeltaTime > 0)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2934));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2964));
			float L_9 = Time_get_fixedDeltaTime_m76C241EDB6F824713AF57DCECD5765871770FA4C(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2964));
			V_8 = (bool)((((float)L_9) > ((float)(0.0f)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2935));
			bool L_10 = V_8;
			if (!L_10)
			{
				goto IL_00bc;
			}
		}

IL_0052:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2936));
			// float velocityAdjustmentRate = 3f * Time.fixedDeltaTime;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2937));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2965));
			float L_11 = Time_get_fixedDeltaTime_m76C241EDB6F824713AF57DCECD5765871770FA4C(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2965));
			V_9 = ((float)il2cpp_codegen_multiply((float)(3.0f), (float)L_11));
			// HeadVelocity = HeadVelocity * (1f - velocityAdjustmentRate) + headDelta * velocityAdjustmentRate / Time.fixedDeltaTime;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2938));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2966));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2966));
			float L_13 = V_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2967));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_12, ((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_13)), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2967));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = V_3;
			float L_16 = V_9;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2968));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_15, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2968));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2969));
			float L_18 = Time_get_fixedDeltaTime_m76C241EDB6F824713AF57DCECD5765871770FA4C(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2969));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2970));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_17, L_18, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2970));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2971));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_14, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2971));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2972));
			GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_inline(__this, L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2972));
			// if (HeadVelocity.sqrMagnitude < VelocityThreshold * VelocityThreshold)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2939));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2973));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2973));
			V_11 = L_21;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2974));
			float L_22 = Vector3_get_sqrMagnitude_m1C6E190B4A933A183B308736DEC0DD64B0588968((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2974));
			V_10 = (bool)((((float)L_22) < ((float)(0.0100000007f)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2940));
			bool L_23 = V_10;
			if (!L_23)
			{
				goto IL_00bb;
			}
		}

IL_00ad:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2941));
			// HeadVelocity = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2942));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2975));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2975));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2976));
			GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_inline(__this, L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2976));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2943));
		}

IL_00bb:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2944));
		}

IL_00bc:
		{
			// float multiplier = Mathf.Clamp01(Mathf.InverseLerp(minHeadVelocityThreshold, maxHeadVelocityThreshold, HeadVelocity.magnitude));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2945));
			float L_25 = __this->get_minHeadVelocityThreshold_13();
			float L_26 = __this->get_maxHeadVelocityThreshold_14();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2977));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2977));
			V_11 = L_27;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2978));
			float L_28 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2978));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2979));
			IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
			float L_29 = Mathf_InverseLerp_m7054CDF25056E9B27D2467F91C95D628508F1F31(L_25, L_26, L_28, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2979));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2980));
			float L_30 = Mathf_Clamp01_m1E5F736941A7E6DC4DBCA88A1E38FE9FBFE0C42B(L_29, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2980));
			V_4 = L_30;
			// Vector3 newHeadMoveDirection = Vector3.Lerp(headPosition, HeadVelocity, multiplier).normalized;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2946));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = V_2;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2981));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2981));
			float L_33 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2982));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Vector3_Lerp_m5BA75496B803820CC64079383956D73C6FD4A8A1(L_31, L_32, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2982));
			V_11 = L_34;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2983));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2983));
			V_5 = L_35;
			// lastHeadPosition = headPosition;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2947));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = V_2;
			__this->set_lastHeadPosition_26(L_36);
			// float directionAdjustmentRate = Mathf.Clamp01(5f * Time.fixedDeltaTime);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2948));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2984));
			float L_37 = Time_get_fixedDeltaTime_m76C241EDB6F824713AF57DCECD5765871770FA4C(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2984));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2985));
			float L_38 = Mathf_Clamp01_m1E5F736941A7E6DC4DBCA88A1E38FE9FBFE0C42B(((float)il2cpp_codegen_multiply((float)(5.0f), (float)L_37)), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2985));
			V_6 = L_38;
			// HeadMovementDirection = Vector3.Slerp(HeadMovementDirection, newHeadMoveDirection, directionAdjustmentRate);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2949));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2986));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2986));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_5;
			float L_41 = V_6;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2987));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = Vector3_Slerp_mA40C2A3E6504A1F9D9BB238F3E238ADE997D1107(L_39, L_40, L_41, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2987));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2988));
			GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_inline(__this, L_42, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2988));
			// if (MixedRealityRaycaster.DebugEnabled && gazeTransform != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2950));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var);
			bool L_43 = ((MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityRaycaster_t6A866535743148643BB004E077F92EE4B44D731F_il2cpp_TypeInfo_var))->get_DebugEnabled_0();
			if (!L_43)
			{
				goto IL_0140;
			}
		}

IL_0132:
		{
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = __this->get_gazeTransform_12();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2989));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_45 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_44, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2989));
			G_B10_0 = ((int32_t)(L_45));
			goto IL_0141;
		}

IL_0140:
		{
			G_B10_0 = 0;
		}

IL_0141:
		{
			V_12 = (bool)G_B10_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2951));
			bool L_46 = V_12;
			if (!L_46)
			{
				goto IL_01a3;
			}
		}

IL_0147:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2952));
			// Debug.DrawLine(lastHeadPosition, lastHeadPosition + HeadMovementDirection * 10f, Color.Lerp(Color.red, Color.green, multiplier));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2953));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = __this->get_lastHeadPosition_26();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = __this->get_lastHeadPosition_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2990));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_49 = GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2990));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2991));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_49, (10.0f), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2991));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2992));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_48, L_50, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2992));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2993));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_52 = Color_get_red_m5562DD438931CF0D1FBBBB29BF7F8B752AF38957(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2993));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2994));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_53 = Color_get_green_mD53D8F980E92A0755759FBB2981E3DDEFCD084C0(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2994));
			float L_54 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2995));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_55 = Color_Lerp_mD37EF718F1BAC65A7416655F0BC902CE76559C46(L_52, L_53, L_54, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2995));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2996));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_DrawLine_mB6E9B16AF857C20116F7054ABAFC30B448E80FA2(L_47, L_51, L_55, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2996));
			// Debug.DrawLine(lastHeadPosition, lastHeadPosition + HeadVelocity, Color.yellow);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2954));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_56 = __this->get_lastHeadPosition_26();
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_57 = __this->get_lastHeadPosition_26();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2997));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_58 = GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2997));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2998));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_59 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_57, L_58, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2998));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2999));
			Color_t119BCA590009762C7223FDD3AF9706653AC84ED2  L_60 = Color_get_yellow_mC8BD62CCC364EA5FC4273D4C2E116D0E2DE135AE(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2999));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3000));
			Debug_DrawLine_mB6E9B16AF857C20116F7054ABAFC30B448E80FA2(L_56, L_59, L_60, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3000));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2955));
		}

IL_01a3:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2956));
			IL2CPP_LEAVE(0x1B5, FINALLY_01a6);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_01a6;
	}

FINALLY_01a6:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2957));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3001));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3001));
		IL2CPP_END_FINALLY(422)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(422)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x1B5, IL_01b5)
	}

IL_01b5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2958));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_OnDisable_mCF9AB46481EE1F00F9A197C488F49E25076FA9F1 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_OnDisable_mCF9AB46481EE1F00F9A197C488F49E25076FA9F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_OnDisable_mCF9AB46481EE1F00F9A197C488F49E25076FA9F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3002));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3003));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B7_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3004));
		// base.OnDisable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3005));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3013));
		InputSystemGlobalHandlerListener_OnDisable_m73FB8CF4D56F72E3BEF936FCC5F25883AE90BDA5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3013));
		// GazePointer?.BaseCursor?.SetVisibility(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3006));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3014));
		RuntimeObject* L_0 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3014));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_0014;
		}
	}
	{
		goto IL_0026;
	}

IL_0014:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3015));
		NullCheck(G_B2_0);
		RuntimeObject* L_2 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3015));
		RuntimeObject* L_3 = L_2;
		G_B3_0 = L_3;
		if (L_3)
		{
			G_B4_0 = L_3;
			goto IL_001f;
		}
	}
	{
		goto IL_0026;
	}

IL_001f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3016));
		NullCheck(G_B4_0);
		InterfaceActionInvoker1< bool >::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::SetVisibility(System.Boolean) */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, G_B4_0, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3016));
	}

IL_0026:
	{
		// if (!delayInitialization)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3007));
		bool L_4 = __this->get_delayInitialization_25();
		V_0 = (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3008));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_004d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3009));
		// CoreServices.InputSystem?.RaiseSourceLost(GazeInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3010));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3017));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_6 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3017));
		RuntimeObject* L_7 = L_6;
		G_B7_0 = L_7;
		if (L_7)
		{
			G_B8_0 = L_7;
			goto IL_003f;
		}
	}
	{
		goto IL_004c;
	}

IL_003f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3018));
		RuntimeObject* L_8 = VirtFuncInvoker0< RuntimeObject* >::Invoke(39 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazeInputSource() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3018));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3019));
		NullCheck(G_B8_0);
		InterfaceActionInvoker2< RuntimeObject*, RuntimeObject* >::Invoke(25 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourceLost(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B8_0, L_8, (RuntimeObject*)NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3019));
	}

IL_004c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3011));
	}

IL_004d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3012));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::OnDestroy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_OnDestroy_m8D34D89F150F66A1078502ACB26F79DB04888A7B (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_OnDestroy_m8D34D89F150F66A1078502ACB26F79DB04888A7B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * V_0 = NULL;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_OnDestroy_m8D34D89F150F66A1078502ACB26F79DB04888A7B_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3020));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3021));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3022));
		// if (GazeCursor.TryGetMonoBehaviour(out MonoBehaviour gazeCursor))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3023));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3029));
		RuntimeObject* L_0 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3029));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3030));
		bool L_1 = UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18(L_0, (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 **)(&V_0), /*hidden argument*/UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3030));
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3024));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0020;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3025));
		// Destroy(gazeCursor.gameObject);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3026));
		MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3031));
		NullCheck(L_3);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3031));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3032));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		Object_Destroy_m23B4562495BA35A74266D4372D45368F8C05109A(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3032));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3027));
	}

IL_0020:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3028));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::RegisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_RegisterHandlers_m45A1BB5BD85371D8A4657EB61047D3D8AA3B016E (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_RegisterHandlers_m45A1BB5BD85371D8A4657EB61047D3D8AA3B016E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_RegisterHandlers_m45A1BB5BD85371D8A4657EB61047D3D8AA3B016E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3034));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3035));
		// CoreServices.InputSystem?.RegisterHandler<IMixedRealityInputHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3036));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3038));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3038));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3039));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_RegisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_m2C0DAF3964D680743B8ABDBF97EC2581FA7788E2_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3039));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3037));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::UnregisterHandlers()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_UnregisterHandlers_m96124A5711C66D9C569BC8FBB7E57C017C16DA3F (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_UnregisterHandlers_m96124A5711C66D9C569BC8FBB7E57C017C16DA3F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_UnregisterHandlers_m96124A5711C66D9C569BC8FBB7E57C017C16DA3F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3040));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3041));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3042));
		// CoreServices.InputSystem?.UnregisterHandler<IMixedRealityInputHandler>(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3043));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3045));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_0 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3045));
		RuntimeObject* L_1 = L_0;
		G_B1_0 = L_1;
		if (L_1)
		{
			G_B2_0 = L_1;
			goto IL_000c;
		}
	}
	{
		goto IL_0013;
	}

IL_000c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3046));
		NullCheck(G_B2_0);
		GenericInterfaceActionInvoker1< RuntimeObject* >::Invoke(IMixedRealityEventSystem_UnregisterHandler_TisIMixedRealityInputHandler_tC211E2CBE6CFE3EC19B957871C221DF3EB10426F_mB45C244DC51FBA1370CE95E485680FD2CB1B75FC_RuntimeMethod_var, G_B2_0, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3046));
	}

IL_0013:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3044));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::OnInputUp(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_OnInputUp_mE9B37314364EF736A028096F9070D0805ACE91F7 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_OnInputUp_mE9B37314364EF736A028096F9070D0805ACE91F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_OnInputUp_mE9B37314364EF736A028096F9070D0805ACE91F7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3047));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3048));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3049));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3050));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3051));
		goto IL_004f;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3052));
		// if (eventData.InputSource.Pointers[i].PointerId == GazePointer.PointerId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3053));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3063));
		NullCheck(L_0);
		RuntimeObject* L_1 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3063));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3064));
		NullCheck(L_1);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_2 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3064));
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		RuntimeObject* L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3065));
		NullCheck(L_5);
		uint32_t L_6 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3066));
		RuntimeObject* L_7 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3066));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3067));
		NullCheck(L_7);
		uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3067));
		V_1 = (bool)((((int32_t)L_6) == ((int32_t)L_8))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3054));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3055));
		// gazePointer.RaisePointerUp(eventData.MixedRealityInputAction, eventData.Handedness, eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3056));
		InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_10 = __this->get_gazePointer_16();
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3068));
		NullCheck(L_11);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_12 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3068));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_13 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3069));
		NullCheck(L_13);
		uint8_t L_14 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3069));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_15 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3070));
		NullCheck(L_15);
		RuntimeObject* L_16 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3070));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3071));
		NullCheck(L_10);
		InternalGazePointer_RaisePointerUp_m8D6B413319C69466C80235E341FCE3EA88FB519E(L_10, L_12, L_14, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3071));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3057));
		goto IL_0063;
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3058));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3059));
		int32_t L_17 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_004f:
	{
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3060));
		int32_t L_18 = V_0;
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_19 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3072));
		NullCheck(L_19);
		RuntimeObject* L_20 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3072));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3073));
		NullCheck(L_20);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3073));
		NullCheck(L_21);
		V_2 = (bool)((((int32_t)L_18) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_21)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3061));
		bool L_22 = V_2;
		if (L_22)
		{
			goto IL_0005;
		}
	}

IL_0063:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3062));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::OnInputDown(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_OnInputDown_m3337CC54CCC2902B3435C910F5B6A05F60F0FD71 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_OnInputDown_m3337CC54CCC2902B3435C910F5B6A05F60F0FD71_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_OnInputDown_m3337CC54CCC2902B3435C910F5B6A05F60F0FD71_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3074));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3075));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3076));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3077));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3078));
		goto IL_004f;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3079));
		// if (eventData.InputSource.Pointers[i].PointerId == GazePointer.PointerId)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3080));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3090));
		NullCheck(L_0);
		RuntimeObject* L_1 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3090));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3091));
		NullCheck(L_1);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_2 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3091));
		int32_t L_3 = V_0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		RuntimeObject* L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3092));
		NullCheck(L_5);
		uint32_t L_6 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3093));
		RuntimeObject* L_7 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3093));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3094));
		NullCheck(L_7);
		uint32_t L_8 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3094));
		V_1 = (bool)((((int32_t)L_6) == ((int32_t)L_8))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3081));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_004a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3082));
		// gazePointer.RaisePointerDown(eventData.MixedRealityInputAction, eventData.Handedness, eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3083));
		InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_10 = __this->get_gazePointer_16();
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3095));
		NullCheck(L_11);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_12 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3095));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_13 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3096));
		NullCheck(L_13);
		uint8_t L_14 = InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3096));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_15 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3097));
		NullCheck(L_15);
		RuntimeObject* L_16 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3097));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3098));
		NullCheck(L_10);
		InternalGazePointer_RaisePointerDown_mFC2D6EB28E48ABE59543829F0879D8BE943528EE(L_10, L_12, L_14, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3098));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3084));
		goto IL_0063;
	}

IL_004a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3085));
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3086));
		int32_t L_17 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_004f:
	{
		// for (int i = 0; i < eventData.InputSource.Pointers.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3087));
		int32_t L_18 = V_0;
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_19 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3099));
		NullCheck(L_19);
		RuntimeObject* L_20 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3100));
		NullCheck(L_20);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3100));
		NullCheck(L_21);
		V_2 = (bool)((((int32_t)L_18) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_21)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3088));
		bool L_22 = V_2;
		if (L_22)
		{
			goto IL_0005;
		}
	}

IL_0063:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3089));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::InitializeGazePointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GazeProvider_InitializeGazePointer_m789C6E4E0FE967FFA8B35781CD4729C9030487B7 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_InitializeGazePointer_m789C6E4E0FE967FFA8B35781CD4729C9030487B7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_4 = NULL;
	RuntimeObject* V_5 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_InitializeGazePointer_m789C6E4E0FE967FFA8B35781CD4729C9030487B7_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3101));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3102));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3103));
		// using (InitializeGazePointerPerfMarker.Auto())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3104));
		IL2CPP_RUNTIME_CLASS_INIT(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var);
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->get_InitializeGazePointerPerfMarker_31();
		V_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3124));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1 = ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline((ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3124));
		V_0 = L_1;
	}

IL_000f:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3105));
			// if (gazeTransform == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3106));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = __this->get_gazeTransform_12();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3125));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3125));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3107));
			bool L_4 = V_2;
			if (!L_4)
			{
				goto IL_0032;
			}
		}

IL_0020:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3108));
			// gazeTransform = CameraCache.Main.transform;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3109));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3126));
			Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_5 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3126));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3127));
			NullCheck(L_5);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_5, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3127));
			__this->set_gazeTransform_12(L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3110));
		}

IL_0032:
		{
			// Debug.Assert(gazeTransform != null, "No gaze transform to raycast from!");
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3111));
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = __this->get_gazeTransform_12();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3128));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_8 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_7, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3128));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3129));
			IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
			Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC(L_8, _stringLiteral5E21FDBF4EB092EFB59B08245853B3E5F13C3645, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3129));
			// gazePointer = new InternalGazePointer(this, "Gaze Pointer", null, raycastLayerMasks, maxGazeCollisionDistance, gazeTransform, stabilizer);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3112));
			LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_9 = __this->get_raycastLayerMasks_10();
			float L_10 = __this->get_maxGazeCollisionDistance_9();
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = __this->get_gazeTransform_12();
			GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D * L_12 = __this->get_stabilizer_11();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3130));
			InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_13 = (InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 *)il2cpp_codegen_object_new(InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8_il2cpp_TypeInfo_var);
			InternalGazePointer__ctor_mB0563C515A49907C1EB9E9FEA5A1E71B5680B79A(L_13, __this, _stringLiteral9462493F5F8F6760398CE1B00B9CE54DD7D17ED1, (RuntimeObject*)NULL, L_9, L_10, L_11, L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3130));
			__this->set_gazePointer_16(L_13);
			// if ((GazeCursor == null) &&
			//     (GazeCursorPrefab != null))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3113));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3131));
			RuntimeObject* L_14 = GazeProvider_get_GazeCursor_m08586B516296E2B4C48FB36C689FD37E7AFFCF63(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3131));
			if (L_14)
			{
				goto IL_0089;
			}
		}

IL_007b:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3132));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3132));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3133));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_16 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_15, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3133));
			G_B6_0 = ((int32_t)(L_16));
			goto IL_008a;
		}

IL_0089:
		{
			G_B6_0 = 0;
		}

IL_008a:
		{
			V_3 = (bool)G_B6_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3114));
			bool L_17 = V_3;
			if (!L_17)
			{
				goto IL_00b3;
			}
		}

IL_008e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3115));
			// GameObject cursor = Instantiate(GazeCursorPrefab);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3116));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3134));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_18 = GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_inline(__this, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3134));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3135));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90(L_18, /*hidden argument*/Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3135));
			V_4 = L_19;
			// MixedRealityPlayspace.AddChild(cursor.transform);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3117));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_20 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3136));
			NullCheck(L_20);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_21 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_20, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3136));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3137));
			IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPlayspace_t26F34BB4D1D53C64B140AF101E96EB151A9770A4_il2cpp_TypeInfo_var);
			MixedRealityPlayspace_AddChild_mA137BA9496C5D73FC8DB4F4C2F3E7BD09BAAEBC4(L_21, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3137));
			// SetGazeCursor(cursor);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3118));
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3138));
			GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C(__this, L_22, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3138));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3119));
		}

IL_00b3:
		{
			// gazePointer.IsTargetPositionLockedOnFocusLock = lockCursorWhenFocusLocked;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3120));
			InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_23 = __this->get_gazePointer_16();
			bool L_24 = __this->get_lockCursorWhenFocusLocked_7();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3139));
			NullCheck(L_23);
			GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5_inline(L_23, L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3139));
			// return gazePointer;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3121));
			InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 * L_25 = __this->get_gazePointer_16();
			V_5 = L_25;
			IL2CPP_LEAVE(0xDE, FINALLY_00cf);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_00cf;
	}

FINALLY_00cf:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3122));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3140));
		AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline((AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3140));
		IL2CPP_END_FINALLY(207)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(207)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0xDE, IL_00de)
	}

IL_00de:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3123));
		RuntimeObject* L_26 = V_5;
		return L_26;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::RaiseSourceDetected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_RaiseSourceDetected_m86099E42089CD17E28713B8882A370154526096A (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_RaiseSourceDetected_m86099E42089CD17E28713B8882A370154526096A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 * V_0 = NULL;
	AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_RaiseSourceDetected_m86099E42089CD17E28713B8882A370154526096A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 * L_0 = (U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 *)il2cpp_codegen_object_new(U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1_il2cpp_TypeInfo_var);
		U3CRaiseSourceDetectedU3Ed__83__ctor_mA557D7AC6FF02BD35203CA32D02AAA43AA3D913C(L_0, /*hidden argument*/NULL);
		V_0 = L_0;
		U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 * L_1 = V_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_2(__this);
		U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 * L_2 = V_0;
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  L_3 = AsyncVoidMethodBuilder_Create_m2EF884A75C3C230F0E6A63B1E23DC82F3B159130(/*hidden argument*/NULL);
		NullCheck(L_2);
		L_2->set_U3CU3Et__builder_1(L_3);
		U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 * L_4 = V_0;
		NullCheck(L_4);
		L_4->set_U3CU3E1__state_0((-1));
		U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 * L_5 = V_0;
		NullCheck(L_5);
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  L_6 = L_5->get_U3CU3Et__builder_1();
		V_1 = L_6;
		AsyncVoidMethodBuilder_Start_TisU3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1_m30B43EC395DAF36ED6BF21971BB32FDA0FDA194E((AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *)(&V_1), (U3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1 **)(&V_0), /*hidden argument*/AsyncVoidMethodBuilder_Start_TisU3CRaiseSourceDetectedU3Ed__83_t44C84D492ED73AE35181D7C93FB7BE5247D39DB1_m30B43EC395DAF36ED6BF21971BB32FDA0FDA194E_RuntimeMethod_var);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::UpdateGazeInfoFromHit(Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_UpdateGazeInfoFromHit_mEF093FA4EC83CA199AD391AA303E60757CC218E8 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___raycastHit0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_UpdateGazeInfoFromHit_mEF093FA4EC83CA199AD391AA303E60757CC218E8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  V_2;
	memset((&V_2), 0, sizeof(V_2));
	float V_3 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___raycastHit0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_UpdateGazeInfoFromHit_mEF093FA4EC83CA199AD391AA303E60757CC218E8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3141));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3142));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3143));
		// HitInfo = raycastHit;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3144));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_0 = ___raycastHit0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3166));
		GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_inline(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3166));
		// if (IsEyeTrackingEnabledAndValid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3145));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3167));
		bool L_1 = GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3167));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3146));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0038;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3147));
		// UpdateEyeGaze(null, GazePointer.Rays[0], DateTime.UtcNow);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3148));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3168));
		RuntimeObject* L_3 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3168));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3169));
		NullCheck(L_3);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_4 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3169));
		NullCheck(L_4);
		int32_t L_5 = 0;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_6 = (L_4)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3170));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_7 = RayStep_op_Implicit_m0A5F02F80E996484E8BE6A3A8F76CCEB4B86BCDF(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3170));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3171));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_8 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3171));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3172));
		GazeProvider_UpdateEyeGaze_mFF2D86BEF7A27FEB37C4476E685EC6BDAE4DC5DB(__this, (RuntimeObject*)NULL, L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3172));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3149));
	}

IL_0038:
	{
		// if (raycastHit.transform != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3150));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_9 = ___raycastHit0;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = L_9.get_transform_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3173));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3173));
		V_1 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3151));
		bool L_12 = V_1;
		if (!L_12)
		{
			goto IL_00c0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3152));
		// GazeTarget = raycastHit.transform.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3153));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_13 = ___raycastHit0;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = L_13.get_transform_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3174));
		NullCheck(L_14);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_15 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3174));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3175));
		GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_inline(__this, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3175));
		// var ray = GazePointer.Rays[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3154));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3176));
		RuntimeObject* L_16 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3176));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3177));
		NullCheck(L_16);
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_17 = InterfaceFuncInvoker0< RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* >::Invoke(17 /* Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rays() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3177));
		NullCheck(L_17);
		int32_t L_18 = 0;
		RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B  L_19 = (L_17)->GetAt(static_cast<il2cpp_array_size_t>(L_18));
		V_2 = L_19;
		// var lhd = (raycastHit.point - ray.Origin).magnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3155));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_20 = ___raycastHit0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = L_20.get_point_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3178));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3179));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_21, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3179));
		V_4 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3180));
		float L_24 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3180));
		V_3 = L_24;
		// lastHitDistance = lhd;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3156));
		float L_25 = V_3;
		__this->set_lastHitDistance_24(L_25);
		// HitPosition = ray.Origin + lhd * ray.Direction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3157));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3181));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3181));
		float L_27 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3182));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline((RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3182));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3183));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(L_27, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3183));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3184));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_26, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3184));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3185));
		GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_inline(__this, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3185));
		// HitNormal = raycastHit.normal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3158));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_31 = ___raycastHit0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = L_31.get_normal_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3186));
		GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_inline(__this, L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3186));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3159));
		goto IL_00e2;
	}

IL_00c0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3160));
		// GazeTarget = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3161));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3187));
		GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_inline(__this, (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3187));
		// HitPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3162));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3188));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3188));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3189));
		GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_inline(__this, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3189));
		// HitNormal = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3190));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3190));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3191));
		GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_inline(__this, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3191));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3164));
	}

IL_00e2:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3165));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::SetGazeCursor(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursor0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___cursor0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_SetGazeCursor_mB2F9CF8E123BF098464B95B8EA8ED0573891479C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3192));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3193));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3194));
		// Debug.Assert(cursor != null);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3195));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___cursor0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3202));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3202));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3203));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3203));
		// cursor.transform.parent = transform.parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3196));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = ___cursor0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3204));
		NullCheck(L_2);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3204));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3205));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3205));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3206));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3206));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3207));
		NullCheck(L_3);
		Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3207));
		// GazePointer.BaseCursor = cursor.GetComponent<IMixedRealityCursor>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3197));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3208));
		RuntimeObject* L_6 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3208));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = ___cursor0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3209));
		NullCheck(L_7);
		RuntimeObject* L_8 = GameObject_GetComponent_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m96F21A23B24805F9F10AE4FB85A7F767DEE6DD2C(L_7, /*hidden argument*/GameObject_GetComponent_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m96F21A23B24805F9F10AE4FB85A7F767DEE6DD2C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3209));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3210));
		NullCheck(L_6);
		InterfaceActionInvoker1< RuntimeObject* >::Invoke(7 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::set_BaseCursor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor) */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3210));
		// Debug.Assert(GazePointer.BaseCursor != null, "Failed to load cursor");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3198));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3211));
		RuntimeObject* L_9 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3211));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3212));
		NullCheck(L_9);
		RuntimeObject* L_10 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3212));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3213));
		Debug_Assert_m84EE43ACFD01E8C0CEC0160C494B2CE77338F7BC((bool)((!(((RuntimeObject*)(RuntimeObject*)L_10) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0), _stringLiteral58BE002BB3D2F447ADEA800DCD84E9A19F00AC00, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3213));
		// GazePointer.BaseCursor.SetVisibilityOnSourceDetected = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3199));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3214));
		RuntimeObject* L_11 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3214));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3215));
		NullCheck(L_11);
		RuntimeObject* L_12 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3215));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3216));
		NullCheck(L_12);
		InterfaceActionInvoker1< bool >::Invoke(12 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::set_SetVisibilityOnSourceDetected(System.Boolean) */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_12, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3216));
		// GazePointer.BaseCursor.Pointer = GazePointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3200));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3217));
		RuntimeObject* L_13 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3217));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3218));
		NullCheck(L_13);
		RuntimeObject* L_14 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_13);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3218));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3219));
		RuntimeObject* L_15 = VirtFuncInvoker0< RuntimeObject* >::Invoke(40 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_GazePointer() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3219));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3220));
		NullCheck(L_14);
		InterfaceActionInvoker1< RuntimeObject* >::Invoke(1 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor::set_Pointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer) */, IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_il2cpp_TypeInfo_var, L_14, L_15);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3220));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3201));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_IsEyeTrackingEnabledAndValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_IsEyeTrackingEnabledAndValid_m6D5C0E7692451A959D8B016352CCAF395665C82E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3221));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3222));
	int32_t G_B3_0 = 0;
	{
		// public bool IsEyeTrackingEnabledAndValid => IsEyeTrackingDataValid && IsEyeTrackingEnabled;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3223));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3224));
		bool L_0 = GazeProvider_get_IsEyeTrackingDataValid_mA1B6AA6538AC857C4D539C82DD6E5E2D13C15D50(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3224));
		if (!L_0)
		{
			goto IL_0010;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3225));
		bool L_1 = GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3225));
		G_B3_0 = ((int32_t)(L_1));
		goto IL_0011;
	}

IL_0010:
	{
		G_B3_0 = 0;
	}

IL_0011:
	{
		return (bool)G_B3_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_IsEyeTrackingDataValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeProvider_get_IsEyeTrackingDataValid_mA1B6AA6538AC857C4D539C82DD6E5E2D13C15D50 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_IsEyeTrackingDataValid_mA1B6AA6538AC857C4D539C82DD6E5E2D13C15D50_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_IsEyeTrackingDataValid_mA1B6AA6538AC857C4D539C82DD6E5E2D13C15D50_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3226));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3227));
	{
		// public bool IsEyeTrackingDataValid => (DateTime.UtcNow - latestEyeTrackingUpdate).TotalSeconds <= maxEyeTrackingTimeoutInSeconds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3228));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3229));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3229));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_1 = __this->get_latestEyeTrackingUpdate_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3230));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_2 = DateTime_op_Subtraction_m8005DCC8F0F183AC1335F87A82FDF92926CC5021(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3230));
		V_0 = L_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3231));
		double L_3 = TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3231));
		IL2CPP_RUNTIME_CLASS_INIT(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var);
		float L_4 = ((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->get_maxEyeTrackingTimeoutInSeconds_34();
		return (bool)((((int32_t)((!(((double)L_3) <= ((double)(((double)((double)L_4))))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
	}
}
// System.Nullable`1<System.Boolean> Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_IsEyeCalibrationValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  GazeProvider_get_IsEyeCalibrationValid_mC06C98266618599AF041B9B50320309610C0C308 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_IsEyeCalibrationValid_mC06C98266618599AF041B9B50320309610C0C308_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_IsEyeCalibrationValid_mC06C98266618599AF041B9B50320309610C0C308_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3232));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3233));
	{
		// public bool? IsEyeCalibrationValid { get; private set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3234));
		Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  L_0 = __this->get_U3CIsEyeCalibrationValidU3Ek__BackingField_35();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_IsEyeCalibrationValid(System.Nullable`1<System.Boolean>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3235));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3236));
	{
		// public bool? IsEyeCalibrationValid { get; private set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3237));
		Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  L_0 = ___value0;
		__this->set_U3CIsEyeCalibrationValidU3Ek__BackingField_35(L_0);
		return;
	}
}
// UnityEngine.Ray Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_LatestEyeGaze()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3238));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3239));
	{
		// public Ray LatestEyeGaze { get; private set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3240));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = __this->get_U3CLatestEyeGazeU3Ek__BackingField_36();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_LatestEyeGaze(UnityEngine.Ray)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3241));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3242));
	{
		// public Ray LatestEyeGaze { get; private set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3243));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = ___value0;
		__this->set_U3CLatestEyeGazeU3Ek__BackingField_36(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_IsEyeTrackingEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3244));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3245));
	{
		// public bool IsEyeTrackingEnabled { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3246));
		bool L_0 = __this->get_U3CIsEyeTrackingEnabledU3Ek__BackingField_37();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_IsEyeTrackingEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_IsEyeTrackingEnabled_m1EF3B714CC1B8177DA68DF4142ABB749DF644859 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_IsEyeTrackingEnabled_m1EF3B714CC1B8177DA68DF4142ABB749DF644859_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_IsEyeTrackingEnabled_m1EF3B714CC1B8177DA68DF4142ABB749DF644859_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3247));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3248));
	{
		// public bool IsEyeTrackingEnabled { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3249));
		bool L_0 = ___value0;
		__this->set_U3CIsEyeTrackingEnabledU3Ek__BackingField_37(L_0);
		return;
	}
}
// System.DateTime Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_Timestamp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  GazeProvider_get_Timestamp_m048CB050D173F1DACAEC0A907B40B44980A0ACA3 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_Timestamp_m048CB050D173F1DACAEC0A907B40B44980A0ACA3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_Timestamp_m048CB050D173F1DACAEC0A907B40B44980A0ACA3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3250));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3251));
	{
		// public DateTime Timestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3252));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = __this->get_U3CTimestampU3Ek__BackingField_38();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_Timestamp(System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3253));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3254));
	{
		// public DateTime Timestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3255));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = ___value0;
		__this->set_U3CTimestampU3Ek__BackingField_38(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::UpdateEyeGaze(Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeDataProvider,UnityEngine.Ray,System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_UpdateEyeGaze_mFF2D86BEF7A27FEB37C4476E685EC6BDAE4DC5DB (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, RuntimeObject* ___provider0, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___eyeRay1, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___timestamp2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_UpdateEyeGaze_mFF2D86BEF7A27FEB37C4476E685EC6BDAE4DC5DB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___provider0), (&___eyeRay1), (&___timestamp2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_UpdateEyeGaze_mFF2D86BEF7A27FEB37C4476E685EC6BDAE4DC5DB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3256));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3257));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3258));
		// LatestEyeGaze = eyeRay;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3259));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = ___eyeRay1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3263));
		GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_inline(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3263));
		// latestEyeTrackingUpdate = DateTime.UtcNow;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3260));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3264));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_1 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3264));
		__this->set_latestEyeTrackingUpdate_33(L_1);
		// Timestamp = timestamp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3261));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_2 = ___timestamp2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3265));
		GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_inline(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3265));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3262));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::UpdateEyeTrackingStatus(Microsoft.MixedReality.Toolkit.Input.IMixedRealityEyeGazeDataProvider,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_UpdateEyeTrackingStatus_m33AEDFD70EDBCA73EBB8B930F21BE9164D5E169E (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, RuntimeObject* ___provider0, bool ___userIsEyeCalibrated1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_UpdateEyeTrackingStatus_m33AEDFD70EDBCA73EBB8B930F21BE9164D5E169E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___provider0), (&___userIsEyeCalibrated1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_UpdateEyeTrackingStatus_m33AEDFD70EDBCA73EBB8B930F21BE9164D5E169E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3266));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3267));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3268));
		// IsEyeCalibrationValid = userIsEyeCalibrated;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3269));
		bool L_0 = ___userIsEyeCalibrated1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3271));
		Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  L_1;
		memset((&L_1), 0, sizeof(L_1));
		Nullable_1__ctor_mD3154885E88D449C69AD9DEA6F9A3EF66A3FE996((&L_1), L_0, /*hidden argument*/Nullable_1__ctor_mD3154885E88D449C69AD9DEA6F9A3EF66A3FE996_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3271));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3272));
		GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_inline(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3272));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3270));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.GazeProvider::get_UseHeadGazeOverride()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3273));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3274));
	{
		// public bool UseHeadGazeOverride { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3275));
		bool L_0 = __this->get_U3CUseHeadGazeOverrideU3Ek__BackingField_39();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::set_UseHeadGazeOverride(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_set_UseHeadGazeOverride_m9019925AC326010CC74E6C469D8C8CB0EA0CEDF0 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_UseHeadGazeOverride_m9019925AC326010CC74E6C469D8C8CB0EA0CEDF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_UseHeadGazeOverride_m9019925AC326010CC74E6C469D8C8CB0EA0CEDF0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3276));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3277));
	{
		// public bool UseHeadGazeOverride { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3278));
		bool L_0 = ___value0;
		__this->set_U3CUseHeadGazeOverrideU3Ek__BackingField_39(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::OverrideHeadGaze(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_OverrideHeadGaze_m68B564FACF09335D3F48BAF22AD01DA459419FA7 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forward1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_OverrideHeadGaze_m68B564FACF09335D3F48BAF22AD01DA459419FA7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___position0), (&___forward1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_OverrideHeadGaze_m68B564FACF09335D3F48BAF22AD01DA459419FA7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3279));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3280));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3281));
		// overrideHeadPosition = position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3282));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___position0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3285));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_1;
		memset((&L_1), 0, sizeof(L_1));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_1), L_0, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3285));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3286));
		GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_inline(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3286));
		// overrideHeadForward = forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3283));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ___forward1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3287));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_3;
		memset((&L_3), 0, sizeof(L_3));
		Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165((&L_3), L_2, /*hidden argument*/Nullable_1__ctor_mEE25CE8D9D7805C77F0C30A71CCF7F2DE1540165_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3287));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3288));
		GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3288));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3284));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider__ctor_mDA5A7EFB135962393638C41C9C8C649052C897A6 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider__ctor_mDA5A7EFB135962393638C41C9C8C649052C897A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider__ctor_mDA5A7EFB135962393638C41C9C8C649052C897A6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3289));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3290));
	{
		// internal bool lockCursorWhenFocusLocked = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3291));
		__this->set_lockCursorWhenFocusLocked_7((bool)1);
		// internal bool setCursorInvisibleWhenFocusLocked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3292));
		__this->set_setCursorInvisibleWhenFocusLocked_8((bool)0);
		// internal float maxGazeCollisionDistance = 10.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3293));
		__this->set_maxGazeCollisionDistance_9((10.0f));
		// internal LayerMask[] raycastLayerMasks = { UnityPhysics.DefaultRaycastLayers };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3294));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = (LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D*)SZArrayNew(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D_il2cpp_TypeInfo_var, (uint32_t)1);
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_1 = L_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3306));
		LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0  L_2 = LayerMask_op_Implicit_m3F256A7D96C66548F5B62C4621B9725301850300(((int32_t)-5), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3306));
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (LayerMask_tBB9173D8B6939D476E67E849280AC9F4EC4D93B0 )L_2);
		__this->set_raycastLayerMasks_10(L_1);
		// internal GazeStabilizer stabilizer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3295));
		__this->set_stabilizer_11((GazeStabilizer_t9463A890267B0D10C2F5DB8EF8B8325867D46C9D *)NULL);
		// internal Transform gazeTransform = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3296));
		__this->set_gazeTransform_12((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		// private float minHeadVelocityThreshold = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3297));
		__this->set_minHeadVelocityThreshold_13((0.5f));
		// private float maxHeadVelocityThreshold = 2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3298));
		__this->set_maxHeadVelocityThreshold_14((2.0f));
		// private InternalGazePointer gazePointer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3299));
		__this->set_gazePointer_16((InternalGazePointer_t9C55C2E9A11F1D5292F6F6DEFA88B1529429E7F8 *)NULL);
		// private float lastHitDistance = 2.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3300));
		__this->set_lastHitDistance_24((2.0f));
		// private bool delayInitialization = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3301));
		__this->set_delayInitialization_25((bool)1);
		// private Vector3 lastHeadPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3302));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3307));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3307));
		__this->set_lastHeadPosition_26(L_3);
		// private DateTime latestEyeTrackingUpdate = DateTime.MinValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3303));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_4 = ((DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields*)il2cpp_codegen_static_fields_for(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var))->get_MinValue_31();
		__this->set_latestEyeTrackingUpdate_33(L_4);
		// public bool? IsEyeCalibrationValid { get; private set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3304));
		Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 * L_5 = __this->get_address_of_U3CIsEyeCalibrationValidU3Ek__BackingField_35();
		il2cpp_codegen_initobj(L_5, sizeof(Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793 ));
		// public Ray LatestEyeGaze { get; private set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3305));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 * L_6 = __this->get_address_of_U3CLatestEyeGazeU3Ek__BackingField_36();
		il2cpp_codegen_initobj(L_6, sizeof(Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2 ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3308));
		InputSystemGlobalHandlerListener__ctor_m772E8CE6C735B09CA4990109CA6700A4C7EA86A3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3308));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider__cctor_m005DDC17D60654C579E7750B37683A35E511AE69 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider__cctor_m005DDC17D60654C579E7750B37683A35E511AE69_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider__cctor_m005DDC17D60654C579E7750B37683A35E511AE69_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3309));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3310));
	{
		// private static readonly ProfilerMarker UpdatePerfMarker = new ProfilerMarker("[MRTK] GazeProvider.Update");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3311));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3316));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_0;
		memset((&L_0), 0, sizeof(L_0));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_0), _stringLiteral3CDDDC9CEC7208594C4621E4DA1E49F15860E772, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3316));
		((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->set_UpdatePerfMarker_29(L_0);
		// private static readonly ProfilerMarker LateUpdatePerfMarker = new ProfilerMarker("[MRTK] GazeProvider.LateUpdate");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3312));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3317));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_1;
		memset((&L_1), 0, sizeof(L_1));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_1), _stringLiteral4FB973369B7441F2D29764DBFC0D07C1BDCACF67, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3317));
		((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->set_LateUpdatePerfMarker_30(L_1);
		// private static readonly ProfilerMarker InitializeGazePointerPerfMarker = new ProfilerMarker("[MRTK] GazeProvider.InitializeGazePointer");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3313));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3318));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_2;
		memset((&L_2), 0, sizeof(L_2));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_2), _stringLiteralA23B9E54B916BE1708864B3FA3665FE53251DE69, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3318));
		((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->set_InitializeGazePointerPerfMarker_31(L_2);
		// private static readonly ProfilerMarker RaiseSourceDetectedPerfMarker = new ProfilerMarker("[MRTK] GazeProvider.RaiseSourceDetected");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3314));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3319));
		ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  L_3;
		memset((&L_3), 0, sizeof(L_3));
		ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline((&L_3), _stringLiteral219D239C952476DB523067D2F3E4F6A2B434B927, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3319));
		((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->set_RaiseSourceDetectedPerfMarker_32(L_3);
		// private static readonly float maxEyeTrackingTimeoutInSeconds = 2.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3315));
		((GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_StaticFields*)il2cpp_codegen_static_fields_for(GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA_il2cpp_TypeInfo_var))->set_maxEyeTrackingTimeoutInSeconds_34((2.0f));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.GazeProvider::<>n__0()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GazeProvider_U3CU3En__0_mCA46D743A130010F8021712DB1909503078BEF63 (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_U3CU3En__0_mCA46D743A130010F8021712DB1909503078BEF63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_U3CU3En__0_mCA46D743A130010F8021712DB1909503078BEF63_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		InputSystemGlobalHandlerListener_Start_m3F7B3567D47950736A655C05B9961B8C6C3EC60B(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker_Auto_m27C8BA4E46F26F3005760C48C4B92EBC284A5D02_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 43));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 44));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 45));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 46));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_1;
		memset((&L_1), 0, sizeof(L_1));
		AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline((&L_1), (intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 48));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 47));
		AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F  L_2 = V_0;
		return L_2;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HitPosition_m3116F3B11002C3157A0D689F8DDDC0542AF87CC1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2797));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2798));
	{
		// public Vector3 HitPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2799));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CHitPositionU3Ek__BackingField_20();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DAMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_get_IsFocusLocked_m49E408F9CB6720063ECB85AB05A9A371A64C00DA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28043));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28044));
	{
		// public bool IsFocusLocked { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28045));
		bool L_0 = __this->get_U3CIsFocusLockedU3Ek__BackingField_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_inline (BaseGenericInputSource_t184ACC32FFC5A8FDB3B7C593A1F8E6A55A6BB899 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseGenericInputSource_set_SourceType_m256FBE379BE91010CD39ADA6530EA189670B36A1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27380));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27381));
	{
		// public InputSourceType SourceType { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27382));
		int32_t L_0 = ___value0;
		__this->set_U3CSourceTypeU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope_Dispose_m3663B79F5E62F2FA39FAAB5956A5EA141BA98AF2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 56));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 57));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 58));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 59));
		intptr_t L_0 = __this->get_m_Ptr_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		ProfilerMarker_Internal_End_mE25FE55A23DF111614CE890359972D96A65B499A((intptr_t)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 61));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 60));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_GazeCursorPrefab_mB8F9F6444EE1E7529D69DBB3588A6DD0BCA093B0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2775));
	{
		// public GameObject GazeCursorPrefab { internal get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2776));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CGazeCursorPrefabU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_set_IsTargetPositionLockedOnFocusLock_m561CB3D96B8FB62EC50D254720F1E99CF388C9D5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28052));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28053));
	{
		// public bool IsTargetPositionLockedOnFocusLock { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28054));
		bool L_0 = ___value0;
		__this->set_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_9(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26603));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26604));
	{
		// public IMixedRealityInputSource InputSource { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26605));
		RuntimeObject* L_0 = __this->get_U3CInputSourceU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26614));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26615));
	{
		// public MixedRealityInputAction MixedRealityInputAction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26616));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_U3CMixedRealityInputActionU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_inline (InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_get_Handedness_m7D444F01522068299AD0BDF1A7552FC6EAA3A0C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26734));
	{
		// public Handedness Handedness { get; private set; } = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26735));
		uint8_t L_0 = __this->get_U3CHandednessU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_inline (ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * __this, String_t* ___name0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2AMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___name0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ProfilerMarker__ctor_mF9F9BDCB1E4618F9533D83D47EAD7325A32FDC2A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 25));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 26));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 27));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 28));
		String_t* L_0 = ___name0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		intptr_t L_1 = ProfilerMarker_Internal_Create_m92F2A7651D4BF3F3D0CB62078DD79B71839FA370(L_0, (uint16_t)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 30));
		__this->set_m_Ptr_0((intptr_t)L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 29));
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4_inline (BaseCoreSystem_t86E92055CF287B1D86F50C81455BDFA894B12E41 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseCoreSystem_set_Registrar_mB5EC17AD1FB7037C6E7963FACFD9FC7D3AE2E3F4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3461));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3462));
	{
		// protected IMixedRealityServiceRegistrar Registrar { get; set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 3463));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CRegistrarU3Ek__BackingField_20(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Length_mCB915D9BFD9B8D23D1C9A68B781EDEC6BB591A45_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22040));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22041));
	{
		// public float Length { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22042));
		float L_0 = __this->get_U3CLengthU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSystemProfile_get_FocusQueryBufferSize_mC19C7694A8F9EE68E50019978AF84C16CEB15BF0_inline (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSystemProfile_get_FocusQueryBufferSize_mC19C7694A8F9EE68E50019978AF84C16CEB15BF0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSystemProfile_get_FocusQueryBufferSize_mC19C7694A8F9EE68E50019978AF84C16CEB15BF0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26183));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26184));
	{
		// public int FocusQueryBufferSize => focusQueryBufferSize;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26185));
		int32_t L_0 = __this->get_focusQueryBufferSize_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityInputSystemProfile_get_ShouldUseGraphicsRaycast_m31028570E4260FDC2C3C83C3F45ABDC8D8A30B9F_inline (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSystemProfile_get_ShouldUseGraphicsRaycast_m31028570E4260FDC2C3C83C3F45ABDC8D8A30B9FMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSystemProfile_get_ShouldUseGraphicsRaycast_m31028570E4260FDC2C3C83C3F45ABDC8D8A30B9F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26186));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26187));
	{
		// public bool ShouldUseGraphicsRaycast => shouldUseGraphicsRaycast;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26188));
		bool L_0 = __this->get_shouldUseGraphicsRaycast_9();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDACMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_PrimaryPointer_mF17B79EE5ECFA4A7AB05EAE0709A56DC21F9BDAC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 344));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 345));
	{
		// get => primaryPointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 346));
		RuntimeObject* L_0 = __this->get_primaryPointer_34();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_inline (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BCMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_PointingExtent_m2B8713A07025BFC6931DB32D0E44B200220CE7BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26329));
	{
		// public float PointingExtent => pointingExtent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26330));
		float L_0 = __this->get_pointingExtent_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_inline (MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerProfile_get_PointingRaycastLayerMasks_mDD40189EC2064861D08AA43EF02979F290B34E70_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26331));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26332));
	{
		// public LayerMask[] PointingRaycastLayerMasks => pointingRaycastLayerMasks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26333));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_pointingRaycastLayerMasks_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Type_t * SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CD_inline (SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SystemType_get_Type_m70CD613DEBD1A8545E792EF73F88358CC375A1CD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 10200));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 10201));
	{
		// get => type;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 10202));
		Type_t * L_0 = __this->get_type_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * MixedRealityToolkit_get_Instance_m02A5ECDA0A8291AA2EDDC518554EF3FAA470DBAD_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityToolkit_get_Instance_m02A5ECDA0A8291AA2EDDC518554EF3FAA470DBADMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityToolkit_get_Instance_m02A5ECDA0A8291AA2EDDC518554EF3FAA470DBAD_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 5237));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 5238));
	{
		// public static MixedRealityToolkit Instance => activeInstance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 5239));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_il2cpp_TypeInfo_var);
		MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * L_0 = ((MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47_il2cpp_TypeInfo_var))->get_activeInstance_13();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityToolkit_get_IsProfileSwitching_m44955CADC688AC70630E3754EC62F872FE497BBE_inline (MixedRealityToolkit_tDC525C9CAB7842D94B1F1CF572AF6859FED4AD47 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityToolkit_get_IsProfileSwitching_m44955CADC688AC70630E3754EC62F872FE497BBEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityToolkit_get_IsProfileSwitching_m44955CADC688AC70630E3754EC62F872FE497BBE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 4577));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 4578));
	{
		// public bool IsProfileSwitching { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 4579));
		bool L_0 = __this->get_U3CIsProfileSwitchingU3Ek__BackingField_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Object_mD26964A39C9AFFF7726B3F1963ABFF2638E80067_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21984));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21985));
	{
		// public GameObject Object { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21986));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CObjectU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Origin_m89F0776340554938DA4A6F12DE2ECD858B6CDA32_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22022));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22023));
	{
		// public Vector3 Origin { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22024));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3COriginU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_set_NumFarPointersActive_mB5641DA1D63A6CBE6BC0FB2B4FB8BEA2FDF32E54_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 341));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 342));
	{
		// public int NumFarPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 343));
		int32_t L_0 = ___value0;
		__this->set_U3CNumFarPointersActiveU3Ek__BackingField_33(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_set_NumNearPointersActive_m2A8C2482D1A418C7CC7FFCCF35E9E69BF2ABA650_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 335));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 336));
	{
		// public int NumNearPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 337));
		int32_t L_0 = ___value0;
		__this->set_U3CNumNearPointersActiveU3Ek__BackingField_32(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_NumNearPointersActive_m9BD69F0C108D21340B82E020E30217319C25D8C2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 332));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 333));
	{
		// public int NumNearPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 334));
		int32_t L_0 = __this->get_U3CNumNearPointersActiveU3Ek__BackingField_32();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_NumFarPointersActive_mAAEED4E334D3EEF503C1C31C91A83C774247D169_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 339));
	{
		// public int NumFarPointersActive { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 340));
		int32_t L_0 = __this->get_U3CNumFarPointersActiveU3Ek__BackingField_33();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_UIRaycastCamera_m691D33AB6465E043B267CDCAECA4964D3F881D86_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 402));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 403));
	{
		// public Camera UIRaycastCamera => uiRaycastCamera;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 404));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_0 = __this->get_uiRaycastCamera_38();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317BMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Direction_m3215B863CDBA199001CD5526EE68F13DD51B317B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22034));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22035));
	{
		// public Vector3 Direction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22036));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CDirectionU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerEventData_set_position_m9BDCBF26C28C01F781ACB8FC87448CB4ADD0BBD5_inline (PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerEventData_set_position_m9BDCBF26C28C01F781ACB8FC87448CB4ADD0BBD5Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerEventData_set_position_m9BDCBF26C28C01F781ACB8FC87448CB4ADD0BBD5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_UI + 19987));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_UI + 19988));
	{
		// public Vector2 position { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_UI + 19989));
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CpositionU3Ek__BackingField_12(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerEventData_set_pointerCurrentRaycast_mA63CA749AC5410AF7D28F4C924BA3372E12F61FC_inline (PointerEventData_tC18994283B7753E430E316A62D9E45BA6D644C63 * __this, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerEventData_set_pointerCurrentRaycast_mA63CA749AC5410AF7D28F4C924BA3372E12F61FCMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerEventData_set_pointerCurrentRaycast_mA63CA749AC5410AF7D28F4C924BA3372E12F61FC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_UI + 19963));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_UI + 19964));
	{
		// public RaycastResult pointerCurrentRaycast { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_UI + 19965));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_0 = ___value0;
		__this->set_U3CpointerCurrentRaycastU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_PreviousPointerTarget_mFF57424198D238DA6E4F31B29CB10D290BB4A0C0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2102));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2103));
	{
		// public GameObject PreviousPointerTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2104));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CPreviousPointerTargetU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_inline (FocusProvider_tE62A5FD2D6E816B0BE0FAF7996D5488345E7DDE3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusProvider_get_GazePointerBehavior_m7F08EDD32273AF4C7F1552C6CD3769233F5966C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1929));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1930));
	{
		// public PointerBehavior GazePointerBehavior { get; set; } = PointerBehavior.Default;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 1931));
		int32_t L_0 = __this->get_U3CGazePointerBehaviorU3Ek__BackingField_67();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_set_PreviousPointerTarget_m7DF7CC6C3865243EB48E0521721C54752140B6B0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2106));
	{
		// public GameObject PreviousPointerTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2107));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_U3CPreviousPointerTargetU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_Object_m44CA7CB0C35B9CD8194EC2C580AF25E430E77245_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21987));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21988));
	{
		// public GameObject Object { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21989));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_U3CObjectU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_LastRaycastHit_mC83ADE39B36EFF37B4DD2CB65C307A2668CD6C6A_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_LastRaycastHit_mC83ADE39B36EFF37B4DD2CB65C307A2668CD6C6AMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_LastRaycastHit_mC83ADE39B36EFF37B4DD2CB65C307A2668CD6C6A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21993));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21994));
	{
		// public MixedRealityRaycastHit LastRaycastHit { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21995));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_0 = ___value0;
		__this->set_U3CLastRaycastHitU3Ek__BackingField_4(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_LastGraphicsRaycastResult_m13974D81605D43AF8D72A5A3B916F4FA937FD408_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_LastGraphicsRaycastResult_m13974D81605D43AF8D72A5A3B916F4FA937FD408Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_LastGraphicsRaycastResult_m13974D81605D43AF8D72A5A3B916F4FA937FD408_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21999));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22000));
	{
		// public RaycastResult LastGraphicsRaycastResult { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22001));
		RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  L_0 = ___value0;
		__this->set_U3CLastGraphicsRaycastResultU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2AMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_set_RayStepIndex_m230127F4CAF3DF65FB4D2F3F6EF5E83D9DD72C2A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2111));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2112));
	{
		// public int RayStepIndex { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2113));
		int32_t L_0 = ___value0;
		__this->set_U3CRayStepIndexU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_inline (PointerData_t5A6C4D680CE92B5555C7D18B01BB93180509ADBE * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_set_StartPoint_m17013EC97D9AD54A69359222795D54D624CC1F04_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2085));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2086));
	{
		// public Vector3 StartPoint { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2087));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CStartPointU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_RayDistance_mC22AE855D9E30227247758EB97800E3FC0633250_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21969));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21970));
	{
		// public float RayDistance { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21971));
		float L_0 = ___value0;
		__this->set_U3CRayDistanceU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_Point_m888494694F505D7C55E51FA28998C06F3CE8E49D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21975));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21976));
	{
		// public Vector3 Point { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21977));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPointU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_Normal_mC08CDE8B2FEA6C2577A693DE5762E3109B9D5E95_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21981));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21982));
	{
		// public Vector3 Normal { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21983));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CNormalU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  RayStep_get_Terminus_m8E84C6DCAB15719419C6F08450DDBDCD32EB1FCD_inline (RayStep_t8941E7B4377DF525FFDB64F2734B74B5CEBA1C1B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (RayStep_get_Terminus_m8E84C6DCAB15719419C6F08450DDBDCD32EB1FCDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, RayStep_get_Terminus_m8E84C6DCAB15719419C6F08450DDBDCD32EB1FCD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22028));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22029));
	{
		// public Vector3 Terminus { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22030));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CTerminusU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21973));
	{
		// public Vector3 Point { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21974));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPointU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9CMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_PointLocalSpace_m1321B5131F418DF103679F4391DEEEE461104A9C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22005));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22006));
	{
		// public Vector3 PointLocalSpace { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22007));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPointLocalSpaceU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Normal_m615EFA3AF60D369F17D0E22FFABC9D02EA392911_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21978));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21979));
	{
		// public Vector3 Normal { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21980));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CNormalU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FFMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_set_NormalLocalSpace_mF896A923485F28DA5B645E232E446F1BBE0D17FF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22011));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22012));
	{
		// public Vector3 NormalLocalSpace { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22013));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CNormalLocalSpaceU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_PointLocalSpace_mCEA19896ED60C74E54598B645DC220606F54CA03_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22002));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22003));
	{
		// public Vector3 PointLocalSpace { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22004));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPointLocalSpaceU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_NormalLocalSpace_m1BF251418AD85E4365E5EBCC460C0E88AFD6B9B6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22008));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22009));
	{
		// public Vector3 NormalLocalSpace { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 22010));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CNormalLocalSpaceU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_set_PrioritizedLayerMasksOverride_mD04F807B3A411347AA897ACD2553D9388B3F0482_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28070));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28071));
	{
		// public LayerMask[] PrioritizedLayerMasksOverride { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28072));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = ___value0;
		__this->set_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_LatestEyeGaze_m0312D2880DF07B812507685CA6E6A463813A3BB0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3238));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3239));
	{
		// public Ray LatestEyeGaze { get; private set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3240));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = __this->get_U3CLatestEyeGazeU3Ek__BackingField_36();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_UseHeadGazeOverride_mCC2D10C4810DBE60EFA2CE00B15CA2E1DB719DAE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3273));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3274));
	{
		// public bool UseHeadGazeOverride { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3275));
		bool L_0 = __this->get_U3CUseHeadGazeOverrideU3Ek__BackingField_39();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FBMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_overrideHeadPosition_mE0861BCF4515E95C082A65EA4393777009B2A3FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2841));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2842));
	{
		// public Vector3? overrideHeadPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2843));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = __this->get_U3CoverrideHeadPositionU3Ek__BackingField_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_overrideHeadForward_m3A75A6EA558BB7D4EA3C6FD222BFFC81FDDE057D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2847));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2848));
	{
		// public Vector3? overrideHeadForward { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2849));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = __this->get_U3CoverrideHeadForwardU3Ek__BackingField_28();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* GenericPointer_get_Rays_m1E54223BF359DE3DE81C1E277A74C34309F88C9D_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_get_Rays_m1E54223BF359DE3DE81C1E277A74C34309F88C9DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_get_Rays_m1E54223BF359DE3DE81C1E277A74C34309F88C9D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28061));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28062));
	{
		// public RayStep[] Rays { get; protected set; } = { new RayStep(Vector3.zero, Vector3.forward) };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28063));
		RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* L_0 = __this->get_U3CRaysU3Ek__BackingField_11();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* GenericPointer_get_PrioritizedLayerMasksOverride_mD429394C41A6B8BC90262A853628C8910B59AB52_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_get_PrioritizedLayerMasksOverride_mD429394C41A6B8BC90262A853628C8910B59AB52Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_get_PrioritizedLayerMasksOverride_mD429394C41A6B8BC90262A853628C8910B59AB52_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28067));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28068));
	{
		// public LayerMask[] PrioritizedLayerMasksOverride { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28069));
		LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* L_0 = __this->get_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_12();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25999));
	{
		// public static MixedRealityInputAction None { get; } = new MixedRealityInputAction(0, "None");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26000));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var))->get_U3CNoneU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_BaseCursor_m12C546412F2E84C09FEDD68427552AD2C775EC5C_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_set_BaseCursor_m12C546412F2E84C09FEDD68427552AD2C775EC5CMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_set_BaseCursor_m12C546412F2E84C09FEDD68427552AD2C775EC5C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28005));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28006));
	{
		// public IMixedRealityCursor BaseCursor { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28007));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CBaseCursorU3Ek__BackingField_4(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_IsActive_m5B41E42C3E262AE6F0F8A562A065EA6A644A315D_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_set_IsActive_m5B41E42C3E262AE6F0F8A562A065EA6A644A315DMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_set_IsActive_m5B41E42C3E262AE6F0F8A562A065EA6A644A315D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28040));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28041));
	{
		// public bool IsActive { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28042));
		bool L_0 = ___value0;
		__this->set_U3CIsActiveU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GenericPointer_set_IsFocusLocked_m55F61AEAAFC3650E3B26C6B19CFFEA34FC03888E_inline (GenericPointer_t85602E2D7FBDBBEC1794D5EB187630DA3A303B3A * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GenericPointer_set_IsFocusLocked_m55F61AEAAFC3650E3B26C6B19CFFEA34FC03888EMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GenericPointer_set_IsFocusLocked_m55F61AEAAFC3650E3B26C6B19CFFEA34FC03888E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28046));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28047));
	{
		// public bool IsFocusLocked { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 28048));
		bool L_0 = ___value0;
		__this->set_U3CIsFocusLockedU3Ek__BackingField_8(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_inline (SpeechEventData_tB83E2DB708BB31836C57CA443EAA740E4E52B0E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FFMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SpeechEventData_get_Command_m31EAD26727B7963D222C4AD72B9D9521C414F3FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26875));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26876));
	{
		// public SpeechCommands Command { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26877));
		SpeechCommands_tF37A6AFE4D69C10D0E30BC190E5C97A64354878B  L_0 = __this->get_U3CCommandU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HeadVelocity_mC22A7D69433E54827B5F06E07CEB2B1DFDE8B949_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2825));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2826));
	{
		// public Vector3 HeadVelocity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2827));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CHeadVelocityU3Ek__BackingField_22();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7FMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HeadVelocity_mA6D07FD9E4F2F8593427C67D3D7292D88400EC7F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2828));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2829));
	{
		// public Vector3 HeadVelocity { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2830));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHeadVelocityU3Ek__BackingField_22(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_HeadMovementDirection_m99AD34FF0971241B93C40BD1129E6418BE8D22B4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2831));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2832));
	{
		// public Vector3 HeadMovementDirection { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2833));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CHeadMovementDirectionU3Ek__BackingField_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HeadMovementDirection_m6203D7A974F9056A77EDA1542888DA827C52C995_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2834));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2835));
	{
		// public Vector3 HeadMovementDirection { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2836));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHeadMovementDirectionU3Ek__BackingField_23(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40CMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HitInfo_m10E8DD9C2DBA0BF5120B560639B84884A168D40C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2794));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2795));
	{
		// public MixedRealityRaycastHit HitInfo { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2796));
		MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  L_0 = ___value0;
		__this->set_U3CHitInfoU3Ek__BackingField_19(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DDMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_GazeTarget_m036123777431DA286A1A9E0606ADFD9DA6B333DD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2788));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2789));
	{
		// public GameObject GazeTarget { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2790));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_U3CGazeTargetU3Ek__BackingField_18(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HitPosition_m765155C057BEA7145164EA6CF1539C581A51D8F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2800));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2801));
	{
		// public Vector3 HitPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2802));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHitPositionU3Ek__BackingField_20(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_HitNormal_m7E07731601823ED4CD502DBDD2478838D8041F23_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2806));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2807));
	{
		// public Vector3 HitNormal { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2808));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CHitNormalU3Ek__BackingField_21(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_get_IsEyeTrackingEnabled_m46CE5C127D2817F8D6E16C663ED8469E48193CE6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3244));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3245));
	{
		// public bool IsEyeTrackingEnabled { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3246));
		bool L_0 = __this->get_U3CIsEyeTrackingEnabledU3Ek__BackingField_37();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DBMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_LatestEyeGaze_m4FEE7BBC64FC65F12338635DB03689FEAAAEC7DB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3241));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3242));
	{
		// public Ray LatestEyeGaze { get; private set; } = default(Ray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3243));
		Ray_tE2163D4CB3E6B267E29F8ABE41684490E4A614B2  L_0 = ___value0;
		__this->set_U3CLatestEyeGazeU3Ek__BackingField_36(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_Timestamp_m290FAB07621633A9D3E455A586ADF8BD553FD911_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3253));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3254));
	{
		// public DateTime Timestamp { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3255));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_0 = ___value0;
		__this->set_U3CTimestampU3Ek__BackingField_38(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_IsEyeCalibrationValid_mB7BBA345022A13BE145F2EA2613C540C9FC148F7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3235));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3236));
	{
		// public bool? IsEyeCalibrationValid { get; private set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 3237));
		Nullable_1_t9E6A67BECE376F0623B5C857F5674A0311C41793  L_0 = ___value0;
		__this->set_U3CIsEyeCalibrationValidU3Ek__BackingField_35(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_overrideHeadPosition_m2B30C4EAAE22E9FE622F2516C193095519802445_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2844));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2845));
	{
		// public Vector3? overrideHeadPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2846));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = ___value0;
		__this->set_U3CoverrideHeadPositionU3Ek__BackingField_27(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_inline (GazeProvider_t967CBFAB23AFE0A2091EAF5D5A2591E2B5178DFA * __this, Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, GazeProvider_set_overrideHeadForward_m6DF1772A59DE245E34E880CCD92B19A01163B2C8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2850));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2851));
	{
		// public Vector3? overrideHeadForward { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSystem + 2852));
		Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203  L_0 = ___value0;
		__this->set_U3CoverrideHeadForwardU3Ek__BackingField_28(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_gshared_inline (Enumerator_t16164AEE5BCAD6A8A04C21F32E9D949BE1CA0133 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5FMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m1499866DFEFE1948C928A86AC372B4F9E04D1A5F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get__current_3();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * Enumerator_get_Current_m5785B4386ABCEABE4C63734D2F040B4F4B32F5FE_gshared_inline (Enumerator_tBCBFC20244034419E1A2440EE74529AF4BF6B420 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m5785B4386ABCEABE4C63734D2F040B4F4B32F5FEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m5785B4386ABCEABE4C63734D2F040B4F4B32F5FE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_currentValue_3();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA  Enumerator_get_Current_mAF80A40C735286660705B10E845B3AAC25909E8B_gshared_inline (Enumerator_t436FDE5093367A803EC2F4960B2D8FD4498628DE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_mAF80A40C735286660705B10E845B3AAC25909E8BMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_mAF80A40C735286660705B10E845B3AAC25909E8B_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA  L_0 = (KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA )__this->get_current_3();
		return (KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * KeyValuePair_2_get_Value_m29DE50BBCB38063E44E72BF1C0F4488DEEF6DACE_gshared_inline (KeyValuePair_2_t471E2DF36C9849B1488F87CC6C0EA0F6B6224DBA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_m29DE50BBCB38063E44E72BF1C0F4488DEEF6DACEMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_m29DE50BBCB38063E44E72BF1C0F4488DEEF6DACE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		RuntimeObject * L_0 = (RuntimeObject *)__this->get_value_1();
		return (RuntimeObject *)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t HashSet_1_get_Count_m3199849B2D9664DC8C8F48BC9962FAE119ED2BCA_gshared_inline (HashSet_1_t297CD7F944846107B388993164FCD9E317A338A3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HashSet_1_get_Count_m3199849B2D9664DC8C8F48BC9962FAE119ED2BCAMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HashSet_1_get_Count_m3199849B2D9664DC8C8F48BC9962FAE119ED2BCA_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__count_9();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_2 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)__this->get__items_1();
		int32_t L_3 = ___index0;
		RuntimeObject * L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)L_2, (int32_t)L_3);
		return (RuntimeObject *)L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint32_t Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_mDDB6F9CBFDC517C3DC29A33345F0DE403DF18D51_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		uint32_t L_0 = (uint32_t)__this->get_value_0();
		return (uint32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_gshared_inline (Nullable_1_tFE9ECE4D26C4B51758A06CC7BF27647E744F4043 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4ACMicrosoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m7857E0707BE956584C4D0E84C611396208A4C4AC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_gshared_inline (Nullable_1_t75BFB9848B0C0C6930A6973335B59621D36E6203 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m1811EC8A022D2B95FE8053537377A554AE61CD61_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_inline (AutoScope_tFCF9F27FF85DCD3A3880FAADCB520F29B1543A7F * __this, intptr_t ___markerPtr0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320Microsoft_MixedReality_Toolkit_Services_InputSystem_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___markerPtr0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, AutoScope__ctor_mDB99051F3C5C2BFFF71574AC515AB523F04E3320_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 49));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 50));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 51));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 52));
		intptr_t L_0 = ___markerPtr0;
		__this->set_m_Ptr_0((intptr_t)L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 53));
		intptr_t L_1 = ___markerPtr0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		ProfilerMarker_Internal_Begin_m79272E72708A53AFDEEEB81CF66C7D62920AC5B5((intptr_t)L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 55));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsUnityEngine_CoreModule + 54));
		return;
	}
}
