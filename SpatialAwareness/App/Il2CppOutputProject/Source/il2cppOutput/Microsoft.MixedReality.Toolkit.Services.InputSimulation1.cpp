#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct GenericVirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct GenericVirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct GenericInterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct GenericInterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};

// Microsoft.MixedReality.Toolkit.Input.BaseController
struct BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B;
// Microsoft.MixedReality.Toolkit.Input.BaseHand
struct BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B;
// Microsoft.MixedReality.Toolkit.Input.IHandRay
struct IHandRay_t1F8D73C323908E71C7564121DF54DE6FA0153508;
// Microsoft.MixedReality.Toolkit.Input.IInputSimulationService
struct IInputSimulationService_t9AF3035C6487685E30A3E3ADB5E2D70DC2C3B443;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityControllerVisualizer
struct IMixedRealityControllerVisualizer_tF11B01C18D3E7D9443AFA3B890520D0F196716C5;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition
struct IMixedRealityInputSourceDefinition_t7A2C6C2A2995A850968B7B0DEB3D269488A0EA91;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem
struct IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile
struct MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile
struct MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[]
struct MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile
struct MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile
struct MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile
struct MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile
struct MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[]
struct MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile
struct MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping
struct MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[]
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile
struct MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E;
// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile
struct MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD;
// Microsoft.MixedReality.Toolkit.Input.MouseDelta
struct MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A;
// Microsoft.MixedReality.Toolkit.Input.MouseRotationProvider
struct MouseRotationProvider_t3132C21B54079D880B1797DE2579D06B8A205EF9;
// Microsoft.MixedReality.Toolkit.Input.SimpleHandDefinition
struct SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F;
// Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider
struct SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C;
// Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState
struct SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF;
// Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand
struct SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB;
// Microsoft.MixedReality.Toolkit.Input.SimulatedHand
struct SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E;
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandData
struct SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1;
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator
struct HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955;
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider
struct SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3;
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandState
struct SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911;
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils
struct SimulatedHandUtils_t112B94E0F721072169327F6020348A7BB791A465;
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionController
struct SimulatedMotionController_t34E4C80551264F751F75755C2C93253B427ECB10;
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData
struct SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE;
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater
struct MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D;
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider
struct SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C;
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState
struct SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3;
// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerDefinition
struct WindowsMixedRealityControllerDefinition_tE4B1E571DF880E868424EE9B242D0DAF55B5750D;
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose
struct ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422;
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[]
struct MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD;
// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432;
// Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint[]
struct TrackedHandJointU5BU5D_t73F89CDA2E3DB99038427148F5D09567B51E2A67;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2/Entry<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>[]
struct EntryU5BU5D_tDCE92978401B6E88C4A837958998A6DD61C63CD2;
// System.Collections.Generic.Dictionary`2/KeyCollection<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct KeyCollection_t9B3F4312810F6E987754407200C69F9F8620465A;
// System.Collections.Generic.Dictionary`2/ValueCollection<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct ValueCollection_tC935A0CB8F2162DB8392B9187AB1302A3041AC0B;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId,Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose>
struct Dictionary_2_t0F9A9396259D09CFAA8130D2B1A43DE5434AD5D0;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86;
// System.Collections.Generic.Dictionary`2<System.Int32,System.Tuple`2<Microsoft.MixedReality.Toolkit.Input.KeyBinding/KeyType,System.Int32>>
struct Dictionary_2_t851109C8EC3B462C09C470AA73AA5F6A82D61B64;
// System.Collections.Generic.Dictionary`2<System.Int32Enum,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct Dictionary_2_t4594E9EA67CB7172740DF4116774A3B1432A9E97;
// System.Collections.Generic.Dictionary`2<System.Tuple`2<Microsoft.MixedReality.Toolkit.Input.KeyBinding/KeyType,System.Int32>,System.Int32>
struct Dictionary_2_tCCE7E3DED5BB9D85ABD0F224C25BBC56DC6FB0CB;
// System.Collections.Generic.IEnumerable`1<System.Int32>
struct IEnumerable_1_t1AE8F03F101BA7578AF3A97EF1EBE8DB5FF31215;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint>
struct IEqualityComparer_1_t223CDEA89E79F60CB0C83D846FA30D2BD466ADFA;
// System.Collections.Generic.List`1<System.Globalization.CultureInfo>
struct List_1_t74F59DD36FAE0CFB087612565C42CAD359647832;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation[];
IL2CPP_EXTERN_C RuntimeClass* ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IInputSimulationService_t9AF3035C6487685E30A3E3ADB5E2D70DC2C3B443_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SimulatedArticulatedHandPoses_tA18B3C296C15D034C4A1BB4060ACAEB4E2730268_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WindowsMixedRealityControllerDefinition_tE4B1E571DF880E868424EE9B242D0DAF55B5750D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeField* U3CPrivateImplementationDetailsU3E_t5D7196C8D3A7E05A50169A365F5A7B3B92600D14____6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0_FieldInfo_var;
IL2CPP_EXTERN_C const RuntimeMethod* ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_IsPositionAvailable_m3E2EB0D15AAADABB3D967535353AD53539677046_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_get_IsRotationAvailable_m59D5E1DD267C83A3DB834096028590522C934868_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_set_IsPositionAvailable_m76D7FB5DBF945174A9D9B7A19123783742C6B57F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseController_set_IsRotationAvailable_m5259A799822AFD94A2BEE4B47F887A03158FE308_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* CoreServices_GetInputSystemDataProvider_TisIInputSimulationService_t9AF3035C6487685E30A3E3ADB5E2D70DC2C3B443_mF9990528E32A1A152A1F8A9635640B72710D219A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_mF5D352A2DB17E5E4545D622A66744A4697ACC3D2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_ContainsKey_m9123BEB1C67E91B9D1C87834EED0E4805EAB9389_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_TryGetValue_mEB4E22F5D5C93FBC06285B7EA9EDC0B6B73CF31D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_mD52EC03DD022577E1A73259E748910906383DA4E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Item_mAA87FA69922BAF6733C05E34A765031668FCABA6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_set_Item_mA73F452CC26A09DD780D50EAE46E8684633BA15B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerable_Take_TisInt32_t585191389E07734F19F3156FF88FB3EF4800D102_mCBED6C7F74DCC17FA9C923D11B6801F52FEEB61B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityGesturesProfile_get_UseRailsNavigation_mEAE6D30B9C69C0E5EA8115068FDA600F87CE02C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_HandGestureAnimationSpeed_m159042CFADEA1948914A6AD9D52193E9179B0AF5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_HoldStartDuration_mBC1A3E5C22D4854356392379561E246374610007_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_MotionControllerGrabKey_mAA8B5087F8597D4A60166E3C7C93EFFA2F7C23EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_MotionControllerMenuKey_m82072D42ED0258F1D0AF0861F4253EBC3B0AA969_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_MotionControllerTriggerKey_m32AC0FAA8689395388B5F53DE37E4FA437E76D98_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_NavigationStartThreshold_m30BD08DA409E73AE42567F6420EB5E92DC7981E4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedControllerState_ResetPosition_m89D5414664C096C46D93063EF65F383A0E35A32A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedControllerState_get_Handedness_mDE7DBA6176CAA7C2EEEA37339C8C71B1FED34A99_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_EnsureProfileSettings_m5FC39BD038B64363C40173D9E60B1BC1606C7A3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryCancelHold_m1F67089B7A138E396206FE8E7E0DAEECCE14BFBC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryCancelManipulation_m774C717F6300ED032BD87747966E2EBFBE9F3159_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryCancelNavigation_m7F78258B782D49B12470728A9F18ECFE2C0138A5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryCompleteHold_mA3B5BAB738C6425798C608310D7D59D6B6FCA1AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryCompleteManipulation_m7DD88EA40E108EB197BF22BD11460BF7A3DFBB18_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryCompleteNavigation_m725C944777267419341F15E256472663CBCE6AC8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryCompleteSelect_m39126D98BA2E83C742CDA9EAEA81EB5128B541AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryStartHold_m72CBFF5CAEDDC55C9E865745A5DE4C34C1B2E234_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryStartManipulation_m0B58E7807CC8E31CE5F4817A99CC358085866A3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_TryStartNavigation_m2F5F675D13ACB7225B7672755846459058BDF575_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_UpdateHandJoints_mBAA8CF99DF42CD44D878045ADD64E250D15AB7F0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_UpdateInteractions_m96F24F8AEC7B7EC9C96EAF20378C4BBF49B26DF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_UpdateManipulation_m7D7C54E9B0364BA9862D4326D9606FB6419CCBC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_UpdateNavigation_mD504939EDF859CD568D6127F467D193ADF3ADFC0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand__ctor_m93581EB80551349B8F9FD7C292CBDBFA5243F97A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedGestureHand_get_SimulationMode_m99445CCC75EBA635CDD01A929947DA38792BB2AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_ResetInput_m4638488528C4E170C8A49E9E8A9948FE810525E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_SelectGesture_m3EED0D8A0B38C138C8C872805E35ACC67F70F37F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_SimulateInput_m80961577E768F5D1F11FCC2766BDC61E3599803F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_SimulateUserInput_mB17706A3FAE9D7F7984FDA2510AE281167D3FD63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_ToggleGesture_m9F8B8AE3A881E53C67ABC7B4B8187E45AEFDB0BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_UpdateHandData_m46FBCD8C5B45CEF7FEECDC9A92A5DE61AD4349CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider__ctor_m5BDEF9D66F97A11A0B6CA2ADB5322B3DC9845BD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_get_HandStateGaze_mE0E34E6BE63DF76CACDD9B750A2DF3F83396B31B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_get_HandStateLeft_m30D7325487F11685955EFF81B6E33FE3637D964B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_get_HandStateRight_m715E5E32B06CBEF4437ADAEB327607A29666B0FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_set_HandStateGaze_mE52A35C705A75621E2392A1EA04E1C7A42350939_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_set_HandStateLeft_m2A7E60463DC915015B122CC7B6A41B4BAF7BBD67_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandDataProvider_set_HandStateRight_mB55A190DC7D6208CF90B4B85C377E0BB3AAC1CF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandData_Copy_m41ABA1DF6D6E58F82E3DF8D876F210F2D75BCC52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandData__ctor_mC0F48E57A15AA83EB147D0682EAFD4B9A13A74E3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandData_get_IsTracked_m44B1246872F6BE0B0A308EB2CC5259B6DFCF7FBF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_ResetGesture_m768808568035F9E15EBC17DF83D75F62A6069EBC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_ResetRotation_mE2ABD5DD255C825FF53722C432991E01D2B04B6F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_get_Gesture_mD92DD18C9290E8F89105E0539065E44CA74AFFFF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandUtils_CalculateJointRotations_mA0A1808305AB3D8B589A08E42F9155739D9221AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandUtils_GetPalmForwardVector_m9E069A581F41648ADB1D947EDBB726BD867602F4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandUtils_GetPalmRightVector_m9C646FB51F2C94823DC3EEE26383B22A88EA4301_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandUtils_GetPalmUpVector_mB1852A38F5919EC805FE801DB47DC6DA1E64CCD0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHandUtils__ctor_m8FE7B6098201AE8BB6E8337DCDAAA7663D64F06F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHand_TryGetJoint_m14B9D4449933B89DB099541E2901B4017D613B64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHand_UpdateState_m76167DB74444C36B375258174DBB71C74806C7E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedHand__ctor_mB9443EF6803AAEA223CA3838E9F806B124FBC221_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerButtonState_op_Equality_m410306F630C7440A6D448BB464A7A146EE779E29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerButtonState_op_Inequality_m4E7E2C84B13D0CBCECD0CB21B287560F20C98FCD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerDataProvider_ResetInput_m3D788FF8EEBE0670393A4FBE9DB6402E050B9740_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerDataProvider_SimulateInput_m9BE039ED4086A61E981F80EED82789C6D4F26362_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerDataProvider_UpdateControllerData_m644372626B2BC3711A63099DB33FCAC37CFEE2C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerDataProvider__ctor_m350C0175955DC63BBAE134800E709A40D34E757F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData__ctor_m92D2E548B2EF638BB5624E8FF92AD2F5F113381E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData_get_IsTracked_mFACBCCBDA56532F7F54F2DA81905409D79A41EC5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerState_ResetButtonStates_m855FD55EE27F5E79946166E71552304D8452D30F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerState_ResetRotation_m37A0837B85470344FF2924838E29FD8F16FF0093_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerState_UpdateControllerPose_mD56A48F14E714A0BCDEE059055C2A4E366C82CBB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionController_UpdateState_mDC6C29F55D5CFC07DBF423853B0685F2B6F13093_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimulatedMotionController__ctor_mEB0A42C83615CF4BA2DA94E0A2B7AF081540D626_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GestureId_tC7E0E1660275BEE4341D718A2D819A1AEEB7BE62_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GestureInputType_tE0BF82A452F97F80C699F9D207127F34EEB261CF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RuntimeObject_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimulatedMotionController_t34E4C80551264F751F75755C2C93253B427ECB10_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995AMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFDMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_IsPositionAvailable_m3E2EB0D15AAADABB3D967535353AD53539677046Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_get_IsRotationAvailable_m59D5E1DD267C83A3DB834096028590522C934868Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_set_IsPositionAvailable_m76D7FB5DBF945174A9D9B7A19123783742C6B57FMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseController_set_IsRotationAvailable_m5259A799822AFD94A2BEE4B47F887A03158FE308Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityGesturesProfile_get_UseRailsNavigation_mEAE6D30B9C69C0E5EA8115068FDA600F87CE02C6Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923EMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_HandGestureAnimationSpeed_m159042CFADEA1948914A6AD9D52193E9179B0AF5Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_HoldStartDuration_mBC1A3E5C22D4854356392379561E246374610007Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24EMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_MotionControllerGrabKey_mAA8B5087F8597D4A60166E3C7C93EFFA2F7C23EBMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_MotionControllerMenuKey_m82072D42ED0258F1D0AF0861F4253EBC3B0AA969Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_MotionControllerTriggerKey_m32AC0FAA8689395388B5F53DE37E4FA437E76D98Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25DMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_NavigationStartThreshold_m30BD08DA409E73AE42567F6420EB5E92DC7981E4Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CDMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547ADMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedControllerState_ResetPosition_m89D5414664C096C46D93063EF65F383A0E35A32A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedControllerState_get_Handedness_mDE7DBA6176CAA7C2EEEA37339C8C71B1FED34A99_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_EnsureProfileSettings_m5FC39BD038B64363C40173D9E60B1BC1606C7A3A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryCancelHold_m1F67089B7A138E396206FE8E7E0DAEECCE14BFBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryCancelManipulation_m774C717F6300ED032BD87747966E2EBFBE9F3159_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryCancelNavigation_m7F78258B782D49B12470728A9F18ECFE2C0138A5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryCompleteHold_mA3B5BAB738C6425798C608310D7D59D6B6FCA1AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryCompleteManipulation_m7DD88EA40E108EB197BF22BD11460BF7A3DFBB18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryCompleteNavigation_m725C944777267419341F15E256472663CBCE6AC8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryCompleteSelect_m39126D98BA2E83C742CDA9EAEA81EB5128B541AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryStartHold_m72CBFF5CAEDDC55C9E865745A5DE4C34C1B2E234_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryStartManipulation_m0B58E7807CC8E31CE5F4817A99CC358085866A3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_TryStartNavigation_m2F5F675D13ACB7225B7672755846459058BDF575_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_UpdateHandJoints_mBAA8CF99DF42CD44D878045ADD64E250D15AB7F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_UpdateInteractions_m96F24F8AEC7B7EC9C96EAF20378C4BBF49B26DF8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_UpdateManipulation_m7D7C54E9B0364BA9862D4326D9606FB6419CCBC3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_UpdateNavigation_mD504939EDF859CD568D6127F467D193ADF3ADFC0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand__ctor_m93581EB80551349B8F9FD7C292CBDBFA5243F97A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedGestureHand_get_SimulationMode_m99445CCC75EBA635CDD01A929947DA38792BB2AA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_ResetInput_m4638488528C4E170C8A49E9E8A9948FE810525E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_SelectGesture_m3EED0D8A0B38C138C8C872805E35ACC67F70F37F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_SimulateInput_m80961577E768F5D1F11FCC2766BDC61E3599803F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_SimulateUserInput_mB17706A3FAE9D7F7984FDA2510AE281167D3FD63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_ToggleGesture_m9F8B8AE3A881E53C67ABC7B4B8187E45AEFDB0BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_UpdateHandData_m46FBCD8C5B45CEF7FEECDC9A92A5DE61AD4349CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider__ctor_m5BDEF9D66F97A11A0B6CA2ADB5322B3DC9845BD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_get_HandStateGaze_mE0E34E6BE63DF76CACDD9B750A2DF3F83396B31B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_get_HandStateLeft_m30D7325487F11685955EFF81B6E33FE3637D964B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_get_HandStateRight_m715E5E32B06CBEF4437ADAEB327607A29666B0FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_set_HandStateGaze_mE52A35C705A75621E2392A1EA04E1C7A42350939_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_set_HandStateLeft_m2A7E60463DC915015B122CC7B6A41B4BAF7BBD67_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandDataProvider_set_HandStateRight_mB55A190DC7D6208CF90B4B85C377E0BB3AAC1CF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData_Copy_m41ABA1DF6D6E58F82E3DF8D876F210F2D75BCC52_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData__ctor_mC0F48E57A15AA83EB147D0682EAFD4B9A13A74E3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData_get_IsTracked_m44B1246872F6BE0B0A308EB2CC5259B6DFCF7FBF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_ResetGesture_m768808568035F9E15EBC17DF83D75F62A6069EBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_ResetRotation_mE2ABD5DD255C825FF53722C432991E01D2B04B6F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_get_Gesture_mD92DD18C9290E8F89105E0539065E44CA74AFFFF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandUtils_CalculateJointRotations_mA0A1808305AB3D8B589A08E42F9155739D9221AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandUtils_GetPalmForwardVector_m9E069A581F41648ADB1D947EDBB726BD867602F4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandUtils_GetPalmRightVector_m9C646FB51F2C94823DC3EEE26383B22A88EA4301_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandUtils_GetPalmUpVector_mB1852A38F5919EC805FE801DB47DC6DA1E64CCD0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHandUtils__ctor_m8FE7B6098201AE8BB6E8337DCDAAA7663D64F06F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHand_TryGetJoint_m14B9D4449933B89DB099541E2901B4017D613B64_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHand_UpdateState_m76167DB74444C36B375258174DBB71C74806C7E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedHand__ctor_mB9443EF6803AAEA223CA3838E9F806B124FBC221_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerButtonState_op_Equality_m410306F630C7440A6D448BB464A7A146EE779E29_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerButtonState_op_Inequality_m4E7E2C84B13D0CBCECD0CB21B287560F20C98FCD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerDataProvider_ResetInput_m3D788FF8EEBE0670393A4FBE9DB6402E050B9740_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerDataProvider_SimulateInput_m9BE039ED4086A61E981F80EED82789C6D4F26362_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerDataProvider_UpdateControllerData_m644372626B2BC3711A63099DB33FCAC37CFEE2C7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerDataProvider__ctor_m350C0175955DC63BBAE134800E709A40D34E757F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData__ctor_m92D2E548B2EF638BB5624E8FF92AD2F5F113381E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983BMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_get_IsTracked_mFACBCCBDA56532F7F54F2DA81905409D79A41EC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9ACMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState_ResetButtonStates_m855FD55EE27F5E79946166E71552304D8452D30F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState_ResetRotation_m37A0837B85470344FF2924838E29FD8F16FF0093_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState_UpdateControllerPose_mD56A48F14E714A0BCDEE059055C2A4E366C82CBB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionController_UpdateState_mDC6C29F55D5CFC07DBF423853B0685F2B6F13093_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimulatedMotionController__ctor_mEB0A42C83615CF4BA2DA94E0A2B7AF081540D626_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;

struct MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874;
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA;
struct MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object


// Microsoft.MixedReality.Toolkit.Input.SimulatedHandData
struct SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1  : public RuntimeObject
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::isTracked
	bool ___isTracked_0;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[] Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::joints
	MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___joints_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::isPinching
	bool ___isPinching_2;

public:
	inline static int32_t get_offset_of_isTracked_0() { return static_cast<int32_t>(offsetof(SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1, ___isTracked_0)); }
	inline bool get_isTracked_0() const { return ___isTracked_0; }
	inline bool* get_address_of_isTracked_0() { return &___isTracked_0; }
	inline void set_isTracked_0(bool value)
	{
		___isTracked_0 = value;
	}

	inline static int32_t get_offset_of_joints_1() { return static_cast<int32_t>(offsetof(SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1, ___joints_1)); }
	inline MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* get_joints_1() const { return ___joints_1; }
	inline MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD** get_address_of_joints_1() { return &___joints_1; }
	inline void set_joints_1(MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* value)
	{
		___joints_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___joints_1), (void*)value);
	}

	inline static int32_t get_offset_of_isPinching_2() { return static_cast<int32_t>(offsetof(SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1, ___isPinching_2)); }
	inline bool get_isPinching_2() const { return ___isPinching_2; }
	inline bool* get_address_of_isPinching_2() { return &___isPinching_2; }
	inline void set_isPinching_2(bool value)
	{
		___isPinching_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils
struct SimulatedHandUtils_t112B94E0F721072169327F6020348A7BB791A465  : public RuntimeObject
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose
struct ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[] Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::localJointPoses
	MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___localJointPoses_2;

public:
	inline static int32_t get_offset_of_localJointPoses_2() { return static_cast<int32_t>(offsetof(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422, ___localJointPoses_2)); }
	inline MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* get_localJointPoses_2() const { return ___localJointPoses_2; }
	inline MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD** get_address_of_localJointPoses_2() { return &___localJointPoses_2; }
	inline void set_localJointPoses_2(MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* value)
	{
		___localJointPoses_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___localJointPoses_2), (void*)value);
	}
};

struct ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint[] Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::Joints
	TrackedHandJointU5BU5D_t73F89CDA2E3DB99038427148F5D09567B51E2A67* ___Joints_0;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::<JointCount>k__BackingField
	int32_t ___U3CJointCountU3Ek__BackingField_1;
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId,Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose> Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::handPoses
	Dictionary_2_t0F9A9396259D09CFAA8130D2B1A43DE5434AD5D0 * ___handPoses_3;

public:
	inline static int32_t get_offset_of_Joints_0() { return static_cast<int32_t>(offsetof(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_StaticFields, ___Joints_0)); }
	inline TrackedHandJointU5BU5D_t73F89CDA2E3DB99038427148F5D09567B51E2A67* get_Joints_0() const { return ___Joints_0; }
	inline TrackedHandJointU5BU5D_t73F89CDA2E3DB99038427148F5D09567B51E2A67** get_address_of_Joints_0() { return &___Joints_0; }
	inline void set_Joints_0(TrackedHandJointU5BU5D_t73F89CDA2E3DB99038427148F5D09567B51E2A67* value)
	{
		___Joints_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Joints_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3CJointCountU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_StaticFields, ___U3CJointCountU3Ek__BackingField_1)); }
	inline int32_t get_U3CJointCountU3Ek__BackingField_1() const { return ___U3CJointCountU3Ek__BackingField_1; }
	inline int32_t* get_address_of_U3CJointCountU3Ek__BackingField_1() { return &___U3CJointCountU3Ek__BackingField_1; }
	inline void set_U3CJointCountU3Ek__BackingField_1(int32_t value)
	{
		___U3CJointCountU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_handPoses_3() { return static_cast<int32_t>(offsetof(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_StaticFields, ___handPoses_3)); }
	inline Dictionary_2_t0F9A9396259D09CFAA8130D2B1A43DE5434AD5D0 * get_handPoses_3() const { return ___handPoses_3; }
	inline Dictionary_2_t0F9A9396259D09CFAA8130D2B1A43DE5434AD5D0 ** get_address_of_handPoses_3() { return &___handPoses_3; }
	inline void set_handPoses_3(Dictionary_2_t0F9A9396259D09CFAA8130D2B1A43DE5434AD5D0 * value)
	{
		___handPoses_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handPoses_3), (void*)value);
	}
};

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_tDCE92978401B6E88C4A837958998A6DD61C63CD2* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_t9B3F4312810F6E987754407200C69F9F8620465A * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_tC935A0CB8F2162DB8392B9187AB1302A3041AC0B * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___entries_1)); }
	inline EntryU5BU5D_tDCE92978401B6E88C4A837958998A6DD61C63CD2* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_tDCE92978401B6E88C4A837958998A6DD61C63CD2** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_tDCE92978401B6E88C4A837958998A6DD61C63CD2* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___keys_7)); }
	inline KeyCollection_t9B3F4312810F6E987754407200C69F9F8620465A * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_t9B3F4312810F6E987754407200C69F9F8620465A ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_t9B3F4312810F6E987754407200C69F9F8620465A * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ___values_8)); }
	inline ValueCollection_tC935A0CB8F2162DB8392B9187AB1302A3041AC0B * get_values_8() const { return ___values_8; }
	inline ValueCollection_tC935A0CB8F2162DB8392B9187AB1302A3041AC0B ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_tC935A0CB8F2162DB8392B9187AB1302A3041AC0B * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=20
struct __StaticArrayInitTypeSizeU3D20_t61B73AC9C8C13E1C63E537737789BCB471C794DD 
{
public:
	union
	{
		struct
		{
			union
			{
			};
		};
		uint8_t __StaticArrayInitTypeSizeU3D20_t61B73AC9C8C13E1C63E537737789BCB471C794DD__padding[20];
	};

public:
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState
struct SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C 
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::IsSelecting
	bool ___IsSelecting_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::IsGrabbing
	bool ___IsGrabbing_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::IsPressingMenu
	bool ___IsPressingMenu_2;

public:
	inline static int32_t get_offset_of_IsSelecting_0() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C, ___IsSelecting_0)); }
	inline bool get_IsSelecting_0() const { return ___IsSelecting_0; }
	inline bool* get_address_of_IsSelecting_0() { return &___IsSelecting_0; }
	inline void set_IsSelecting_0(bool value)
	{
		___IsSelecting_0 = value;
	}

	inline static int32_t get_offset_of_IsGrabbing_1() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C, ___IsGrabbing_1)); }
	inline bool get_IsGrabbing_1() const { return ___IsGrabbing_1; }
	inline bool* get_address_of_IsGrabbing_1() { return &___IsGrabbing_1; }
	inline void set_IsGrabbing_1(bool value)
	{
		___IsGrabbing_1 = value;
	}

	inline static int32_t get_offset_of_IsPressingMenu_2() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C, ___IsPressingMenu_2)); }
	inline bool get_IsPressingMenu_2() const { return ___IsPressingMenu_2; }
	inline bool* get_address_of_IsPressingMenu_2() { return &___IsPressingMenu_2; }
	inline void set_IsPressingMenu_2(bool value)
	{
		___IsPressingMenu_2 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState
struct SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_pinvoke
{
	int32_t ___IsSelecting_0;
	int32_t ___IsGrabbing_1;
	int32_t ___IsPressingMenu_2;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState
struct SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_com
{
	int32_t ___IsSelecting_0;
	int32_t ___IsGrabbing_1;
	int32_t ___IsPressingMenu_2;
};

// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Double
struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409 
{
public:
	// System.Double System.Double::m_value
	double ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409, ___m_value_0)); }
	inline double get_m_value_0() const { return ___m_value_0; }
	inline double* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(double value)
	{
		___m_value_0 = value;
	}
};

struct Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields
{
public:
	// System.Double System.Double::NegativeZero
	double ___NegativeZero_7;

public:
	inline static int32_t get_offset_of_NegativeZero_7() { return static_cast<int32_t>(offsetof(Double_t358B8F23BDC52A5DD700E727E204F9F7CDE12409_StaticFields, ___NegativeZero_7)); }
	inline double get_NegativeZero_7() const { return ___NegativeZero_7; }
	inline double* get_address_of_NegativeZero_7() { return &___NegativeZero_7; }
	inline void set_NegativeZero_7(double value)
	{
		___NegativeZero_7 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Int64
struct Int64_t7A386C2FF7B0280A0F516992401DDFCF0FF7B436 
{
public:
	// System.Int64 System.Int64::m_value
	int64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int64_t7A386C2FF7B0280A0F516992401DDFCF0FF7B436, ___m_value_0)); }
	inline int64_t get_m_value_0() const { return ___m_value_0; }
	inline int64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int64_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Nullable`1<System.Int32>
struct Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB 
{
public:
	// T System.Nullable`1::value
	int32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB, ___value_0)); }
	inline int32_t get_value_0() const { return ___value_0; }
	inline int32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(int32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// <PrivateImplementationDetails>
struct U3CPrivateImplementationDetailsU3E_t5D7196C8D3A7E05A50169A365F5A7B3B92600D14  : public RuntimeObject
{
public:

public:
};

struct U3CPrivateImplementationDetailsU3E_t5D7196C8D3A7E05A50169A365F5A7B3B92600D14_StaticFields
{
public:
	// <PrivateImplementationDetails>/__StaticArrayInitTypeSize=20 <PrivateImplementationDetails>::6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED
	__StaticArrayInitTypeSizeU3D20_t61B73AC9C8C13E1C63E537737789BCB471C794DD  ___6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0;

public:
	inline static int32_t get_offset_of_U36AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0() { return static_cast<int32_t>(offsetof(U3CPrivateImplementationDetailsU3E_t5D7196C8D3A7E05A50169A365F5A7B3B92600D14_StaticFields, ___6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0)); }
	inline __StaticArrayInitTypeSizeU3D20_t61B73AC9C8C13E1C63E537737789BCB471C794DD  get_U36AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0() const { return ___6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0; }
	inline __StaticArrayInitTypeSizeU3D20_t61B73AC9C8C13E1C63E537737789BCB471C794DD * get_address_of_U36AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0() { return &___6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0; }
	inline void set_U36AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0(__StaticArrayInitTypeSizeU3D20_t61B73AC9C8C13E1C63E537737789BCB471C794DD  value)
	{
		___6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.ControllerSimulationMode
struct ControllerSimulationMode_tEEF49BCFD772A2944A8533A97BCB8D2F7BB07A02 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.ControllerSimulationMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ControllerSimulationMode_tEEF49BCFD772A2944A8533A97BCB8D2F7BB07A02, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.DeviceInputType
struct DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.DeviceInputType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(DeviceInputType_t358986D22B64DCDBE1EC628624BB92B25DED5E31, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.EyeGazeSimulationMode
struct EyeGazeSimulationMode_t9359E5612176E270EE1D0F6D9A40FC69E775420D 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.EyeGazeSimulationMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EyeGazeSimulationMode_t9359E5612176E270EE1D0F6D9A40FC69E775420D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.GestureInputType
struct GestureInputType_tE0BF82A452F97F80C699F9D207127F34EEB261CF 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.GestureInputType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(GestureInputType_tE0BF82A452F97F80C699F9D207127F34EEB261CF, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSimulationControlMode
struct InputSimulationControlMode_t17D676A28E3E944B01D8DF7D018A8F0F17FD1648 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.InputSimulationControlMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InputSimulationControlMode_t17D676A28E3E944B01D8DF7D018A8F0F17FD1648, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.KeyBinding/KeyType
struct KeyType_t63A0EC9B1C9653881B95DF409080C7FB24760D72 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.KeyBinding/KeyType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(KeyType_t63A0EC9B1C9653881B95DF409080C7FB24760D72, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.KeyBinding/MouseButton
struct MouseButton_t4174FC057A73B1ECBC9603C3AF8AF87E964E719E 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.KeyBinding/MouseButton::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(MouseButton_t4174FC057A73B1ECBC9603C3AF8AF87E964E719E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MouseDelta
struct MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A  : public RuntimeObject
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MouseDelta::screenDelta
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___screenDelta_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MouseDelta::viewportDelta
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___viewportDelta_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MouseDelta::worldDelta
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldDelta_2;

public:
	inline static int32_t get_offset_of_screenDelta_0() { return static_cast<int32_t>(offsetof(MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A, ___screenDelta_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_screenDelta_0() const { return ___screenDelta_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_screenDelta_0() { return &___screenDelta_0; }
	inline void set_screenDelta_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___screenDelta_0 = value;
	}

	inline static int32_t get_offset_of_viewportDelta_1() { return static_cast<int32_t>(offsetof(MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A, ___viewportDelta_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_viewportDelta_1() const { return ___viewportDelta_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_viewportDelta_1() { return &___viewportDelta_1; }
	inline void set_viewportDelta_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___viewportDelta_1 = value;
	}

	inline static int32_t get_offset_of_worldDelta_2() { return static_cast<int32_t>(offsetof(MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A, ___worldDelta_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldDelta_2() const { return ___worldDelta_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldDelta_2() { return &___worldDelta_2; }
	inline void set_worldDelta_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldDelta_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData
struct SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE  : public RuntimeObject
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::isTracked
	bool ___isTracked_0;
	// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::buttonState
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___buttonState_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::<Position>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPositionU3Ek__BackingField_2;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::<Rotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3CRotationU3Ek__BackingField_3;

public:
	inline static int32_t get_offset_of_isTracked_0() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE, ___isTracked_0)); }
	inline bool get_isTracked_0() const { return ___isTracked_0; }
	inline bool* get_address_of_isTracked_0() { return &___isTracked_0; }
	inline void set_isTracked_0(bool value)
	{
		___isTracked_0 = value;
	}

	inline static int32_t get_offset_of_buttonState_1() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE, ___buttonState_1)); }
	inline SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  get_buttonState_1() const { return ___buttonState_1; }
	inline SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * get_address_of_buttonState_1() { return &___buttonState_1; }
	inline void set_buttonState_1(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  value)
	{
		___buttonState_1 = value;
	}

	inline static int32_t get_offset_of_U3CPositionU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE, ___U3CPositionU3Ek__BackingField_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPositionU3Ek__BackingField_2() const { return ___U3CPositionU3Ek__BackingField_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPositionU3Ek__BackingField_2() { return &___U3CPositionU3Ek__BackingField_2; }
	inline void set_U3CPositionU3Ek__BackingField_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPositionU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CRotationU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE, ___U3CRotationU3Ek__BackingField_3)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3CRotationU3Ek__BackingField_3() const { return ___U3CRotationU3Ek__BackingField_3; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3CRotationU3Ek__BackingField_3() { return &___U3CRotationU3Ek__BackingField_3; }
	inline void set_U3CRotationU3Ek__BackingField_3(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3CRotationU3Ek__BackingField_3 = value;
	}
};


// Microsoft.MixedReality.Toolkit.TrackingState
struct TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.TrackingState::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId
struct GestureId_tC7E0E1660275BEE4341D718A2D819A1AEEB7BE62 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(GestureId_tC7E0E1660275BEE4341D718A2D819A1AEEB7BE62, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior
struct AutoStartBehavior_t9BBC9C0AE47250C9034F4B386E2D1C6BA21D5839 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AutoStartBehavior_t9BBC9C0AE47250C9034F4B386E2D1C6BA21D5839, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose
struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;

public:
	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}
};

struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::<ZeroIdentity>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CZeroIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CZeroIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields, ___U3CZeroIdentityU3Ek__BackingField_0)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CZeroIdentityU3Ek__BackingField_0() const { return ___U3CZeroIdentityU3Ek__BackingField_0; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CZeroIdentityU3Ek__BackingField_0() { return &___U3CZeroIdentityU3Ek__BackingField_0; }
	inline void set_U3CZeroIdentityU3Ek__BackingField_0(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CZeroIdentityU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint
struct TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackedHandJoint_tDE2FD40782A5B0C1D39386D6BF70D8A1CCF94E22, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings
struct WindowsGestureSettings_t1876E81B36888DFF13EDC8D13F0509B5253DD430 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(WindowsGestureSettings_t1876E81B36888DFF13EDC8D13F0509B5253DD430, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Delegate
struct Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Int32Enum
struct Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD 
{
public:
	// System.Int32 System.Int32Enum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeFieldHandle
struct RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF 
{
public:
	// System.IntPtr System.RuntimeFieldHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// System.TimeSpan
struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 
{
public:
	// System.Int64 System.TimeSpan::_ticks
	int64_t ____ticks_3;

public:
	inline static int32_t get_offset_of__ticks_3() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4, ____ticks_3)); }
	inline int64_t get__ticks_3() const { return ____ticks_3; }
	inline int64_t* get_address_of__ticks_3() { return &____ticks_3; }
	inline void set__ticks_3(int64_t value)
	{
		____ticks_3 = value;
	}
};

struct TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields
{
public:
	// System.TimeSpan System.TimeSpan::Zero
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___Zero_0;
	// System.TimeSpan System.TimeSpan::MaxValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MaxValue_1;
	// System.TimeSpan System.TimeSpan::MinValue
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  ___MinValue_2;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyConfigChecked
	bool ____legacyConfigChecked_4;
	// System.Boolean modreq(System.Runtime.CompilerServices.IsVolatile) System.TimeSpan::_legacyMode
	bool ____legacyMode_5;

public:
	inline static int32_t get_offset_of_Zero_0() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___Zero_0)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_Zero_0() const { return ___Zero_0; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_Zero_0() { return &___Zero_0; }
	inline void set_Zero_0(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___Zero_0 = value;
	}

	inline static int32_t get_offset_of_MaxValue_1() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MaxValue_1)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MaxValue_1() const { return ___MaxValue_1; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MaxValue_1() { return &___MaxValue_1; }
	inline void set_MaxValue_1(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MaxValue_1 = value;
	}

	inline static int32_t get_offset_of_MinValue_2() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ___MinValue_2)); }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  get_MinValue_2() const { return ___MinValue_2; }
	inline TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * get_address_of_MinValue_2() { return &___MinValue_2; }
	inline void set_MinValue_2(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  value)
	{
		___MinValue_2 = value;
	}

	inline static int32_t get_offset_of__legacyConfigChecked_4() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyConfigChecked_4)); }
	inline bool get__legacyConfigChecked_4() const { return ____legacyConfigChecked_4; }
	inline bool* get_address_of__legacyConfigChecked_4() { return &____legacyConfigChecked_4; }
	inline void set__legacyConfigChecked_4(bool value)
	{
		____legacyConfigChecked_4 = value;
	}

	inline static int32_t get_offset_of__legacyMode_5() { return static_cast<int32_t>(offsetof(TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4_StaticFields, ____legacyMode_5)); }
	inline bool get__legacyMode_5() const { return ____legacyMode_5; }
	inline bool* get_address_of__legacyMode_5() { return &____legacyMode_5; }
	inline void set__legacyMode_5(bool value)
	{
		____legacyMode_5 = value;
	}
};


// UnityEngine.KeyCode
struct KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C 
{
public:
	// System.Int32 UnityEngine.KeyCode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(KeyCode_tC93EA87C5A6901160B583ADFCD3EF6726570DC3C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// Microsoft.MixedReality.Toolkit.Input.BaseController
struct BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition Microsoft.MixedReality.Toolkit.Input.BaseController::<Definition>k__BackingField
	RuntimeObject* ___U3CDefinitionU3Ek__BackingField_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<Enabled>k__BackingField
	bool ___U3CEnabledU3Ek__BackingField_1;
	// Microsoft.MixedReality.Toolkit.TrackingState Microsoft.MixedReality.Toolkit.Input.BaseController::<TrackingState>k__BackingField
	int32_t ___U3CTrackingStateU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.BaseController::<ControllerHandedness>k__BackingField
	uint8_t ___U3CControllerHandednessU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseController::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_4;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityControllerVisualizer Microsoft.MixedReality.Toolkit.Input.BaseController::<Visualizer>k__BackingField
	RuntimeObject* ___U3CVisualizerU3Ek__BackingField_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<IsPositionAvailable>k__BackingField
	bool ___U3CIsPositionAvailableU3Ek__BackingField_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<IsPositionApproximate>k__BackingField
	bool ___U3CIsPositionApproximateU3Ek__BackingField_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::<IsRotationAvailable>k__BackingField
	bool ___U3CIsRotationAvailableU3Ek__BackingField_8;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.BaseController::<Interactions>k__BackingField
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___U3CInteractionsU3Ek__BackingField_9;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseController::<AngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CAngularVelocityU3Ek__BackingField_10;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseController::<Velocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CVelocityU3Ek__BackingField_11;

public:
	inline static int32_t get_offset_of_U3CDefinitionU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CDefinitionU3Ek__BackingField_0)); }
	inline RuntimeObject* get_U3CDefinitionU3Ek__BackingField_0() const { return ___U3CDefinitionU3Ek__BackingField_0; }
	inline RuntimeObject** get_address_of_U3CDefinitionU3Ek__BackingField_0() { return &___U3CDefinitionU3Ek__BackingField_0; }
	inline void set_U3CDefinitionU3Ek__BackingField_0(RuntimeObject* value)
	{
		___U3CDefinitionU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CDefinitionU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3CEnabledU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CEnabledU3Ek__BackingField_1)); }
	inline bool get_U3CEnabledU3Ek__BackingField_1() const { return ___U3CEnabledU3Ek__BackingField_1; }
	inline bool* get_address_of_U3CEnabledU3Ek__BackingField_1() { return &___U3CEnabledU3Ek__BackingField_1; }
	inline void set_U3CEnabledU3Ek__BackingField_1(bool value)
	{
		___U3CEnabledU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CTrackingStateU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CTrackingStateU3Ek__BackingField_2)); }
	inline int32_t get_U3CTrackingStateU3Ek__BackingField_2() const { return ___U3CTrackingStateU3Ek__BackingField_2; }
	inline int32_t* get_address_of_U3CTrackingStateU3Ek__BackingField_2() { return &___U3CTrackingStateU3Ek__BackingField_2; }
	inline void set_U3CTrackingStateU3Ek__BackingField_2(int32_t value)
	{
		___U3CTrackingStateU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CControllerHandednessU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CControllerHandednessU3Ek__BackingField_3)); }
	inline uint8_t get_U3CControllerHandednessU3Ek__BackingField_3() const { return ___U3CControllerHandednessU3Ek__BackingField_3; }
	inline uint8_t* get_address_of_U3CControllerHandednessU3Ek__BackingField_3() { return &___U3CControllerHandednessU3Ek__BackingField_3; }
	inline void set_U3CControllerHandednessU3Ek__BackingField_3(uint8_t value)
	{
		___U3CControllerHandednessU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CInputSourceU3Ek__BackingField_4)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_4() const { return ___U3CInputSourceU3Ek__BackingField_4; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_4() { return &___U3CInputSourceU3Ek__BackingField_4; }
	inline void set_U3CInputSourceU3Ek__BackingField_4(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CVisualizerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CVisualizerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CVisualizerU3Ek__BackingField_5() const { return ___U3CVisualizerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CVisualizerU3Ek__BackingField_5() { return &___U3CVisualizerU3Ek__BackingField_5; }
	inline void set_U3CVisualizerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CVisualizerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CVisualizerU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsPositionAvailableU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CIsPositionAvailableU3Ek__BackingField_6)); }
	inline bool get_U3CIsPositionAvailableU3Ek__BackingField_6() const { return ___U3CIsPositionAvailableU3Ek__BackingField_6; }
	inline bool* get_address_of_U3CIsPositionAvailableU3Ek__BackingField_6() { return &___U3CIsPositionAvailableU3Ek__BackingField_6; }
	inline void set_U3CIsPositionAvailableU3Ek__BackingField_6(bool value)
	{
		___U3CIsPositionAvailableU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CIsPositionApproximateU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CIsPositionApproximateU3Ek__BackingField_7)); }
	inline bool get_U3CIsPositionApproximateU3Ek__BackingField_7() const { return ___U3CIsPositionApproximateU3Ek__BackingField_7; }
	inline bool* get_address_of_U3CIsPositionApproximateU3Ek__BackingField_7() { return &___U3CIsPositionApproximateU3Ek__BackingField_7; }
	inline void set_U3CIsPositionApproximateU3Ek__BackingField_7(bool value)
	{
		___U3CIsPositionApproximateU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_U3CIsRotationAvailableU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CIsRotationAvailableU3Ek__BackingField_8)); }
	inline bool get_U3CIsRotationAvailableU3Ek__BackingField_8() const { return ___U3CIsRotationAvailableU3Ek__BackingField_8; }
	inline bool* get_address_of_U3CIsRotationAvailableU3Ek__BackingField_8() { return &___U3CIsRotationAvailableU3Ek__BackingField_8; }
	inline void set_U3CIsRotationAvailableU3Ek__BackingField_8(bool value)
	{
		___U3CIsRotationAvailableU3Ek__BackingField_8 = value;
	}

	inline static int32_t get_offset_of_U3CInteractionsU3Ek__BackingField_9() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CInteractionsU3Ek__BackingField_9)); }
	inline MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* get_U3CInteractionsU3Ek__BackingField_9() const { return ___U3CInteractionsU3Ek__BackingField_9; }
	inline MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA** get_address_of_U3CInteractionsU3Ek__BackingField_9() { return &___U3CInteractionsU3Ek__BackingField_9; }
	inline void set_U3CInteractionsU3Ek__BackingField_9(MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* value)
	{
		___U3CInteractionsU3Ek__BackingField_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInteractionsU3Ek__BackingField_9), (void*)value);
	}

	inline static int32_t get_offset_of_U3CAngularVelocityU3Ek__BackingField_10() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CAngularVelocityU3Ek__BackingField_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CAngularVelocityU3Ek__BackingField_10() const { return ___U3CAngularVelocityU3Ek__BackingField_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CAngularVelocityU3Ek__BackingField_10() { return &___U3CAngularVelocityU3Ek__BackingField_10; }
	inline void set_U3CAngularVelocityU3Ek__BackingField_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CAngularVelocityU3Ek__BackingField_10 = value;
	}

	inline static int32_t get_offset_of_U3CVelocityU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B, ___U3CVelocityU3Ek__BackingField_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CVelocityU3Ek__BackingField_11() const { return ___U3CVelocityU3Ek__BackingField_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CVelocityU3Ek__BackingField_11() { return &___U3CVelocityU3Ek__BackingField_11; }
	inline void set_U3CVelocityU3Ek__BackingField_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CVelocityU3Ek__BackingField_11 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputSourceDefinition
struct BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.BaseInputSourceDefinition::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6, ___U3CHandednessU3Ek__BackingField_0)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_0() const { return ___U3CHandednessU3Ek__BackingField_0; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_0() { return &___U3CHandednessU3Ek__BackingField_0; }
	inline void set_U3CHandednessU3Ek__BackingField_0(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.KeyBinding
struct KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 
{
public:
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding/KeyType Microsoft.MixedReality.Toolkit.Input.KeyBinding::bindingType
	int32_t ___bindingType_3;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.KeyBinding::code
	int32_t ___code_4;

public:
	inline static int32_t get_offset_of_bindingType_3() { return static_cast<int32_t>(offsetof(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79, ___bindingType_3)); }
	inline int32_t get_bindingType_3() const { return ___bindingType_3; }
	inline int32_t* get_address_of_bindingType_3() { return &___bindingType_3; }
	inline void set_bindingType_3(int32_t value)
	{
		___bindingType_3 = value;
	}

	inline static int32_t get_offset_of_code_4() { return static_cast<int32_t>(offsetof(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79, ___code_4)); }
	inline int32_t get_code_4() const { return ___code_4; }
	inline int32_t* get_address_of_code_4() { return &___code_4; }
	inline void set_code_4(int32_t value)
	{
		___code_4 = value;
	}
};

struct KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79_StaticFields
{
public:
	// System.String[] Microsoft.MixedReality.Toolkit.Input.KeyBinding::AllCodeNames
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___AllCodeNames_0;
	// System.Collections.Generic.Dictionary`2<System.Tuple`2<Microsoft.MixedReality.Toolkit.Input.KeyBinding/KeyType,System.Int32>,System.Int32> Microsoft.MixedReality.Toolkit.Input.KeyBinding::KeyBindingToEnumMap
	Dictionary_2_tCCE7E3DED5BB9D85ABD0F224C25BBC56DC6FB0CB * ___KeyBindingToEnumMap_1;
	// System.Collections.Generic.Dictionary`2<System.Int32,System.Tuple`2<Microsoft.MixedReality.Toolkit.Input.KeyBinding/KeyType,System.Int32>> Microsoft.MixedReality.Toolkit.Input.KeyBinding::EnumToKeyBindingMap
	Dictionary_2_t851109C8EC3B462C09C470AA73AA5F6A82D61B64 * ___EnumToKeyBindingMap_2;

public:
	inline static int32_t get_offset_of_AllCodeNames_0() { return static_cast<int32_t>(offsetof(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79_StaticFields, ___AllCodeNames_0)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_AllCodeNames_0() const { return ___AllCodeNames_0; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_AllCodeNames_0() { return &___AllCodeNames_0; }
	inline void set_AllCodeNames_0(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___AllCodeNames_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___AllCodeNames_0), (void*)value);
	}

	inline static int32_t get_offset_of_KeyBindingToEnumMap_1() { return static_cast<int32_t>(offsetof(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79_StaticFields, ___KeyBindingToEnumMap_1)); }
	inline Dictionary_2_tCCE7E3DED5BB9D85ABD0F224C25BBC56DC6FB0CB * get_KeyBindingToEnumMap_1() const { return ___KeyBindingToEnumMap_1; }
	inline Dictionary_2_tCCE7E3DED5BB9D85ABD0F224C25BBC56DC6FB0CB ** get_address_of_KeyBindingToEnumMap_1() { return &___KeyBindingToEnumMap_1; }
	inline void set_KeyBindingToEnumMap_1(Dictionary_2_tCCE7E3DED5BB9D85ABD0F224C25BBC56DC6FB0CB * value)
	{
		___KeyBindingToEnumMap_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___KeyBindingToEnumMap_1), (void*)value);
	}

	inline static int32_t get_offset_of_EnumToKeyBindingMap_2() { return static_cast<int32_t>(offsetof(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79_StaticFields, ___EnumToKeyBindingMap_2)); }
	inline Dictionary_2_t851109C8EC3B462C09C470AA73AA5F6A82D61B64 * get_EnumToKeyBindingMap_2() const { return ___EnumToKeyBindingMap_2; }
	inline Dictionary_2_t851109C8EC3B462C09C470AA73AA5F6A82D61B64 ** get_address_of_EnumToKeyBindingMap_2() { return &___EnumToKeyBindingMap_2; }
	inline void set_EnumToKeyBindingMap_2(Dictionary_2_t851109C8EC3B462C09C470AA73AA5F6A82D61B64 * value)
	{
		___EnumToKeyBindingMap_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EnumToKeyBindingMap_2), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState
struct SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::handedness
	uint8_t ___handedness_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::IsTracked
	bool ___IsTracked_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::ViewportPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___ViewportPosition_2;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::ViewportRotation
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___ViewportRotation_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::JitterOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___JitterOffset_4;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::viewportPositionZTarget
	float ___viewportPositionZTarget_5;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::smoothScrollSpeed
	float ___smoothScrollSpeed_6;

public:
	inline static int32_t get_offset_of_handedness_0() { return static_cast<int32_t>(offsetof(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF, ___handedness_0)); }
	inline uint8_t get_handedness_0() const { return ___handedness_0; }
	inline uint8_t* get_address_of_handedness_0() { return &___handedness_0; }
	inline void set_handedness_0(uint8_t value)
	{
		___handedness_0 = value;
	}

	inline static int32_t get_offset_of_IsTracked_1() { return static_cast<int32_t>(offsetof(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF, ___IsTracked_1)); }
	inline bool get_IsTracked_1() const { return ___IsTracked_1; }
	inline bool* get_address_of_IsTracked_1() { return &___IsTracked_1; }
	inline void set_IsTracked_1(bool value)
	{
		___IsTracked_1 = value;
	}

	inline static int32_t get_offset_of_ViewportPosition_2() { return static_cast<int32_t>(offsetof(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF, ___ViewportPosition_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_ViewportPosition_2() const { return ___ViewportPosition_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_ViewportPosition_2() { return &___ViewportPosition_2; }
	inline void set_ViewportPosition_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___ViewportPosition_2 = value;
	}

	inline static int32_t get_offset_of_ViewportRotation_3() { return static_cast<int32_t>(offsetof(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF, ___ViewportRotation_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_ViewportRotation_3() const { return ___ViewportRotation_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_ViewportRotation_3() { return &___ViewportRotation_3; }
	inline void set_ViewportRotation_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___ViewportRotation_3 = value;
	}

	inline static int32_t get_offset_of_JitterOffset_4() { return static_cast<int32_t>(offsetof(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF, ___JitterOffset_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_JitterOffset_4() const { return ___JitterOffset_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_JitterOffset_4() { return &___JitterOffset_4; }
	inline void set_JitterOffset_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___JitterOffset_4 = value;
	}

	inline static int32_t get_offset_of_viewportPositionZTarget_5() { return static_cast<int32_t>(offsetof(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF, ___viewportPositionZTarget_5)); }
	inline float get_viewportPositionZTarget_5() const { return ___viewportPositionZTarget_5; }
	inline float* get_address_of_viewportPositionZTarget_5() { return &___viewportPositionZTarget_5; }
	inline void set_viewportPositionZTarget_5(float value)
	{
		___viewportPositionZTarget_5 = value;
	}

	inline static int32_t get_offset_of_smoothScrollSpeed_6() { return static_cast<int32_t>(offsetof(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF, ___smoothScrollSpeed_6)); }
	inline float get_smoothScrollSpeed_6() const { return ___smoothScrollSpeed_6; }
	inline float* get_address_of_smoothScrollSpeed_6() { return &___smoothScrollSpeed_6; }
	inline void set_smoothScrollSpeed_6(float value)
	{
		___smoothScrollSpeed_6 = value;
	}
};


// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_pinvoke : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734_marshaled_com : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
};

// Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile
struct BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8  : public ScriptableObject_tAB015486CEAB714DA0D5C1BA389B84FB90427734
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.BaseMixedRealityProfile::isCustomProfile
	bool ___isCustomProfile_4;

public:
	inline static int32_t get_offset_of_isCustomProfile_4() { return static_cast<int32_t>(offsetof(BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8, ___isCustomProfile_4)); }
	inline bool get_isCustomProfile_4() const { return ___isCustomProfile_4; }
	inline bool* get_address_of_isCustomProfile_4() { return &___isCustomProfile_4; }
	inline void set_isCustomProfile_4(bool value)
	{
		___isCustomProfile_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseHand
struct BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B  : public BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IHandRay Microsoft.MixedReality.Toolkit.Input.BaseHand::<HandRay>k__BackingField
	RuntimeObject* ___U3CHandRayU3Ek__BackingField_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseHand::deltaTimeStart
	float ___deltaTimeStart_13;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.BaseHand::frameOn
	int32_t ___frameOn_15;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Input.BaseHand::velocityPositionsCache
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___velocityPositionsCache_16;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Input.BaseHand::velocityNormalsCache
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___velocityNormalsCache_17;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseHand::velocityPositionsSum
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___velocityPositionsSum_18;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.BaseHand::velocityNormalsSum
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___velocityNormalsSum_19;

public:
	inline static int32_t get_offset_of_U3CHandRayU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B, ___U3CHandRayU3Ek__BackingField_12)); }
	inline RuntimeObject* get_U3CHandRayU3Ek__BackingField_12() const { return ___U3CHandRayU3Ek__BackingField_12; }
	inline RuntimeObject** get_address_of_U3CHandRayU3Ek__BackingField_12() { return &___U3CHandRayU3Ek__BackingField_12; }
	inline void set_U3CHandRayU3Ek__BackingField_12(RuntimeObject* value)
	{
		___U3CHandRayU3Ek__BackingField_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CHandRayU3Ek__BackingField_12), (void*)value);
	}

	inline static int32_t get_offset_of_deltaTimeStart_13() { return static_cast<int32_t>(offsetof(BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B, ___deltaTimeStart_13)); }
	inline float get_deltaTimeStart_13() const { return ___deltaTimeStart_13; }
	inline float* get_address_of_deltaTimeStart_13() { return &___deltaTimeStart_13; }
	inline void set_deltaTimeStart_13(float value)
	{
		___deltaTimeStart_13 = value;
	}

	inline static int32_t get_offset_of_frameOn_15() { return static_cast<int32_t>(offsetof(BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B, ___frameOn_15)); }
	inline int32_t get_frameOn_15() const { return ___frameOn_15; }
	inline int32_t* get_address_of_frameOn_15() { return &___frameOn_15; }
	inline void set_frameOn_15(int32_t value)
	{
		___frameOn_15 = value;
	}

	inline static int32_t get_offset_of_velocityPositionsCache_16() { return static_cast<int32_t>(offsetof(BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B, ___velocityPositionsCache_16)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_velocityPositionsCache_16() const { return ___velocityPositionsCache_16; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_velocityPositionsCache_16() { return &___velocityPositionsCache_16; }
	inline void set_velocityPositionsCache_16(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___velocityPositionsCache_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___velocityPositionsCache_16), (void*)value);
	}

	inline static int32_t get_offset_of_velocityNormalsCache_17() { return static_cast<int32_t>(offsetof(BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B, ___velocityNormalsCache_17)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_velocityNormalsCache_17() const { return ___velocityNormalsCache_17; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_velocityNormalsCache_17() { return &___velocityNormalsCache_17; }
	inline void set_velocityNormalsCache_17(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___velocityNormalsCache_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___velocityNormalsCache_17), (void*)value);
	}

	inline static int32_t get_offset_of_velocityPositionsSum_18() { return static_cast<int32_t>(offsetof(BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B, ___velocityPositionsSum_18)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_velocityPositionsSum_18() const { return ___velocityPositionsSum_18; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_velocityPositionsSum_18() { return &___velocityPositionsSum_18; }
	inline void set_velocityPositionsSum_18(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___velocityPositionsSum_18 = value;
	}

	inline static int32_t get_offset_of_velocityNormalsSum_19() { return static_cast<int32_t>(offsetof(BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B, ___velocityNormalsSum_19)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_velocityNormalsSum_19() const { return ___velocityNormalsSum_19; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_velocityNormalsSum_19() { return &___velocityNormalsSum_19; }
	inline void set_velocityNormalsSum_19(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___velocityNormalsSum_19 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping
struct MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::description
	String_t* ___description_0;
	// Microsoft.MixedReality.Toolkit.Input.GestureInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::gestureType
	int32_t ___gestureType_1;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::action
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___action_2;

public:
	inline static int32_t get_offset_of_description_0() { return static_cast<int32_t>(offsetof(MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074, ___description_0)); }
	inline String_t* get_description_0() const { return ___description_0; }
	inline String_t** get_address_of_description_0() { return &___description_0; }
	inline void set_description_0(String_t* value)
	{
		___description_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_0), (void*)value);
	}

	inline static int32_t get_offset_of_gestureType_1() { return static_cast<int32_t>(offsetof(MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074, ___gestureType_1)); }
	inline int32_t get_gestureType_1() const { return ___gestureType_1; }
	inline int32_t* get_address_of_gestureType_1() { return &___gestureType_1; }
	inline void set_gestureType_1(int32_t value)
	{
		___gestureType_1 = value;
	}

	inline static int32_t get_offset_of_action_2() { return static_cast<int32_t>(offsetof(MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074, ___action_2)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_action_2() const { return ___action_2; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_action_2() { return &___action_2; }
	inline void set_action_2(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___action_2 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___action_2))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping
struct MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074_marshaled_pinvoke
{
	char* ___description_0;
	int32_t ___gestureType_1;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke ___action_2;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping
struct MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074_marshaled_com
{
	Il2CppChar* ___description_0;
	int32_t ___gestureType_1;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com ___action_2;
};

// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping
struct MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2  : public RuntimeObject
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::id
	uint32_t ___id_0;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::description
	String_t* ___description_1;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisType
	int32_t ___axisType_2;
	// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::inputType
	int32_t ___inputType_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::inputAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___inputAction_4;
	// UnityEngine.KeyCode Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::keyCode
	int32_t ___keyCode_5;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisCodeX
	String_t* ___axisCodeX_6;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::axisCodeY
	String_t* ___axisCodeY_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::invertXAxis
	bool ___invertXAxis_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::invertYAxis
	bool ___invertYAxis_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::changed
	bool ___changed_10;
	// System.Object Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::rawData
	RuntimeObject * ___rawData_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::boolData
	bool ___boolData_12;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::floatData
	float ___floatData_13;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::vector2Data
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___vector2Data_14;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::positionData
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positionData_15;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::rotationData
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotationData_16;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::poseData
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___poseData_17;

public:
	inline static int32_t get_offset_of_id_0() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___id_0)); }
	inline uint32_t get_id_0() const { return ___id_0; }
	inline uint32_t* get_address_of_id_0() { return &___id_0; }
	inline void set_id_0(uint32_t value)
	{
		___id_0 = value;
	}

	inline static int32_t get_offset_of_description_1() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___description_1)); }
	inline String_t* get_description_1() const { return ___description_1; }
	inline String_t** get_address_of_description_1() { return &___description_1; }
	inline void set_description_1(String_t* value)
	{
		___description_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_1), (void*)value);
	}

	inline static int32_t get_offset_of_axisType_2() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisType_2)); }
	inline int32_t get_axisType_2() const { return ___axisType_2; }
	inline int32_t* get_address_of_axisType_2() { return &___axisType_2; }
	inline void set_axisType_2(int32_t value)
	{
		___axisType_2 = value;
	}

	inline static int32_t get_offset_of_inputType_3() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___inputType_3)); }
	inline int32_t get_inputType_3() const { return ___inputType_3; }
	inline int32_t* get_address_of_inputType_3() { return &___inputType_3; }
	inline void set_inputType_3(int32_t value)
	{
		___inputType_3 = value;
	}

	inline static int32_t get_offset_of_inputAction_4() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___inputAction_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_inputAction_4() const { return ___inputAction_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_inputAction_4() { return &___inputAction_4; }
	inline void set_inputAction_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___inputAction_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___inputAction_4))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_keyCode_5() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___keyCode_5)); }
	inline int32_t get_keyCode_5() const { return ___keyCode_5; }
	inline int32_t* get_address_of_keyCode_5() { return &___keyCode_5; }
	inline void set_keyCode_5(int32_t value)
	{
		___keyCode_5 = value;
	}

	inline static int32_t get_offset_of_axisCodeX_6() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisCodeX_6)); }
	inline String_t* get_axisCodeX_6() const { return ___axisCodeX_6; }
	inline String_t** get_address_of_axisCodeX_6() { return &___axisCodeX_6; }
	inline void set_axisCodeX_6(String_t* value)
	{
		___axisCodeX_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___axisCodeX_6), (void*)value);
	}

	inline static int32_t get_offset_of_axisCodeY_7() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___axisCodeY_7)); }
	inline String_t* get_axisCodeY_7() const { return ___axisCodeY_7; }
	inline String_t** get_address_of_axisCodeY_7() { return &___axisCodeY_7; }
	inline void set_axisCodeY_7(String_t* value)
	{
		___axisCodeY_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___axisCodeY_7), (void*)value);
	}

	inline static int32_t get_offset_of_invertXAxis_8() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___invertXAxis_8)); }
	inline bool get_invertXAxis_8() const { return ___invertXAxis_8; }
	inline bool* get_address_of_invertXAxis_8() { return &___invertXAxis_8; }
	inline void set_invertXAxis_8(bool value)
	{
		___invertXAxis_8 = value;
	}

	inline static int32_t get_offset_of_invertYAxis_9() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___invertYAxis_9)); }
	inline bool get_invertYAxis_9() const { return ___invertYAxis_9; }
	inline bool* get_address_of_invertYAxis_9() { return &___invertYAxis_9; }
	inline void set_invertYAxis_9(bool value)
	{
		___invertYAxis_9 = value;
	}

	inline static int32_t get_offset_of_changed_10() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___changed_10)); }
	inline bool get_changed_10() const { return ___changed_10; }
	inline bool* get_address_of_changed_10() { return &___changed_10; }
	inline void set_changed_10(bool value)
	{
		___changed_10 = value;
	}

	inline static int32_t get_offset_of_rawData_11() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___rawData_11)); }
	inline RuntimeObject * get_rawData_11() const { return ___rawData_11; }
	inline RuntimeObject ** get_address_of_rawData_11() { return &___rawData_11; }
	inline void set_rawData_11(RuntimeObject * value)
	{
		___rawData_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawData_11), (void*)value);
	}

	inline static int32_t get_offset_of_boolData_12() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___boolData_12)); }
	inline bool get_boolData_12() const { return ___boolData_12; }
	inline bool* get_address_of_boolData_12() { return &___boolData_12; }
	inline void set_boolData_12(bool value)
	{
		___boolData_12 = value;
	}

	inline static int32_t get_offset_of_floatData_13() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___floatData_13)); }
	inline float get_floatData_13() const { return ___floatData_13; }
	inline float* get_address_of_floatData_13() { return &___floatData_13; }
	inline void set_floatData_13(float value)
	{
		___floatData_13 = value;
	}

	inline static int32_t get_offset_of_vector2Data_14() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___vector2Data_14)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_vector2Data_14() const { return ___vector2Data_14; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_vector2Data_14() { return &___vector2Data_14; }
	inline void set_vector2Data_14(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___vector2Data_14 = value;
	}

	inline static int32_t get_offset_of_positionData_15() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___positionData_15)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positionData_15() const { return ___positionData_15; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positionData_15() { return &___positionData_15; }
	inline void set_positionData_15(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positionData_15 = value;
	}

	inline static int32_t get_offset_of_rotationData_16() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___rotationData_16)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotationData_16() const { return ___rotationData_16; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotationData_16() { return &___rotationData_16; }
	inline void set_rotationData_16(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotationData_16 = value;
	}

	inline static int32_t get_offset_of_poseData_17() { return static_cast<int32_t>(offsetof(MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2, ___poseData_17)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_poseData_17() const { return ___poseData_17; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_poseData_17() { return &___poseData_17; }
	inline void set_poseData_17(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___poseData_17 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimpleHandDefinition
struct SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider
struct SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C  : public RuntimeObject
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::profile
	MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * ___profile_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::IsAlwaysVisibleLeft
	bool ___IsAlwaysVisibleLeft_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::IsAlwaysVisibleRight
	bool ___IsAlwaysVisibleRight_2;
	// Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::InputStateLeft
	SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___InputStateLeft_3;
	// Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::InputStateRight
	SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___InputStateRight_4;
	// Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::InputStateGaze
	SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___InputStateGaze_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::<IsSimulatingLeft>k__BackingField
	bool ___U3CIsSimulatingLeftU3Ek__BackingField_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::<IsSimulatingRight>k__BackingField
	bool ___U3CIsSimulatingRightU3Ek__BackingField_7;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::lastSimulationLeft
	float ___lastSimulationLeft_8;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::lastSimulationRight
	float ___lastSimulationRight_9;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::lastSimulationGaze
	float ___lastSimulationGaze_10;
	// System.Int64 Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::lastInputTrackedTimestampLeft
	int64_t ___lastInputTrackedTimestampLeft_11;
	// System.Int64 Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::lastInputTrackedTimestampRight
	int64_t ___lastInputTrackedTimestampRight_12;
	// System.Int64 Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::lastInputTrackedTimestampGaze
	int64_t ___lastInputTrackedTimestampGaze_13;
	// Microsoft.MixedReality.Toolkit.Input.MouseRotationProvider Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::mouseRotation
	MouseRotationProvider_t3132C21B54079D880B1797DE2579D06B8A205EF9 * ___mouseRotation_15;

public:
	inline static int32_t get_offset_of_profile_0() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___profile_0)); }
	inline MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * get_profile_0() const { return ___profile_0; }
	inline MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 ** get_address_of_profile_0() { return &___profile_0; }
	inline void set_profile_0(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * value)
	{
		___profile_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___profile_0), (void*)value);
	}

	inline static int32_t get_offset_of_IsAlwaysVisibleLeft_1() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___IsAlwaysVisibleLeft_1)); }
	inline bool get_IsAlwaysVisibleLeft_1() const { return ___IsAlwaysVisibleLeft_1; }
	inline bool* get_address_of_IsAlwaysVisibleLeft_1() { return &___IsAlwaysVisibleLeft_1; }
	inline void set_IsAlwaysVisibleLeft_1(bool value)
	{
		___IsAlwaysVisibleLeft_1 = value;
	}

	inline static int32_t get_offset_of_IsAlwaysVisibleRight_2() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___IsAlwaysVisibleRight_2)); }
	inline bool get_IsAlwaysVisibleRight_2() const { return ___IsAlwaysVisibleRight_2; }
	inline bool* get_address_of_IsAlwaysVisibleRight_2() { return &___IsAlwaysVisibleRight_2; }
	inline void set_IsAlwaysVisibleRight_2(bool value)
	{
		___IsAlwaysVisibleRight_2 = value;
	}

	inline static int32_t get_offset_of_InputStateLeft_3() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___InputStateLeft_3)); }
	inline SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * get_InputStateLeft_3() const { return ___InputStateLeft_3; }
	inline SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF ** get_address_of_InputStateLeft_3() { return &___InputStateLeft_3; }
	inline void set_InputStateLeft_3(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * value)
	{
		___InputStateLeft_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___InputStateLeft_3), (void*)value);
	}

	inline static int32_t get_offset_of_InputStateRight_4() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___InputStateRight_4)); }
	inline SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * get_InputStateRight_4() const { return ___InputStateRight_4; }
	inline SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF ** get_address_of_InputStateRight_4() { return &___InputStateRight_4; }
	inline void set_InputStateRight_4(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * value)
	{
		___InputStateRight_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___InputStateRight_4), (void*)value);
	}

	inline static int32_t get_offset_of_InputStateGaze_5() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___InputStateGaze_5)); }
	inline SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * get_InputStateGaze_5() const { return ___InputStateGaze_5; }
	inline SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF ** get_address_of_InputStateGaze_5() { return &___InputStateGaze_5; }
	inline void set_InputStateGaze_5(SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * value)
	{
		___InputStateGaze_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___InputStateGaze_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsSimulatingLeftU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___U3CIsSimulatingLeftU3Ek__BackingField_6)); }
	inline bool get_U3CIsSimulatingLeftU3Ek__BackingField_6() const { return ___U3CIsSimulatingLeftU3Ek__BackingField_6; }
	inline bool* get_address_of_U3CIsSimulatingLeftU3Ek__BackingField_6() { return &___U3CIsSimulatingLeftU3Ek__BackingField_6; }
	inline void set_U3CIsSimulatingLeftU3Ek__BackingField_6(bool value)
	{
		___U3CIsSimulatingLeftU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CIsSimulatingRightU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___U3CIsSimulatingRightU3Ek__BackingField_7)); }
	inline bool get_U3CIsSimulatingRightU3Ek__BackingField_7() const { return ___U3CIsSimulatingRightU3Ek__BackingField_7; }
	inline bool* get_address_of_U3CIsSimulatingRightU3Ek__BackingField_7() { return &___U3CIsSimulatingRightU3Ek__BackingField_7; }
	inline void set_U3CIsSimulatingRightU3Ek__BackingField_7(bool value)
	{
		___U3CIsSimulatingRightU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_lastSimulationLeft_8() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___lastSimulationLeft_8)); }
	inline float get_lastSimulationLeft_8() const { return ___lastSimulationLeft_8; }
	inline float* get_address_of_lastSimulationLeft_8() { return &___lastSimulationLeft_8; }
	inline void set_lastSimulationLeft_8(float value)
	{
		___lastSimulationLeft_8 = value;
	}

	inline static int32_t get_offset_of_lastSimulationRight_9() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___lastSimulationRight_9)); }
	inline float get_lastSimulationRight_9() const { return ___lastSimulationRight_9; }
	inline float* get_address_of_lastSimulationRight_9() { return &___lastSimulationRight_9; }
	inline void set_lastSimulationRight_9(float value)
	{
		___lastSimulationRight_9 = value;
	}

	inline static int32_t get_offset_of_lastSimulationGaze_10() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___lastSimulationGaze_10)); }
	inline float get_lastSimulationGaze_10() const { return ___lastSimulationGaze_10; }
	inline float* get_address_of_lastSimulationGaze_10() { return &___lastSimulationGaze_10; }
	inline void set_lastSimulationGaze_10(float value)
	{
		___lastSimulationGaze_10 = value;
	}

	inline static int32_t get_offset_of_lastInputTrackedTimestampLeft_11() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___lastInputTrackedTimestampLeft_11)); }
	inline int64_t get_lastInputTrackedTimestampLeft_11() const { return ___lastInputTrackedTimestampLeft_11; }
	inline int64_t* get_address_of_lastInputTrackedTimestampLeft_11() { return &___lastInputTrackedTimestampLeft_11; }
	inline void set_lastInputTrackedTimestampLeft_11(int64_t value)
	{
		___lastInputTrackedTimestampLeft_11 = value;
	}

	inline static int32_t get_offset_of_lastInputTrackedTimestampRight_12() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___lastInputTrackedTimestampRight_12)); }
	inline int64_t get_lastInputTrackedTimestampRight_12() const { return ___lastInputTrackedTimestampRight_12; }
	inline int64_t* get_address_of_lastInputTrackedTimestampRight_12() { return &___lastInputTrackedTimestampRight_12; }
	inline void set_lastInputTrackedTimestampRight_12(int64_t value)
	{
		___lastInputTrackedTimestampRight_12 = value;
	}

	inline static int32_t get_offset_of_lastInputTrackedTimestampGaze_13() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___lastInputTrackedTimestampGaze_13)); }
	inline int64_t get_lastInputTrackedTimestampGaze_13() const { return ___lastInputTrackedTimestampGaze_13; }
	inline int64_t* get_address_of_lastInputTrackedTimestampGaze_13() { return &___lastInputTrackedTimestampGaze_13; }
	inline void set_lastInputTrackedTimestampGaze_13(int64_t value)
	{
		___lastInputTrackedTimestampGaze_13 = value;
	}

	inline static int32_t get_offset_of_mouseRotation_15() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C, ___mouseRotation_15)); }
	inline MouseRotationProvider_t3132C21B54079D880B1797DE2579D06B8A205EF9 * get_mouseRotation_15() const { return ___mouseRotation_15; }
	inline MouseRotationProvider_t3132C21B54079D880B1797DE2579D06B8A205EF9 ** get_address_of_mouseRotation_15() { return &___mouseRotation_15; }
	inline void set_mouseRotation_15(MouseRotationProvider_t3132C21B54079D880B1797DE2579D06B8A205EF9 * value)
	{
		___mouseRotation_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___mouseRotation_15), (void*)value);
	}
};

struct SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::cancelRotationKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___cancelRotationKey_14;

public:
	inline static int32_t get_offset_of_cancelRotationKey_14() { return static_cast<int32_t>(offsetof(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C_StaticFields, ___cancelRotationKey_14)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_cancelRotationKey_14() const { return ___cancelRotationKey_14; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_cancelRotationKey_14() { return &___cancelRotationKey_14; }
	inline void set_cancelRotationKey_14(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___cancelRotationKey_14 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator
struct HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955  : public MulticastDelegate_t
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedHandState
struct SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911  : public SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::gesture
	int32_t ___gesture_7;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::gestureBlending
	float ___gestureBlending_8;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::poseBlending
	float ___poseBlending_9;
	// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::pose
	ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * ___pose_10;

public:
	inline static int32_t get_offset_of_gesture_7() { return static_cast<int32_t>(offsetof(SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911, ___gesture_7)); }
	inline int32_t get_gesture_7() const { return ___gesture_7; }
	inline int32_t* get_address_of_gesture_7() { return &___gesture_7; }
	inline void set_gesture_7(int32_t value)
	{
		___gesture_7 = value;
	}

	inline static int32_t get_offset_of_gestureBlending_8() { return static_cast<int32_t>(offsetof(SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911, ___gestureBlending_8)); }
	inline float get_gestureBlending_8() const { return ___gestureBlending_8; }
	inline float* get_address_of_gestureBlending_8() { return &___gestureBlending_8; }
	inline void set_gestureBlending_8(float value)
	{
		___gestureBlending_8 = value;
	}

	inline static int32_t get_offset_of_poseBlending_9() { return static_cast<int32_t>(offsetof(SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911, ___poseBlending_9)); }
	inline float get_poseBlending_9() const { return ___poseBlending_9; }
	inline float* get_address_of_poseBlending_9() { return &___poseBlending_9; }
	inline void set_poseBlending_9(float value)
	{
		___poseBlending_9 = value;
	}

	inline static int32_t get_offset_of_pose_10() { return static_cast<int32_t>(offsetof(SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911, ___pose_10)); }
	inline ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * get_pose_10() const { return ___pose_10; }
	inline ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 ** get_address_of_pose_10() { return &___pose_10; }
	inline void set_pose_10(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * value)
	{
		___pose_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pose_10), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionController
struct SimulatedMotionController_t34E4C80551264F751F75755C2C93253B427ECB10  : public BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.SimulatedMotionController::currentPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___currentPose_12;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.SimulatedMotionController::lastPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___lastPose_13;

public:
	inline static int32_t get_offset_of_currentPose_12() { return static_cast<int32_t>(offsetof(SimulatedMotionController_t34E4C80551264F751F75755C2C93253B427ECB10, ___currentPose_12)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_currentPose_12() const { return ___currentPose_12; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_currentPose_12() { return &___currentPose_12; }
	inline void set_currentPose_12(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___currentPose_12 = value;
	}

	inline static int32_t get_offset_of_lastPose_13() { return static_cast<int32_t>(offsetof(SimulatedMotionController_t34E4C80551264F751F75755C2C93253B427ECB10, ___lastPose_13)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_lastPose_13() const { return ___lastPose_13; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_lastPose_13() { return &___lastPose_13; }
	inline void set_lastPose_13(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___lastPose_13 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater
struct MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D  : public MulticastDelegate_t
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState
struct SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3  : public SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF
{
public:
	// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::<ButtonState>k__BackingField
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___U3CButtonStateU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CButtonStateU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3, ___U3CButtonStateU3Ek__BackingField_7)); }
	inline SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  get_U3CButtonStateU3Ek__BackingField_7() const { return ___U3CButtonStateU3Ek__BackingField_7; }
	inline SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * get_address_of_U3CButtonStateU3Ek__BackingField_7() { return &___U3CButtonStateU3Ek__BackingField_7; }
	inline void set_U3CButtonStateU3Ek__BackingField_7(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  value)
	{
		___U3CButtonStateU3Ek__BackingField_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerDefinition
struct WindowsMixedRealityControllerDefinition_tE4B1E571DF880E868424EE9B242D0DAF55B5750D  : public BaseInputSourceDefinition_tA2BBB75A8694422903AED62375B93459286620B6
{
public:

public:
};


// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile
struct MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::manipulationGestures
	int32_t ___manipulationGestures_5;
	// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::navigationGestures
	int32_t ___navigationGestures_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::useRailsNavigation
	bool ___useRailsNavigation_7;
	// Microsoft.MixedReality.Toolkit.Windows.Input.WindowsGestureSettings Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::railsNavigationGestures
	int32_t ___railsNavigationGestures_8;
	// Microsoft.MixedReality.Toolkit.Utilities.AutoStartBehavior Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::windowsGestureAutoStart
	int32_t ___windowsGestureAutoStart_9;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[] Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::gestures
	MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* ___gestures_10;

public:
	inline static int32_t get_offset_of_manipulationGestures_5() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___manipulationGestures_5)); }
	inline int32_t get_manipulationGestures_5() const { return ___manipulationGestures_5; }
	inline int32_t* get_address_of_manipulationGestures_5() { return &___manipulationGestures_5; }
	inline void set_manipulationGestures_5(int32_t value)
	{
		___manipulationGestures_5 = value;
	}

	inline static int32_t get_offset_of_navigationGestures_6() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___navigationGestures_6)); }
	inline int32_t get_navigationGestures_6() const { return ___navigationGestures_6; }
	inline int32_t* get_address_of_navigationGestures_6() { return &___navigationGestures_6; }
	inline void set_navigationGestures_6(int32_t value)
	{
		___navigationGestures_6 = value;
	}

	inline static int32_t get_offset_of_useRailsNavigation_7() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___useRailsNavigation_7)); }
	inline bool get_useRailsNavigation_7() const { return ___useRailsNavigation_7; }
	inline bool* get_address_of_useRailsNavigation_7() { return &___useRailsNavigation_7; }
	inline void set_useRailsNavigation_7(bool value)
	{
		___useRailsNavigation_7 = value;
	}

	inline static int32_t get_offset_of_railsNavigationGestures_8() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___railsNavigationGestures_8)); }
	inline int32_t get_railsNavigationGestures_8() const { return ___railsNavigationGestures_8; }
	inline int32_t* get_address_of_railsNavigationGestures_8() { return &___railsNavigationGestures_8; }
	inline void set_railsNavigationGestures_8(int32_t value)
	{
		___railsNavigationGestures_8 = value;
	}

	inline static int32_t get_offset_of_windowsGestureAutoStart_9() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___windowsGestureAutoStart_9)); }
	inline int32_t get_windowsGestureAutoStart_9() const { return ___windowsGestureAutoStart_9; }
	inline int32_t* get_address_of_windowsGestureAutoStart_9() { return &___windowsGestureAutoStart_9; }
	inline void set_windowsGestureAutoStart_9(int32_t value)
	{
		___windowsGestureAutoStart_9 = value;
	}

	inline static int32_t get_offset_of_gestures_10() { return static_cast<int32_t>(offsetof(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725, ___gestures_10)); }
	inline MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* get_gestures_10() const { return ___gestures_10; }
	inline MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874** get_address_of_gestures_10() { return &___gestures_10; }
	inline void set_gestures_10(MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* value)
	{
		___gestures_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gestures_10), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile
struct MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::indicatorsPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___indicatorsPrefab_5;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseRotationSensitivity
	float ___mouseRotationSensitivity_6;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseX
	String_t* ___mouseX_7;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseY
	String_t* ___mouseY_8;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseScroll
	String_t* ___mouseScroll_9;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::interactionButton
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___interactionButton_10;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::doublePressTime
	float ___doublePressTime_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::isHandsFreeInputEnabled
	bool ___isHandsFreeInputEnabled_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::isCameraControlEnabled
	bool ___isCameraControlEnabled_13;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseLookSpeed
	float ___mouseLookSpeed_14;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseLookButton
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___mouseLookButton_15;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseLookToggle
	bool ___mouseLookToggle_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::isControllerLookInverted
	bool ___isControllerLookInverted_17;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::cameraOriginOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___cameraOriginOffset_18;
	// Microsoft.MixedReality.Toolkit.Input.InputSimulationControlMode Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::currentControlMode
	int32_t ___currentControlMode_19;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::fastControlKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___fastControlKey_20;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::controlSlowSpeed
	float ___controlSlowSpeed_21;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::controlFastSpeed
	float ___controlFastSpeed_22;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::moveHorizontal
	String_t* ___moveHorizontal_23;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::moveVertical
	String_t* ___moveVertical_24;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::moveUpDown
	String_t* ___moveUpDown_25;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::lookHorizontal
	String_t* ___lookHorizontal_26;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::lookVertical
	String_t* ___lookVertical_27;
	// Microsoft.MixedReality.Toolkit.Input.EyeGazeSimulationMode Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::defaultEyeGazeSimulationMode
	int32_t ___defaultEyeGazeSimulationMode_28;
	// Microsoft.MixedReality.Toolkit.Input.ControllerSimulationMode Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::defaultControllerSimulationMode
	int32_t ___defaultControllerSimulationMode_29;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::toggleLeftControllerKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___toggleLeftControllerKey_30;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::toggleRightControllerKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___toggleRightControllerKey_31;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::controllerHideTimeout
	float ___controllerHideTimeout_32;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::leftControllerManipulationKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___leftControllerManipulationKey_33;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::rightControllerManipulationKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___rightControllerManipulationKey_34;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::mouseControllerRotationSpeed
	float ___mouseControllerRotationSpeed_35;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::controllerRotateButton
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___controllerRotateButton_36;
	// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::defaultHandGesture
	int32_t ___defaultHandGesture_37;
	// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::leftMouseHandGesture
	int32_t ___leftMouseHandGesture_38;
	// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::middleMouseHandGesture
	int32_t ___middleMouseHandGesture_39;
	// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::rightMouseHandGesture
	int32_t ___rightMouseHandGesture_40;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::handGestureAnimationSpeed
	float ___handGestureAnimationSpeed_41;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::holdStartDuration
	float ___holdStartDuration_42;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::navigationStartThreshold
	float ___navigationStartThreshold_43;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::defaultControllerDistance
	float ___defaultControllerDistance_44;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::controllerDepthMultiplier
	float ___controllerDepthMultiplier_45;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::controllerJitterAmount
	float ___controllerJitterAmount_46;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::motionControllerTriggerKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___motionControllerTriggerKey_47;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::motionControllerGrabKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___motionControllerGrabKey_48;
	// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::motionControllerMenuKey
	KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___motionControllerMenuKey_49;

public:
	inline static int32_t get_offset_of_indicatorsPrefab_5() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___indicatorsPrefab_5)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_indicatorsPrefab_5() const { return ___indicatorsPrefab_5; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_indicatorsPrefab_5() { return &___indicatorsPrefab_5; }
	inline void set_indicatorsPrefab_5(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___indicatorsPrefab_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___indicatorsPrefab_5), (void*)value);
	}

	inline static int32_t get_offset_of_mouseRotationSensitivity_6() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseRotationSensitivity_6)); }
	inline float get_mouseRotationSensitivity_6() const { return ___mouseRotationSensitivity_6; }
	inline float* get_address_of_mouseRotationSensitivity_6() { return &___mouseRotationSensitivity_6; }
	inline void set_mouseRotationSensitivity_6(float value)
	{
		___mouseRotationSensitivity_6 = value;
	}

	inline static int32_t get_offset_of_mouseX_7() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseX_7)); }
	inline String_t* get_mouseX_7() const { return ___mouseX_7; }
	inline String_t** get_address_of_mouseX_7() { return &___mouseX_7; }
	inline void set_mouseX_7(String_t* value)
	{
		___mouseX_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___mouseX_7), (void*)value);
	}

	inline static int32_t get_offset_of_mouseY_8() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseY_8)); }
	inline String_t* get_mouseY_8() const { return ___mouseY_8; }
	inline String_t** get_address_of_mouseY_8() { return &___mouseY_8; }
	inline void set_mouseY_8(String_t* value)
	{
		___mouseY_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___mouseY_8), (void*)value);
	}

	inline static int32_t get_offset_of_mouseScroll_9() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseScroll_9)); }
	inline String_t* get_mouseScroll_9() const { return ___mouseScroll_9; }
	inline String_t** get_address_of_mouseScroll_9() { return &___mouseScroll_9; }
	inline void set_mouseScroll_9(String_t* value)
	{
		___mouseScroll_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___mouseScroll_9), (void*)value);
	}

	inline static int32_t get_offset_of_interactionButton_10() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___interactionButton_10)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_interactionButton_10() const { return ___interactionButton_10; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_interactionButton_10() { return &___interactionButton_10; }
	inline void set_interactionButton_10(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___interactionButton_10 = value;
	}

	inline static int32_t get_offset_of_doublePressTime_11() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___doublePressTime_11)); }
	inline float get_doublePressTime_11() const { return ___doublePressTime_11; }
	inline float* get_address_of_doublePressTime_11() { return &___doublePressTime_11; }
	inline void set_doublePressTime_11(float value)
	{
		___doublePressTime_11 = value;
	}

	inline static int32_t get_offset_of_isHandsFreeInputEnabled_12() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___isHandsFreeInputEnabled_12)); }
	inline bool get_isHandsFreeInputEnabled_12() const { return ___isHandsFreeInputEnabled_12; }
	inline bool* get_address_of_isHandsFreeInputEnabled_12() { return &___isHandsFreeInputEnabled_12; }
	inline void set_isHandsFreeInputEnabled_12(bool value)
	{
		___isHandsFreeInputEnabled_12 = value;
	}

	inline static int32_t get_offset_of_isCameraControlEnabled_13() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___isCameraControlEnabled_13)); }
	inline bool get_isCameraControlEnabled_13() const { return ___isCameraControlEnabled_13; }
	inline bool* get_address_of_isCameraControlEnabled_13() { return &___isCameraControlEnabled_13; }
	inline void set_isCameraControlEnabled_13(bool value)
	{
		___isCameraControlEnabled_13 = value;
	}

	inline static int32_t get_offset_of_mouseLookSpeed_14() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseLookSpeed_14)); }
	inline float get_mouseLookSpeed_14() const { return ___mouseLookSpeed_14; }
	inline float* get_address_of_mouseLookSpeed_14() { return &___mouseLookSpeed_14; }
	inline void set_mouseLookSpeed_14(float value)
	{
		___mouseLookSpeed_14 = value;
	}

	inline static int32_t get_offset_of_mouseLookButton_15() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseLookButton_15)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_mouseLookButton_15() const { return ___mouseLookButton_15; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_mouseLookButton_15() { return &___mouseLookButton_15; }
	inline void set_mouseLookButton_15(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___mouseLookButton_15 = value;
	}

	inline static int32_t get_offset_of_mouseLookToggle_16() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseLookToggle_16)); }
	inline bool get_mouseLookToggle_16() const { return ___mouseLookToggle_16; }
	inline bool* get_address_of_mouseLookToggle_16() { return &___mouseLookToggle_16; }
	inline void set_mouseLookToggle_16(bool value)
	{
		___mouseLookToggle_16 = value;
	}

	inline static int32_t get_offset_of_isControllerLookInverted_17() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___isControllerLookInverted_17)); }
	inline bool get_isControllerLookInverted_17() const { return ___isControllerLookInverted_17; }
	inline bool* get_address_of_isControllerLookInverted_17() { return &___isControllerLookInverted_17; }
	inline void set_isControllerLookInverted_17(bool value)
	{
		___isControllerLookInverted_17 = value;
	}

	inline static int32_t get_offset_of_cameraOriginOffset_18() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___cameraOriginOffset_18)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_cameraOriginOffset_18() const { return ___cameraOriginOffset_18; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_cameraOriginOffset_18() { return &___cameraOriginOffset_18; }
	inline void set_cameraOriginOffset_18(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___cameraOriginOffset_18 = value;
	}

	inline static int32_t get_offset_of_currentControlMode_19() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___currentControlMode_19)); }
	inline int32_t get_currentControlMode_19() const { return ___currentControlMode_19; }
	inline int32_t* get_address_of_currentControlMode_19() { return &___currentControlMode_19; }
	inline void set_currentControlMode_19(int32_t value)
	{
		___currentControlMode_19 = value;
	}

	inline static int32_t get_offset_of_fastControlKey_20() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___fastControlKey_20)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_fastControlKey_20() const { return ___fastControlKey_20; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_fastControlKey_20() { return &___fastControlKey_20; }
	inline void set_fastControlKey_20(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___fastControlKey_20 = value;
	}

	inline static int32_t get_offset_of_controlSlowSpeed_21() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___controlSlowSpeed_21)); }
	inline float get_controlSlowSpeed_21() const { return ___controlSlowSpeed_21; }
	inline float* get_address_of_controlSlowSpeed_21() { return &___controlSlowSpeed_21; }
	inline void set_controlSlowSpeed_21(float value)
	{
		___controlSlowSpeed_21 = value;
	}

	inline static int32_t get_offset_of_controlFastSpeed_22() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___controlFastSpeed_22)); }
	inline float get_controlFastSpeed_22() const { return ___controlFastSpeed_22; }
	inline float* get_address_of_controlFastSpeed_22() { return &___controlFastSpeed_22; }
	inline void set_controlFastSpeed_22(float value)
	{
		___controlFastSpeed_22 = value;
	}

	inline static int32_t get_offset_of_moveHorizontal_23() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___moveHorizontal_23)); }
	inline String_t* get_moveHorizontal_23() const { return ___moveHorizontal_23; }
	inline String_t** get_address_of_moveHorizontal_23() { return &___moveHorizontal_23; }
	inline void set_moveHorizontal_23(String_t* value)
	{
		___moveHorizontal_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___moveHorizontal_23), (void*)value);
	}

	inline static int32_t get_offset_of_moveVertical_24() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___moveVertical_24)); }
	inline String_t* get_moveVertical_24() const { return ___moveVertical_24; }
	inline String_t** get_address_of_moveVertical_24() { return &___moveVertical_24; }
	inline void set_moveVertical_24(String_t* value)
	{
		___moveVertical_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___moveVertical_24), (void*)value);
	}

	inline static int32_t get_offset_of_moveUpDown_25() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___moveUpDown_25)); }
	inline String_t* get_moveUpDown_25() const { return ___moveUpDown_25; }
	inline String_t** get_address_of_moveUpDown_25() { return &___moveUpDown_25; }
	inline void set_moveUpDown_25(String_t* value)
	{
		___moveUpDown_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___moveUpDown_25), (void*)value);
	}

	inline static int32_t get_offset_of_lookHorizontal_26() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___lookHorizontal_26)); }
	inline String_t* get_lookHorizontal_26() const { return ___lookHorizontal_26; }
	inline String_t** get_address_of_lookHorizontal_26() { return &___lookHorizontal_26; }
	inline void set_lookHorizontal_26(String_t* value)
	{
		___lookHorizontal_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lookHorizontal_26), (void*)value);
	}

	inline static int32_t get_offset_of_lookVertical_27() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___lookVertical_27)); }
	inline String_t* get_lookVertical_27() const { return ___lookVertical_27; }
	inline String_t** get_address_of_lookVertical_27() { return &___lookVertical_27; }
	inline void set_lookVertical_27(String_t* value)
	{
		___lookVertical_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___lookVertical_27), (void*)value);
	}

	inline static int32_t get_offset_of_defaultEyeGazeSimulationMode_28() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___defaultEyeGazeSimulationMode_28)); }
	inline int32_t get_defaultEyeGazeSimulationMode_28() const { return ___defaultEyeGazeSimulationMode_28; }
	inline int32_t* get_address_of_defaultEyeGazeSimulationMode_28() { return &___defaultEyeGazeSimulationMode_28; }
	inline void set_defaultEyeGazeSimulationMode_28(int32_t value)
	{
		___defaultEyeGazeSimulationMode_28 = value;
	}

	inline static int32_t get_offset_of_defaultControllerSimulationMode_29() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___defaultControllerSimulationMode_29)); }
	inline int32_t get_defaultControllerSimulationMode_29() const { return ___defaultControllerSimulationMode_29; }
	inline int32_t* get_address_of_defaultControllerSimulationMode_29() { return &___defaultControllerSimulationMode_29; }
	inline void set_defaultControllerSimulationMode_29(int32_t value)
	{
		___defaultControllerSimulationMode_29 = value;
	}

	inline static int32_t get_offset_of_toggleLeftControllerKey_30() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___toggleLeftControllerKey_30)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_toggleLeftControllerKey_30() const { return ___toggleLeftControllerKey_30; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_toggleLeftControllerKey_30() { return &___toggleLeftControllerKey_30; }
	inline void set_toggleLeftControllerKey_30(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___toggleLeftControllerKey_30 = value;
	}

	inline static int32_t get_offset_of_toggleRightControllerKey_31() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___toggleRightControllerKey_31)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_toggleRightControllerKey_31() const { return ___toggleRightControllerKey_31; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_toggleRightControllerKey_31() { return &___toggleRightControllerKey_31; }
	inline void set_toggleRightControllerKey_31(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___toggleRightControllerKey_31 = value;
	}

	inline static int32_t get_offset_of_controllerHideTimeout_32() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___controllerHideTimeout_32)); }
	inline float get_controllerHideTimeout_32() const { return ___controllerHideTimeout_32; }
	inline float* get_address_of_controllerHideTimeout_32() { return &___controllerHideTimeout_32; }
	inline void set_controllerHideTimeout_32(float value)
	{
		___controllerHideTimeout_32 = value;
	}

	inline static int32_t get_offset_of_leftControllerManipulationKey_33() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___leftControllerManipulationKey_33)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_leftControllerManipulationKey_33() const { return ___leftControllerManipulationKey_33; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_leftControllerManipulationKey_33() { return &___leftControllerManipulationKey_33; }
	inline void set_leftControllerManipulationKey_33(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___leftControllerManipulationKey_33 = value;
	}

	inline static int32_t get_offset_of_rightControllerManipulationKey_34() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___rightControllerManipulationKey_34)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_rightControllerManipulationKey_34() const { return ___rightControllerManipulationKey_34; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_rightControllerManipulationKey_34() { return &___rightControllerManipulationKey_34; }
	inline void set_rightControllerManipulationKey_34(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___rightControllerManipulationKey_34 = value;
	}

	inline static int32_t get_offset_of_mouseControllerRotationSpeed_35() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___mouseControllerRotationSpeed_35)); }
	inline float get_mouseControllerRotationSpeed_35() const { return ___mouseControllerRotationSpeed_35; }
	inline float* get_address_of_mouseControllerRotationSpeed_35() { return &___mouseControllerRotationSpeed_35; }
	inline void set_mouseControllerRotationSpeed_35(float value)
	{
		___mouseControllerRotationSpeed_35 = value;
	}

	inline static int32_t get_offset_of_controllerRotateButton_36() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___controllerRotateButton_36)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_controllerRotateButton_36() const { return ___controllerRotateButton_36; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_controllerRotateButton_36() { return &___controllerRotateButton_36; }
	inline void set_controllerRotateButton_36(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___controllerRotateButton_36 = value;
	}

	inline static int32_t get_offset_of_defaultHandGesture_37() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___defaultHandGesture_37)); }
	inline int32_t get_defaultHandGesture_37() const { return ___defaultHandGesture_37; }
	inline int32_t* get_address_of_defaultHandGesture_37() { return &___defaultHandGesture_37; }
	inline void set_defaultHandGesture_37(int32_t value)
	{
		___defaultHandGesture_37 = value;
	}

	inline static int32_t get_offset_of_leftMouseHandGesture_38() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___leftMouseHandGesture_38)); }
	inline int32_t get_leftMouseHandGesture_38() const { return ___leftMouseHandGesture_38; }
	inline int32_t* get_address_of_leftMouseHandGesture_38() { return &___leftMouseHandGesture_38; }
	inline void set_leftMouseHandGesture_38(int32_t value)
	{
		___leftMouseHandGesture_38 = value;
	}

	inline static int32_t get_offset_of_middleMouseHandGesture_39() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___middleMouseHandGesture_39)); }
	inline int32_t get_middleMouseHandGesture_39() const { return ___middleMouseHandGesture_39; }
	inline int32_t* get_address_of_middleMouseHandGesture_39() { return &___middleMouseHandGesture_39; }
	inline void set_middleMouseHandGesture_39(int32_t value)
	{
		___middleMouseHandGesture_39 = value;
	}

	inline static int32_t get_offset_of_rightMouseHandGesture_40() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___rightMouseHandGesture_40)); }
	inline int32_t get_rightMouseHandGesture_40() const { return ___rightMouseHandGesture_40; }
	inline int32_t* get_address_of_rightMouseHandGesture_40() { return &___rightMouseHandGesture_40; }
	inline void set_rightMouseHandGesture_40(int32_t value)
	{
		___rightMouseHandGesture_40 = value;
	}

	inline static int32_t get_offset_of_handGestureAnimationSpeed_41() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___handGestureAnimationSpeed_41)); }
	inline float get_handGestureAnimationSpeed_41() const { return ___handGestureAnimationSpeed_41; }
	inline float* get_address_of_handGestureAnimationSpeed_41() { return &___handGestureAnimationSpeed_41; }
	inline void set_handGestureAnimationSpeed_41(float value)
	{
		___handGestureAnimationSpeed_41 = value;
	}

	inline static int32_t get_offset_of_holdStartDuration_42() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___holdStartDuration_42)); }
	inline float get_holdStartDuration_42() const { return ___holdStartDuration_42; }
	inline float* get_address_of_holdStartDuration_42() { return &___holdStartDuration_42; }
	inline void set_holdStartDuration_42(float value)
	{
		___holdStartDuration_42 = value;
	}

	inline static int32_t get_offset_of_navigationStartThreshold_43() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___navigationStartThreshold_43)); }
	inline float get_navigationStartThreshold_43() const { return ___navigationStartThreshold_43; }
	inline float* get_address_of_navigationStartThreshold_43() { return &___navigationStartThreshold_43; }
	inline void set_navigationStartThreshold_43(float value)
	{
		___navigationStartThreshold_43 = value;
	}

	inline static int32_t get_offset_of_defaultControllerDistance_44() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___defaultControllerDistance_44)); }
	inline float get_defaultControllerDistance_44() const { return ___defaultControllerDistance_44; }
	inline float* get_address_of_defaultControllerDistance_44() { return &___defaultControllerDistance_44; }
	inline void set_defaultControllerDistance_44(float value)
	{
		___defaultControllerDistance_44 = value;
	}

	inline static int32_t get_offset_of_controllerDepthMultiplier_45() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___controllerDepthMultiplier_45)); }
	inline float get_controllerDepthMultiplier_45() const { return ___controllerDepthMultiplier_45; }
	inline float* get_address_of_controllerDepthMultiplier_45() { return &___controllerDepthMultiplier_45; }
	inline void set_controllerDepthMultiplier_45(float value)
	{
		___controllerDepthMultiplier_45 = value;
	}

	inline static int32_t get_offset_of_controllerJitterAmount_46() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___controllerJitterAmount_46)); }
	inline float get_controllerJitterAmount_46() const { return ___controllerJitterAmount_46; }
	inline float* get_address_of_controllerJitterAmount_46() { return &___controllerJitterAmount_46; }
	inline void set_controllerJitterAmount_46(float value)
	{
		___controllerJitterAmount_46 = value;
	}

	inline static int32_t get_offset_of_motionControllerTriggerKey_47() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___motionControllerTriggerKey_47)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_motionControllerTriggerKey_47() const { return ___motionControllerTriggerKey_47; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_motionControllerTriggerKey_47() { return &___motionControllerTriggerKey_47; }
	inline void set_motionControllerTriggerKey_47(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___motionControllerTriggerKey_47 = value;
	}

	inline static int32_t get_offset_of_motionControllerGrabKey_48() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___motionControllerGrabKey_48)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_motionControllerGrabKey_48() const { return ___motionControllerGrabKey_48; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_motionControllerGrabKey_48() { return &___motionControllerGrabKey_48; }
	inline void set_motionControllerGrabKey_48(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___motionControllerGrabKey_48 = value;
	}

	inline static int32_t get_offset_of_motionControllerMenuKey_49() { return static_cast<int32_t>(offsetof(MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977, ___motionControllerMenuKey_49)); }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  get_motionControllerMenuKey_49() const { return ___motionControllerMenuKey_49; }
	inline KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79 * get_address_of_motionControllerMenuKey_49() { return &___motionControllerMenuKey_49; }
	inline void set_motionControllerMenuKey_49(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  value)
	{
		___motionControllerMenuKey_49 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile
struct MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2  : public BaseMixedRealityProfile_tB4DC16619B37D298D22571CE017070A78EF826E8
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputDataProviderConfiguration[] Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::dataProviderConfigurations
	MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* ___dataProviderConfigurations_5;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___focusProviderType_6;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::raycastProviderType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___raycastProviderType_7;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusQueryBufferSize
	int32_t ___focusQueryBufferSize_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::shouldUseGraphicsRaycast
	bool ___shouldUseGraphicsRaycast_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::focusIndividualCompoundCollider
	bool ___focusIndividualCompoundCollider_10;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionsProfile
	MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * ___inputActionsProfile_11;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputActionRulesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::inputActionRulesProfile
	MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * ___inputActionRulesProfile_12;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::pointerProfile
	MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * ___pointerProfile_13;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::gesturesProfile
	MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * ___gesturesProfile_14;
	// System.Collections.Generic.List`1<System.Globalization.CultureInfo> Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::supportedVoiceCultures
	List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * ___supportedVoiceCultures_15;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealitySpeechCommandsProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::speechCommandsProfile
	MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * ___speechCommandsProfile_16;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::enableControllerMapping
	bool ___enableControllerMapping_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerMappingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerMappingProfile
	MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * ___controllerMappingProfile_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityControllerVisualizationProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::controllerVisualizationProfile
	MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * ___controllerVisualizationProfile_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityHandTrackingProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::handTrackingProfile
	MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * ___handTrackingProfile_20;

public:
	inline static int32_t get_offset_of_dataProviderConfigurations_5() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___dataProviderConfigurations_5)); }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* get_dataProviderConfigurations_5() const { return ___dataProviderConfigurations_5; }
	inline MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426** get_address_of_dataProviderConfigurations_5() { return &___dataProviderConfigurations_5; }
	inline void set_dataProviderConfigurations_5(MixedRealityInputDataProviderConfigurationU5BU5D_t621D14E0DCEE987398F574E5335D55FDBDFBE426* value)
	{
		___dataProviderConfigurations_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dataProviderConfigurations_5), (void*)value);
	}

	inline static int32_t get_offset_of_focusProviderType_6() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusProviderType_6)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_focusProviderType_6() const { return ___focusProviderType_6; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_focusProviderType_6() { return &___focusProviderType_6; }
	inline void set_focusProviderType_6(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___focusProviderType_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___focusProviderType_6), (void*)value);
	}

	inline static int32_t get_offset_of_raycastProviderType_7() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___raycastProviderType_7)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_raycastProviderType_7() const { return ___raycastProviderType_7; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_raycastProviderType_7() { return &___raycastProviderType_7; }
	inline void set_raycastProviderType_7(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___raycastProviderType_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastProviderType_7), (void*)value);
	}

	inline static int32_t get_offset_of_focusQueryBufferSize_8() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusQueryBufferSize_8)); }
	inline int32_t get_focusQueryBufferSize_8() const { return ___focusQueryBufferSize_8; }
	inline int32_t* get_address_of_focusQueryBufferSize_8() { return &___focusQueryBufferSize_8; }
	inline void set_focusQueryBufferSize_8(int32_t value)
	{
		___focusQueryBufferSize_8 = value;
	}

	inline static int32_t get_offset_of_shouldUseGraphicsRaycast_9() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___shouldUseGraphicsRaycast_9)); }
	inline bool get_shouldUseGraphicsRaycast_9() const { return ___shouldUseGraphicsRaycast_9; }
	inline bool* get_address_of_shouldUseGraphicsRaycast_9() { return &___shouldUseGraphicsRaycast_9; }
	inline void set_shouldUseGraphicsRaycast_9(bool value)
	{
		___shouldUseGraphicsRaycast_9 = value;
	}

	inline static int32_t get_offset_of_focusIndividualCompoundCollider_10() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___focusIndividualCompoundCollider_10)); }
	inline bool get_focusIndividualCompoundCollider_10() const { return ___focusIndividualCompoundCollider_10; }
	inline bool* get_address_of_focusIndividualCompoundCollider_10() { return &___focusIndividualCompoundCollider_10; }
	inline void set_focusIndividualCompoundCollider_10(bool value)
	{
		___focusIndividualCompoundCollider_10 = value;
	}

	inline static int32_t get_offset_of_inputActionsProfile_11() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionsProfile_11)); }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * get_inputActionsProfile_11() const { return ___inputActionsProfile_11; }
	inline MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 ** get_address_of_inputActionsProfile_11() { return &___inputActionsProfile_11; }
	inline void set_inputActionsProfile_11(MixedRealityInputActionsProfile_t5D05F56AB25081BDE6B4697C8DF609F2A458EA12 * value)
	{
		___inputActionsProfile_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionsProfile_11), (void*)value);
	}

	inline static int32_t get_offset_of_inputActionRulesProfile_12() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___inputActionRulesProfile_12)); }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * get_inputActionRulesProfile_12() const { return ___inputActionRulesProfile_12; }
	inline MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A ** get_address_of_inputActionRulesProfile_12() { return &___inputActionRulesProfile_12; }
	inline void set_inputActionRulesProfile_12(MixedRealityInputActionRulesProfile_t4CE915FD59B3CEE0DDE18E9BF5922E5628DCCD3A * value)
	{
		___inputActionRulesProfile_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputActionRulesProfile_12), (void*)value);
	}

	inline static int32_t get_offset_of_pointerProfile_13() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___pointerProfile_13)); }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * get_pointerProfile_13() const { return ___pointerProfile_13; }
	inline MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E ** get_address_of_pointerProfile_13() { return &___pointerProfile_13; }
	inline void set_pointerProfile_13(MixedRealityPointerProfile_t006E66A5D042614269E3195CA2042A3AC964671E * value)
	{
		___pointerProfile_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerProfile_13), (void*)value);
	}

	inline static int32_t get_offset_of_gesturesProfile_14() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___gesturesProfile_14)); }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * get_gesturesProfile_14() const { return ___gesturesProfile_14; }
	inline MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 ** get_address_of_gesturesProfile_14() { return &___gesturesProfile_14; }
	inline void set_gesturesProfile_14(MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * value)
	{
		___gesturesProfile_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___gesturesProfile_14), (void*)value);
	}

	inline static int32_t get_offset_of_supportedVoiceCultures_15() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___supportedVoiceCultures_15)); }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * get_supportedVoiceCultures_15() const { return ___supportedVoiceCultures_15; }
	inline List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 ** get_address_of_supportedVoiceCultures_15() { return &___supportedVoiceCultures_15; }
	inline void set_supportedVoiceCultures_15(List_1_t74F59DD36FAE0CFB087612565C42CAD359647832 * value)
	{
		___supportedVoiceCultures_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___supportedVoiceCultures_15), (void*)value);
	}

	inline static int32_t get_offset_of_speechCommandsProfile_16() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___speechCommandsProfile_16)); }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * get_speechCommandsProfile_16() const { return ___speechCommandsProfile_16; }
	inline MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD ** get_address_of_speechCommandsProfile_16() { return &___speechCommandsProfile_16; }
	inline void set_speechCommandsProfile_16(MixedRealitySpeechCommandsProfile_t73EF505A304D3B94E486F30B64A9A002FBD858CD * value)
	{
		___speechCommandsProfile_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___speechCommandsProfile_16), (void*)value);
	}

	inline static int32_t get_offset_of_enableControllerMapping_17() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___enableControllerMapping_17)); }
	inline bool get_enableControllerMapping_17() const { return ___enableControllerMapping_17; }
	inline bool* get_address_of_enableControllerMapping_17() { return &___enableControllerMapping_17; }
	inline void set_enableControllerMapping_17(bool value)
	{
		___enableControllerMapping_17 = value;
	}

	inline static int32_t get_offset_of_controllerMappingProfile_18() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerMappingProfile_18)); }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * get_controllerMappingProfile_18() const { return ___controllerMappingProfile_18; }
	inline MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB ** get_address_of_controllerMappingProfile_18() { return &___controllerMappingProfile_18; }
	inline void set_controllerMappingProfile_18(MixedRealityControllerMappingProfile_t254FF0C8E28DA6341E36D23A9DD832B11ACCE9DB * value)
	{
		___controllerMappingProfile_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerMappingProfile_18), (void*)value);
	}

	inline static int32_t get_offset_of_controllerVisualizationProfile_19() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___controllerVisualizationProfile_19)); }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * get_controllerVisualizationProfile_19() const { return ___controllerVisualizationProfile_19; }
	inline MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D ** get_address_of_controllerVisualizationProfile_19() { return &___controllerVisualizationProfile_19; }
	inline void set_controllerVisualizationProfile_19(MixedRealityControllerVisualizationProfile_tDF62A9AB730F36F2AF8454D32ECF008D046E899D * value)
	{
		___controllerVisualizationProfile_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controllerVisualizationProfile_19), (void*)value);
	}

	inline static int32_t get_offset_of_handTrackingProfile_20() { return static_cast<int32_t>(offsetof(MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2, ___handTrackingProfile_20)); }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * get_handTrackingProfile_20() const { return ___handTrackingProfile_20; }
	inline MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 ** get_address_of_handTrackingProfile_20() { return &___handTrackingProfile_20; }
	inline void set_handTrackingProfile_20(MixedRealityHandTrackingProfile_tFA3A9118040918D9E221EEB94786E3A333A12E36 * value)
	{
		___handTrackingProfile_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___handTrackingProfile_20), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedHand
struct SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E  : public BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B
{
public:
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose> Microsoft.MixedReality.Toolkit.Input.SimulatedHand::jointPoses
	Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * ___jointPoses_20;

public:
	inline static int32_t get_offset_of_jointPoses_20() { return static_cast<int32_t>(offsetof(SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E, ___jointPoses_20)); }
	inline Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * get_jointPoses_20() const { return ___jointPoses_20; }
	inline Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 ** get_address_of_jointPoses_20() { return &___jointPoses_20; }
	inline void set_jointPoses_20(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * value)
	{
		___jointPoses_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___jointPoses_20), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider
struct SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3  : public SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C
{
public:
	// Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::generatorLeft
	HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * ___generatorLeft_16;
	// Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::generatorRight
	HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * ___generatorRight_17;
	// Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::generatorGaze
	HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * ___generatorGaze_18;

public:
	inline static int32_t get_offset_of_generatorLeft_16() { return static_cast<int32_t>(offsetof(SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3, ___generatorLeft_16)); }
	inline HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * get_generatorLeft_16() const { return ___generatorLeft_16; }
	inline HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 ** get_address_of_generatorLeft_16() { return &___generatorLeft_16; }
	inline void set_generatorLeft_16(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * value)
	{
		___generatorLeft_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___generatorLeft_16), (void*)value);
	}

	inline static int32_t get_offset_of_generatorRight_17() { return static_cast<int32_t>(offsetof(SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3, ___generatorRight_17)); }
	inline HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * get_generatorRight_17() const { return ___generatorRight_17; }
	inline HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 ** get_address_of_generatorRight_17() { return &___generatorRight_17; }
	inline void set_generatorRight_17(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * value)
	{
		___generatorRight_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___generatorRight_17), (void*)value);
	}

	inline static int32_t get_offset_of_generatorGaze_18() { return static_cast<int32_t>(offsetof(SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3, ___generatorGaze_18)); }
	inline HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * get_generatorGaze_18() const { return ___generatorGaze_18; }
	inline HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 ** get_address_of_generatorGaze_18() { return &___generatorGaze_18; }
	inline void set_generatorGaze_18(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * value)
	{
		___generatorGaze_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___generatorGaze_18), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider
struct SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C  : public SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C
{
public:
	// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider::updaterLeft
	MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * ___updaterLeft_16;
	// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider::updaterRight
	MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * ___updaterRight_17;

public:
	inline static int32_t get_offset_of_updaterLeft_16() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C, ___updaterLeft_16)); }
	inline MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * get_updaterLeft_16() const { return ___updaterLeft_16; }
	inline MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D ** get_address_of_updaterLeft_16() { return &___updaterLeft_16; }
	inline void set_updaterLeft_16(MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * value)
	{
		___updaterLeft_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updaterLeft_16), (void*)value);
	}

	inline static int32_t get_offset_of_updaterRight_17() { return static_cast<int32_t>(offsetof(SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C, ___updaterRight_17)); }
	inline MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * get_updaterRight_17() const { return ___updaterRight_17; }
	inline MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D ** get_address_of_updaterRight_17() { return &___updaterRight_17; }
	inline void set_updaterRight_17(MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * value)
	{
		___updaterRight_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updaterRight_17), (void*)value);
	}
};


// UnityEngine.Camera
struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};

struct Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields
{
public:
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * ___onPostRender_6;

public:
	inline static int32_t get_offset_of_onPreCull_4() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreCull_4)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreCull_4() const { return ___onPreCull_4; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreCull_4() { return &___onPreCull_4; }
	inline void set_onPreCull_4(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreCull_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreCull_4), (void*)value);
	}

	inline static int32_t get_offset_of_onPreRender_5() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPreRender_5)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPreRender_5() const { return ___onPreRender_5; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPreRender_5() { return &___onPreRender_5; }
	inline void set_onPreRender_5(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPreRender_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPreRender_5), (void*)value);
	}

	inline static int32_t get_offset_of_onPostRender_6() { return static_cast<int32_t>(offsetof(Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34_StaticFields, ___onPostRender_6)); }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * get_onPostRender_6() const { return ___onPostRender_6; }
	inline CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 ** get_address_of_onPostRender_6() { return &___onPostRender_6; }
	inline void set_onPostRender_6(CameraCallback_t8BBB42AA08D7498DFC11F4128117055BC7F0B9D0 * value)
	{
		___onPostRender_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPostRender_6), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand
struct SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB  : public SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::initializedFromProfile
	bool ___initializedFromProfile_21;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::holdAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___holdAction_22;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::navigationAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___navigationAction_23;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::manipulationAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___manipulationAction_24;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::selectAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___selectAction_25;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::useRailsNavigation
	bool ___useRailsNavigation_26;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::holdStartDuration
	float ___holdStartDuration_27;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::navigationStartThreshold
	float ___navigationStartThreshold_28;
	// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::SelectDownStartTime
	float ___SelectDownStartTime_29;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::holdInProgress
	bool ___holdInProgress_30;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::manipulationInProgress
	bool ___manipulationInProgress_31;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::navigationInProgress
	bool ___navigationInProgress_32;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::currentRailsUsed
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentRailsUsed_33;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::currentPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___currentPosition_34;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::cumulativeDelta
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___cumulativeDelta_35;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::currentGripPose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___currentGripPose_36;

public:
	inline static int32_t get_offset_of_initializedFromProfile_21() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___initializedFromProfile_21)); }
	inline bool get_initializedFromProfile_21() const { return ___initializedFromProfile_21; }
	inline bool* get_address_of_initializedFromProfile_21() { return &___initializedFromProfile_21; }
	inline void set_initializedFromProfile_21(bool value)
	{
		___initializedFromProfile_21 = value;
	}

	inline static int32_t get_offset_of_holdAction_22() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___holdAction_22)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_holdAction_22() const { return ___holdAction_22; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_holdAction_22() { return &___holdAction_22; }
	inline void set_holdAction_22(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___holdAction_22 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___holdAction_22))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_navigationAction_23() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___navigationAction_23)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_navigationAction_23() const { return ___navigationAction_23; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_navigationAction_23() { return &___navigationAction_23; }
	inline void set_navigationAction_23(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___navigationAction_23 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___navigationAction_23))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_manipulationAction_24() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___manipulationAction_24)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_manipulationAction_24() const { return ___manipulationAction_24; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_manipulationAction_24() { return &___manipulationAction_24; }
	inline void set_manipulationAction_24(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___manipulationAction_24 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___manipulationAction_24))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_selectAction_25() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___selectAction_25)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_selectAction_25() const { return ___selectAction_25; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_selectAction_25() { return &___selectAction_25; }
	inline void set_selectAction_25(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___selectAction_25 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___selectAction_25))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_useRailsNavigation_26() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___useRailsNavigation_26)); }
	inline bool get_useRailsNavigation_26() const { return ___useRailsNavigation_26; }
	inline bool* get_address_of_useRailsNavigation_26() { return &___useRailsNavigation_26; }
	inline void set_useRailsNavigation_26(bool value)
	{
		___useRailsNavigation_26 = value;
	}

	inline static int32_t get_offset_of_holdStartDuration_27() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___holdStartDuration_27)); }
	inline float get_holdStartDuration_27() const { return ___holdStartDuration_27; }
	inline float* get_address_of_holdStartDuration_27() { return &___holdStartDuration_27; }
	inline void set_holdStartDuration_27(float value)
	{
		___holdStartDuration_27 = value;
	}

	inline static int32_t get_offset_of_navigationStartThreshold_28() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___navigationStartThreshold_28)); }
	inline float get_navigationStartThreshold_28() const { return ___navigationStartThreshold_28; }
	inline float* get_address_of_navigationStartThreshold_28() { return &___navigationStartThreshold_28; }
	inline void set_navigationStartThreshold_28(float value)
	{
		___navigationStartThreshold_28 = value;
	}

	inline static int32_t get_offset_of_SelectDownStartTime_29() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___SelectDownStartTime_29)); }
	inline float get_SelectDownStartTime_29() const { return ___SelectDownStartTime_29; }
	inline float* get_address_of_SelectDownStartTime_29() { return &___SelectDownStartTime_29; }
	inline void set_SelectDownStartTime_29(float value)
	{
		___SelectDownStartTime_29 = value;
	}

	inline static int32_t get_offset_of_holdInProgress_30() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___holdInProgress_30)); }
	inline bool get_holdInProgress_30() const { return ___holdInProgress_30; }
	inline bool* get_address_of_holdInProgress_30() { return &___holdInProgress_30; }
	inline void set_holdInProgress_30(bool value)
	{
		___holdInProgress_30 = value;
	}

	inline static int32_t get_offset_of_manipulationInProgress_31() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___manipulationInProgress_31)); }
	inline bool get_manipulationInProgress_31() const { return ___manipulationInProgress_31; }
	inline bool* get_address_of_manipulationInProgress_31() { return &___manipulationInProgress_31; }
	inline void set_manipulationInProgress_31(bool value)
	{
		___manipulationInProgress_31 = value;
	}

	inline static int32_t get_offset_of_navigationInProgress_32() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___navigationInProgress_32)); }
	inline bool get_navigationInProgress_32() const { return ___navigationInProgress_32; }
	inline bool* get_address_of_navigationInProgress_32() { return &___navigationInProgress_32; }
	inline void set_navigationInProgress_32(bool value)
	{
		___navigationInProgress_32 = value;
	}

	inline static int32_t get_offset_of_currentRailsUsed_33() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___currentRailsUsed_33)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentRailsUsed_33() const { return ___currentRailsUsed_33; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentRailsUsed_33() { return &___currentRailsUsed_33; }
	inline void set_currentRailsUsed_33(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentRailsUsed_33 = value;
	}

	inline static int32_t get_offset_of_currentPosition_34() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___currentPosition_34)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_currentPosition_34() const { return ___currentPosition_34; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_currentPosition_34() { return &___currentPosition_34; }
	inline void set_currentPosition_34(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___currentPosition_34 = value;
	}

	inline static int32_t get_offset_of_cumulativeDelta_35() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___cumulativeDelta_35)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_cumulativeDelta_35() const { return ___cumulativeDelta_35; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_cumulativeDelta_35() { return &___cumulativeDelta_35; }
	inline void set_cumulativeDelta_35(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___cumulativeDelta_35 = value;
	}

	inline static int32_t get_offset_of_currentGripPose_36() { return static_cast<int32_t>(offsetof(SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB, ___currentGripPose_36)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_currentGripPose_36() const { return ___currentGripPose_36; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_currentGripPose_36() { return &___currentGripPose_36; }
	inline void set_currentGripPose_36(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___currentGripPose_36 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[]
struct MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * m_Items[1];

public:
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[]
struct MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  m_Items[1];

public:
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___description_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&((m_Items + index)->___action_2))->___description_2), (void*)NULL);
		#endif
	}
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___description_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&((m_Items + index)->___action_2))->___description_2), (void*)NULL);
		#endif
	}
};
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[]
struct MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  m_Items[1];

public:
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		m_Items[index] = value;
	}
};
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  m_Items[1];

public:
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  m_Items[1];

public:
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};


// !!0 Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared (const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Int32Enum,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::ContainsKey(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_ContainsKey_m83D33BC652DBE4549C5B2C4A1E51BDA96E1989C6_gshared (Dictionary_2_t4594E9EA67CB7172740DF4116774A3B1432A9E97 * __this, int32_t ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mBB39FF6AADDEF60E949DF52642B7BA33E9CC5406_gshared (Dictionary_2_t4594E9EA67CB7172740DF4116774A3B1432A9E97 * __this, int32_t ___key0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___value1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::set_Item(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_set_Item_m72BAB8E16164B0649C7EFF83BD5C1904748DC7F0_gshared (Dictionary_2_t4594E9EA67CB7172740DF4116774A3B1432A9E97 * __this, int32_t ___key0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___value1, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.Int32Enum,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  Dictionary_2_get_Item_mE6B9D39124056519428A572665E726815D5600EF_gshared (Dictionary_2_t4594E9EA67CB7172740DF4116774A3B1432A9E97 * __this, int32_t ___key0, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Int32>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_gshared (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, int32_t ___value0, const RuntimeMethod* method);
// !0 System.Nullable`1<System.Int32>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.Int32>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Int32Enum,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m6F2ED586C8EC85B459FFCA36D05ABF98C1AA33B3_gshared (Dictionary_2_t4594E9EA67CB7172740DF4116774A3B1432A9E97 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Int32Enum,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::TryGetValue(!0,!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_TryGetValue_m3816E3065E00AF57E62424BB45AEA6000BD27F49_gshared (Dictionary_2_t4594E9EA67CB7172740DF4116774A3B1432A9E97 * __this, int32_t ___key0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * ___value1, const RuntimeMethod* method);
// System.Collections.Generic.IEnumerable`1<!!0> System.Linq.Enumerable::Take<System.Int32>(System.Collections.Generic.IEnumerable`1<!!0>,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Enumerable_Take_TisInt32_t585191389E07734F19F3156FF88FB3EF4800D102_mCBED6C7F74DCC17FA9C923D11B6801F52FEEB61B_gshared (RuntimeObject* ___source0, int32_t ___count1, const RuntimeMethod* method);

// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Random::get_insideUnitSphere()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Random_get_insideUnitSphere_m10033DFB85B1A21CE44201CB0E421F27B77A868F (const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E (const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Lerp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Lerp_m9A74C5A0C37D0CDF45EE66E7774D12A9B93B1364 (float ___a0, float ___b1, float ___t2, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Clamp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507 (float ___value0, float ___min1, float ___max2, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_None()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_one()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB (const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_ZeroIdentity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimpleHandDefinition::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimpleHandDefinition__ctor_m8984BA6EC4E5AFADB184C7DE96DD0B40D18E2486 (SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F * __this, uint8_t ___handedness0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHand::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHand__ctor_mB9443EF6803AAEA223CA3838E9F806B124FBC221 (SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, RuntimeObject* ___definition4, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem Microsoft.MixedReality.Toolkit.CoreServices::get_InputSystem()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile::get_GesturesProfile()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * MixedRealityInputSystemProfile_get_GesturesProfile_mA8F275BA8A5AE96D3A95350F698A7343D72E5129 (MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping[] Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::get_Gestures()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_inline (MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.GestureInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::get_GestureType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityGestureMapping::get_Action()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityGesturesProfile::get_UseRailsNavigation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityGesturesProfile_get_UseRailsNavigation_mEAE6D30B9C69C0E5EA8115068FDA600F87CE02C6_inline (MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.CoreServices::GetInputSystemDataProvider<Microsoft.MixedReality.Toolkit.Input.IInputSimulationService>()
inline RuntimeObject* CoreServices_GetInputSystemDataProvider_TisIInputSimulationService_t9AF3035C6487685E30A3E3ADB5E2D70DC2C3B443_mF9990528E32A1A152A1F8A9635640B72710D219A (const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (const RuntimeMethod*))CoreServices_GetInputSystemDataProvider_TisRuntimeObject_mE5591342ABBFD592231FAE18B785EDF71C3A557B_gshared)(method);
}
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_HoldStartDuration()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_HoldStartDuration_mBC1A3E5C22D4854356392379561E246374610007_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_NavigationStartThreshold()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_NavigationStartThreshold_m30BD08DA409E73AE42567F6420EB5E92DC7981E4_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::ContainsKey(!0)
inline bool Dictionary_2_ContainsKey_m9123BEB1C67E91B9D1C87834EED0E4805EAB9389 (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * __this, int32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 *, int32_t, const RuntimeMethod*))Dictionary_2_ContainsKey_m83D33BC652DBE4549C5B2C4A1E51BDA96E1989C6_gshared)(__this, ___key0, method);
}
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[] Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::get_Joints()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_inline (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::Add(!0,!1)
inline void Dictionary_2_Add_mF5D352A2DB17E5E4545D622A66744A4697ACC3D2 (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * __this, int32_t ___key0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 *, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , const RuntimeMethod*))Dictionary_2_Add_mBB39FF6AADDEF60E949DF52642B7BA33E9CC5406_gshared)(__this, ___key0, ___value1, method);
}
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::set_Item(!0,!1)
inline void Dictionary_2_set_Item_mA73F452CC26A09DD780D50EAE46E8684633BA15B (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * __this, int32_t ___key0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 *, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 , const RuntimeMethod*))Dictionary_2_set_Item_m72BAB8E16164B0649C7EFF83BD5C1904748DC7F0_gshared)(__this, ___key0, ___value1, method);
}
// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::get_JointCount()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035_inline (const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseController::get_InputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.BaseController::get_ControllerHandedness()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::EnsureProfileSettings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_EnsureProfileSettings_m5FC39BD038B64363C40173D9E60B1BC1606C7A3A (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_Item(!0)
inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  Dictionary_2_get_Item_mAA87FA69922BAF6733C05E34A765031668FCABA6 (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * __this, int32_t ___key0, const RuntimeMethod* method)
{
	return ((  MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  (*) (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 *, int32_t, const RuntimeMethod*))Dictionary_2_get_Item_mE6B9D39124056519428A572665E726815D5600EF_gshared)(__this, ___key0, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::set_Position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[] Microsoft.MixedReality.Toolkit.Input.BaseController::get_Interactions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.DeviceInputType Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_InputType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_PoseData(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_Changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_MixedRealityInputAction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::get_IsPinching()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_inline (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_BoolData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64 (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::get_BoolData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_time()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8 (const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteSelect()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteSelect_m39126D98BA2E83C742CDA9EAEA81EB5128B541AC (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteHold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteHold_mA3B5BAB738C6425798C608310D7D59D6B6FCA1AC (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteManipulation_m7DD88EA40E108EB197BF22BD11460BF7A3DFBB18 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteNavigation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteNavigation_m725C944777267419341F15E256472663CBCE6AC8 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateManipulation_m7D7C54E9B0364BA9862D4326D9606FB6419CCBC3 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateNavigation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateNavigation_mD504939EDF859CD568D6127F467D193ADF3ADFC0 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCancelHold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCancelHold_m1F67089B7A138E396206FE8E7E0DAEECCE14BFBC (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryStartNavigation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryStartNavigation_m2F5F675D13ACB7225B7672755846459058BDF575 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryStartManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryStartManipulation_m0B58E7807CC8E31CE5F4817A99CC358085866A3E (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryStartHold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryStartHold_m72CBFF5CAEDDC55C9E865745A5DE4C34C1B2E234 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Int32>::.ctor(!0)
inline void Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2 (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, int32_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *, int32_t, const RuntimeMethod*))Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_gshared)(__this, ___value0, method);
}
// !0 System.Nullable`1<System.Int32>::GetValueOrDefault()
inline int32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_gshared_inline)(__this, method);
}
// System.Boolean System.Nullable`1<System.Int32>::get_HasValue()
inline bool Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *, const RuntimeMethod*))Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_gshared_inline)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateNavigationRails()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::get_NavigationDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Equality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::.ctor()
inline void Dictionary_2__ctor_mD52EC03DD022577E1A73259E748910906383DA4E (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 *, const RuntimeMethod*))Dictionary_2__ctor_m6F2ED586C8EC85B459FFCA36D05ABF98C1AA33B3_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseHand::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseHand__ctor_m4BD617520FC2C8044BDABFDE15AA920FF1F426A7 (BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, RuntimeObject* ___definition4, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::TryGetValue(!0,!1&)
inline bool Dictionary_2_TryGetValue_mEB4E22F5D5C93FBC06285B7EA9EDC0B6B73CF31D (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * __this, int32_t ___key0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * ___value1, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 *, int32_t, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *, const RuntimeMethod*))Dictionary_2_TryGetValue_m3816E3065E00AF57E62424BB45AEA6000BD27F49_gshared)(__this, ___key0, ___value1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseHand::UpdateVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseHand_UpdateVelocity_m2E2A6FE7655DBBE7E1BEBD9DAD7936B28DCEE484 (BaseHand_tB58ECFC99FBFD516BBAA0989004A10F687078F4B * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator::Invoke(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandJointDataGenerator_Invoke_m453D8F003A5B2375922D4E902074628FA4AAB4F2 (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * __this, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___jointPoses0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerDataProvider__ctor_m3BAB2EECEAB474D4C22EEA869BB89B0D46203157 (SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C * __this, MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * ____profile0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433 (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, uint8_t ____handedness0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_DefaultHandGesture()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::set_Gesture(Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882 (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandJointDataGenerator__ctor_mB815FE73EC4C1E2EA223BA3380BC7817ACED0EB0 (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::get_IsPinching()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::Update(System.Boolean,System.Boolean,Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048 (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, bool ___isTrackedNew0, bool ___isPinchingNew1, HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * ___generator2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::SimulateUserInput(Microsoft.MixedReality.Toolkit.Input.MouseDelta)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerDataProvider_SimulateUserInput_m6353F6F38BD7D72E6CE6163B1B3484AA12830024 (SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C * __this, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_HandGestureAnimationSpeed()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_HandGestureAnimationSpeed_m159042CFADEA1948914A6AD9D52193E9179B0AF5_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_unscaledDeltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_unscaledDeltaTime_mA0AE7A144C88AE8AABB42DF17B0F3F0714BA06B2 (const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::get_GestureBlending()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::set_GestureBlending(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11 (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, float ___value0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_MouseRotationSensitivity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25D_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_MouseControllerRotationSpeed()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_ControllerJitterAmount()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2C_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::SimulateInput(Microsoft.MixedReality.Toolkit.Input.MouseDelta,System.Boolean,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395 (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta0, bool ___useMouseRotation1, float ___rotationSensitivity2, float ___rotationScale3, float ___noiseAmount4, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::get_Gesture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedHandState_get_Gesture_mD92DD18C9290E8F89105E0539065E44CA74AFFFF (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::ToggleGesture(Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedHandDataProvider_ToggleGesture_m9F8B8AE3A881E53C67ABC7B4B8187E45AEFDB0BD (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, int32_t ___gesture0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::SelectGesture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedHandDataProvider_SelectGesture_m3EED0D8A0B38C138C8C872805E35ACC67F70F37F (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, const RuntimeMethod* method);
// System.DateTime System.DateTime::get_UtcNow()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1 (const RuntimeMethod* method);
// System.Int64 System.DateTime::get_Ticks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t DateTime_get_Ticks_mBCB529E43D065E498EAF08971D2EB49D5CB59D60 (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * __this, const RuntimeMethod* method);
// System.Void System.DateTime::.ctor(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DateTime__ctor_m027A935E14EB81BCC0739BD56AE60CDE3387990C (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * __this, int64_t ___ticks0, const RuntimeMethod* method);
// System.TimeSpan System.DateTime::Subtract(System.DateTime)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  DateTime_Subtract_m12814A53110B4E3887A84A911C5F9C1402D98842 (DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * __this, DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___value0, const RuntimeMethod* method);
// System.Double System.TimeSpan::get_TotalSeconds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA (TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_ControllerHideTimeout()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::ResetInput(Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerDataProvider_ResetInput_mCA7DB0D28644ED1AB2BB68AEC1E1BFF9C55FF300 (SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C * __this, SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___state0, bool ___isSimulating1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::ResetGesture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_ResetGesture_m768808568035F9E15EBC17DF83D75F62A6069EBC (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_InteractionButton()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24E_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.KeyInputSystem::GetKey(Microsoft.MixedReality.Toolkit.Input.KeyBinding)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool KeyInputSystem_GetKey_m2EE019355844DA29C17B8678F49586574D5A6D49 (KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___kb0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_LeftMouseHandGesture()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_MouseLookButton()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_RightMouseHandGesture()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.KeyBinding::FromMouseButton(Microsoft.MixedReality.Toolkit.Input.KeyBinding/MouseButton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  KeyBinding_FromMouseButton_mC7479108FCC71C952AAB38A9526E2B82B71C8CD0 (int32_t ___mouseButton0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_MiddleMouseHandGesture()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.KeyInputSystem::GetKeyDown(Microsoft.MixedReality.Toolkit.Input.KeyBinding)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool KeyInputSystem_GetKeyDown_mC60446A0EE3AD6F0C1E9A6CBCBDA6160133C3E6C (KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  ___kb0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArticulatedHandPose__ctor_mDF79192860BCB5B11DE88B879238E1093D2F839A (ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, uint8_t ____handedness0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose Microsoft.MixedReality.Toolkit.Input.SimulatedArticulatedHandPoses::GetGesturePose(Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * SimulatedArticulatedHandPoses_GetGesturePose_mB22DB685E5F2EF47FB022FBC16445827327E8FF0 (int32_t ___gesture0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::Copy(Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArticulatedHandPose_Copy_mEFCDE938CE81762E3A992EFA18BBDD8180C1E264 (ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * __this, ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * ___other0, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Clamp01(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Clamp01_m1E5F736941A7E6DC4DBCA88A1E38FE9FBFE0C42B (float ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::InterpolateOffsets(Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose,Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArticulatedHandPose_InterpolateOffsets_mD03754CF2CC8BBB41787BB08A2294C49E4D65445 (ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * __this, ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * ___poseA0, ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * ___poseB1, float ___value2, const RuntimeMethod* method);
// UnityEngine.Camera Microsoft.MixedReality.Toolkit.Utilities.CameraCache::get_Main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Camera::ViewportToScreenPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Camera_ViewportToScreenPoint_m8B42382A0571F1F6F1162F3DA05A9317F903B657 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Camera::ScreenToWorldPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Camera_ScreenToWorldPoint_m179BB999DC97A251D0892B39C98F3FACDF0617C5 (Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Euler_m55C96FCD397CC69109261572710608D12A4CBD2B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___euler0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose::ComputeJointPoses(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Quaternion,UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArticulatedHandPose_ComputeJointPoses_m04188906F4189F035294C1C59F8CE862E2D3D10A (ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * __this, uint8_t ___handedness0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position2, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___jointsOut3, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array,System.RuntimeFieldHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A (RuntimeArray * ___array0, RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  ___fldHandle1, const RuntimeMethod* method);
// System.Collections.Generic.IEnumerable`1<!!0> System.Linq.Enumerable::Take<System.Int32>(System.Collections.Generic.IEnumerable`1<!!0>,System.Int32)
inline RuntimeObject* Enumerable_Take_TisInt32_t585191389E07734F19F3156FF88FB3EF4800D102_mCBED6C7F74DCC17FA9C923D11B6801F52FEEB61B (RuntimeObject* ___source0, int32_t ___count1, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (RuntimeObject*, int32_t, const RuntimeMethod*))Enumerable_Take_TisInt32_t585191389E07734F19F3156FF88FB3EF4800D102_mCBED6C7F74DCC17FA9C923D11B6801F52FEEB61B_gshared)(___source0, ___count1, method);
}
// System.Int32 System.Linq.Enumerable::Sum(System.Collections.Generic.IEnumerable`1<System.Int32>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Enumerable_Sum_mA81913DBCF3086B4716F692F9DB797D7DD6B7583 (RuntimeObject* ___source0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::GetPalmRightVector(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedHandUtils_GetPalmRightVector_m9C646FB51F2C94823DC3EEE26383B22A88EA4301 (uint8_t ___handedness0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___jointPositions1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Cross(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::LookRotation(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forward0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upwards1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::GetPalmForwardVector(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedHandUtils_GetPalmForwardVector_m9E069A581F41648ADB1D947EDBB726BD867602F4 (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___jointPositions0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::GetPalmUpVector(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedHandUtils_GetPalmUpVector_mB1852A38F5919EC805FE801DB47DC6DA1E64CCD0 (uint8_t ___handedness0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___jointPositions1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.WindowsMixedRealityControllerDefinition::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WindowsMixedRealityControllerDefinition__ctor_m848379010D6BB4FF9CBC6D4078DA0E0D2ADC5367 (WindowsMixedRealityControllerDefinition_tE4B1E571DF880E868424EE9B242D0DAF55B5750D * __this, uint8_t ___handedness0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseController__ctor_m6B509BCC8DF752AD27011E3C23E91DFB17C8F6AE (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, RuntimeObject* ___definition4, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::get_Position()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::get_Rotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::set_Rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseController::set_IsRotationAvailable(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseController_set_IsRotationAvailable_m5259A799822AFD94A2BEE4B47F887A03158FE308_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseController::set_IsPositionAvailable(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseController_set_IsPositionAvailable_m76D7FB5DBF945174A9D9B7A19123783742C6B57F_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::op_Inequality(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MixedRealityPose_op_Inequality_m85FF483B646A63C06AE543020D4F85257046AB3D (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___left0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___right1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::get_IsPositionAvailable()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseController_get_IsPositionAvailable_m3E2EB0D15AAADABB3D967535353AD53539677046_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseController::get_IsRotationAvailable()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseController_get_IsRotationAvailable_m59D5E1DD267C83A3DB834096028590522C934868_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::get_ButtonState()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping::set_FloatData(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, float ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::Equals(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9 (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * __this, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___state0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::Equals(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3 (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * __this, RuntimeObject * ___obj0, const RuntimeMethod* method);
// System.Int32 Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::GetHashCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5 (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::op_Inequality(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerButtonState_op_Inequality_m4E7E2C84B13D0CBCECD0CB21B287560F20C98FCD (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___lhs0, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___rhs1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MotionControllerPoseUpdater_Invoke_mBD061702E432F2F4ACC16C0FD24840324643E9C8 (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::set_Position(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::set_Rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, uint8_t ____handedness0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_MotionControllerTriggerKey()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MotionControllerTriggerKey_m32AC0FAA8689395388B5F53DE37E4FA437E76D98_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_MotionControllerGrabKey()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MotionControllerGrabKey_mAA8B5087F8597D4A60166E3C7C93EFFA2F7C23EB_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.KeyBinding Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile::get_MotionControllerMenuKey()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MotionControllerMenuKey_m82072D42ED0258F1D0AF0861F4253EBC3B0AA969_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::set_ButtonState(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_inline (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MotionControllerPoseUpdater__ctor_m5995208AAA08D3DA12A0741094A56DEABD39888F (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::get_ButtonState()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_inline (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::Update(System.Boolean,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140 (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, bool ___isTrackedNew0, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___buttonStateNew1, MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * ___updater2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::ResetButtonStates()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerState_ResetButtonStates_m855FD55EE27F5E79946166E71552304D8452D30F (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Quaternion::get_eulerAngles()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05 (float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::.ctor(UnityEngine.Vector3,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose__ctor_m139F7F8104CAB889E5AE6A14090A9764E39DFCAC (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation1, const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::get_Handedness()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t SimulatedControllerState_get_Handedness_mDE7DBA6176CAA7C2EEEA37339C8C71B1FED34A99 (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedControllerState_get_Handedness_mDE7DBA6176CAA7C2EEEA37339C8C71B1FED34A99_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedControllerState_get_Handedness_mDE7DBA6176CAA7C2EEEA37339C8C71B1FED34A99_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2588));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2589));
	{
		// public Handedness Handedness => handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2590));
		uint8_t L_0 = __this->get_handedness_0();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, uint8_t ____handedness0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&____handedness0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2591));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2592));
	{
		// protected Handedness handedness = Handedness.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2593));
		__this->set_handedness_0(0);
		// public bool IsTracked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2594));
		__this->set_IsTracked_1((bool)0);
		// public Vector3 ViewportPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2595));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2603));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2603));
		__this->set_ViewportPosition_2(L_0);
		// public Vector3 ViewportRotation = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2596));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2604));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2604));
		__this->set_ViewportRotation_3(L_1);
		// public Vector3 JitterOffset = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2597));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2605));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2605));
		__this->set_JitterOffset_4(L_2);
		// protected readonly float smoothScrollSpeed = 5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2598));
		__this->set_smoothScrollSpeed_6((5.0f));
		// public SimulatedControllerState(Handedness _handedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2599));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2606));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2606));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2600));
		// handedness = _handedness;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2601));
		uint8_t L_3 = ____handedness0;
		__this->set_handedness_0(L_3);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2602));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::SimulateInput(Microsoft.MixedReality.Toolkit.Input.MouseDelta,System.Boolean,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395 (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta0, bool ___useMouseRotation1, float ___rotationSensitivity2, float ___rotationScale3, float ___noiseAmount4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___mouseDelta0), (&___useMouseRotation1), (&___rotationSensitivity2), (&___rotationScale3), (&___noiseAmount4));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2607));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2608));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2609));
		// if (useMouseRotation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2610));
		bool L_0 = ___useMouseRotation1;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2611));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0074;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2612));
		// Vector3 rotationDeltaEulerAngles = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2613));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2627));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2627));
		V_1 = L_2;
		// rotationDeltaEulerAngles.x += -mouseDelta.screenDelta.y * rotationSensitivity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2614));
		float* L_3 = (&V_1)->get_address_of_x_2();
		float* L_4 = L_3;
		float L_5 = *((float*)L_4);
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_6 = ___mouseDelta0;
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_7 = L_6->get_address_of_screenDelta_0();
		float L_8 = L_7->get_y_3();
		float L_9 = ___rotationSensitivity2;
		*((float*)L_4) = (float)((float)il2cpp_codegen_add((float)L_5, (float)((float)il2cpp_codegen_multiply((float)((-L_8)), (float)L_9))));
		// rotationDeltaEulerAngles.y += mouseDelta.screenDelta.x * rotationSensitivity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2615));
		float* L_10 = (&V_1)->get_address_of_y_3();
		float* L_11 = L_10;
		float L_12 = *((float*)L_11);
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_13 = ___mouseDelta0;
		NullCheck(L_13);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_14 = L_13->get_address_of_screenDelta_0();
		float L_15 = L_14->get_x_2();
		float L_16 = ___rotationSensitivity2;
		*((float*)L_11) = (float)((float)il2cpp_codegen_add((float)L_12, (float)((float)il2cpp_codegen_multiply((float)L_15, (float)L_16))));
		// rotationDeltaEulerAngles.z += mouseDelta.screenDelta.z * rotationSensitivity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2616));
		float* L_17 = (&V_1)->get_address_of_z_4();
		float* L_18 = L_17;
		float L_19 = *((float*)L_18);
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_20 = ___mouseDelta0;
		NullCheck(L_20);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_21 = L_20->get_address_of_screenDelta_0();
		float L_22 = L_21->get_z_4();
		float L_23 = ___rotationSensitivity2;
		*((float*)L_18) = (float)((float)il2cpp_codegen_add((float)L_19, (float)((float)il2cpp_codegen_multiply((float)L_22, (float)L_23))));
		// rotationDeltaEulerAngles *= rotationScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2617));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = V_1;
		float L_25 = ___rotationScale3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2628));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2628));
		V_1 = L_26;
		// ViewportRotation += rotationDeltaEulerAngles;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2618));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = __this->get_ViewportRotation_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2629));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_27, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2629));
		__this->set_ViewportRotation_3(L_29);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2619));
		goto IL_00c2;
	}

IL_0074:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2620));
		// ViewportPosition.x += mouseDelta.viewportDelta.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2621));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_30 = __this->get_address_of_ViewportPosition_2();
		float* L_31 = L_30->get_address_of_x_2();
		float* L_32 = L_31;
		float L_33 = *((float*)L_32);
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_34 = ___mouseDelta0;
		NullCheck(L_34);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_35 = L_34->get_address_of_viewportDelta_1();
		float L_36 = L_35->get_x_2();
		*((float*)L_32) = (float)((float)il2cpp_codegen_add((float)L_33, (float)L_36));
		// ViewportPosition.y += mouseDelta.viewportDelta.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2622));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_37 = __this->get_address_of_ViewportPosition_2();
		float* L_38 = L_37->get_address_of_y_3();
		float* L_39 = L_38;
		float L_40 = *((float*)L_39);
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_41 = ___mouseDelta0;
		NullCheck(L_41);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_42 = L_41->get_address_of_viewportDelta_1();
		float L_43 = L_42->get_y_3();
		*((float*)L_39) = (float)((float)il2cpp_codegen_add((float)L_40, (float)L_43));
		// viewportPositionZTarget += mouseDelta.viewportDelta.z;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2623));
		float L_44 = __this->get_viewportPositionZTarget_5();
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_45 = ___mouseDelta0;
		NullCheck(L_45);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_46 = L_45->get_address_of_viewportDelta_1();
		float L_47 = L_46->get_z_4();
		__this->set_viewportPositionZTarget_5(((float)il2cpp_codegen_add((float)L_44, (float)L_47)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2624));
	}

IL_00c2:
	{
		// JitterOffset = Random.insideUnitSphere * noiseAmount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2625));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2630));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_48 = Random_get_insideUnitSphere_m10033DFB85B1A21CE44201CB0E421F27B77A868F(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2630));
		float L_49 = ___noiseAmount4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2631));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_50 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_48, L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2631));
		__this->set_JitterOffset_4(L_50);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2626));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::ResetPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerState_ResetPosition_m89D5414664C096C46D93063EF65F383A0E35A32A (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___resetTo0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedControllerState_ResetPosition_m89D5414664C096C46D93063EF65F383A0E35A32A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___resetTo0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedControllerState_ResetPosition_m89D5414664C096C46D93063EF65F383A0E35A32A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2632));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2633));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2634));
		// ViewportPosition = resetTo;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2635));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___resetTo0;
		__this->set_ViewportPosition_2(L_0);
		// viewportPositionZTarget = ViewportPosition.z;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2636));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_1 = __this->get_address_of_ViewportPosition_2();
		float L_2 = L_1->get_z_4();
		__this->set_viewportPositionZTarget_5(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2637));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA (SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2638));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2639));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2640));
		// ViewportPosition.z = Mathf.Lerp(ViewportPosition.z, viewportPositionZTarget, smoothScrollSpeed * Time.deltaTime);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2641));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_0 = __this->get_address_of_ViewportPosition_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_1 = __this->get_address_of_ViewportPosition_2();
		float L_2 = L_1->get_z_4();
		float L_3 = __this->get_viewportPositionZTarget_5();
		float L_4 = __this->get_smoothScrollSpeed_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2643));
		float L_5 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2643));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2644));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_6 = Mathf_Lerp_m9A74C5A0C37D0CDF45EE66E7774D12A9B93B1364(L_2, L_3, ((float)il2cpp_codegen_multiply((float)L_4, (float)L_5)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2644));
		L_0->set_z_4(L_6);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2642));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.ControllerSimulationMode Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::get_SimulationMode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedGestureHand_get_SimulationMode_m99445CCC75EBA635CDD01A929947DA38792BB2AA (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_get_SimulationMode_m99445CCC75EBA635CDD01A929947DA38792BB2AA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_get_SimulationMode_m99445CCC75EBA635CDD01A929947DA38792BB2AA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2823));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2824));
	{
		// public override ControllerSimulationMode SimulationMode => ControllerSimulationMode.HandGestures;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2825));
		return (int32_t)(1);
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::get_NavigationDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2826));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2827));
	{
		// private Vector3 NavigationDelta => new Vector3(
		//     Mathf.Clamp(cumulativeDelta.x, -1.0f, 1.0f) * currentRailsUsed.x,
		//     Mathf.Clamp(cumulativeDelta.y, -1.0f, 1.0f) * currentRailsUsed.y,
		//     Mathf.Clamp(cumulativeDelta.z, -1.0f, 1.0f) * currentRailsUsed.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2828));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_0 = __this->get_address_of_cumulativeDelta_35();
		float L_1 = L_0->get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2829));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_2 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_1, (-1.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2829));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = __this->get_address_of_currentRailsUsed_33();
		float L_4 = L_3->get_x_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = __this->get_address_of_cumulativeDelta_35();
		float L_6 = L_5->get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2830));
		float L_7 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_6, (-1.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2830));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_8 = __this->get_address_of_currentRailsUsed_33();
		float L_9 = L_8->get_y_3();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_10 = __this->get_address_of_cumulativeDelta_35();
		float L_11 = L_10->get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2831));
		float L_12 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_11, (-1.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2831));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_13 = __this->get_address_of_currentRailsUsed_33();
		float L_14 = L_13->get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2832));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15;
		memset((&L_15), 0, sizeof(L_15));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_15), ((float)il2cpp_codegen_multiply((float)L_2, (float)L_4)), ((float)il2cpp_codegen_multiply((float)L_7, (float)L_9)), ((float)il2cpp_codegen_multiply((float)L_12, (float)L_14)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2832));
		return L_15;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand__ctor_m93581EB80551349B8F9FD7C292CBDBFA5243F97A (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand__ctor_m93581EB80551349B8F9FD7C292CBDBFA5243F97A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___inputSource2), (&___interactions3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand__ctor_m93581EB80551349B8F9FD7C292CBDBFA5243F97A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2833));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2834));
	{
		// private bool initializedFromProfile = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2835));
		__this->set_initializedFromProfile_21((bool)0);
		// private MixedRealityInputAction holdAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2836));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2854));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2854));
		__this->set_holdAction_22(L_0);
		// private MixedRealityInputAction navigationAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2837));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2855));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_1 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2855));
		__this->set_navigationAction_23(L_1);
		// private MixedRealityInputAction manipulationAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2838));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2856));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_2 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2856));
		__this->set_manipulationAction_24(L_2);
		// private MixedRealityInputAction selectAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2839));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2857));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_3 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2857));
		__this->set_selectAction_25(L_3);
		// private bool useRailsNavigation = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2840));
		__this->set_useRailsNavigation_26((bool)0);
		// float holdStartDuration = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2841));
		__this->set_holdStartDuration_27((0.0f));
		// float navigationStartThreshold = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2842));
		__this->set_navigationStartThreshold_28((0.0f));
		// private float SelectDownStartTime = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2843));
		__this->set_SelectDownStartTime_29((0.0f));
		// private bool holdInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2844));
		__this->set_holdInProgress_30((bool)0);
		// private bool manipulationInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2845));
		__this->set_manipulationInProgress_31((bool)0);
		// private bool navigationInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2846));
		__this->set_navigationInProgress_32((bool)0);
		// private Vector3 currentRailsUsed = Vector3.one;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2847));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2858));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2858));
		__this->set_currentRailsUsed_33(L_4);
		// private Vector3 currentPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2848));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2859));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2859));
		__this->set_currentPosition_34(L_5);
		// private Vector3 cumulativeDelta = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2849));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2860));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2860));
		__this->set_cumulativeDelta_35(L_6);
		// private MixedRealityPose currentGripPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2850));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2861));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_7 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2861));
		__this->set_currentGripPose_36(L_7);
		// : base(trackingState, controllerHandedness, inputSource, interactions, new SimpleHandDefinition(controllerHandedness))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2851));
		int32_t L_8 = ___trackingState0;
		uint8_t L_9 = ___controllerHandedness1;
		RuntimeObject* L_10 = ___inputSource2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_11 = ___interactions3;
		uint8_t L_12 = ___controllerHandedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2862));
		SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F * L_13 = (SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F *)il2cpp_codegen_object_new(SimpleHandDefinition_tC8A544B464CC1A0739A8204DFEEE2A957E88428F_il2cpp_TypeInfo_var);
		SimpleHandDefinition__ctor_m8984BA6EC4E5AFADB184C7DE96DD0B40D18E2486(L_13, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2862));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2863));
		SimulatedHand__ctor_mB9443EF6803AAEA223CA3838E9F806B124FBC221(__this, L_8, L_9, L_10, L_11, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2863));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2852));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2853));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::EnsureProfileSettings()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_EnsureProfileSettings_m5FC39BD038B64363C40173D9E60B1BC1606C7A3A (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_EnsureProfileSettings_m5FC39BD038B64363C40173D9E60B1BC1606C7A3A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * V_0 = NULL;
	MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * V_1 = NULL;
	MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	int32_t V_6 = 0;
	MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  V_7;
	memset((&V_7), 0, sizeof(V_7));
	int32_t V_8 = 0;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_6), (&V_7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_EnsureProfileSettings_m5FC39BD038B64363C40173D9E60B1BC1606C7A3A_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2864));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2865));
	RuntimeObject* G_B4_0 = NULL;
	RuntimeObject* G_B3_0 = NULL;
	MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * G_B5_0 = NULL;
	RuntimeObject* G_B20_0 = NULL;
	RuntimeObject* G_B19_0 = NULL;
	MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * G_B21_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2866));
		// if (initializedFromProfile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2867));
		bool L_0 = __this->get_initializedFromProfile_21();
		V_3 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2868));
		bool L_1 = V_3;
		if (!L_1)
		{
			goto IL_0011;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2869));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2870));
		goto IL_012a;
	}

IL_0011:
	{
		// initializedFromProfile = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2871));
		__this->set_initializedFromProfile_21((bool)1);
		// MixedRealityGesturesProfile gestureProfile = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2872));
		V_0 = (MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 *)NULL;
		// MixedRealityInputSystemProfile inputSystemProfile = CoreServices.InputSystem?.InputSystemProfile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2873));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2910));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2910));
		RuntimeObject* L_3 = L_2;
		G_B3_0 = L_3;
		if (L_3)
		{
			G_B4_0 = L_3;
			goto IL_0026;
		}
	}
	{
		G_B5_0 = ((MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 *)(NULL));
		goto IL_002b;
	}

IL_0026:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2911));
		NullCheck(G_B4_0);
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_4 = InterfaceFuncInvoker0< MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSystemProfile Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::get_InputSystemProfile() */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B4_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2911));
		G_B5_0 = L_4;
	}

IL_002b:
	{
		V_1 = G_B5_0;
		// if (inputSystemProfile != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2874));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2912));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2912));
		V_4 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2875));
		bool L_7 = V_4;
		if (!L_7)
		{
			goto IL_0042;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2876));
		// gestureProfile = inputSystemProfile.GesturesProfile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2877));
		MixedRealityInputSystemProfile_tE6382BBDB73ACDFF6F3D0C3B4AD9B1B7F2D5BAC2 * L_8 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2913));
		NullCheck(L_8);
		MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * L_9 = MixedRealityInputSystemProfile_get_GesturesProfile_mA8F275BA8A5AE96D3A95350F698A7343D72E5129(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2913));
		V_0 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2878));
	}

IL_0042:
	{
		// if (gestureProfile != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2879));
		MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * L_10 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2914));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_11 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_10, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2914));
		V_5 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2880));
		bool L_12 = V_5;
		if (!L_12)
		{
			goto IL_00f1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2881));
		// for (int i = 0; i < gestureProfile.Gestures.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2882));
		V_6 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2883));
		goto IL_00cf;
	}

IL_0058:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2884));
		// var gesture = gestureProfile.Gestures[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2885));
		MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * L_13 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2915));
		NullCheck(L_13);
		MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* L_14 = MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_inline(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2915));
		int32_t L_15 = V_6;
		NullCheck(L_14);
		int32_t L_16 = L_15;
		MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074  L_17 = (L_14)->GetAt(static_cast<il2cpp_array_size_t>(L_16));
		V_7 = L_17;
		// switch (gesture.GestureType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2886));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2916));
		int32_t L_18 = MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2916));
		V_8 = L_18;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2887));
		int32_t L_19 = V_8;
		switch (((int32_t)il2cpp_codegen_subtract((int32_t)L_19, (int32_t)1)))
		{
			case 0:
			{
				goto IL_008c;
			}
			case 1:
			{
				goto IL_00aa;
			}
			case 2:
			{
				goto IL_009b;
			}
			case 3:
			{
				goto IL_00b9;
			}
		}
	}
	{
		goto IL_00c8;
	}

IL_008c:
	{
		// holdAction = gesture.Action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2888));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2917));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_20 = MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2917));
		__this->set_holdAction_22(L_20);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2889));
		goto IL_00c8;
	}

IL_009b:
	{
		// manipulationAction = gesture.Action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2890));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2918));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_21 = MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2918));
		__this->set_manipulationAction_24(L_21);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2891));
		goto IL_00c8;
	}

IL_00aa:
	{
		// navigationAction = gesture.Action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2892));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2919));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_22 = MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2919));
		__this->set_navigationAction_23(L_22);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2893));
		goto IL_00c8;
	}

IL_00b9:
	{
		// selectAction = gesture.Action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2920));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_23 = MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline((MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2920));
		__this->set_selectAction_25(L_23);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2895));
		goto IL_00c8;
	}

IL_00c8:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2896));
		// for (int i = 0; i < gestureProfile.Gestures.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2897));
		int32_t L_24 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add((int32_t)L_24, (int32_t)1));
	}

IL_00cf:
	{
		// for (int i = 0; i < gestureProfile.Gestures.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2898));
		int32_t L_25 = V_6;
		MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * L_26 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2921));
		NullCheck(L_26);
		MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* L_27 = MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_inline(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2921));
		NullCheck(L_27);
		V_9 = (bool)((((int32_t)L_25) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_27)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2899));
		bool L_28 = V_9;
		if (L_28)
		{
			goto IL_0058;
		}
	}
	{
		// useRailsNavigation = gestureProfile.UseRailsNavigation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2900));
		MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * L_29 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2922));
		NullCheck(L_29);
		bool L_30 = MixedRealityGesturesProfile_get_UseRailsNavigation_mEAE6D30B9C69C0E5EA8115068FDA600F87CE02C6_inline(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2922));
		__this->set_useRailsNavigation_26(L_30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2901));
	}

IL_00f1:
	{
		// MixedRealityInputSimulationProfile inputSimProfile = CoreServices.GetInputSystemDataProvider<IInputSimulationService>()?.InputSimulationProfile;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2902));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2923));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_31 = CoreServices_GetInputSystemDataProvider_TisIInputSimulationService_t9AF3035C6487685E30A3E3ADB5E2D70DC2C3B443_mF9990528E32A1A152A1F8A9635640B72710D219A(/*hidden argument*/CoreServices_GetInputSystemDataProvider_TisIInputSimulationService_t9AF3035C6487685E30A3E3ADB5E2D70DC2C3B443_mF9990528E32A1A152A1F8A9635640B72710D219A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2923));
		RuntimeObject* L_32 = L_31;
		G_B19_0 = L_32;
		if (L_32)
		{
			G_B20_0 = L_32;
			goto IL_00fd;
		}
	}
	{
		G_B21_0 = ((MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 *)(NULL));
		goto IL_0102;
	}

IL_00fd:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2924));
		NullCheck(G_B20_0);
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_33 = InterfaceFuncInvoker0< MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile Microsoft.MixedReality.Toolkit.Input.IInputSimulationService::get_InputSimulationProfile() */, IInputSimulationService_t9AF3035C6487685E30A3E3ADB5E2D70DC2C3B443_il2cpp_TypeInfo_var, G_B20_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2924));
		G_B21_0 = L_33;
	}

IL_0102:
	{
		V_2 = G_B21_0;
		// if (inputSimProfile != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2903));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_34 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2925));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_35 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_34, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2925));
		V_10 = L_35;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2904));
		bool L_36 = V_10;
		if (!L_36)
		{
			goto IL_012a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2905));
		// holdStartDuration = inputSimProfile.HoldStartDuration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2906));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_37 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2926));
		NullCheck(L_37);
		float L_38 = MixedRealityInputSimulationProfile_get_HoldStartDuration_mBC1A3E5C22D4854356392379561E246374610007_inline(L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2926));
		__this->set_holdStartDuration_27(L_38);
		// navigationStartThreshold = inputSimProfile.NavigationStartThreshold;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2907));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_39 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2927));
		NullCheck(L_39);
		float L_40 = MixedRealityInputSimulationProfile_get_NavigationStartThreshold_m30BD08DA409E73AE42567F6420EB5E92DC7981E4_inline(L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2927));
		__this->set_navigationStartThreshold_28(L_40);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2908));
	}

IL_012a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2909));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateHandJoints(Microsoft.MixedReality.Toolkit.Input.SimulatedHandData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateHandJoints_mBAA8CF99DF42CD44D878045ADD64E250D15AB7F0 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * ___handData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_UpdateHandJoints_mBAA8CF99DF42CD44D878045ADD64E250D15AB7F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_UpdateHandJoints_mBAA8CF99DF42CD44D878045ADD64E250D15AB7F0_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2928));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2929));
	RuntimeObject* G_B8_0 = NULL;
	RuntimeObject* G_B7_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2930));
		// for (int i = 0; i < ArticulatedHandPose.JointCount; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2931));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2932));
		goto IL_0058;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2933));
		// TrackedHandJoint handJoint = (TrackedHandJoint)i;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2934));
		int32_t L_0 = V_0;
		V_1 = L_0;
		// if (!jointPoses.ContainsKey(handJoint))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2935));
		Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * L_1 = ((SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E *)__this)->get_jointPoses_20();
		int32_t L_2 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2949));
		NullCheck(L_1);
		bool L_3 = Dictionary_2_ContainsKey_m9123BEB1C67E91B9D1C87834EED0E4805EAB9389(L_1, L_2, /*hidden argument*/Dictionary_2_ContainsKey_m9123BEB1C67E91B9D1C87834EED0E4805EAB9389_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2949));
		V_2 = (bool)((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2936));
		bool L_4 = V_2;
		if (!L_4)
		{
			goto IL_0038;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2937));
		// jointPoses.Add(handJoint, handData.Joints[i]);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2938));
		Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * L_5 = ((SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E *)__this)->get_jointPoses_20();
		int32_t L_6 = V_1;
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_7 = ___handData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2950));
		NullCheck(L_7);
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_8 = SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2950));
		int32_t L_9 = V_0;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2951));
		NullCheck(L_5);
		Dictionary_2_Add_mF5D352A2DB17E5E4545D622A66744A4697ACC3D2(L_5, L_6, L_11, /*hidden argument*/Dictionary_2_Add_mF5D352A2DB17E5E4545D622A66744A4697ACC3D2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2951));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2939));
		goto IL_0053;
	}

IL_0038:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2940));
		// jointPoses[handJoint] = handData.Joints[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2941));
		Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * L_12 = ((SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E *)__this)->get_jointPoses_20();
		int32_t L_13 = V_1;
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_14 = ___handData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2952));
		NullCheck(L_14);
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_15 = SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2952));
		int32_t L_16 = V_0;
		NullCheck(L_15);
		int32_t L_17 = L_16;
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_18 = (L_15)->GetAt(static_cast<il2cpp_array_size_t>(L_17));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2953));
		NullCheck(L_12);
		Dictionary_2_set_Item_mA73F452CC26A09DD780D50EAE46E8684633BA15B(L_12, L_13, L_18, /*hidden argument*/Dictionary_2_set_Item_mA73F452CC26A09DD780D50EAE46E8684633BA15B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2953));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2942));
	}

IL_0053:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2943));
		// for (int i = 0; i < ArticulatedHandPose.JointCount; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2944));
		int32_t L_19 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1));
	}

IL_0058:
	{
		// for (int i = 0; i < ArticulatedHandPose.JointCount; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2945));
		int32_t L_20 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2954));
		IL2CPP_RUNTIME_CLASS_INIT(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_il2cpp_TypeInfo_var);
		int32_t L_21 = ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2954));
		V_3 = (bool)((((int32_t)L_20) < ((int32_t)L_21))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2946));
		bool L_22 = V_3;
		if (L_22)
		{
			goto IL_0005;
		}
	}
	{
		// CoreServices.InputSystem?.RaiseHandJointsUpdated(InputSource, ControllerHandedness, jointPoses);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2947));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2955));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_23 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2955));
		RuntimeObject* L_24 = L_23;
		G_B7_0 = L_24;
		if (L_24)
		{
			G_B8_0 = L_24;
			goto IL_006f;
		}
	}
	{
		goto IL_0087;
	}

IL_006f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2956));
		RuntimeObject* L_25 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2956));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2957));
		uint8_t L_26 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2957));
		Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * L_27 = ((SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E *)__this)->get_jointPoses_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2958));
		NullCheck(G_B8_0);
		InterfaceActionInvoker3< RuntimeObject*, uint8_t, RuntimeObject* >::Invoke(63 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseHandJointsUpdated(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,System.Collections.Generic.IDictionary`2<Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B8_0, L_25, L_26, L_27);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2958));
	}

IL_0087:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2948));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateInteractions(Microsoft.MixedReality.Toolkit.Input.SimulatedHandData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateInteractions_m96F24F8AEC7B7EC9C96EAF20378C4BBF49B26DF8 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * ___handData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_UpdateInteractions_m96F24F8AEC7B7EC9C96EAF20378C4BBF49B26DF8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  V_14;
	memset((&V_14), 0, sizeof(V_14));
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  V_15;
	memset((&V_15), 0, sizeof(V_15));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_UpdateInteractions_m96F24F8AEC7B7EC9C96EAF20378C4BBF49B26DF8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2959));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2960));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B13_0 = NULL;
	RuntimeObject* G_B12_0 = NULL;
	RuntimeObject* G_B20_0 = NULL;
	RuntimeObject* G_B19_0 = NULL;
	RuntimeObject* G_B24_0 = NULL;
	RuntimeObject* G_B23_0 = NULL;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* G_B41_0 = NULL;
	int32_t G_B41_1 = 0;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* G_B40_0 = NULL;
	int32_t G_B40_1 = 0;
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  G_B42_0;
	memset((&G_B42_0), 0, sizeof(G_B42_0));
	int32_t G_B42_1 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2961));
		// EnsureProfileSettings();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2962));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3035));
		SimulatedGestureHand_EnsureProfileSettings_m5FC39BD038B64363C40173D9E60B1BC1606C7A3A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3035));
		// Vector3 lastPosition = currentPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2963));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_currentPosition_34();
		V_0 = L_0;
		// currentPosition = jointPoses[TrackedHandJoint.IndexTip].Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2964));
		Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * L_1 = ((SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E *)__this)->get_jointPoses_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3036));
		NullCheck(L_1);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_2 = Dictionary_2_get_Item_mAA87FA69922BAF6733C05E34A765031668FCABA6(L_1, ((int32_t)11), /*hidden argument*/Dictionary_2_get_Item_mAA87FA69922BAF6733C05E34A765031668FCABA6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3036));
		V_1 = L_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3037));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3037));
		__this->set_currentPosition_34(L_3);
		// cumulativeDelta += currentPosition - lastPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2965));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = __this->get_cumulativeDelta_35();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = __this->get_currentPosition_34();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3038));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3038));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3039));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_4, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3039));
		__this->set_cumulativeDelta_35(L_8);
		// currentGripPose.Position = currentPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2966));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_9 = __this->get_address_of_currentGripPose_36();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = __this->get_currentPosition_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3040));
		MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3040));
		// if (lastPosition != currentPosition)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2967));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = __this->get_currentPosition_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3041));
		bool L_13 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3041));
		V_2 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2968));
		bool L_14 = V_2;
		if (!L_14)
		{
			goto IL_0089;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2969));
		// CoreServices.InputSystem?.RaiseSourcePositionChanged(InputSource, this, currentPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2970));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3042));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_15 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3042));
		RuntimeObject* L_16 = L_15;
		G_B2_0 = L_16;
		if (L_16)
		{
			G_B3_0 = L_16;
			goto IL_0075;
		}
	}
	{
		goto IL_0088;
	}

IL_0075:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3043));
		RuntimeObject* L_17 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3043));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = __this->get_currentPosition_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3044));
		NullCheck(G_B3_0);
		InterfaceActionInvoker3< RuntimeObject*, RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourcePositionChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, L_17, __this, L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3044));
	}

IL_0088:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2971));
	}

IL_0089:
	{
		// for (int i = 0; i < Interactions?.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2972));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2973));
		goto IL_0282;
	}

IL_0090:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2974));
		// switch (Interactions[i].InputType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2975));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3045));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_19 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3045));
		int32_t L_20 = V_3;
		NullCheck(L_19);
		int32_t L_21 = L_20;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_22 = (L_19)->GetAt(static_cast<il2cpp_array_size_t>(L_21));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3046));
		NullCheck(L_22);
		int32_t L_23 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3046));
		V_4 = L_23;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2976));
		int32_t L_24 = V_4;
		if ((((int32_t)L_24) == ((int32_t)((int32_t)14))))
		{
			goto IL_00b3;
		}
	}
	{
		goto IL_00a8;
	}

IL_00a8:
	{
		int32_t L_25 = V_4;
		if ((((int32_t)L_25) == ((int32_t)((int32_t)25))))
		{
			goto IL_0111;
		}
	}
	{
		goto IL_027d;
	}

IL_00b3:
	{
		// Interactions[i].PoseData = currentGripPose;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2977));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3047));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_26 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3047));
		int32_t L_27 = V_3;
		NullCheck(L_26);
		int32_t L_28 = L_27;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_29 = (L_26)->GetAt(static_cast<il2cpp_array_size_t>(L_28));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_30 = __this->get_currentGripPose_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3048));
		NullCheck(L_29);
		MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_29, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3048));
		// if (Interactions[i].Changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2978));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3049));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_31 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3049));
		int32_t L_32 = V_3;
		NullCheck(L_31);
		int32_t L_33 = L_32;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_34 = (L_31)->GetAt(static_cast<il2cpp_array_size_t>(L_33));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3050));
		NullCheck(L_34);
		bool L_35 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3050));
		V_5 = L_35;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2979));
		bool L_36 = V_5;
		if (!L_36)
		{
			goto IL_010c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2980));
		// CoreServices.InputSystem?.RaisePoseInputChanged(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction, currentGripPose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2981));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3051));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_37 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3051));
		RuntimeObject* L_38 = L_37;
		G_B12_0 = L_38;
		if (L_38)
		{
			G_B13_0 = L_38;
			goto IL_00e6;
		}
	}
	{
		goto IL_010b;
	}

IL_00e6:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3052));
		RuntimeObject* L_39 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3052));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3053));
		uint8_t L_40 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3053));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3054));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_41 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3054));
		int32_t L_42 = V_3;
		NullCheck(L_41);
		int32_t L_43 = L_42;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_44 = (L_41)->GetAt(static_cast<il2cpp_array_size_t>(L_43));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3055));
		NullCheck(L_44);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_45 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3055));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_46 = __this->get_currentGripPose_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3056));
		NullCheck(G_B13_0);
		InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(45 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePoseInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B13_0, L_39, L_40, L_45, L_46);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3056));
	}

IL_010b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2982));
	}

IL_010c:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2983));
		goto IL_027d;
	}

IL_0111:
	{
		// Interactions[i].BoolData = handData.IsPinching;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2984));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3057));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_47 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3057));
		int32_t L_48 = V_3;
		NullCheck(L_47);
		int32_t L_49 = L_48;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_50 = (L_47)->GetAt(static_cast<il2cpp_array_size_t>(L_49));
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_51 = ___handData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3058));
		NullCheck(L_51);
		bool L_52 = SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_inline(L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3058));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3059));
		NullCheck(L_50);
		MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(L_50, L_52, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3059));
		// if (Interactions[i].Changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2985));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3060));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_53 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3060));
		int32_t L_54 = V_3;
		NullCheck(L_53);
		int32_t L_55 = L_54;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_56 = (L_53)->GetAt(static_cast<il2cpp_array_size_t>(L_55));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3061));
		NullCheck(L_56);
		bool L_57 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_56, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3061));
		V_6 = L_57;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2986));
		bool L_58 = V_6;
		if (!L_58)
		{
			goto IL_01e1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2987));
		// if (Interactions[i].BoolData)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2988));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3062));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_59 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3062));
		int32_t L_60 = V_3;
		NullCheck(L_59);
		int32_t L_61 = L_60;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_62 = (L_59)->GetAt(static_cast<il2cpp_array_size_t>(L_61));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3063));
		NullCheck(L_62);
		bool L_63 = MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B(L_62, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3063));
		V_7 = L_63;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2989));
		bool L_64 = V_7;
		if (!L_64)
		{
			goto IL_0193;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2990));
		// CoreServices.InputSystem?.RaiseOnInputDown(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2991));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3064));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_65 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3064));
		RuntimeObject* L_66 = L_65;
		G_B19_0 = L_66;
		if (L_66)
		{
			G_B20_0 = L_66;
			goto IL_015b;
		}
	}
	{
		goto IL_017a;
	}

IL_015b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3065));
		RuntimeObject* L_67 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3066));
		uint8_t L_68 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3066));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3067));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_69 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3067));
		int32_t L_70 = V_3;
		NullCheck(L_69);
		int32_t L_71 = L_70;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_72 = (L_69)->GetAt(static_cast<il2cpp_array_size_t>(L_71));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3068));
		NullCheck(L_72);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_73 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_72, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3068));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3069));
		NullCheck(G_B20_0);
		InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(39 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B20_0, L_67, L_68, L_73);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3069));
	}

IL_017a:
	{
		// SelectDownStartTime = Time.time;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2992));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3070));
		float L_74 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3070));
		__this->set_SelectDownStartTime_29(L_74);
		// cumulativeDelta = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2993));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3071));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_75 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3071));
		__this->set_cumulativeDelta_35(L_75);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2994));
		goto IL_01db;
	}

IL_0193:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2995));
		// CoreServices.InputSystem?.RaiseOnInputUp(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2996));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3072));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_76 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3072));
		RuntimeObject* L_77 = L_76;
		G_B23_0 = L_77;
		if (L_77)
		{
			G_B24_0 = L_77;
			goto IL_019f;
		}
	}
	{
		goto IL_01be;
	}

IL_019f:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3073));
		RuntimeObject* L_78 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3073));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3074));
		uint8_t L_79 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3075));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_80 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3075));
		int32_t L_81 = V_3;
		NullCheck(L_80);
		int32_t L_82 = L_81;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_83 = (L_80)->GetAt(static_cast<il2cpp_array_size_t>(L_82));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3076));
		NullCheck(L_83);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_84 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_83, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3076));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3077));
		NullCheck(G_B24_0);
		InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(40 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B24_0, L_78, L_79, L_84);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3077));
	}

IL_01be:
	{
		// TryCompleteSelect();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2997));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3078));
		SimulatedGestureHand_TryCompleteSelect_m39126D98BA2E83C742CDA9EAEA81EB5128B541AC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3078));
		// TryCompleteHold();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2998));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3079));
		SimulatedGestureHand_TryCompleteHold_mA3B5BAB738C6425798C608310D7D59D6B6FCA1AC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3079));
		// TryCompleteManipulation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2999));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3080));
		SimulatedGestureHand_TryCompleteManipulation_m7DD88EA40E108EB197BF22BD11460BF7A3DFBB18(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3080));
		// TryCompleteNavigation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3000));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3081));
		SimulatedGestureHand_TryCompleteNavigation_m725C944777267419341F15E256472663CBCE6AC8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3081));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3001));
	}

IL_01db:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3002));
		goto IL_027b;
	}

IL_01e1:
	{
		// else if (Interactions[i].BoolData)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3003));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3082));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_85 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3082));
		int32_t L_86 = V_3;
		NullCheck(L_85);
		int32_t L_87 = L_86;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_88 = (L_85)->GetAt(static_cast<il2cpp_array_size_t>(L_87));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3083));
		NullCheck(L_88);
		bool L_89 = MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B(L_88, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3083));
		V_8 = L_89;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3004));
		bool L_90 = V_8;
		if (!L_90)
		{
			goto IL_027b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3005));
		// if (manipulationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3006));
		bool L_91 = __this->get_manipulationInProgress_31();
		V_9 = L_91;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3007));
		bool L_92 = V_9;
		if (!L_92)
		{
			goto IL_020d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3008));
		// UpdateManipulation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3009));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3084));
		SimulatedGestureHand_UpdateManipulation_m7D7C54E9B0364BA9862D4326D9606FB6419CCBC3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3084));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3010));
	}

IL_020d:
	{
		// if (navigationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3011));
		bool L_93 = __this->get_navigationInProgress_32();
		V_10 = L_93;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3012));
		bool L_94 = V_10;
		if (!L_94)
		{
			goto IL_0222;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3013));
		// UpdateNavigation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3014));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3085));
		SimulatedGestureHand_UpdateNavigation_mD504939EDF859CD568D6127F467D193ADF3ADFC0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3085));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3015));
	}

IL_0222:
	{
		// if (cumulativeDelta.magnitude > navigationStartThreshold)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3016));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_95 = __this->get_address_of_cumulativeDelta_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3086));
		float L_96 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_95, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3086));
		float L_97 = __this->get_navigationStartThreshold_28();
		V_11 = (bool)((((float)L_96) > ((float)L_97))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3017));
		bool L_98 = V_11;
		if (!L_98)
		{
			goto IL_0254;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3018));
		// TryCancelHold();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3019));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3087));
		SimulatedGestureHand_TryCancelHold_m1F67089B7A138E396206FE8E7E0DAEECCE14BFBC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3087));
		// TryStartNavigation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3020));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3088));
		SimulatedGestureHand_TryStartNavigation_m2F5F675D13ACB7225B7672755846459058BDF575(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3088));
		// TryStartManipulation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3021));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3089));
		SimulatedGestureHand_TryStartManipulation_m0B58E7807CC8E31CE5F4817A99CC358085866A3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3089));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3022));
		goto IL_027a;
	}

IL_0254:
	{
		// else if (Time.time >= SelectDownStartTime + holdStartDuration)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3023));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3090));
		float L_99 = Time_get_time_m7863349C8845BBA36629A2B3F8EF1C3BEA350FD8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3090));
		float L_100 = __this->get_SelectDownStartTime_29();
		float L_101 = __this->get_holdStartDuration_27();
		V_12 = (bool)((((int32_t)((!(((float)L_99) >= ((float)((float)il2cpp_codegen_add((float)L_100, (float)L_101)))))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3024));
		bool L_102 = V_12;
		if (!L_102)
		{
			goto IL_027a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3025));
		// TryStartHold();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3026));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3091));
		SimulatedGestureHand_TryStartHold_m72CBFF5CAEDDC55C9E865745A5DE4C34C1B2E234(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3091));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3027));
	}

IL_027a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3028));
	}

IL_027b:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3029));
		goto IL_027d;
	}

IL_027d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3030));
		// for (int i = 0; i < Interactions?.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3031));
		int32_t L_103 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_103, (int32_t)1));
	}

IL_0282:
	{
		// for (int i = 0; i < Interactions?.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3032));
		int32_t L_104 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3092));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_105 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3092));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_106 = L_105;
		G_B40_0 = L_106;
		G_B40_1 = L_104;
		if (L_106)
		{
			G_B41_0 = L_106;
			G_B41_1 = L_104;
			goto IL_0299;
		}
	}
	{
		il2cpp_codegen_initobj((&V_15), sizeof(Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB ));
		Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  L_107 = V_15;
		G_B42_0 = L_107;
		G_B42_1 = G_B40_1;
		goto IL_02a0;
	}

IL_0299:
	{
		NullCheck(G_B41_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3093));
		Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  L_108;
		memset((&L_108), 0, sizeof(L_108));
		Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2((&L_108), (((int32_t)((int32_t)(((RuntimeArray*)G_B41_0)->max_length)))), /*hidden argument*/Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3093));
		G_B42_0 = L_108;
		G_B42_1 = G_B41_1;
	}

IL_02a0:
	{
		V_14 = G_B42_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3094));
		int32_t L_109 = Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_inline((Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *)(&V_14), /*hidden argument*/Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3094));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3095));
		bool L_110 = Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_inline((Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *)(&V_14), /*hidden argument*/Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3095));
		V_13 = (bool)((int32_t)((int32_t)((((int32_t)G_B42_1) < ((int32_t)L_109))? 1 : 0)&(int32_t)L_110));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3033));
		bool L_111 = V_13;
		if (L_111)
		{
			goto IL_0090;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3034));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryStartHold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryStartHold_m72CBFF5CAEDDC55C9E865745A5DE4C34C1B2E234 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryStartHold_m72CBFF5CAEDDC55C9E865745A5DE4C34C1B2E234_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryStartHold_m72CBFF5CAEDDC55C9E865745A5DE4C34C1B2E234_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3096));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3097));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3098));
		// if (!holdInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3099));
		bool L_0 = __this->get_holdInProgress_30();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3100));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3101));
		// CoreServices.InputSystem?.RaiseGestureStarted(this, holdAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3102));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3107));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3107));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_001a;
		}
	}
	{
		goto IL_0027;
	}

IL_001a:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_holdAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3108));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(46 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureStarted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3108));
	}

IL_0027:
	{
		// holdInProgress = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3103));
		__this->set_holdInProgress_30((bool)1);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3104));
		V_1 = (bool)1;
		goto IL_0036;
	}

IL_0032:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3105));
		V_1 = (bool)0;
		goto IL_0036;
	}

IL_0036:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3106));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteHold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteHold_mA3B5BAB738C6425798C608310D7D59D6B6FCA1AC (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryCompleteHold_mA3B5BAB738C6425798C608310D7D59D6B6FCA1AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryCompleteHold_mA3B5BAB738C6425798C608310D7D59D6B6FCA1AC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3109));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3110));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3111));
		// if (holdInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3112));
		bool L_0 = __this->get_holdInProgress_30();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3113));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3114));
		// CoreServices.InputSystem?.RaiseGestureCompleted(this, holdAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3115));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3120));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3120));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0017;
		}
	}
	{
		goto IL_0024;
	}

IL_0017:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_holdAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3121));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(52 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3121));
	}

IL_0024:
	{
		// holdInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3116));
		__this->set_holdInProgress_30((bool)0);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3117));
		V_1 = (bool)1;
		goto IL_0033;
	}

IL_002f:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3118));
		V_1 = (bool)0;
		goto IL_0033;
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3119));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCancelHold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCancelHold_m1F67089B7A138E396206FE8E7E0DAEECCE14BFBC (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryCancelHold_m1F67089B7A138E396206FE8E7E0DAEECCE14BFBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryCancelHold_m1F67089B7A138E396206FE8E7E0DAEECCE14BFBC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3122));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3123));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3124));
		// if (holdInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3125));
		bool L_0 = __this->get_holdInProgress_30();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3126));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3127));
		// CoreServices.InputSystem?.RaiseGestureCanceled(this, holdAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3133));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3133));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0017;
		}
	}
	{
		goto IL_0024;
	}

IL_0017:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_holdAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3134));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(57 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCanceled(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3134));
	}

IL_0024:
	{
		// holdInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3129));
		__this->set_holdInProgress_30((bool)0);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3130));
		V_1 = (bool)1;
		goto IL_0033;
	}

IL_002f:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3131));
		V_1 = (bool)0;
		goto IL_0033;
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3132));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryStartManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryStartManipulation_m0B58E7807CC8E31CE5F4817A99CC358085866A3E (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryStartManipulation_m0B58E7807CC8E31CE5F4817A99CC358085866A3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryStartManipulation_m0B58E7807CC8E31CE5F4817A99CC358085866A3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3136));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3137));
		// if (!manipulationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3138));
		bool L_0 = __this->get_manipulationInProgress_31();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3139));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3140));
		// CoreServices.InputSystem?.RaiseGestureStarted(this, manipulationAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3141));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3146));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3146));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_001a;
		}
	}
	{
		goto IL_0027;
	}

IL_001a:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_manipulationAction_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3147));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(46 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureStarted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3147));
	}

IL_0027:
	{
		// manipulationInProgress = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3142));
		__this->set_manipulationInProgress_31((bool)1);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3143));
		V_1 = (bool)1;
		goto IL_0036;
	}

IL_0032:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3144));
		V_1 = (bool)0;
		goto IL_0036;
	}

IL_0036:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3145));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateManipulation_m7D7C54E9B0364BA9862D4326D9606FB6419CCBC3 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_UpdateManipulation_m7D7C54E9B0364BA9862D4326D9606FB6419CCBC3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_UpdateManipulation_m7D7C54E9B0364BA9862D4326D9606FB6419CCBC3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3148));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3149));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3150));
		// if (manipulationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3151));
		bool L_0 = __this->get_manipulationInProgress_31();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3152));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3153));
		// CoreServices.InputSystem?.RaiseGestureUpdated(this, manipulationAction, cumulativeDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3154));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3157));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3157));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0017;
		}
	}
	{
		goto IL_002a;
	}

IL_0017:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_manipulationAction_24();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = __this->get_cumulativeDelta_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3158));
		NullCheck(G_B3_0);
		InterfaceActionInvoker3< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(49 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureUpdated(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3158));
	}

IL_002a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3155));
	}

IL_002b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3156));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteManipulation_m7DD88EA40E108EB197BF22BD11460BF7A3DFBB18 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryCompleteManipulation_m7DD88EA40E108EB197BF22BD11460BF7A3DFBB18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryCompleteManipulation_m7DD88EA40E108EB197BF22BD11460BF7A3DFBB18_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3159));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3160));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3161));
		// if (manipulationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3162));
		bool L_0 = __this->get_manipulationInProgress_31();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3163));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0035;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3164));
		// CoreServices.InputSystem?.RaiseGestureCompleted(this, manipulationAction, cumulativeDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3165));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3170));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3170));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0017;
		}
	}
	{
		goto IL_002a;
	}

IL_0017:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_manipulationAction_24();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = __this->get_cumulativeDelta_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3171));
		NullCheck(G_B3_0);
		InterfaceActionInvoker3< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(54 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3171));
	}

IL_002a:
	{
		// manipulationInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3166));
		__this->set_manipulationInProgress_31((bool)0);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3167));
		V_1 = (bool)1;
		goto IL_0039;
	}

IL_0035:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3168));
		V_1 = (bool)0;
		goto IL_0039;
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3169));
		bool L_6 = V_1;
		return L_6;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCancelManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCancelManipulation_m774C717F6300ED032BD87747966E2EBFBE9F3159 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryCancelManipulation_m774C717F6300ED032BD87747966E2EBFBE9F3159_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryCancelManipulation_m774C717F6300ED032BD87747966E2EBFBE9F3159_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3172));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3173));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3174));
		// if (manipulationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3175));
		bool L_0 = __this->get_manipulationInProgress_31();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3176));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3177));
		// CoreServices.InputSystem?.RaiseGestureCanceled(this, manipulationAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3183));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3183));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0017;
		}
	}
	{
		goto IL_0024;
	}

IL_0017:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_manipulationAction_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3184));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(57 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCanceled(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3184));
	}

IL_0024:
	{
		// manipulationInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3179));
		__this->set_manipulationInProgress_31((bool)0);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3180));
		V_1 = (bool)1;
		goto IL_0033;
	}

IL_002f:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3181));
		V_1 = (bool)0;
		goto IL_0033;
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3182));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteSelect()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteSelect_m39126D98BA2E83C742CDA9EAEA81EB5128B541AC (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryCompleteSelect_m39126D98BA2E83C742CDA9EAEA81EB5128B541AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryCompleteSelect_m39126D98BA2E83C742CDA9EAEA81EB5128B541AC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3185));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3186));
	int32_t G_B3_0 = 0;
	RuntimeObject* G_B6_0 = NULL;
	RuntimeObject* G_B5_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3187));
		// if (!manipulationInProgress && !holdInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3188));
		bool L_0 = __this->get_manipulationInProgress_31();
		if (L_0)
		{
			goto IL_0014;
		}
	}
	{
		bool L_1 = __this->get_holdInProgress_30();
		G_B3_0 = ((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		goto IL_0015;
	}

IL_0014:
	{
		G_B3_0 = 0;
	}

IL_0015:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3189));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0036;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3190));
		// CoreServices.InputSystem?.RaiseGestureCompleted(this, selectAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3191));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3195));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_3 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3195));
		RuntimeObject* L_4 = L_3;
		G_B5_0 = L_4;
		if (L_4)
		{
			G_B6_0 = L_4;
			goto IL_0025;
		}
	}
	{
		goto IL_0032;
	}

IL_0025:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_5 = __this->get_selectAction_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3196));
		NullCheck(G_B6_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(52 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B6_0, __this, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3196));
	}

IL_0032:
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3192));
		V_1 = (bool)1;
		goto IL_003a;
	}

IL_0036:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3193));
		V_1 = (bool)0;
		goto IL_003a;
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3194));
		bool L_6 = V_1;
		return L_6;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryStartNavigation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryStartNavigation_m2F5F675D13ACB7225B7672755846459058BDF575 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryStartNavigation_m2F5F675D13ACB7225B7672755846459058BDF575_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryStartNavigation_m2F5F675D13ACB7225B7672755846459058BDF575_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3197));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3198));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3199));
		// if (!navigationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3200));
		bool L_0 = __this->get_navigationInProgress_32();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3201));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0044;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3202));
		// CoreServices.InputSystem?.RaiseGestureStarted(this, navigationAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3203));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3210));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3210));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_001a;
		}
	}
	{
		goto IL_0027;
	}

IL_001a:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_navigationAction_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3211));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(46 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureStarted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3211));
	}

IL_0027:
	{
		// navigationInProgress = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3204));
		__this->set_navigationInProgress_32((bool)1);
		// currentRailsUsed = Vector3.one;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3205));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3212));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3212));
		__this->set_currentRailsUsed_33(L_5);
		// UpdateNavigationRails();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3206));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3213));
		SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3213));
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3207));
		V_1 = (bool)1;
		goto IL_0048;
	}

IL_0044:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3208));
		V_1 = (bool)0;
		goto IL_0048;
	}

IL_0048:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3209));
		bool L_6 = V_1;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateNavigation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateNavigation_mD504939EDF859CD568D6127F467D193ADF3ADFC0 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_UpdateNavigation_mD504939EDF859CD568D6127F467D193ADF3ADFC0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_UpdateNavigation_mD504939EDF859CD568D6127F467D193ADF3ADFC0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3214));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3215));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3216));
		// if (navigationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3217));
		bool L_0 = __this->get_navigationInProgress_32();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3218));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0032;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3219));
		// UpdateNavigationRails();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3220));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3224));
		SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3224));
		// CoreServices.InputSystem?.RaiseGestureUpdated(this, navigationAction, NavigationDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3221));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3225));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3225));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_001e;
		}
	}
	{
		goto IL_0031;
	}

IL_001e:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_navigationAction_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3226));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3226));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3227));
		NullCheck(G_B3_0);
		InterfaceActionInvoker3< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(49 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureUpdated(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3227));
	}

IL_0031:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3222));
	}

IL_0032:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3223));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCompleteNavigation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCompleteNavigation_m725C944777267419341F15E256472663CBCE6AC8 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryCompleteNavigation_m725C944777267419341F15E256472663CBCE6AC8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryCompleteNavigation_m725C944777267419341F15E256472663CBCE6AC8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3228));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3229));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3230));
		// if (navigationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3231));
		bool L_0 = __this->get_navigationInProgress_32();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3232));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0035;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3233));
		// CoreServices.InputSystem?.RaiseGestureCompleted(this, navigationAction, NavigationDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3234));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3239));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3239));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0017;
		}
	}
	{
		goto IL_002a;
	}

IL_0017:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_navigationAction_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3240));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = SimulatedGestureHand_get_NavigationDelta_mB51D5858D11376849EB7748D66D52E7298B4FC03(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3240));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3241));
		NullCheck(G_B3_0);
		InterfaceActionInvoker3< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(54 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCompleted(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,UnityEngine.Vector3) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3241));
	}

IL_002a:
	{
		// navigationInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3235));
		__this->set_navigationInProgress_32((bool)0);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3236));
		V_1 = (bool)1;
		goto IL_0039;
	}

IL_0035:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3237));
		V_1 = (bool)0;
		goto IL_0039;
	}

IL_0039:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3238));
		bool L_6 = V_1;
		return L_6;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::TryCancelNavigation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedGestureHand_TryCancelNavigation_m7F78258B782D49B12470728A9F18ECFE2C0138A5 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_TryCancelNavigation_m7F78258B782D49B12470728A9F18ECFE2C0138A5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_TryCancelNavigation_m7F78258B782D49B12470728A9F18ECFE2C0138A5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3242));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3243));
	RuntimeObject* G_B3_0 = NULL;
	RuntimeObject* G_B2_0 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3244));
		// if (navigationInProgress)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3245));
		bool L_0 = __this->get_navigationInProgress_32();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3246));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3247));
		// CoreServices.InputSystem?.RaiseGestureCanceled(this, navigationAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3248));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3253));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_2 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3253));
		RuntimeObject* L_3 = L_2;
		G_B2_0 = L_3;
		if (L_3)
		{
			G_B3_0 = L_3;
			goto IL_0017;
		}
	}
	{
		goto IL_0024;
	}

IL_0017:
	{
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_4 = __this->get_navigationAction_23();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3254));
		NullCheck(G_B3_0);
		InterfaceActionInvoker2< RuntimeObject*, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(57 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseGestureCanceled(Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B3_0, __this, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3254));
	}

IL_0024:
	{
		// navigationInProgress = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3249));
		__this->set_navigationInProgress_32((bool)0);
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3250));
		V_1 = (bool)1;
		goto IL_0033;
	}

IL_002f:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3251));
		V_1 = (bool)0;
		goto IL_0033;
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3252));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedGestureHand::UpdateNavigationRails()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6 (SimulatedGestureHand_t9A6617D8B7C1E31347E9B134A1D67AE017661EBB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedGestureHand_UpdateNavigationRails_mDA8C27C354D28CD6BC7E7EB7E4A84A560D1B08A6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3255));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3256));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3257));
		// if (useRailsNavigation && currentRailsUsed == Vector3.one)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3258));
		bool L_0 = __this->get_useRailsNavigation_26();
		if (!L_0)
		{
			goto IL_001b;
		}
	}
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = __this->get_currentRailsUsed_33();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3278));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_one_mA11B83037CB269C6076CBCF754E24C8F3ACEC2AB(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3278));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3279));
		bool L_3 = Vector3_op_Equality_mA9E2F96E98E71AE7ACCE74766D700D41F0404806(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3279));
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3259));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_00d4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3260));
		// if (Mathf.Abs(cumulativeDelta.x) >= navigationStartThreshold)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3261));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = __this->get_address_of_cumulativeDelta_35();
		float L_6 = L_5->get_x_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3280));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_7 = fabsf(L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3280));
		float L_8 = __this->get_navigationStartThreshold_28();
		V_1 = (bool)((((int32_t)((!(((float)L_7) >= ((float)L_8)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3262));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_0061;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3263));
		// currentRailsUsed = new Vector3(1, 0, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3264));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3281));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10;
		memset((&L_10), 0, sizeof(L_10));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_10), (1.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3281));
		__this->set_currentRailsUsed_33(L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3265));
		goto IL_00d3;
	}

IL_0061:
	{
		// else if (Mathf.Abs(cumulativeDelta.y) > navigationStartThreshold)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3266));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_11 = __this->get_address_of_cumulativeDelta_35();
		float L_12 = L_11->get_y_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3282));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_13 = fabsf(L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3282));
		float L_14 = __this->get_navigationStartThreshold_28();
		V_2 = (bool)((((float)L_13) > ((float)L_14))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3267));
		bool L_15 = V_2;
		if (!L_15)
		{
			goto IL_009b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3268));
		// currentRailsUsed = new Vector3(0, 1, 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3269));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3283));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16;
		memset((&L_16), 0, sizeof(L_16));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_16), (0.0f), (1.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3283));
		__this->set_currentRailsUsed_33(L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3270));
		goto IL_00d3;
	}

IL_009b:
	{
		// else if (Mathf.Abs(cumulativeDelta.z) > navigationStartThreshold)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3271));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_17 = __this->get_address_of_cumulativeDelta_35();
		float L_18 = L_17->get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3284));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_19 = fabsf(L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3284));
		float L_20 = __this->get_navigationStartThreshold_28();
		V_3 = (bool)((((float)L_19) > ((float)L_20))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3272));
		bool L_21 = V_3;
		if (!L_21)
		{
			goto IL_00d3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3273));
		// currentRailsUsed = new Vector3(0, 0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3274));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3285));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22;
		memset((&L_22), 0, sizeof(L_22));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_22), (0.0f), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3285));
		__this->set_currentRailsUsed_33(L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3275));
	}

IL_00d3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3276));
	}

IL_00d4:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3277));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHand::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[],Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSourceDefinition)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHand__ctor_mB9443EF6803AAEA223CA3838E9F806B124FBC221 (SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, RuntimeObject* ___definition4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHand__ctor_mB9443EF6803AAEA223CA3838E9F806B124FBC221_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___inputSource2), (&___interactions3), (&___definition4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHand__ctor_mB9443EF6803AAEA223CA3838E9F806B124FBC221_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3339));
	{
		// protected readonly Dictionary<TrackedHandJoint, MixedRealityPose> jointPoses = new Dictionary<TrackedHandJoint, MixedRealityPose>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3340));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3344));
		Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * L_0 = (Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 *)il2cpp_codegen_object_new(Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_mD52EC03DD022577E1A73259E748910906383DA4E(L_0, /*hidden argument*/Dictionary_2__ctor_mD52EC03DD022577E1A73259E748910906383DA4E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3344));
		__this->set_jointPoses_20(L_0);
		// : base(trackingState, controllerHandedness, inputSource, interactions, definition)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3341));
		int32_t L_1 = ___trackingState0;
		uint8_t L_2 = ___controllerHandedness1;
		RuntimeObject* L_3 = ___inputSource2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_4 = ___interactions3;
		RuntimeObject* L_5 = ___definition4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3345));
		BaseHand__ctor_m4BD617520FC2C8044BDABFDE15AA920FF1F426A7(__this, L_1, L_2, L_3, L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3345));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3342));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3343));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHand::TryGetJoint(Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHand_TryGetJoint_m14B9D4449933B89DB099541E2901B4017D613B64 (SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E * __this, int32_t ___joint0, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * ___pose1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHand_TryGetJoint_m14B9D4449933B89DB099541E2901B4017D613B64_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___joint0), (&___pose1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHand_TryGetJoint_m14B9D4449933B89DB099541E2901B4017D613B64_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3346));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3347));
	{
		// public override bool TryGetJoint(TrackedHandJoint joint, out MixedRealityPose pose) => jointPoses.TryGetValue(joint, out pose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3348));
		Dictionary_2_tC314057363AB78F99AD807B804C5676B14530F86 * L_0 = __this->get_jointPoses_20();
		int32_t L_1 = ___joint0;
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_2 = ___pose1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3349));
		NullCheck(L_0);
		bool L_3 = Dictionary_2_TryGetValue_mEB4E22F5D5C93FBC06285B7EA9EDC0B6B73CF31D(L_0, L_1, (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_2, /*hidden argument*/Dictionary_2_TryGetValue_mEB4E22F5D5C93FBC06285B7EA9EDC0B6B73CF31D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3349));
		return L_3;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHand::UpdateState(Microsoft.MixedReality.Toolkit.Input.SimulatedHandData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHand_UpdateState_m76167DB74444C36B375258174DBB71C74806C7E7 (SimulatedHand_tFBAB6AD39E9B16E093E63E4D2A88EA5E3415437E * __this, SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * ___handData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHand_UpdateState_m76167DB74444C36B375258174DBB71C74806C7E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHand_UpdateState_m76167DB74444C36B375258174DBB71C74806C7E7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3350));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3351));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3352));
		// UpdateHandJoints(handData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3353));
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_0 = ___handData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3357));
		VirtActionInvoker1< SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * >::Invoke(29 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHand::UpdateHandJoints(Microsoft.MixedReality.Toolkit.Input.SimulatedHandData) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3357));
		// UpdateVelocity();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3354));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3358));
		BaseHand_UpdateVelocity_m2E2A6FE7655DBBE7E1BEBD9DAD7936B28DCEE484(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3358));
		// UpdateInteractions(handData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3355));
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_1 = ___handData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3359));
		VirtActionInvoker1< SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * >::Invoke(30 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHand::UpdateInteractions(Microsoft.MixedReality.Toolkit.Input.SimulatedHandData) */, __this, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3359));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3356));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::get_IsTracked()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHandData_get_IsTracked_m44B1246872F6BE0B0A308EB2CC5259B6DFCF7FBF (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData_get_IsTracked_m44B1246872F6BE0B0A308EB2CC5259B6DFCF7FBF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData_get_IsTracked_m44B1246872F6BE0B0A308EB2CC5259B6DFCF7FBF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3286));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3287));
	{
		// public bool IsTracked => isTracked;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3288));
		bool L_0 = __this->get_isTracked_0();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[] Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::get_Joints()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3289));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3290));
	{
		// public MixedRealityPose[] Joints => joints;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3291));
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_0 = __this->get_joints_1();
		return L_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::get_IsPinching()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981 (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3292));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3293));
	{
		// public bool IsPinching => isPinching;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3294));
		bool L_0 = __this->get_isPinching_2();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::Copy(Microsoft.MixedReality.Toolkit.Input.SimulatedHandData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandData_Copy_m41ABA1DF6D6E58F82E3DF8D876F210F2D75BCC52 (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * ___other0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData_Copy_m41ABA1DF6D6E58F82E3DF8D876F210F2D75BCC52_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___other0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData_Copy_m41ABA1DF6D6E58F82E3DF8D876F210F2D75BCC52_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3295));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3296));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3297));
		// isTracked = other.isTracked;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3298));
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_0 = ___other0;
		NullCheck(L_0);
		bool L_1 = L_0->get_isTracked_0();
		__this->set_isTracked_0(L_1);
		// isPinching = other.isPinching;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3299));
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_2 = ___other0;
		NullCheck(L_2);
		bool L_3 = L_2->get_isPinching_2();
		__this->set_isPinching_2(L_3);
		// for (int i = 0; i < ArticulatedHandPose.JointCount; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3300));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3301));
		goto IL_003b;
	}

IL_001d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3302));
		// joints[i] = other.joints[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3303));
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_4 = __this->get_joints_1();
		int32_t L_5 = V_0;
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_6 = ___other0;
		NullCheck(L_6);
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_7 = L_6->get_joints_1();
		int32_t L_8 = V_0;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(L_5), (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 )L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3304));
		// for (int i = 0; i < ArticulatedHandPose.JointCount; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3305));
		int32_t L_11 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_11, (int32_t)1));
	}

IL_003b:
	{
		// for (int i = 0; i < ArticulatedHandPose.JointCount; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3306));
		int32_t L_12 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3309));
		IL2CPP_RUNTIME_CLASS_INIT(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_il2cpp_TypeInfo_var);
		int32_t L_13 = ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3309));
		V_1 = (bool)((((int32_t)L_12) < ((int32_t)L_13))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3307));
		bool L_14 = V_1;
		if (L_14)
		{
			goto IL_001d;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3308));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::Update(System.Boolean,System.Boolean,Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048 (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, bool ___isTrackedNew0, bool ___isPinchingNew1, HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * ___generator2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isTrackedNew0), (&___isPinchingNew1), (&___generator2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3310));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3311));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3312));
		// bool handDataChanged = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3313));
		V_0 = (bool)0;
		// if (isTracked != isTrackedNew || isPinching != isPinchingNew)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3314));
		bool L_0 = __this->get_isTracked_0();
		bool L_1 = ___isTrackedNew0;
		if ((!(((uint32_t)L_0) == ((uint32_t)L_1))))
		{
			goto IL_001a;
		}
	}
	{
		bool L_2 = __this->get_isPinching_2();
		bool L_3 = ___isPinchingNew1;
		G_B3_0 = ((((int32_t)((((int32_t)L_2) == ((int32_t)L_3))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 1;
	}

IL_001b:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3315));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0031;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3316));
		// isTracked = isTrackedNew;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3317));
		bool L_5 = ___isTrackedNew0;
		__this->set_isTracked_0(L_5);
		// isPinching = isPinchingNew;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3318));
		bool L_6 = ___isPinchingNew1;
		__this->set_isPinching_2(L_6);
		// handDataChanged = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3319));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3320));
	}

IL_0031:
	{
		// if (isTracked)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3321));
		bool L_7 = __this->get_isTracked_0();
		V_2 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3322));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_0051;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3323));
		// generator?.Invoke(Joints);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3324));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_9 = ___generator2;
		if (L_9)
		{
			goto IL_0041;
		}
	}
	{
		goto IL_004e;
	}

IL_0041:
	{
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_10 = ___generator2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3329));
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_11 = SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3329));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3330));
		NullCheck(L_10);
		HandJointDataGenerator_Invoke_m453D8F003A5B2375922D4E902074628FA4AAB4F2(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3330));
	}

IL_004e:
	{
		// handDataChanged = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3325));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3326));
	}

IL_0051:
	{
		// return handDataChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3327));
		bool L_12 = V_0;
		V_3 = L_12;
		goto IL_0055;
	}

IL_0055:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3328));
		bool L_13 = V_3;
		return L_13;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandData::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandData__ctor_mC0F48E57A15AA83EB147D0682EAFD4B9A13A74E3 (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData__ctor_mC0F48E57A15AA83EB147D0682EAFD4B9A13A74E3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData__ctor_mC0F48E57A15AA83EB147D0682EAFD4B9A13A74E3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3331));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3332));
	{
		// private bool isTracked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3333));
		__this->set_isTracked_0((bool)0);
		// private MixedRealityPose[] joints = new MixedRealityPose[ArticulatedHandPose.JointCount];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3334));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3336));
		IL2CPP_RUNTIME_CLASS_INIT(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_il2cpp_TypeInfo_var);
		int32_t L_0 = ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3336));
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_1 = (MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD*)(MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD*)SZArrayNew(MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD_il2cpp_TypeInfo_var, (uint32_t)L_0);
		__this->set_joints_1(L_1);
		// private bool isPinching = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3335));
		__this->set_isPinching_2((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3337));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3337));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * __this, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___jointPoses0, const RuntimeMethod* method)
{
	typedef void (DEFAULT_CALL *PInvokeFunc)(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(((RuntimeDelegate*)__this)->method->nativeFunction);

	// Marshaling of parameter '___jointPoses0' to native representation
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * ____jointPoses0_marshaled = NULL;
	if (___jointPoses0 != NULL)
	{
		____jointPoses0_marshaled = reinterpret_cast<MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *>((___jointPoses0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	il2cppPInvokeFunc(____jointPoses0_marshaled);

}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandJointDataGenerator__ctor_mB815FE73EC4C1E2EA223BA3380BC7817ACED0EB0 (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator::Invoke(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandJointDataGenerator_Invoke_m453D8F003A5B2375922D4E902074628FA4AAB4F2 (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * __this, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___jointPoses0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___jointPoses0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___jointPoses0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___jointPoses0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___jointPoses0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___jointPoses0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___jointPoses0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___jointPoses0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* >::Invoke(targetMethod, targetThis, ___jointPoses0);
					else
						GenericVirtActionInvoker1< MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* >::Invoke(targetMethod, targetThis, ___jointPoses0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___jointPoses0);
					else
						VirtActionInvoker1< MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___jointPoses0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___jointPoses0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___jointPoses0, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___jointPoses0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator::BeginInvoke(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[],System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* HandJointDataGenerator_BeginInvoke_mA4657EBE145331D04C470650EAF342F7C67A646F (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * __this, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___jointPoses0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___jointPoses0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandData/HandJointDataGenerator::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void HandJointDataGenerator_EndInvoke_m47C19E7BD246FFCEDFC1D4E6903DB18FAF1002F5 (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandDataProvider__ctor_m5BDEF9D66F97A11A0B6CA2ADB5322B3DC9845BD9 (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * ____profile0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider__ctor_m5BDEF9D66F97A11A0B6CA2ADB5322B3DC9845BD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_0 = NULL;
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_1 = NULL;
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_2 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&____profile0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider__ctor_m5BDEF9D66F97A11A0B6CA2ADB5322B3DC9845BD9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3454));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3455));
	{
		// public SimulatedHandDataProvider(MixedRealityInputSimulationProfile _profile) : base(_profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3456));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_0 = ____profile0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3468));
		IL2CPP_RUNTIME_CLASS_INIT(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C_il2cpp_TypeInfo_var);
		SimulatedControllerDataProvider__ctor_m3BAB2EECEAB474D4C22EEA869BB89B0D46203157(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3468));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3457));
		// InputStateLeft = new SimulatedHandState(Handedness.Left);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3458));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3469));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_1 = (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)il2cpp_codegen_object_new(SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var);
		SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433(L_1, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3469));
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateLeft_3(L_1);
		// InputStateRight = new SimulatedHandState(Handedness.Right);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3459));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3470));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_2 = (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)il2cpp_codegen_object_new(SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var);
		SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433(L_2, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3470));
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateRight_4(L_2);
		// InputStateGaze = new SimulatedHandState(Handedness.None);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3460));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3471));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_3 = (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)il2cpp_codegen_object_new(SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var);
		SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433(L_3, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3471));
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateGaze_5(L_3);
		// SimulatedHandState handStateLeft = InputStateLeft as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3461));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_4 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateLeft_3();
		V_0 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_4, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// SimulatedHandState handStateRight = InputStateRight as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3462));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_5 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateRight_4();
		V_1 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_5, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// SimulatedHandState handStateGaze = InputStateGaze as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3463));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_6 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateGaze_5();
		V_2 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_6, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// handStateLeft.Gesture = profile.DefaultHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3464));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_7 = V_0;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_8 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3472));
		NullCheck(L_8);
		int32_t L_9 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3472));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3473));
		NullCheck(L_7);
		SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882(L_7, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3473));
		// handStateRight.Gesture = profile.DefaultHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3465));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_10 = V_1;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_11 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3474));
		NullCheck(L_11);
		int32_t L_12 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3474));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3475));
		NullCheck(L_10);
		SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882(L_10, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3475));
		// handStateGaze.Gesture = profile.DefaultHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3466));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_13 = V_2;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_14 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3476));
		NullCheck(L_14);
		int32_t L_15 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3476));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3477));
		NullCheck(L_13);
		SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882(L_13, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3477));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3467));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::UpdateHandData(Microsoft.MixedReality.Toolkit.Input.SimulatedHandData,Microsoft.MixedReality.Toolkit.Input.SimulatedHandData,Microsoft.MixedReality.Toolkit.Input.SimulatedHandData,Microsoft.MixedReality.Toolkit.Input.MouseDelta)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHandDataProvider_UpdateHandData_m46FBCD8C5B45CEF7FEECDC9A92A5DE61AD4349CD (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * ___handDataLeft0, SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * ___handDataRight1, SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * ___handDataGaze2, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_UpdateHandData_m46FBCD8C5B45CEF7FEECDC9A92A5DE61AD4349CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_0 = NULL;
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_1 = NULL;
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_2 = NULL;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handDataLeft0), (&___handDataRight1), (&___handDataGaze2), (&___mouseDelta3));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_UpdateHandData_m46FBCD8C5B45CEF7FEECDC9A92A5DE61AD4349CD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3478));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3479));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3480));
		// SimulateUserInput(mouseDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3481));
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_0 = ___mouseDelta3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3509));
		VirtActionInvoker1< MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * >::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::SimulateUserInput(Microsoft.MixedReality.Toolkit.Input.MouseDelta) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3509));
		// SimulatedHandState handStateLeft = InputStateLeft as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3482));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_1 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateLeft_3();
		V_0 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_1, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// SimulatedHandState handStateRight = InputStateRight as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3483));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_2 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateRight_4();
		V_1 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_2, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// SimulatedHandState handStateGaze = InputStateGaze as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3484));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_3 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateGaze_5();
		V_2 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_3, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// handStateLeft.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3485));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3510));
		NullCheck(L_4);
		SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3510));
		// handStateRight.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3486));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3511));
		NullCheck(L_5);
		SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3511));
		// handStateGaze.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3487));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_6 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3512));
		NullCheck(L_6);
		SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3512));
		// bool handDataChanged = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3488));
		V_3 = (bool)0;
		// if (generatorLeft == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3489));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_7 = __this->get_generatorLeft_16();
		V_4 = (bool)((((RuntimeObject*)(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 *)L_7) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3490));
		bool L_8 = V_4;
		if (!L_8)
		{
			goto IL_0068;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3491));
		// generatorLeft = handStateLeft.FillCurrentFrame;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3492));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_9 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3513));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_10 = (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 *)il2cpp_codegen_object_new(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955_il2cpp_TypeInfo_var);
		HandJointDataGenerator__ctor_mB815FE73EC4C1E2EA223BA3380BC7817ACED0EB0(L_10, L_9, (intptr_t)((intptr_t)SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3513));
		__this->set_generatorLeft_16(L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3493));
	}

IL_0068:
	{
		// if (generatorRight == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3494));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_11 = __this->get_generatorRight_17();
		V_5 = (bool)((((RuntimeObject*)(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 *)L_11) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3495));
		bool L_12 = V_5;
		if (!L_12)
		{
			goto IL_008b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3496));
		// generatorRight = handStateRight.FillCurrentFrame;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3497));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3514));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_14 = (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 *)il2cpp_codegen_object_new(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955_il2cpp_TypeInfo_var);
		HandJointDataGenerator__ctor_mB815FE73EC4C1E2EA223BA3380BC7817ACED0EB0(L_14, L_13, (intptr_t)((intptr_t)SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3514));
		__this->set_generatorRight_17(L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3498));
	}

IL_008b:
	{
		// if (generatorGaze == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3499));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_15 = __this->get_generatorGaze_18();
		V_6 = (bool)((((RuntimeObject*)(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 *)L_15) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3500));
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_00ae;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3501));
		// generatorGaze = handStateGaze.FillCurrentFrame;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3502));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_17 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3515));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_18 = (HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 *)il2cpp_codegen_object_new(HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955_il2cpp_TypeInfo_var);
		HandJointDataGenerator__ctor_mB815FE73EC4C1E2EA223BA3380BC7817ACED0EB0(L_18, L_17, (intptr_t)((intptr_t)SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3515));
		__this->set_generatorGaze_18(L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3503));
	}

IL_00ae:
	{
		// handDataChanged |= handDataLeft.Update(handStateLeft.IsTracked, handStateLeft.IsPinching, generatorLeft);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3504));
		bool L_19 = V_3;
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_20 = ___handDataLeft0;
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_21 = V_0;
		NullCheck(L_21);
		bool L_22 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_21)->get_IsTracked_1();
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_23 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3516));
		NullCheck(L_23);
		bool L_24 = SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3516));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_25 = __this->get_generatorLeft_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3517));
		NullCheck(L_20);
		bool L_26 = SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048(L_20, L_22, L_24, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3517));
		V_3 = (bool)((int32_t)((int32_t)L_19|(int32_t)L_26));
		// handDataChanged |= handDataRight.Update(handStateRight.IsTracked, handStateRight.IsPinching, generatorRight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3505));
		bool L_27 = V_3;
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_28 = ___handDataRight1;
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_29 = V_1;
		NullCheck(L_29);
		bool L_30 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_29)->get_IsTracked_1();
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_31 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3518));
		NullCheck(L_31);
		bool L_32 = SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE(L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3518));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_33 = __this->get_generatorRight_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3519));
		NullCheck(L_28);
		bool L_34 = SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048(L_28, L_30, L_32, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3519));
		V_3 = (bool)((int32_t)((int32_t)L_27|(int32_t)L_34));
		// handDataChanged |= handDataGaze.Update(handStateGaze.IsTracked, handStateGaze.IsPinching, generatorGaze);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3506));
		bool L_35 = V_3;
		SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * L_36 = ___handDataGaze2;
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_37 = V_2;
		NullCheck(L_37);
		bool L_38 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_37)->get_IsTracked_1();
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_39 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3520));
		NullCheck(L_39);
		bool L_40 = SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE(L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3520));
		HandJointDataGenerator_t70BF622884D5C475C85D34FDE76FD298FAC37955 * L_41 = __this->get_generatorGaze_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3521));
		NullCheck(L_36);
		bool L_42 = SimulatedHandData_Update_m8F8FA53BE78C0B1B1B5AEDD04E81EE37283C2048(L_36, L_38, L_40, L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3521));
		V_3 = (bool)((int32_t)((int32_t)L_35|(int32_t)L_42));
		// return handDataChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3507));
		bool L_43 = V_3;
		V_7 = L_43;
		goto IL_0104;
	}

IL_0104:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3508));
		bool L_44 = V_7;
		return L_44;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::SimulateUserInput(Microsoft.MixedReality.Toolkit.Input.MouseDelta)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandDataProvider_SimulateUserInput_mB17706A3FAE9D7F7984FDA2510AE281167D3FD63 (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_SimulateUserInput_mB17706A3FAE9D7F7984FDA2510AE281167D3FD63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_0 = NULL;
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_1 = NULL;
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_2 = NULL;
	float V_3 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___mouseDelta0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_SimulateUserInput_mB17706A3FAE9D7F7984FDA2510AE281167D3FD63_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3522));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3523));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3524));
		// base.SimulateUserInput(mouseDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3525));
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_0 = ___mouseDelta0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3534));
		SimulatedControllerDataProvider_SimulateUserInput_m6353F6F38BD7D72E6CE6163B1B3484AA12830024(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3534));
		// SimulatedHandState handStateLeft = InputStateLeft as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3526));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_1 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateLeft_3();
		V_0 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_1, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// SimulatedHandState handStateRight = InputStateRight as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3527));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_2 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateRight_4();
		V_1 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_2, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// SimulatedHandState handStateGaze = InputStateGaze as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3528));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_3 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateGaze_5();
		V_2 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_3, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// float gestureAnimDelta = profile.HandGestureAnimationSpeed * Time.unscaledDeltaTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3529));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_4 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3535));
		NullCheck(L_4);
		float L_5 = MixedRealityInputSimulationProfile_get_HandGestureAnimationSpeed_m159042CFADEA1948914A6AD9D52193E9179B0AF5_inline(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3535));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3536));
		float L_6 = Time_get_unscaledDeltaTime_mA0AE7A144C88AE8AABB42DF17B0F3F0714BA06B2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3536));
		V_3 = ((float)il2cpp_codegen_multiply((float)L_5, (float)L_6));
		// handStateLeft.GestureBlending += gestureAnimDelta;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3530));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_7 = V_0;
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_8 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3537));
		NullCheck(L_8);
		float L_9 = SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3537));
		float L_10 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3538));
		NullCheck(L_8);
		SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11(L_8, ((float)il2cpp_codegen_add((float)L_9, (float)L_10)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3538));
		// handStateRight.GestureBlending += gestureAnimDelta;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3531));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_11 = V_1;
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_12 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3539));
		NullCheck(L_12);
		float L_13 = SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE(L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3539));
		float L_14 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3540));
		NullCheck(L_12);
		SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11(L_12, ((float)il2cpp_codegen_add((float)L_13, (float)L_14)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3540));
		// handStateGaze.GestureBlending = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3532));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_15 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3541));
		NullCheck(L_15);
		SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11(L_15, (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3541));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3533));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::SimulateInput(System.Int64&,Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState,System.Boolean,System.Boolean,Microsoft.MixedReality.Toolkit.Input.MouseDelta,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandDataProvider_SimulateInput_m80961577E768F5D1F11FCC2766BDC61E3599803F (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, int64_t* ___lastHandTrackedTimestamp0, SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___state1, bool ___isSimulating2, bool ___isAlwaysVisible3, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta4, bool ___useMouseRotation5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_SimulateInput_m80961577E768F5D1F11FCC2766BDC61E3599803F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_0 = NULL;
	bool V_1 = false;
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	float V_7 = 0.0f;
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___lastHandTrackedTimestamp0), (&___state1), (&___isSimulating2), (&___isAlwaysVisible3), (&___mouseDelta4), (&___useMouseRotation5));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_SimulateInput_m80961577E768F5D1F11FCC2766BDC61E3599803F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3542));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3543));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3544));
		// var handState = state as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3545));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_0 = ___state1;
		V_0 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_0, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// bool enableTracking = isAlwaysVisible || isSimulating;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3546));
		bool L_1 = ___isAlwaysVisible3;
		bool L_2 = ___isSimulating2;
		V_1 = (bool)((int32_t)((int32_t)L_1|(int32_t)L_2));
		// if (!handState.IsTracked && enableTracking)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3547));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_3 = V_0;
		NullCheck(L_3);
		bool L_4 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_3)->get_IsTracked_1();
		bool L_5 = V_1;
		V_3 = (bool)((int32_t)((int32_t)((((int32_t)L_4) == ((int32_t)0))? 1 : 0)&(int32_t)L_5));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3548));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3549));
		// ResetInput(handState, isSimulating);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3550));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_7 = V_0;
		bool L_8 = ___isSimulating2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3581));
		VirtActionInvoker2< SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *, bool >::Invoke(6 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::ResetInput(Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState,System.Boolean) */, __this, L_7, L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3581));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3551));
	}

IL_0027:
	{
		// if (isSimulating)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3552));
		bool L_9 = ___isSimulating2;
		V_4 = L_9;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3553));
		bool L_10 = V_4;
		if (!L_10)
		{
			goto IL_008a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3554));
		// handState.SimulateInput(mouseDelta, useMouseRotation, profile.MouseRotationSensitivity, profile.MouseControllerRotationSpeed, profile.ControllerJitterAmount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3555));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_11 = V_0;
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_12 = ___mouseDelta4;
		bool L_13 = ___useMouseRotation5;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_14 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3582));
		NullCheck(L_14);
		float L_15 = MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25D_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3582));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_16 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3583));
		NullCheck(L_16);
		float L_17 = MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73_inline(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3583));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_18 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3584));
		NullCheck(L_18);
		float L_19 = MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2C_inline(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3584));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3585));
		NullCheck(L_11);
		SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395(L_11, L_12, L_13, L_15, L_17, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3585));
		// if (isAlwaysVisible)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3556));
		bool L_20 = ___isAlwaysVisible3;
		V_5 = L_20;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3557));
		bool L_21 = V_5;
		if (!L_21)
		{
			goto IL_007a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3558));
		// handState.Gesture = ToggleGesture(handState.Gesture);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3559));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_22 = V_0;
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_23 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3586));
		NullCheck(L_23);
		int32_t L_24 = SimulatedHandState_get_Gesture_mD92DD18C9290E8F89105E0539065E44CA74AFFFF(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3586));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3587));
		int32_t L_25 = SimulatedHandDataProvider_ToggleGesture_m9F8B8AE3A881E53C67ABC7B4B8187E45AEFDB0BD(__this, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3587));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3588));
		NullCheck(L_22);
		SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882(L_22, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3588));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3560));
		goto IL_0089;
	}

IL_007a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3561));
		// handState.Gesture = SelectGesture();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3562));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_26 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3589));
		int32_t L_27 = SimulatedHandDataProvider_SelectGesture_m3EED0D8A0B38C138C8C872805E35ACC67F70F37F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3589));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3590));
		NullCheck(L_26);
		SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882(L_26, L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3590));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3563));
	}

IL_0089:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3564));
	}

IL_008a:
	{
		// DateTime currentTime = DateTime.UtcNow;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3565));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3591));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_28 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3591));
		V_2 = L_28;
		// if (enableTracking)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3566));
		bool L_29 = V_1;
		V_6 = L_29;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3567));
		bool L_30 = V_6;
		if (!L_30)
		{
			goto IL_00ab;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3568));
		// handState.IsTracked = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3569));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_31 = V_0;
		NullCheck(L_31);
		((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_31)->set_IsTracked_1((bool)1);
		// lastHandTrackedTimestamp = currentTime.Ticks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3570));
		int64_t* L_32 = ___lastHandTrackedTimestamp0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3592));
		int64_t L_33 = DateTime_get_Ticks_mBCB529E43D065E498EAF08971D2EB49D5CB59D60((DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3592));
		*((int64_t*)L_32) = (int64_t)L_33;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3571));
		goto IL_00e5;
	}

IL_00ab:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3572));
		// float timeSinceTracking = (float)currentTime.Subtract(new DateTime(lastHandTrackedTimestamp)).TotalSeconds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3573));
		int64_t* L_34 = ___lastHandTrackedTimestamp0;
		int64_t L_35 = *((int64_t*)L_34);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3593));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_36;
		memset((&L_36), 0, sizeof(L_36));
		DateTime__ctor_m027A935E14EB81BCC0739BD56AE60CDE3387990C((&L_36), L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3593));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3594));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_37 = DateTime_Subtract_m12814A53110B4E3887A84A911C5F9C1402D98842((DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 *)(&V_2), L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3594));
		V_8 = L_37;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3595));
		double L_38 = TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_8), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3595));
		V_7 = (((float)((float)L_38)));
		// if (timeSinceTracking > profile.ControllerHideTimeout)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3574));
		float L_39 = V_7;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_40 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3596));
		NullCheck(L_40);
		float L_41 = MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0_inline(L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3596));
		V_9 = (bool)((((float)L_39) > ((float)L_41))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3575));
		bool L_42 = V_9;
		if (!L_42)
		{
			goto IL_00e4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3576));
		// handState.IsTracked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3577));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_43 = V_0;
		NullCheck(L_43);
		((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_43)->set_IsTracked_1((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3578));
	}

IL_00e4:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3579));
	}

IL_00e5:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3580));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::ResetInput(Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandDataProvider_ResetInput_m4638488528C4E170C8A49E9E8A9948FE810525E7 (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___state0, bool ___isSimulating1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_ResetInput_m4638488528C4E170C8A49E9E8A9948FE810525E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___state0), (&___isSimulating1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_ResetInput_m4638488528C4E170C8A49E9E8A9948FE810525E7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3597));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3598));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3599));
		// base.ResetInput(state, isSimulating);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3600));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_0 = ___state0;
		bool L_1 = ___isSimulating1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3606));
		SimulatedControllerDataProvider_ResetInput_mCA7DB0D28644ED1AB2BB68AEC1E1BFF9C55FF300(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3606));
		// var handState = state as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3601));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_2 = ___state0;
		V_0 = ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_2, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
		// handState.Gesture = profile.DefaultHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3602));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_3 = V_0;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_4 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3607));
		NullCheck(L_4);
		int32_t L_5 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3607));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3608));
		NullCheck(L_3);
		SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3608));
		// handState.ResetGesture();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3603));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3609));
		NullCheck(L_6);
		SimulatedHandState_ResetGesture_m768808568035F9E15EBC17DF83D75F62A6069EBC(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3609));
		// handState.ResetRotation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3604));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3610));
		NullCheck(L_7);
		VirtActionInvoker0::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::ResetRotation() */, L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3610));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3605));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::SelectGesture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedHandDataProvider_SelectGesture_m3EED0D8A0B38C138C8C872805E35ACC67F70F37F (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_SelectGesture_m3EED0D8A0B38C138C8C872805E35ACC67F70F37F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_SelectGesture_m3EED0D8A0B38C138C8C872805E35ACC67F70F37F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3611));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3612));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3613));
		// if (KeyInputSystem.GetKey(profile.InteractionButton) && profile.LeftMouseHandGesture != ArticulatedHandPose.GestureId.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3614));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_0 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3629));
		NullCheck(L_0);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_1 = MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24E_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3629));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3630));
		bool L_2 = KeyInputSystem_GetKey_m2EE019355844DA29C17B8678F49586574D5A6D49(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3630));
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_3 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3631));
		NullCheck(L_3);
		int32_t L_4 = MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3631));
		G_B3_0 = ((!(((uint32_t)L_4) <= ((uint32_t)0)))? 1 : 0);
		goto IL_0024;
	}

IL_0023:
	{
		G_B3_0 = 0;
	}

IL_0024:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3615));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3616));
		// return profile.LeftMouseHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3617));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_6 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3632));
		NullCheck(L_6);
		int32_t L_7 = MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_inline(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3632));
		V_1 = L_7;
		goto IL_00ad;
	}

IL_0037:
	{
		// else if (KeyInputSystem.GetKey(profile.MouseLookButton) && profile.RightMouseHandGesture != ArticulatedHandPose.GestureId.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3618));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_8 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3633));
		NullCheck(L_8);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_9 = MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3633));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3634));
		bool L_10 = KeyInputSystem_GetKey_m2EE019355844DA29C17B8678F49586574D5A6D49(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3634));
		if (!L_10)
		{
			goto IL_0059;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_11 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3635));
		NullCheck(L_11);
		int32_t L_12 = MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3635));
		G_B8_0 = ((!(((uint32_t)L_12) <= ((uint32_t)0)))? 1 : 0);
		goto IL_005a;
	}

IL_0059:
	{
		G_B8_0 = 0;
	}

IL_005a:
	{
		V_2 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3619));
		bool L_13 = V_2;
		if (!L_13)
		{
			goto IL_006d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3620));
		// return profile.RightMouseHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3621));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_14 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3636));
		NullCheck(L_14);
		int32_t L_15 = MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3636));
		V_1 = L_15;
		goto IL_00ad;
	}

IL_006d:
	{
		// else if (KeyInputSystem.GetKey(KeyBinding.FromMouseButton(KeyBinding.MouseButton.Middle)) && profile.MiddleMouseHandGesture != ArticulatedHandPose.GestureId.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3622));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3637));
		IL2CPP_RUNTIME_CLASS_INIT(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79_il2cpp_TypeInfo_var);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_16 = KeyBinding_FromMouseButton_mC7479108FCC71C952AAB38A9526E2B82B71C8CD0(2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3637));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3638));
		bool L_17 = KeyInputSystem_GetKey_m2EE019355844DA29C17B8678F49586574D5A6D49(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3638));
		if (!L_17)
		{
			goto IL_008a;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_18 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3639));
		NullCheck(L_18);
		int32_t L_19 = MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_inline(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3639));
		G_B13_0 = ((!(((uint32_t)L_19) <= ((uint32_t)0)))? 1 : 0);
		goto IL_008b;
	}

IL_008a:
	{
		G_B13_0 = 0;
	}

IL_008b:
	{
		V_3 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3623));
		bool L_20 = V_3;
		if (!L_20)
		{
			goto IL_009e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3624));
		// return profile.MiddleMouseHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3625));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_21 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3640));
		NullCheck(L_21);
		int32_t L_22 = MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_inline(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3640));
		V_1 = L_22;
		goto IL_00ad;
	}

IL_009e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3626));
		// return profile.DefaultHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3627));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_23 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3641));
		NullCheck(L_23);
		int32_t L_24 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3641));
		V_1 = L_24;
		goto IL_00ad;
	}

IL_00ad:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3628));
		int32_t L_25 = V_1;
		return L_25;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::ToggleGesture(Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedHandDataProvider_ToggleGesture_m9F8B8AE3A881E53C67ABC7B4B8187E45AEFDB0BD (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, int32_t ___gesture0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_ToggleGesture_m9F8B8AE3A881E53C67ABC7B4B8187E45AEFDB0BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___gesture0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_ToggleGesture_m9F8B8AE3A881E53C67ABC7B4B8187E45AEFDB0BD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3642));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3643));
	int32_t G_B3_0 = 0;
	int32_t G_B7_0 = 0;
	int32_t G_B11_0 = 0;
	int32_t G_B15_0 = 0;
	int32_t G_B19_0 = 0;
	int32_t G_B23_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3644));
		// if (KeyInputSystem.GetKeyDown(profile.InteractionButton) && profile.LeftMouseHandGesture != ArticulatedHandPose.GestureId.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3645));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_0 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3660));
		NullCheck(L_0);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_1 = MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24E_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3660));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3661));
		bool L_2 = KeyInputSystem_GetKeyDown_mC60446A0EE3AD6F0C1E9A6CBCBDA6160133C3E6C(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3661));
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_3 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3662));
		NullCheck(L_3);
		int32_t L_4 = MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3662));
		G_B3_0 = ((!(((uint32_t)L_4) <= ((uint32_t)0)))? 1 : 0);
		goto IL_0024;
	}

IL_0023:
	{
		G_B3_0 = 0;
	}

IL_0024:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3646));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0055;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3647));
		// return (gesture != profile.LeftMouseHandGesture ? profile.LeftMouseHandGesture : profile.DefaultHandGesture);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3648));
		int32_t L_6 = ___gesture0;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_7 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3663));
		NullCheck(L_7);
		int32_t L_8 = MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3663));
		if ((!(((uint32_t)L_6) == ((uint32_t)L_8))))
		{
			goto IL_0044;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_9 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3664));
		NullCheck(L_9);
		int32_t L_10 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3664));
		G_B7_0 = L_10;
		goto IL_004f;
	}

IL_0044:
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_11 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3665));
		NullCheck(L_11);
		int32_t L_12 = MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3665));
		G_B7_0 = L_12;
	}

IL_004f:
	{
		V_1 = G_B7_0;
		goto IL_00f7;
	}

IL_0055:
	{
		// else if (KeyInputSystem.GetKeyDown(profile.MouseLookButton) && profile.RightMouseHandGesture != ArticulatedHandPose.GestureId.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3649));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_13 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3666));
		NullCheck(L_13);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_14 = MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626_inline(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3666));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3667));
		bool L_15 = KeyInputSystem_GetKeyDown_mC60446A0EE3AD6F0C1E9A6CBCBDA6160133C3E6C(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3667));
		if (!L_15)
		{
			goto IL_0077;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_16 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3668));
		NullCheck(L_16);
		int32_t L_17 = MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_inline(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3668));
		G_B11_0 = ((!(((uint32_t)L_17) <= ((uint32_t)0)))? 1 : 0);
		goto IL_0078;
	}

IL_0077:
	{
		G_B11_0 = 0;
	}

IL_0078:
	{
		V_2 = (bool)G_B11_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3650));
		bool L_18 = V_2;
		if (!L_18)
		{
			goto IL_00a6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3651));
		// return (gesture != profile.RightMouseHandGesture ? profile.RightMouseHandGesture : profile.DefaultHandGesture);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3652));
		int32_t L_19 = ___gesture0;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_20 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3669));
		NullCheck(L_20);
		int32_t L_21 = MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_inline(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3669));
		if ((!(((uint32_t)L_19) == ((uint32_t)L_21))))
		{
			goto IL_0098;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_22 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3670));
		NullCheck(L_22);
		int32_t L_23 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3670));
		G_B15_0 = L_23;
		goto IL_00a3;
	}

IL_0098:
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_24 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3671));
		NullCheck(L_24);
		int32_t L_25 = MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_inline(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3671));
		G_B15_0 = L_25;
	}

IL_00a3:
	{
		V_1 = G_B15_0;
		goto IL_00f7;
	}

IL_00a6:
	{
		// else if (KeyInputSystem.GetKeyDown(KeyBinding.FromMouseButton(KeyBinding.MouseButton.Middle)) && profile.MiddleMouseHandGesture != ArticulatedHandPose.GestureId.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3653));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3672));
		IL2CPP_RUNTIME_CLASS_INIT(KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79_il2cpp_TypeInfo_var);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_26 = KeyBinding_FromMouseButton_mC7479108FCC71C952AAB38A9526E2B82B71C8CD0(2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3672));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3673));
		bool L_27 = KeyInputSystem_GetKeyDown_mC60446A0EE3AD6F0C1E9A6CBCBDA6160133C3E6C(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3673));
		if (!L_27)
		{
			goto IL_00c3;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_28 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3674));
		NullCheck(L_28);
		int32_t L_29 = MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_inline(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3674));
		G_B19_0 = ((!(((uint32_t)L_29) <= ((uint32_t)0)))? 1 : 0);
		goto IL_00c4;
	}

IL_00c3:
	{
		G_B19_0 = 0;
	}

IL_00c4:
	{
		V_3 = (bool)G_B19_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3654));
		bool L_30 = V_3;
		if (!L_30)
		{
			goto IL_00f2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3655));
		// return (gesture != profile.MiddleMouseHandGesture ? profile.MiddleMouseHandGesture : profile.DefaultHandGesture);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3656));
		int32_t L_31 = ___gesture0;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_32 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3675));
		NullCheck(L_32);
		int32_t L_33 = MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_inline(L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3675));
		if ((!(((uint32_t)L_31) == ((uint32_t)L_33))))
		{
			goto IL_00e4;
		}
	}
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_34 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3676));
		NullCheck(L_34);
		int32_t L_35 = MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline(L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3676));
		G_B23_0 = L_35;
		goto IL_00ef;
	}

IL_00e4:
	{
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_36 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3677));
		NullCheck(L_36);
		int32_t L_37 = MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_inline(L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3677));
		G_B23_0 = L_37;
	}

IL_00ef:
	{
		V_1 = G_B23_0;
		goto IL_00f7;
	}

IL_00f2:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3657));
		// return ArticulatedHandPose.GestureId.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3658));
		V_1 = 0;
		goto IL_00f7;
	}

IL_00f7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3659));
		int32_t L_38 = V_1;
		return L_38;
	}
}
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandState Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::get_HandStateLeft()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * SimulatedHandDataProvider_get_HandStateLeft_m30D7325487F11685955EFF81B6E33FE3637D964B (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_get_HandStateLeft_m30D7325487F11685955EFF81B6E33FE3637D964B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_get_HandStateLeft_m30D7325487F11685955EFF81B6E33FE3637D964B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3678));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3679));
	{
		// get => InputStateLeft as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3680));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_0 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateLeft_3();
		return ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_0, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::set_HandStateLeft(Microsoft.MixedReality.Toolkit.Input.SimulatedHandState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandDataProvider_set_HandStateLeft_m2A7E60463DC915015B122CC7B6A41B4BAF7BBD67 (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_set_HandStateLeft_m2A7E60463DC915015B122CC7B6A41B4BAF7BBD67_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_set_HandStateLeft_m2A7E60463DC915015B122CC7B6A41B4BAF7BBD67_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3681));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3682));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3683));
		// set { InputStateLeft = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3684));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_0 = ___value0;
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateLeft_3(L_0);
		// set { InputStateLeft = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3685));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandState Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::get_HandStateRight()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * SimulatedHandDataProvider_get_HandStateRight_m715E5E32B06CBEF4437ADAEB327607A29666B0FB (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_get_HandStateRight_m715E5E32B06CBEF4437ADAEB327607A29666B0FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_get_HandStateRight_m715E5E32B06CBEF4437ADAEB327607A29666B0FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3686));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3687));
	{
		// get => InputStateRight as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3688));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_0 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateRight_4();
		return ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_0, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::set_HandStateRight(Microsoft.MixedReality.Toolkit.Input.SimulatedHandState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandDataProvider_set_HandStateRight_mB55A190DC7D6208CF90B4B85C377E0BB3AAC1CF2 (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_set_HandStateRight_mB55A190DC7D6208CF90B4B85C377E0BB3AAC1CF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_set_HandStateRight_mB55A190DC7D6208CF90B4B85C377E0BB3AAC1CF2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3689));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3690));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3691));
		// set { InputStateRight = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3692));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_0 = ___value0;
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateRight_4(L_0);
		// set { InputStateRight = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3693));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.SimulatedHandState Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::get_HandStateGaze()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * SimulatedHandDataProvider_get_HandStateGaze_mE0E34E6BE63DF76CACDD9B750A2DF3F83396B31B (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_get_HandStateGaze_mE0E34E6BE63DF76CACDD9B750A2DF3F83396B31B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_get_HandStateGaze_mE0E34E6BE63DF76CACDD9B750A2DF3F83396B31B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3694));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3695));
	{
		// get => InputStateGaze as SimulatedHandState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3696));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_0 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateGaze_5();
		return ((SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 *)IsInstClass((RuntimeObject*)L_0, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911_il2cpp_TypeInfo_var));
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandDataProvider::set_HandStateGaze(Microsoft.MixedReality.Toolkit.Input.SimulatedHandState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandDataProvider_set_HandStateGaze_mE52A35C705A75621E2392A1EA04E1C7A42350939 (SimulatedHandDataProvider_t826285504CC50E7C5DC3A16EFAEE33F9669F42E3 * __this, SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandDataProvider_set_HandStateGaze_mE52A35C705A75621E2392A1EA04E1C7A42350939_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandDataProvider_set_HandStateGaze_mE52A35C705A75621E2392A1EA04E1C7A42350939_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3698));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3699));
		// set { InputStateGaze = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3700));
		SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * L_0 = ___value0;
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateGaze_5(L_0);
		// set { InputStateGaze = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3701));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::get_IsPinching()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_get_IsPinching_m3342EF2FCE4F7A48DA2EFB9F7EBBC8AAFCC3B7DE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3360));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3361));
	int32_t G_B3_0 = 0;
	{
		// public bool IsPinching => gesture == ArticulatedHandPose.GestureId.Pinch && gestureBlending == 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3362));
		int32_t L_0 = __this->get_gesture_7();
		if ((!(((uint32_t)L_0) == ((uint32_t)3))))
		{
			goto IL_0018;
		}
	}
	{
		float L_1 = __this->get_gestureBlending_8();
		G_B3_0 = ((((float)L_1) == ((float)(1.0f)))? 1 : 0);
		goto IL_0019;
	}

IL_0018:
	{
		G_B3_0 = 0;
	}

IL_0019:
	{
		return (bool)G_B3_0;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::get_Gesture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedHandState_get_Gesture_mD92DD18C9290E8F89105E0539065E44CA74AFFFF (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_get_Gesture_mD92DD18C9290E8F89105E0539065E44CA74AFFFF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_get_Gesture_mD92DD18C9290E8F89105E0539065E44CA74AFFFF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3363));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3364));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3365));
		// get { return gesture; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3366));
		int32_t L_0 = __this->get_gesture_7();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return gesture; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3367));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::set_Gesture(Microsoft.MixedReality.Toolkit.Utilities.ArticulatedHandPose/GestureId)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882 (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_set_Gesture_mC8DFF4D3309753AE88FB273F3C55CFBE8C7C1882_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3368));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3369));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3370));
		// if (value != ArticulatedHandPose.GestureId.None && value != gesture)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3371));
		int32_t L_0 = ___value0;
		if (!L_0)
		{
			goto IL_0012;
		}
	}
	{
		int32_t L_1 = ___value0;
		int32_t L_2 = __this->get_gesture_7();
		G_B3_0 = ((((int32_t)((((int32_t)L_1) == ((int32_t)L_2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0013;
	}

IL_0012:
	{
		G_B3_0 = 0;
	}

IL_0013:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3372));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_002b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3373));
		// gesture = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3374));
		int32_t L_4 = ___value0;
		__this->set_gesture_7(L_4);
		// gestureBlending = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3375));
		__this->set_gestureBlending_8((0.0f));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3376));
	}

IL_002b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3377));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::get_GestureBlending()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_get_GestureBlending_m61B1AE6EA0F82008B919350872861BB83D1AE6DE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3378));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3379));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3380));
		// get { return gestureBlending; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3381));
		float L_0 = __this->get_gestureBlending_8();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return gestureBlending; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3382));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::set_GestureBlending(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11 (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_set_GestureBlending_mA9E930861977C6A7651CC2815A9F4C7335E2DB11_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3383));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3384));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3385));
		// gestureBlending = Mathf.Clamp(value, gestureBlending, 1.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3386));
		float L_0 = ___value0;
		float L_1 = __this->get_gestureBlending_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3388));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_2 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_0, L_1, (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3388));
		__this->set_gestureBlending_8(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3387));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433 (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, uint8_t ____handedness0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&____handedness0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState__ctor_m349E18510C30BD47FC7E10C4991BE2C34D676433_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3389));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3390));
	{
		// private ArticulatedHandPose.GestureId gesture = ArticulatedHandPose.GestureId.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3391));
		__this->set_gesture_7(0);
		// private float gestureBlending = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3392));
		__this->set_gestureBlending_8((0.0f));
		// private float poseBlending = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3393));
		__this->set_poseBlending_9((0.0f));
		// private ArticulatedHandPose pose = new ArticulatedHandPose();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3394));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3398));
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_0 = (ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 *)il2cpp_codegen_object_new(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_il2cpp_TypeInfo_var);
		ArticulatedHandPose__ctor_mDF79192860BCB5B11DE88B879238E1093D2F839A(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3398));
		__this->set_pose_10(L_0);
		// public SimulatedHandState(Handedness _handedness) : base(_handedness) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3395));
		uint8_t L_1 = ____handedness0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3399));
		SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3399));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3396));
		// public SimulatedHandState(Handedness _handedness) : base(_handedness) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3397));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::ResetGesture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_ResetGesture_m768808568035F9E15EBC17DF83D75F62A6069EBC (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_ResetGesture_m768808568035F9E15EBC17DF83D75F62A6069EBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * V_0 = NULL;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_ResetGesture_m768808568035F9E15EBC17DF83D75F62A6069EBC_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3400));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3401));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3402));
		// gestureBlending = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3403));
		__this->set_gestureBlending_8((1.0f));
		// ArticulatedHandPose gesturePose = SimulatedArticulatedHandPoses.GetGesturePose(gesture);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3404));
		int32_t L_0 = __this->get_gesture_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3411));
		IL2CPP_RUNTIME_CLASS_INIT(SimulatedArticulatedHandPoses_tA18B3C296C15D034C4A1BB4060ACAEB4E2730268_il2cpp_TypeInfo_var);
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_1 = SimulatedArticulatedHandPoses_GetGesturePose_mB22DB685E5F2EF47FB022FBC16445827327E8FF0(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3411));
		V_0 = L_1;
		// if (gesturePose != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3405));
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_2 = V_0;
		V_1 = (bool)((!(((RuntimeObject*)(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3406));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3407));
		// pose.Copy(gesturePose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3408));
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_4 = __this->get_pose_10();
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3412));
		NullCheck(L_4);
		ArticulatedHandPose_Copy_mEFCDE938CE81762E3A992EFA18BBDD8180C1E264(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3412));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3409));
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3410));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::ResetRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_ResetRotation_mE2ABD5DD255C825FF53722C432991E01D2B04B6F (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_ResetRotation_mE2ABD5DD255C825FF53722C432991E01D2B04B6F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_ResetRotation_mE2ABD5DD255C825FF53722C432991E01D2B04B6F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3413));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3414));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3415));
		// ViewportRotation = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3416));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3418));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3418));
		((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->set_ViewportRotation_3(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3417));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandState::FillCurrentFrame(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C (SimulatedHandState_t97E0CEE0C72B9DB9537D03ABD5468E03FAE6A911 * __this, MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* ___jointsOut0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * V_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	bool V_5 = false;
	float V_6 = 0.0f;
	float V_7 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___jointsOut0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_6), (&V_7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandState_FillCurrentFrame_mAC7F8FC883C1A03381FAC69F7483883413845C5C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3419));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3420));
	float G_B5_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3421));
		// ArticulatedHandPose gesturePose = SimulatedArticulatedHandPoses.GetGesturePose(gesture);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3422));
		int32_t L_0 = __this->get_gesture_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3440));
		IL2CPP_RUNTIME_CLASS_INIT(SimulatedArticulatedHandPoses_tA18B3C296C15D034C4A1BB4060ACAEB4E2730268_il2cpp_TypeInfo_var);
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_1 = SimulatedArticulatedHandPoses_GetGesturePose_mB22DB685E5F2EF47FB022FBC16445827327E8FF0(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3440));
		V_0 = L_1;
		// if (gesturePose != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3423));
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_2 = V_0;
		V_4 = (bool)((!(((RuntimeObject*)(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3424));
		bool L_3 = V_4;
		if (!L_3)
		{
			goto IL_0079;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3425));
		// if (gestureBlending > poseBlending)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3426));
		float L_4 = __this->get_gestureBlending_8();
		float L_5 = __this->get_poseBlending_9();
		V_5 = (bool)((((float)L_4) > ((float)L_5))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3427));
		bool L_6 = V_5;
		if (!L_6)
		{
			goto IL_0078;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3428));
		// float range = Mathf.Clamp01(1.0f - poseBlending);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3429));
		float L_7 = __this->get_poseBlending_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3441));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_8 = Mathf_Clamp01_m1E5F736941A7E6DC4DBCA88A1E38FE9FBFE0C42B(((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_7)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3441));
		V_6 = L_8;
		// float lerpFactor = range > 0.0f ? (gestureBlending - poseBlending) / range : 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3430));
		float L_9 = V_6;
		if ((((float)L_9) > ((float)(0.0f))))
		{
			goto IL_0050;
		}
	}
	{
		G_B5_0 = (1.0f);
		goto IL_0060;
	}

IL_0050:
	{
		float L_10 = __this->get_gestureBlending_8();
		float L_11 = __this->get_poseBlending_9();
		float L_12 = V_6;
		G_B5_0 = ((float)((float)((float)il2cpp_codegen_subtract((float)L_10, (float)L_11))/(float)L_12));
	}

IL_0060:
	{
		V_7 = G_B5_0;
		// pose.InterpolateOffsets(pose, gesturePose, lerpFactor);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3431));
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_13 = __this->get_pose_10();
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_14 = __this->get_pose_10();
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_15 = V_0;
		float L_16 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3442));
		NullCheck(L_13);
		ArticulatedHandPose_InterpolateOffsets_mD03754CF2CC8BBB41787BB08A2294C49E4D65445(L_13, L_14, L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3442));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3432));
	}

IL_0078:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3433));
	}

IL_0079:
	{
		// poseBlending = gestureBlending;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3434));
		float L_17 = __this->get_gestureBlending_8();
		__this->set_poseBlending_9(L_17);
		// Vector3 screenPosition = CameraCache.Main.ViewportToScreenPoint(ViewportPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3435));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3443));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_18 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3443));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_ViewportPosition_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3444));
		NullCheck(L_18);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Camera_ViewportToScreenPoint_m8B42382A0571F1F6F1162F3DA05A9317F903B657(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3444));
		V_1 = L_20;
		// Vector3 worldPosition = CameraCache.Main.ScreenToWorldPoint(screenPosition + JitterOffset);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3436));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3445));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_21 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3445));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = V_1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_JitterOffset_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3446));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_22, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3446));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3447));
		NullCheck(L_21);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Camera_ScreenToWorldPoint_m179BB999DC97A251D0892B39C98F3FACDF0617C5(L_21, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3447));
		V_2 = L_25;
		// Quaternion worldRotation = CameraCache.Main.transform.rotation * Quaternion.Euler(ViewportRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3437));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3448));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_26 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3448));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3449));
		NullCheck(L_26);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_27 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3449));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3450));
		NullCheck(L_27);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_28 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3450));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_ViewportRotation_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3451));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_30 = Quaternion_Euler_m55C96FCD397CC69109261572710608D12A4CBD2B(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3451));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3452));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_31 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_28, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3452));
		V_3 = L_31;
		// pose.ComputeJointPoses(handedness, worldRotation, worldPosition, jointsOut);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3438));
		ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422 * L_32 = __this->get_pose_10();
		uint8_t L_33 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_handedness_0();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_34 = V_3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = V_2;
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_36 = ___jointsOut0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3453));
		NullCheck(L_32);
		ArticulatedHandPose_ComputeJointPoses_m04188906F4189F035294C1C59F8CE862E2D3D10A(L_32, L_33, L_34, L_35, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3453));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3439));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::CalculateJointRotations(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3[],UnityEngine.Quaternion[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandUtils_CalculateJointRotations_mA0A1808305AB3D8B589A08E42F9155739D9221AE (uint8_t ___handedness0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___jointPositions1, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___jointOrientationsOut2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandUtils_CalculateJointRotations_mA0A1808305AB3D8B589A08E42F9155739D9221AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_7;
	memset((&V_7), 0, sizeof(V_7));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_8;
	memset((&V_8), 0, sizeof(V_8));
	bool V_9 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_10;
	memset((&V_10), 0, sizeof(V_10));
	bool V_11 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_12;
	memset((&V_12), 0, sizeof(V_12));
	bool V_13 = false;
	bool V_14 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0), (&___jointPositions1), (&___jointOrientationsOut2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6), (&V_7), (&V_8), (&V_10), (&V_12));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandUtils_CalculateJointRotations_mA0A1808305AB3D8B589A08E42F9155739D9221AE_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3702));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3703));
	int32_t G_B5_0 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3704));
		// int[] jointsPerFinger = { 4, 5, 5, 5, 5 }; // thumb, index, middle, right, pinky
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3705));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_0 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)5);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = L_0;
		RuntimeFieldHandle_t844BDF00E8E6FE69D9AEAA7657F09018B864F4EF  L_2 = { reinterpret_cast<intptr_t> (U3CPrivateImplementationDetailsU3E_t5D7196C8D3A7E05A50169A365F5A7B3B92600D14____6AF7EBB4A5EF5D7478981B4AA0BAD37788AAB1ED_0_FieldInfo_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3743));
		RuntimeHelpers_InitializeArray_m29F50CDFEEE0AB868200291366253DD4737BC76A((RuntimeArray *)(RuntimeArray *)L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3743));
		V_0 = L_1;
		// for (int fingerIndex = 0; fingerIndex < numFingers; fingerIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3706));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3707));
		goto IL_0109;
	}

IL_001a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3708));
		// int jointsCurrentFinger = jointsPerFinger[fingerIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3709));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_3 = V_0;
		int32_t L_4 = V_1;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		int32_t L_6 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_2 = L_6;
		// int lowIndex = (int)TrackedHandJoint.ThumbMetacarpalJoint + jointsPerFinger.Take(fingerIndex).Sum();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3710));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_7 = V_0;
		int32_t L_8 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3744));
		RuntimeObject* L_9 = Enumerable_Take_TisInt32_t585191389E07734F19F3156FF88FB3EF4800D102_mCBED6C7F74DCC17FA9C923D11B6801F52FEEB61B((RuntimeObject*)(RuntimeObject*)L_7, L_8, /*hidden argument*/Enumerable_Take_TisInt32_t585191389E07734F19F3156FF88FB3EF4800D102_mCBED6C7F74DCC17FA9C923D11B6801F52FEEB61B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3744));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3745));
		int32_t L_10 = Enumerable_Sum_mA81913DBCF3086B4716F692F9DB797D7DD6B7583(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3745));
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)3, (int32_t)L_10));
		// int highIndex = lowIndex + jointsCurrentFinger - 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3711));
		int32_t L_11 = V_3;
		int32_t L_12 = V_2;
		V_4 = ((int32_t)il2cpp_codegen_subtract((int32_t)((int32_t)il2cpp_codegen_add((int32_t)L_11, (int32_t)L_12)), (int32_t)1));
		// for (int jointStartidx = lowIndex; jointStartidx <= highIndex; jointStartidx++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3712));
		int32_t L_13 = V_3;
		V_5 = L_13;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3713));
		goto IL_00f2;
	}

IL_003d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3714));
		// int jointEndidx = jointStartidx == lowIndex ? (int)TrackedHandJoint.Wrist : jointStartidx - 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3715));
		int32_t L_14 = V_5;
		int32_t L_15 = V_3;
		if ((((int32_t)L_14) == ((int32_t)L_15)))
		{
			goto IL_0049;
		}
	}
	{
		int32_t L_16 = V_5;
		G_B5_0 = ((int32_t)il2cpp_codegen_subtract((int32_t)L_16, (int32_t)1));
		goto IL_004a;
	}

IL_0049:
	{
		G_B5_0 = 1;
	}

IL_004a:
	{
		V_6 = G_B5_0;
		// Vector3 boneForward = jointPositions[jointStartidx] - jointPositions[jointEndidx];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3716));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_17 = ___jointPositions1;
		int32_t L_18 = V_5;
		NullCheck(L_17);
		int32_t L_19 = L_18;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = (L_17)->GetAt(static_cast<il2cpp_array_size_t>(L_19));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_21 = ___jointPositions1;
		int32_t L_22 = V_6;
		NullCheck(L_21);
		int32_t L_23 = L_22;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = (L_21)->GetAt(static_cast<il2cpp_array_size_t>(L_23));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3746));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_20, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3746));
		V_7 = L_25;
		// Vector3 boneUp = Vector3.Cross(boneForward, GetPalmRightVector(handedness, jointPositions));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3717));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = V_7;
		uint8_t L_27 = ___handedness0;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_28 = ___jointPositions1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3747));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = SimulatedHandUtils_GetPalmRightVector_m9C646FB51F2C94823DC3EEE26383B22A88EA4301(L_27, L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3748));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887(L_26, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3748));
		V_8 = L_30;
		// if (boneForward.magnitude > float.Epsilon && boneUp.magnitude > float.Epsilon)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3718));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3749));
		float L_31 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3749));
		if ((!(((float)L_31) > ((float)(1.401298E-45f)))))
		{
			goto IL_0091;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3750));
		float L_32 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_8), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3750));
		G_B8_0 = ((((float)L_32) > ((float)(1.401298E-45f)))? 1 : 0);
		goto IL_0092;
	}

IL_0091:
	{
		G_B8_0 = 0;
	}

IL_0092:
	{
		V_9 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3719));
		bool L_33 = V_9;
		if (!L_33)
		{
			goto IL_00dc;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3720));
		// Quaternion jointRotation = Quaternion.LookRotation(boneForward, boneUp);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3721));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = V_7;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3751));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_36 = Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672(L_34, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3751));
		V_10 = L_36;
		// if (fingerIndex == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3722));
		int32_t L_37 = V_1;
		V_11 = (bool)((((int32_t)L_37) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3723));
		bool L_38 = V_11;
		if (!L_38)
		{
			goto IL_00cf;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3724));
		// Quaternion rotateThumb90 = Quaternion.AngleAxis(handedness == Handedness.Left ? -90 : 90, boneForward);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3725));
		uint8_t L_39 = ___handedness0;
		if ((((int32_t)L_39) == ((int32_t)1)))
		{
			goto IL_00b7;
		}
	}
	{
		G_B13_0 = ((int32_t)90);
		goto IL_00b9;
	}

IL_00b7:
	{
		G_B13_0 = ((int32_t)-90);
	}

IL_00b9:
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3752));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_41 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((((float)((float)G_B13_0))), L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3752));
		V_12 = L_41;
		// jointRotation = rotateThumb90 * jointRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3726));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_42 = V_12;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_43 = V_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3753));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_44 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_42, L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3753));
		V_10 = L_44;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3727));
	}

IL_00cf:
	{
		// jointOrientationsOut[jointStartidx] = jointRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3728));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_45 = ___jointOrientationsOut2;
		int32_t L_46 = V_5;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_47 = V_10;
		NullCheck(L_45);
		(L_45)->SetAt(static_cast<il2cpp_array_size_t>(L_46), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_47);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3729));
		goto IL_00eb;
	}

IL_00dc:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3730));
		// jointOrientationsOut[jointStartidx] = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3731));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_48 = ___jointOrientationsOut2;
		int32_t L_49 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3754));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_50 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3754));
		NullCheck(L_48);
		(L_48)->SetAt(static_cast<il2cpp_array_size_t>(L_49), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_50);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3732));
	}

IL_00eb:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3733));
		// for (int jointStartidx = lowIndex; jointStartidx <= highIndex; jointStartidx++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3734));
		int32_t L_51 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_51, (int32_t)1));
	}

IL_00f2:
	{
		// for (int jointStartidx = lowIndex; jointStartidx <= highIndex; jointStartidx++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3735));
		int32_t L_52 = V_5;
		int32_t L_53 = V_4;
		V_13 = (bool)((((int32_t)((((int32_t)L_52) > ((int32_t)L_53))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3736));
		bool L_54 = V_13;
		if (L_54)
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3737));
		// for (int fingerIndex = 0; fingerIndex < numFingers; fingerIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3738));
		int32_t L_55 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_55, (int32_t)1));
	}

IL_0109:
	{
		// for (int fingerIndex = 0; fingerIndex < numFingers; fingerIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3739));
		int32_t L_56 = V_1;
		V_14 = (bool)((((int32_t)L_56) < ((int32_t)5))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3740));
		bool L_57 = V_14;
		if (L_57)
		{
			goto IL_001a;
		}
	}
	{
		// jointOrientationsOut[(int)TrackedHandJoint.Palm] = Quaternion.LookRotation(GetPalmForwardVector(jointPositions), GetPalmUpVector(handedness, jointPositions));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3741));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_58 = ___jointOrientationsOut2;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_59 = ___jointPositions1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3755));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = SimulatedHandUtils_GetPalmForwardVector_m9E069A581F41648ADB1D947EDBB726BD867602F4(L_59, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3755));
		uint8_t L_61 = ___handedness0;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_62 = ___jointPositions1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3756));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_63 = SimulatedHandUtils_GetPalmUpVector_mB1852A38F5919EC805FE801DB47DC6DA1E64CCD0(L_61, L_62, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3756));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3757));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_64 = Quaternion_LookRotation_m7BED8FBB457FF073F183AC7962264E5110794672(L_60, L_63, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3757));
		NullCheck(L_58);
		(L_58)->SetAt(static_cast<il2cpp_array_size_t>(2), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_64);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3742));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::GetPalmForwardVector(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedHandUtils_GetPalmForwardVector_m9E069A581F41648ADB1D947EDBB726BD867602F4 (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___jointPositions0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandUtils_GetPalmForwardVector_m9E069A581F41648ADB1D947EDBB726BD867602F4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___jointPositions0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandUtils_GetPalmForwardVector_m9E069A581F41648ADB1D947EDBB726BD867602F4_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3758));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3759));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3760));
		// Vector3 indexBase = jointPositions[(int)TrackedHandJoint.IndexKnuckle];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3761));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___jointPositions0;
		NullCheck(L_0);
		int32_t L_1 = 8;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		// Vector3 thumbMetaCarpal = jointPositions[(int)TrackedHandJoint.ThumbMetacarpalJoint];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3762));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = ___jointPositions0;
		NullCheck(L_3);
		int32_t L_4 = 3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_1 = L_5;
		// Vector3 thumbMetaCarpalToIndex = indexBase - thumbMetaCarpal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3763));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3766));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3766));
		V_2 = L_8;
		// return thumbMetaCarpalToIndex.normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3764));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3767));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3767));
		V_3 = L_9;
		goto IL_0023;
	}

IL_0023:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3765));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_3;
		return L_10;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::GetPalmUpVector(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedHandUtils_GetPalmUpVector_mB1852A38F5919EC805FE801DB47DC6DA1E64CCD0 (uint8_t ___handedness0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___jointPositions1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandUtils_GetPalmUpVector_mB1852A38F5919EC805FE801DB47DC6DA1E64CCD0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0), (&___jointPositions1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandUtils_GetPalmUpVector_mB1852A38F5919EC805FE801DB47DC6DA1E64CCD0_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3768));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3769));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3770));
		// Vector3 indexBase = jointPositions[(int)TrackedHandJoint.IndexKnuckle];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3771));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___jointPositions1;
		NullCheck(L_0);
		int32_t L_1 = 8;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		// Vector3 pinkyBase = jointPositions[(int)TrackedHandJoint.PinkyKnuckle];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3772));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = ___jointPositions1;
		NullCheck(L_3);
		int32_t L_4 = ((int32_t)23);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_1 = L_5;
		// Vector3 ThumbMetaCarpal = jointPositions[(int)TrackedHandJoint.ThumbMetacarpalJoint];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3773));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = ___jointPositions1;
		NullCheck(L_6);
		int32_t L_7 = 3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = (L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_7));
		V_2 = L_8;
		// Vector3 ThumbMetaCarpalToPinky = pinkyBase - ThumbMetaCarpal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3774));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = V_1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3783));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3783));
		V_3 = L_11;
		// Vector3 ThumbMetaCarpalToIndex = indexBase - ThumbMetaCarpal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3775));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3784));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3784));
		V_4 = L_14;
		// if (handedness == Handedness.Left)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3776));
		uint8_t L_15 = ___handedness0;
		V_5 = (bool)((((int32_t)L_15) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3777));
		bool L_16 = V_5;
		if (!L_16)
		{
			goto IL_004b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3778));
		// return Vector3.Cross(ThumbMetaCarpalToPinky, ThumbMetaCarpalToIndex).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3779));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3785));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3785));
		V_6 = L_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3786));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3786));
		V_7 = L_20;
		goto IL_0061;
	}

IL_004b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3780));
		// return Vector3.Cross(ThumbMetaCarpalToIndex, ThumbMetaCarpalToPinky).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3781));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3787));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887(L_21, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3787));
		V_6 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3788));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3788));
		V_7 = L_24;
		goto IL_0061;
	}

IL_0061:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3782));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = V_7;
		return L_25;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::GetPalmRightVector(Microsoft.MixedReality.Toolkit.Utilities.Handedness,UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedHandUtils_GetPalmRightVector_m9C646FB51F2C94823DC3EEE26383B22A88EA4301 (uint8_t ___handedness0, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___jointPositions1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandUtils_GetPalmRightVector_m9C646FB51F2C94823DC3EEE26383B22A88EA4301_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_7;
	memset((&V_7), 0, sizeof(V_7));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_8;
	memset((&V_8), 0, sizeof(V_8));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handedness0), (&___jointPositions1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandUtils_GetPalmRightVector_m9C646FB51F2C94823DC3EEE26383B22A88EA4301_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3789));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3790));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3791));
		// Vector3 indexBase = jointPositions[(int)TrackedHandJoint.IndexKnuckle];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3792));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___jointPositions1;
		NullCheck(L_0);
		int32_t L_1 = 8;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		// Vector3 pinkyBase = jointPositions[(int)TrackedHandJoint.PinkyKnuckle];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3793));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = ___jointPositions1;
		NullCheck(L_3);
		int32_t L_4 = ((int32_t)23);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_1 = L_5;
		// Vector3 thumbMetaCarpal = jointPositions[(int)TrackedHandJoint.ThumbMetacarpalJoint];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3794));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = ___jointPositions1;
		NullCheck(L_6);
		int32_t L_7 = 3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = (L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_7));
		V_2 = L_8;
		// Vector3 thumbMetaCarpalToPinky = pinkyBase - thumbMetaCarpal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3795));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = V_1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3808));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3808));
		V_3 = L_11;
		// Vector3 thumbMetaCarpalToIndex = indexBase - thumbMetaCarpal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3796));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3809));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3809));
		V_4 = L_14;
		// Vector3 thumbMetaCarpalUp = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3797));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3810));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3810));
		V_5 = L_15;
		// if (handedness == Handedness.Left)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3798));
		uint8_t L_16 = ___handedness0;
		V_6 = (bool)((((int32_t)L_16) == ((int32_t)1))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3799));
		bool L_17 = V_6;
		if (!L_17)
		{
			goto IL_0053;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3800));
		// thumbMetaCarpalUp = Vector3.Cross(thumbMetaCarpalToPinky, thumbMetaCarpalToIndex).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3801));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = V_3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3811));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3811));
		V_7 = L_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3812));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3812));
		V_5 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3802));
		goto IL_0068;
	}

IL_0053:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3803));
		// thumbMetaCarpalUp = Vector3.Cross(thumbMetaCarpalToIndex, thumbMetaCarpalToPinky).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3804));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = V_4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3813));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887(L_22, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3813));
		V_7 = L_24;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3814));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3814));
		V_5 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3805));
	}

IL_0068:
	{
		// return Vector3.Cross(thumbMetaCarpalUp, thumbMetaCarpalToIndex).normalized;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3806));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3815));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = Vector3_Cross_m3E9DBC445228FDB850BDBB4B01D6F61AC0111887(L_26, L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3815));
		V_7 = L_28;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3816));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_7), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3816));
		V_8 = L_29;
		goto IL_007e;
	}

IL_007e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3807));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_30 = V_8;
		return L_30;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedHandUtils::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedHandUtils__ctor_m8FE7B6098201AE8BB6E8337DCDAAA7663D64F06F (SimulatedHandUtils_t112B94E0F721072169327F6020348A7BB791A465 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandUtils__ctor_m8FE7B6098201AE8BB6E8337DCDAAA7663D64F06F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandUtils__ctor_m8FE7B6098201AE8BB6E8337DCDAAA7663D64F06F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionController::.ctor(Microsoft.MixedReality.Toolkit.TrackingState,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.MixedRealityInteractionMapping[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionController__ctor_mEB0A42C83615CF4BA2DA94E0A2B7AF081540D626 (SimulatedMotionController_t34E4C80551264F751F75755C2C93253B427ECB10 * __this, int32_t ___trackingState0, uint8_t ___controllerHandedness1, RuntimeObject* ___inputSource2, MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* ___interactions3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionController__ctor_mEB0A42C83615CF4BA2DA94E0A2B7AF081540D626_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___trackingState0), (&___controllerHandedness1), (&___inputSource2), (&___interactions3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionController__ctor_mEB0A42C83615CF4BA2DA94E0A2B7AF081540D626_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3871));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3872));
	{
		// private MixedRealityPose currentPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3873));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3878));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3878));
		__this->set_currentPose_12(L_0);
		// private MixedRealityPose lastPose = MixedRealityPose.ZeroIdentity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3874));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3879));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_1 = MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3879));
		__this->set_lastPose_13(L_1);
		// : base(trackingState, controllerHandedness, inputSource, interactions, new WindowsMixedRealityControllerDefinition(controllerHandedness))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3875));
		int32_t L_2 = ___trackingState0;
		uint8_t L_3 = ___controllerHandedness1;
		RuntimeObject* L_4 = ___inputSource2;
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_5 = ___interactions3;
		uint8_t L_6 = ___controllerHandedness1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3880));
		WindowsMixedRealityControllerDefinition_tE4B1E571DF880E868424EE9B242D0DAF55B5750D * L_7 = (WindowsMixedRealityControllerDefinition_tE4B1E571DF880E868424EE9B242D0DAF55B5750D *)il2cpp_codegen_object_new(WindowsMixedRealityControllerDefinition_tE4B1E571DF880E868424EE9B242D0DAF55B5750D_il2cpp_TypeInfo_var);
		WindowsMixedRealityControllerDefinition__ctor_m848379010D6BB4FF9CBC6D4078DA0E0D2ADC5367(L_7, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3880));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3881));
		BaseController__ctor_m6B509BCC8DF752AD27011E3C23E91DFB17C8F6AE(__this, L_2, L_3, L_4, L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3881));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3876));
		// { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3877));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionController::UpdateState(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionController_UpdateState_mDC6C29F55D5CFC07DBF423853B0685F2B6F13093 (SimulatedMotionController_t34E4C80551264F751F75755C2C93253B427ECB10 * __this, SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * ___motionControllerData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionController_UpdateState_mDC6C29F55D5CFC07DBF423853B0685F2B6F13093_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  V_12;
	memset((&V_12), 0, sizeof(V_12));
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  V_13;
	memset((&V_13), 0, sizeof(V_13));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___motionControllerData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionController_UpdateState_mDC6C29F55D5CFC07DBF423853B0685F2B6F13093_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3882));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3883));
	int32_t G_B4_0 = 0;
	RuntimeObject* G_B7_0 = NULL;
	RuntimeObject* G_B6_0 = NULL;
	RuntimeObject* G_B27_0 = NULL;
	RuntimeObject* G_B26_0 = NULL;
	RuntimeObject* G_B34_0 = NULL;
	RuntimeObject* G_B33_0 = NULL;
	RuntimeObject* G_B38_0 = NULL;
	RuntimeObject* G_B37_0 = NULL;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B44_0 = NULL;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B43_0 = NULL;
	int32_t G_B45_0 = 0;
	MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * G_B45_1 = NULL;
	RuntimeObject* G_B48_0 = NULL;
	RuntimeObject* G_B47_0 = NULL;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  G_B50_0;
	memset((&G_B50_0), 0, sizeof(G_B50_0));
	uint8_t G_B50_1 = 0;
	RuntimeObject* G_B50_2 = NULL;
	RuntimeObject* G_B50_3 = NULL;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  G_B49_0;
	memset((&G_B49_0), 0, sizeof(G_B49_0));
	uint8_t G_B49_1 = 0;
	RuntimeObject* G_B49_2 = NULL;
	RuntimeObject* G_B49_3 = NULL;
	int32_t G_B51_0 = 0;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  G_B51_1;
	memset((&G_B51_1), 0, sizeof(G_B51_1));
	uint8_t G_B51_2 = 0;
	RuntimeObject* G_B51_3 = NULL;
	RuntimeObject* G_B51_4 = NULL;
	RuntimeObject* G_B58_0 = NULL;
	RuntimeObject* G_B57_0 = NULL;
	RuntimeObject* G_B62_0 = NULL;
	RuntimeObject* G_B61_0 = NULL;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* G_B69_0 = NULL;
	int32_t G_B69_1 = 0;
	MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* G_B68_0 = NULL;
	int32_t G_B68_1 = 0;
	Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  G_B70_0;
	memset((&G_B70_0), 0, sizeof(G_B70_0));
	int32_t G_B70_1 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3884));
		// lastPose = currentPose;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3885));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = __this->get_currentPose_12();
		__this->set_lastPose_13(L_0);
		// currentPose.Position = motionControllerData.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3886));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_1 = __this->get_address_of_currentPose_12();
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_2 = ___motionControllerData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3950));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3950));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3951));
		MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_1, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3951));
		// currentPose.Rotation = motionControllerData.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3887));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * L_4 = __this->get_address_of_currentPose_12();
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_5 = ___motionControllerData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3952));
		NullCheck(L_5);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_inline(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3952));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3953));
		MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)L_4, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3953));
		// IsPositionAvailable = IsRotationAvailable = motionControllerData.Position != Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3888));
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_7 = ___motionControllerData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3954));
		NullCheck(L_7);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_inline(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3954));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3955));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3955));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3956));
		bool L_10 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3956));
		bool L_11 = L_10;
		V_0 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3957));
		BaseController_set_IsRotationAvailable_m5259A799822AFD94A2BEE4B47F887A03158FE308_inline(__this, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3957));
		bool L_12 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3958));
		BaseController_set_IsPositionAvailable_m76D7FB5DBF945174A9D9B7A19123783742C6B57F_inline(__this, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3958));
		// if (lastPose != currentPose)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3889));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_13 = __this->get_lastPose_13();
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_14 = __this->get_currentPose_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3959));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		bool L_15 = MixedRealityPose_op_Inequality_m85FF483B646A63C06AE543020D4F85257046AB3D(L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3959));
		V_1 = L_15;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3890));
		bool L_16 = V_1;
		if (!L_16)
		{
			goto IL_009e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3891));
		// if (IsPositionAvailable && IsRotationAvailable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3892));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3960));
		bool L_17 = BaseController_get_IsPositionAvailable_m3E2EB0D15AAADABB3D967535353AD53539677046_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3960));
		if (!L_17)
		{
			goto IL_0078;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3961));
		bool L_18 = BaseController_get_IsRotationAvailable_m59D5E1DD267C83A3DB834096028590522C934868_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3961));
		G_B4_0 = ((int32_t)(L_18));
		goto IL_0079;
	}

IL_0078:
	{
		G_B4_0 = 0;
	}

IL_0079:
	{
		V_2 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3893));
		bool L_19 = V_2;
		if (!L_19)
		{
			goto IL_009d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3894));
		// CoreServices.InputSystem?.RaiseSourcePoseChanged(InputSource, this, currentPose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3895));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3962));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_20 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3962));
		RuntimeObject* L_21 = L_20;
		G_B6_0 = L_21;
		if (L_21)
		{
			G_B7_0 = L_21;
			goto IL_0089;
		}
	}
	{
		goto IL_009c;
	}

IL_0089:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3963));
		RuntimeObject* L_22 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3963));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_23 = __this->get_currentPose_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3964));
		NullCheck(G_B7_0);
		InterfaceActionInvoker3< RuntimeObject*, RuntimeObject*, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(30 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B7_0, L_22, __this, L_23);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3964));
	}

IL_009c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3896));
	}

IL_009d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3897));
	}

IL_009e:
	{
		// for (int i = 0; i < Interactions?.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3898));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3899));
		goto IL_030f;
	}

IL_00a5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3900));
		// switch (Interactions[i].InputType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3901));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3965));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_24 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3965));
		int32_t L_25 = V_3;
		NullCheck(L_24);
		int32_t L_26 = L_25;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_27 = (L_24)->GetAt(static_cast<il2cpp_array_size_t>(L_26));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3966));
		NullCheck(L_27);
		int32_t L_28 = MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3966));
		V_4 = L_28;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3902));
		int32_t L_29 = V_4;
		if ((((int32_t)L_29) > ((int32_t)((int32_t)14))))
		{
			goto IL_00d8;
		}
	}
	{
		int32_t L_30 = V_4;
		if ((((int32_t)L_30) == ((int32_t)3)))
		{
			goto IL_00f9;
		}
	}
	{
		goto IL_00c2;
	}

IL_00c2:
	{
		int32_t L_31 = V_4;
		if ((((int32_t)L_31) == ((int32_t)((int32_t)13))))
		{
			goto IL_01f7;
		}
	}
	{
		goto IL_00cd;
	}

IL_00cd:
	{
		int32_t L_32 = V_4;
		if ((((int32_t)L_32) == ((int32_t)((int32_t)14))))
		{
			goto IL_00f9;
		}
	}
	{
		goto IL_030a;
	}

IL_00d8:
	{
		int32_t L_33 = V_4;
		if ((((int32_t)L_33) == ((int32_t)((int32_t)25))))
		{
			goto IL_0157;
		}
	}
	{
		goto IL_00e0;
	}

IL_00e0:
	{
		int32_t L_34 = V_4;
		if ((((int32_t)L_34) == ((int32_t)((int32_t)27))))
		{
			goto IL_026d;
		}
	}
	{
		goto IL_00eb;
	}

IL_00eb:
	{
		int32_t L_35 = V_4;
		if ((((int32_t)L_35) == ((int32_t)((int32_t)60))))
		{
			goto IL_01f7;
		}
	}
	{
		goto IL_030a;
	}

IL_00f9:
	{
		// Interactions[i].PoseData = currentPose;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3903));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3967));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_36 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3967));
		int32_t L_37 = V_3;
		NullCheck(L_36);
		int32_t L_38 = L_37;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_39 = (L_36)->GetAt(static_cast<il2cpp_array_size_t>(L_38));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_40 = __this->get_currentPose_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3968));
		NullCheck(L_39);
		MixedRealityInteractionMapping_set_PoseData_mED53A7137722CE84DD3F8144D83C6E2F6B844287(L_39, L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3968));
		// if (Interactions[i].Changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3904));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3969));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_41 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3969));
		int32_t L_42 = V_3;
		NullCheck(L_41);
		int32_t L_43 = L_42;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_44 = (L_41)->GetAt(static_cast<il2cpp_array_size_t>(L_43));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3970));
		NullCheck(L_44);
		bool L_45 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3970));
		V_5 = L_45;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3905));
		bool L_46 = V_5;
		if (!L_46)
		{
			goto IL_0152;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3906));
		// CoreServices.InputSystem?.RaisePoseInputChanged(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction, currentPose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3907));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3971));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_47 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3971));
		RuntimeObject* L_48 = L_47;
		G_B26_0 = L_48;
		if (L_48)
		{
			G_B27_0 = L_48;
			goto IL_012c;
		}
	}
	{
		goto IL_0151;
	}

IL_012c:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3972));
		RuntimeObject* L_49 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3972));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3973));
		uint8_t L_50 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3973));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3974));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_51 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3974));
		int32_t L_52 = V_3;
		NullCheck(L_51);
		int32_t L_53 = L_52;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_54 = (L_51)->GetAt(static_cast<il2cpp_array_size_t>(L_53));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3975));
		NullCheck(L_54);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_55 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3975));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_56 = __this->get_currentPose_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3976));
		NullCheck(G_B27_0);
		InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(45 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaisePoseInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B27_0, L_49, L_50, L_55, L_56);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3976));
	}

IL_0151:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3908));
	}

IL_0152:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3909));
		goto IL_030a;
	}

IL_0157:
	{
		// Interactions[i].BoolData = motionControllerData.ButtonState.IsSelecting;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3910));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3977));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_57 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3977));
		int32_t L_58 = V_3;
		NullCheck(L_57);
		int32_t L_59 = L_58;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_60 = (L_57)->GetAt(static_cast<il2cpp_array_size_t>(L_59));
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_61 = ___motionControllerData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3978));
		NullCheck(L_61);
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_62 = SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_inline(L_61, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3978));
		bool L_63 = L_62.get_IsSelecting_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3979));
		NullCheck(L_60);
		MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(L_60, L_63, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3979));
		// if (Interactions[i].Changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3911));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3980));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_64 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3980));
		int32_t L_65 = V_3;
		NullCheck(L_64);
		int32_t L_66 = L_65;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_67 = (L_64)->GetAt(static_cast<il2cpp_array_size_t>(L_66));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3981));
		NullCheck(L_67);
		bool L_68 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_67, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3981));
		V_6 = L_68;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3912));
		bool L_69 = V_6;
		if (!L_69)
		{
			goto IL_01f2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3913));
		// if (Interactions[i].BoolData)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3914));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3982));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_70 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3982));
		int32_t L_71 = V_3;
		NullCheck(L_70);
		int32_t L_72 = L_71;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_73 = (L_70)->GetAt(static_cast<il2cpp_array_size_t>(L_72));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3983));
		NullCheck(L_73);
		bool L_74 = MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B(L_73, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3983));
		V_7 = L_74;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3915));
		bool L_75 = V_7;
		if (!L_75)
		{
			goto IL_01c5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3916));
		// CoreServices.InputSystem?.RaiseOnInputDown(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3917));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3984));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_76 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3984));
		RuntimeObject* L_77 = L_76;
		G_B33_0 = L_77;
		if (L_77)
		{
			G_B34_0 = L_77;
			goto IL_01a3;
		}
	}
	{
		goto IL_01c2;
	}

IL_01a3:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3985));
		RuntimeObject* L_78 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3985));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3986));
		uint8_t L_79 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3986));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3987));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_80 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3987));
		int32_t L_81 = V_3;
		NullCheck(L_80);
		int32_t L_82 = L_81;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_83 = (L_80)->GetAt(static_cast<il2cpp_array_size_t>(L_82));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3988));
		NullCheck(L_83);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_84 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_83, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3988));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3989));
		NullCheck(G_B34_0);
		InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(39 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B34_0, L_78, L_79, L_84);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3989));
	}

IL_01c2:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3918));
		goto IL_01f1;
	}

IL_01c5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3919));
		// CoreServices.InputSystem?.RaiseOnInputUp(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3920));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3990));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_85 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3990));
		RuntimeObject* L_86 = L_85;
		G_B37_0 = L_86;
		if (L_86)
		{
			G_B38_0 = L_86;
			goto IL_01d1;
		}
	}
	{
		goto IL_01f0;
	}

IL_01d1:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3991));
		RuntimeObject* L_87 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3991));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3992));
		uint8_t L_88 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3992));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3993));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_89 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3993));
		int32_t L_90 = V_3;
		NullCheck(L_89);
		int32_t L_91 = L_90;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_92 = (L_89)->GetAt(static_cast<il2cpp_array_size_t>(L_91));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3994));
		NullCheck(L_92);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_93 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_92, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3994));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3995));
		NullCheck(G_B38_0);
		InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(40 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B38_0, L_87, L_88, L_93);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3995));
	}

IL_01f0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3921));
	}

IL_01f1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3922));
	}

IL_01f2:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3923));
		goto IL_030a;
	}

IL_01f7:
	{
		// Interactions[i].FloatData = motionControllerData.ButtonState.IsGrabbing ? 1 : 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3924));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3996));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_94 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3996));
		int32_t L_95 = V_3;
		NullCheck(L_94);
		int32_t L_96 = L_95;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_97 = (L_94)->GetAt(static_cast<il2cpp_array_size_t>(L_96));
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_98 = ___motionControllerData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3997));
		NullCheck(L_98);
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_99 = SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_inline(L_98, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3997));
		bool L_100 = L_99.get_IsGrabbing_1();
		G_B43_0 = L_97;
		if (L_100)
		{
			G_B44_0 = L_97;
			goto IL_020f;
		}
	}
	{
		G_B45_0 = 0;
		G_B45_1 = G_B43_0;
		goto IL_0210;
	}

IL_020f:
	{
		G_B45_0 = 1;
		G_B45_1 = G_B44_0;
	}

IL_0210:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3998));
		NullCheck(G_B45_1);
		MixedRealityInteractionMapping_set_FloatData_m2AE1466C42024C298C6BA04ECDF0E92C3AC4554B(G_B45_1, (((float)((float)G_B45_0))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3998));
		// if (Interactions[i].Changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3925));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3999));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_101 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3999));
		int32_t L_102 = V_3;
		NullCheck(L_101);
		int32_t L_103 = L_102;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_104 = (L_101)->GetAt(static_cast<il2cpp_array_size_t>(L_103));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4000));
		NullCheck(L_104);
		bool L_105 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_104, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4000));
		V_8 = L_105;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3926));
		bool L_106 = V_8;
		if (!L_106)
		{
			goto IL_0268;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3927));
		// CoreServices.InputSystem?.RaiseFloatInputChanged(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction, motionControllerData.ButtonState.IsGrabbing ? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3928));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4001));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_107 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4001));
		RuntimeObject* L_108 = L_107;
		G_B47_0 = L_108;
		if (L_108)
		{
			G_B48_0 = L_108;
			goto IL_0236;
		}
	}
	{
		goto IL_0267;
	}

IL_0236:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4002));
		RuntimeObject* L_109 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4002));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4003));
		uint8_t L_110 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4003));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4004));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_111 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4004));
		int32_t L_112 = V_3;
		NullCheck(L_111);
		int32_t L_113 = L_112;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_114 = (L_111)->GetAt(static_cast<il2cpp_array_size_t>(L_113));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4005));
		NullCheck(L_114);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_115 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_114, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4005));
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_116 = ___motionControllerData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4006));
		NullCheck(L_116);
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_117 = SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_inline(L_116, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4006));
		bool L_118 = L_117.get_IsGrabbing_1();
		G_B49_0 = L_115;
		G_B49_1 = L_110;
		G_B49_2 = L_109;
		G_B49_3 = G_B48_0;
		if (L_118)
		{
			G_B50_0 = L_115;
			G_B50_1 = L_110;
			G_B50_2 = L_109;
			G_B50_3 = G_B48_0;
			goto IL_025f;
		}
	}
	{
		G_B51_0 = 0;
		G_B51_1 = G_B49_0;
		G_B51_2 = G_B49_1;
		G_B51_3 = G_B49_2;
		G_B51_4 = G_B49_3;
		goto IL_0260;
	}

IL_025f:
	{
		G_B51_0 = 1;
		G_B51_1 = G_B50_0;
		G_B51_2 = G_B50_1;
		G_B51_3 = G_B50_2;
		G_B51_4 = G_B50_3;
	}

IL_0260:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4007));
		NullCheck(G_B51_4);
		InterfaceActionInvoker4< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 , float >::Invoke(41 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseFloatInputChanged(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction,System.Single) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B51_4, G_B51_3, G_B51_2, G_B51_1, (((float)((float)G_B51_0))));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4007));
	}

IL_0267:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3929));
	}

IL_0268:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3930));
		goto IL_030a;
	}

IL_026d:
	{
		// Interactions[i].BoolData = motionControllerData.ButtonState.IsPressingMenu;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3931));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4008));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_119 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4008));
		int32_t L_120 = V_3;
		NullCheck(L_119);
		int32_t L_121 = L_120;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_122 = (L_119)->GetAt(static_cast<il2cpp_array_size_t>(L_121));
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_123 = ___motionControllerData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4009));
		NullCheck(L_123);
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_124 = SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_inline(L_123, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4009));
		bool L_125 = L_124.get_IsPressingMenu_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4010));
		NullCheck(L_122);
		MixedRealityInteractionMapping_set_BoolData_mE86E7E665BCA02A2E69651A333993A51703F7D64(L_122, L_125, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4010));
		// if (Interactions[i].Changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3932));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4011));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_126 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4011));
		int32_t L_127 = V_3;
		NullCheck(L_126);
		int32_t L_128 = L_127;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_129 = (L_126)->GetAt(static_cast<il2cpp_array_size_t>(L_128));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4012));
		NullCheck(L_129);
		bool L_130 = MixedRealityInteractionMapping_get_Changed_m70D15D24BDB909A6AA0E9C4DB393DAA25F84983F(L_129, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4012));
		V_9 = L_130;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3933));
		bool L_131 = V_9;
		if (!L_131)
		{
			goto IL_0308;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3934));
		// if (Interactions[i].BoolData)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3935));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4013));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_132 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4013));
		int32_t L_133 = V_3;
		NullCheck(L_132);
		int32_t L_134 = L_133;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_135 = (L_132)->GetAt(static_cast<il2cpp_array_size_t>(L_134));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4014));
		NullCheck(L_135);
		bool L_136 = MixedRealityInteractionMapping_get_BoolData_mB42A4C428B73C25DC7FE9CAC463325E19255F71B(L_135, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4014));
		V_10 = L_136;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3936));
		bool L_137 = V_10;
		if (!L_137)
		{
			goto IL_02db;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3937));
		// CoreServices.InputSystem?.RaiseOnInputDown(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3938));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4015));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_138 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4015));
		RuntimeObject* L_139 = L_138;
		G_B57_0 = L_139;
		if (L_139)
		{
			G_B58_0 = L_139;
			goto IL_02b9;
		}
	}
	{
		goto IL_02d8;
	}

IL_02b9:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4016));
		RuntimeObject* L_140 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4016));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4017));
		uint8_t L_141 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4017));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4018));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_142 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4018));
		int32_t L_143 = V_3;
		NullCheck(L_142);
		int32_t L_144 = L_143;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_145 = (L_142)->GetAt(static_cast<il2cpp_array_size_t>(L_144));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4019));
		NullCheck(L_145);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_146 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_145, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4019));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4020));
		NullCheck(G_B58_0);
		InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(39 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputDown(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B58_0, L_140, L_141, L_146);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4020));
	}

IL_02d8:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3939));
		goto IL_0307;
	}

IL_02db:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3940));
		// CoreServices.InputSystem?.RaiseOnInputUp(InputSource, ControllerHandedness, Interactions[i].MixedRealityInputAction);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3941));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4021));
		IL2CPP_RUNTIME_CLASS_INIT(CoreServices_t3A685C81FB6AC96F74F9279B54CD03754F1FF544_il2cpp_TypeInfo_var);
		RuntimeObject* L_147 = CoreServices_get_InputSystem_m4797E97A2258E0318F789F3291D646530225C3E8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4021));
		RuntimeObject* L_148 = L_147;
		G_B61_0 = L_148;
		if (L_148)
		{
			G_B62_0 = L_148;
			goto IL_02e7;
		}
	}
	{
		goto IL_0306;
	}

IL_02e7:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4022));
		RuntimeObject* L_149 = BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4022));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4023));
		uint8_t L_150 = BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4023));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4024));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_151 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4024));
		int32_t L_152 = V_3;
		NullCheck(L_151);
		int32_t L_153 = L_152;
		MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * L_154 = (L_151)->GetAt(static_cast<il2cpp_array_size_t>(L_153));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4025));
		NullCheck(L_154);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_155 = MixedRealityInteractionMapping_get_MixedRealityInputAction_mA22FF2AC6237AEF7B9EADF4461EB3B484CCB995E(L_154, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4025));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4026));
		NullCheck(G_B62_0);
		InterfaceActionInvoker3< RuntimeObject*, uint8_t, MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  >::Invoke(40 /* System.Void Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSystem::RaiseOnInputUp(Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource,Microsoft.MixedReality.Toolkit.Utilities.Handedness,Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction) */, IMixedRealityInputSystem_t5CCAA5BAD9D45403FCE5D1B3FEEB2E45BA65B22B_il2cpp_TypeInfo_var, G_B62_0, L_149, L_150, L_155);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4026));
	}

IL_0306:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3942));
	}

IL_0307:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3943));
	}

IL_0308:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3944));
		goto IL_030a;
	}

IL_030a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3945));
		// for (int i = 0; i < Interactions?.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3946));
		int32_t L_156 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_156, (int32_t)1));
	}

IL_030f:
	{
		// for (int i = 0; i < Interactions?.Length; i++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3947));
		int32_t L_157 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4027));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_158 = BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4027));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_159 = L_158;
		G_B68_0 = L_159;
		G_B68_1 = L_157;
		if (L_159)
		{
			G_B69_0 = L_159;
			G_B69_1 = L_157;
			goto IL_0326;
		}
	}
	{
		il2cpp_codegen_initobj((&V_13), sizeof(Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB ));
		Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  L_160 = V_13;
		G_B70_0 = L_160;
		G_B70_1 = G_B68_1;
		goto IL_032d;
	}

IL_0326:
	{
		NullCheck(G_B69_0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4028));
		Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB  L_161;
		memset((&L_161), 0, sizeof(L_161));
		Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2((&L_161), (((int32_t)((int32_t)(((RuntimeArray*)G_B69_0)->max_length)))), /*hidden argument*/Nullable_1__ctor_m11F9C228CFDF836DDFCD7880C09CB4098AB9D7F2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4028));
		G_B70_0 = L_161;
		G_B70_1 = G_B69_1;
	}

IL_032d:
	{
		V_12 = G_B70_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4029));
		int32_t L_162 = Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_inline((Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *)(&V_12), /*hidden argument*/Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4029));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4030));
		bool L_163 = Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_inline((Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB *)(&V_12), /*hidden argument*/Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4030));
		V_11 = (bool)((int32_t)((int32_t)((((int32_t)G_B70_1) < ((int32_t)L_162))? 1 : 0)&(int32_t)L_163));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3948));
		bool L_164 = V_11;
		if (L_164)
		{
			goto IL_00a5;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3949));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState
IL2CPP_EXTERN_C void SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshal_pinvoke(const SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C& unmarshaled, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_pinvoke& marshaled)
{
	marshaled.___IsSelecting_0 = static_cast<int32_t>(unmarshaled.get_IsSelecting_0());
	marshaled.___IsGrabbing_1 = static_cast<int32_t>(unmarshaled.get_IsGrabbing_1());
	marshaled.___IsPressingMenu_2 = static_cast<int32_t>(unmarshaled.get_IsPressingMenu_2());
}
IL2CPP_EXTERN_C void SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshal_pinvoke_back(const SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_pinvoke& marshaled, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C& unmarshaled)
{
	bool unmarshaled_IsSelecting_temp_0 = false;
	unmarshaled_IsSelecting_temp_0 = static_cast<bool>(marshaled.___IsSelecting_0);
	unmarshaled.set_IsSelecting_0(unmarshaled_IsSelecting_temp_0);
	bool unmarshaled_IsGrabbing_temp_1 = false;
	unmarshaled_IsGrabbing_temp_1 = static_cast<bool>(marshaled.___IsGrabbing_1);
	unmarshaled.set_IsGrabbing_1(unmarshaled_IsGrabbing_temp_1);
	bool unmarshaled_IsPressingMenu_temp_2 = false;
	unmarshaled_IsPressingMenu_temp_2 = static_cast<bool>(marshaled.___IsPressingMenu_2);
	unmarshaled.set_IsPressingMenu_2(unmarshaled_IsPressingMenu_temp_2);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState
IL2CPP_EXTERN_C void SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshal_pinvoke_cleanup(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState
IL2CPP_EXTERN_C void SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshal_com(const SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C& unmarshaled, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_com& marshaled)
{
	marshaled.___IsSelecting_0 = static_cast<int32_t>(unmarshaled.get_IsSelecting_0());
	marshaled.___IsGrabbing_1 = static_cast<int32_t>(unmarshaled.get_IsGrabbing_1());
	marshaled.___IsPressingMenu_2 = static_cast<int32_t>(unmarshaled.get_IsPressingMenu_2());
}
IL2CPP_EXTERN_C void SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshal_com_back(const SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_com& marshaled, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C& unmarshaled)
{
	bool unmarshaled_IsSelecting_temp_0 = false;
	unmarshaled_IsSelecting_temp_0 = static_cast<bool>(marshaled.___IsSelecting_0);
	unmarshaled.set_IsSelecting_0(unmarshaled_IsSelecting_temp_0);
	bool unmarshaled_IsGrabbing_temp_1 = false;
	unmarshaled_IsGrabbing_temp_1 = static_cast<bool>(marshaled.___IsGrabbing_1);
	unmarshaled.set_IsGrabbing_1(unmarshaled_IsGrabbing_temp_1);
	bool unmarshaled_IsPressingMenu_temp_2 = false;
	unmarshaled_IsPressingMenu_temp_2 = static_cast<bool>(marshaled.___IsPressingMenu_2);
	unmarshaled.set_IsPressingMenu_2(unmarshaled_IsPressingMenu_temp_2);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState
IL2CPP_EXTERN_C void SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshal_com_cleanup(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_marshaled_com& marshaled)
{
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::Equals(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3 (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * __this, RuntimeObject * ___obj0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  V_0;
	memset((&V_0), 0, sizeof(V_0));
	bool V_1 = false;
	RuntimeObject * V_2 = NULL;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___obj0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4031));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4032));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4033));
		// if (obj is SimulatedMotionControllerButtonState state)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4034));
		RuntimeObject * L_0 = ___obj0;
		RuntimeObject * L_1 = L_0;
		V_2 = L_1;
		if (!((RuntimeObject *)IsInstSealed((RuntimeObject*)L_1, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_il2cpp_TypeInfo_var)))
		{
			goto IL_0015;
		}
	}
	{
		RuntimeObject * L_2 = V_2;
		V_0 = ((*(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *)((SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *)UnBox(L_2, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C_il2cpp_TypeInfo_var))));
		G_B3_0 = 1;
		goto IL_0016;
	}

IL_0015:
	{
		G_B3_0 = 0;
	}

IL_0016:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4035));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0025;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4036));
		// return Equals(state);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4037));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4040));
		bool L_5 = SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9((SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *)__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4040));
		V_3 = L_5;
		goto IL_0029;
	}

IL_0025:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4038));
		V_3 = (bool)0;
		goto IL_0029;
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4039));
		bool L_6 = V_3;
		return L_6;
	}
}
IL2CPP_EXTERN_C  bool SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3_AdjustorThunk (RuntimeObject * __this, RuntimeObject * ___obj0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * _thisAdjusted = reinterpret_cast<SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *>(__this + _offset);
	return SimulatedMotionControllerButtonState_Equals_m96114545C3DE99E800E7EFB4AD872B0AAF4F9FF3(_thisAdjusted, ___obj0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::Equals(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9 (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * __this, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___state0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___state0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4041));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4042));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4043));
		// return IsSelecting == state.IsSelecting && IsGrabbing == state.IsGrabbing && IsPressingMenu == state.IsPressingMenu;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4044));
		bool L_0 = __this->get_IsSelecting_0();
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_1 = ___state0;
		bool L_2 = L_1.get_IsSelecting_0();
		if ((!(((uint32_t)L_0) == ((uint32_t)L_2))))
		{
			goto IL_002d;
		}
	}
	{
		bool L_3 = __this->get_IsGrabbing_1();
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_4 = ___state0;
		bool L_5 = L_4.get_IsGrabbing_1();
		if ((!(((uint32_t)L_3) == ((uint32_t)L_5))))
		{
			goto IL_002d;
		}
	}
	{
		bool L_6 = __this->get_IsPressingMenu_2();
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_7 = ___state0;
		bool L_8 = L_7.get_IsPressingMenu_2();
		G_B4_0 = ((((int32_t)L_6) == ((int32_t)L_8))? 1 : 0);
		goto IL_002e;
	}

IL_002d:
	{
		G_B4_0 = 0;
	}

IL_002e:
	{
		V_0 = (bool)G_B4_0;
		goto IL_0031;
	}

IL_0031:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4045));
		bool L_9 = V_0;
		return L_9;
	}
}
IL2CPP_EXTERN_C  bool SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9_AdjustorThunk (RuntimeObject * __this, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___state0, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * _thisAdjusted = reinterpret_cast<SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *>(__this + _offset);
	return SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9(_thisAdjusted, ___state0, method);
}
// System.Int32 Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::GetHashCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5 (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4046));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4047));
	int32_t G_B3_0 = 0;
	int32_t G_B5_0 = 0;
	int32_t G_B4_0 = 0;
	int32_t G_B6_0 = 0;
	int32_t G_B6_1 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B7_0 = 0;
	int32_t G_B9_0 = 0;
	int32_t G_B9_1 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4048));
		// return (IsSelecting ? 1 : 0) * 100 + (IsGrabbing ? 1 : 0) * 10 + (IsPressingMenu ? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4049));
		bool L_0 = __this->get_IsSelecting_0();
		if (L_0)
		{
			goto IL_000c;
		}
	}
	{
		G_B3_0 = 0;
		goto IL_000d;
	}

IL_000c:
	{
		G_B3_0 = 1;
	}

IL_000d:
	{
		bool L_1 = __this->get_IsGrabbing_1();
		G_B4_0 = ((int32_t)il2cpp_codegen_multiply((int32_t)G_B3_0, (int32_t)((int32_t)100)));
		if (L_1)
		{
			G_B5_0 = ((int32_t)il2cpp_codegen_multiply((int32_t)G_B3_0, (int32_t)((int32_t)100)));
			goto IL_001b;
		}
	}
	{
		G_B6_0 = 0;
		G_B6_1 = G_B4_0;
		goto IL_001c;
	}

IL_001b:
	{
		G_B6_0 = 1;
		G_B6_1 = G_B5_0;
	}

IL_001c:
	{
		bool L_2 = __this->get_IsPressingMenu_2();
		G_B7_0 = ((int32_t)il2cpp_codegen_add((int32_t)G_B6_1, (int32_t)((int32_t)il2cpp_codegen_multiply((int32_t)G_B6_0, (int32_t)((int32_t)10)))));
		if (L_2)
		{
			G_B8_0 = ((int32_t)il2cpp_codegen_add((int32_t)G_B6_1, (int32_t)((int32_t)il2cpp_codegen_multiply((int32_t)G_B6_0, (int32_t)((int32_t)10)))));
			goto IL_002b;
		}
	}
	{
		G_B9_0 = 0;
		G_B9_1 = G_B7_0;
		goto IL_002c;
	}

IL_002b:
	{
		G_B9_0 = 1;
		G_B9_1 = G_B8_0;
	}

IL_002c:
	{
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)G_B9_1, (int32_t)G_B9_0));
		goto IL_0030;
	}

IL_0030:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4050));
		int32_t L_3 = V_0;
		return L_3;
	}
}
IL2CPP_EXTERN_C  int32_t SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * _thisAdjusted = reinterpret_cast<SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *>(__this + _offset);
	return SimulatedMotionControllerButtonState_GetHashCode_m7E31A04C9371EAD0F7159C81BF989BC14C862CA5(_thisAdjusted, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::op_Equality(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerButtonState_op_Equality_m410306F630C7440A6D448BB464A7A146EE779E29 (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___lhs0, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___rhs1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerButtonState_op_Equality_m410306F630C7440A6D448BB464A7A146EE779E29_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___lhs0), (&___rhs1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerButtonState_op_Equality_m410306F630C7440A6D448BB464A7A146EE779E29_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4051));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4052));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4053));
		// return lhs.Equals(rhs);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4054));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = ___rhs1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4056));
		bool L_1 = SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9((SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *)(&___lhs0), L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4056));
		V_0 = L_1;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4055));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState::op_Inequality(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerButtonState_op_Inequality_m4E7E2C84B13D0CBCECD0CB21B287560F20C98FCD (SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___lhs0, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___rhs1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerButtonState_op_Inequality_m4E7E2C84B13D0CBCECD0CB21B287560F20C98FCD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___lhs0), (&___rhs1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerButtonState_op_Inequality_m4E7E2C84B13D0CBCECD0CB21B287560F20C98FCD_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4057));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4058));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4059));
		// return !(lhs.Equals(rhs));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4060));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = ___rhs1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4062));
		bool L_1 = SimulatedMotionControllerButtonState_Equals_m8871D6DA8405F387F6C0EB53871F08E5ED9FB6D9((SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C *)(&___lhs0), L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4062));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4061));
		bool L_2 = V_0;
		return L_2;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::get_IsTracked()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerData_get_IsTracked_mFACBCCBDA56532F7F54F2DA81905409D79A41EC5 (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_get_IsTracked_mFACBCCBDA56532F7F54F2DA81905409D79A41EC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_get_IsTracked_mFACBCCBDA56532F7F54F2DA81905409D79A41EC5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3817));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3818));
	{
		// public bool IsTracked => isTracked;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3819));
		bool L_0 = __this->get_isTracked_0();
		return L_0;
	}
}
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::get_ButtonState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3820));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3821));
	{
		// public SimulatedMotionControllerButtonState ButtonState => buttonState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3822));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = __this->get_buttonState_1();
		return L_0;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3823));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3824));
	{
		// public Vector3 Position { get; set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3825));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPositionU3Ek__BackingField_2();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::set_Position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9 (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3826));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3827));
	{
		// public Vector3 Position { get; set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3828));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPositionU3Ek__BackingField_2(L_0);
		return;
	}
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363 (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3829));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3830));
	{
		// public Quaternion Rotation { get; set; } = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3831));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3CRotationU3Ek__BackingField_3();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::set_Rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3832));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3833));
	{
		// public Quaternion Rotation { get; set; } = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3834));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3CRotationU3Ek__BackingField_3(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::Update(System.Boolean,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140 (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, bool ___isTrackedNew0, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___buttonStateNew1, MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * ___updater2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isTrackedNew0), (&___buttonStateNew1), (&___updater2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3835));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3836));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3837));
		// bool motionControllerDataChanged = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3838));
		V_0 = (bool)0;
		// if (isTracked != isTrackedNew || buttonState != buttonStateNew)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3839));
		bool L_0 = __this->get_isTracked_0();
		bool L_1 = ___isTrackedNew0;
		if ((!(((uint32_t)L_0) == ((uint32_t)L_1))))
		{
			goto IL_001a;
		}
	}
	{
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_2 = __this->get_buttonState_1();
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_3 = ___buttonStateNew1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3856));
		bool L_4 = SimulatedMotionControllerButtonState_op_Inequality_m4E7E2C84B13D0CBCECD0CB21B287560F20C98FCD(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3856));
		G_B3_0 = ((int32_t)(L_4));
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 1;
	}

IL_001b:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3840));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0031;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3841));
		// isTracked = isTrackedNew;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3842));
		bool L_6 = ___isTrackedNew0;
		__this->set_isTracked_0(L_6);
		// buttonState = buttonStateNew;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3843));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_7 = ___buttonStateNew1;
		__this->set_buttonState_1(L_7);
		// motionControllerDataChanged = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3844));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3845));
	}

IL_0031:
	{
		// if (isTracked)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3846));
		bool L_8 = __this->get_isTracked_0();
		V_2 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3847));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_0062;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3848));
		// MixedRealityPose pose = updater();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3849));
		MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * L_10 = ___updater2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3857));
		NullCheck(L_10);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_11 = MotionControllerPoseUpdater_Invoke_mBD061702E432F2F4ACC16C0FD24840324643E9C8(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3857));
		V_3 = L_11;
		// Position = pose.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3850));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3858));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = MixedRealityPose_get_Position_mF175BAE3270E5432E605BDD5FD1FA5F722B24AEE((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3858));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3859));
		SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_inline(__this, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3859));
		// Rotation = pose.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3851));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3860));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3860));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3861));
		SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_inline(__this, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3861));
		// motionControllerDataChanged = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3852));
		V_0 = (bool)1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3853));
	}

IL_0062:
	{
		// return motionControllerDataChanged;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3854));
		bool L_14 = V_0;
		V_4 = L_14;
		goto IL_0067;
	}

IL_0067:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3855));
		bool L_15 = V_4;
		return L_15;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerData__ctor_m92D2E548B2EF638BB5624E8FF92AD2F5F113381E (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData__ctor_m92D2E548B2EF638BB5624E8FF92AD2F5F113381E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData__ctor_m92D2E548B2EF638BB5624E8FF92AD2F5F113381E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3862));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3863));
	{
		// private bool isTracked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3864));
		__this->set_isTracked_0((bool)0);
		// private SimulatedMotionControllerButtonState buttonState = new SimulatedMotionControllerButtonState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3865));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * L_0 = __this->get_address_of_buttonState_1();
		il2cpp_codegen_initobj(L_0, sizeof(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C ));
		// public Vector3 Position { get; set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3866));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3868));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3868));
		__this->set_U3CPositionU3Ek__BackingField_2(L_1);
		// public Quaternion Rotation { get; set; } = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3867));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3869));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3869));
		__this->set_U3CRotationU3Ek__BackingField_3(L_2);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3870));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3870));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
IL2CPP_EXTERN_C  MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  DelegatePInvokeWrapper_MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * __this, const RuntimeMethod* method)
{
	typedef MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  (DEFAULT_CALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(((RuntimeDelegate*)__this)->method->nativeFunction);

	// Native function invocation
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MotionControllerPoseUpdater__ctor_m5995208AAA08D3DA12A0741094A56DEABD39888F (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MotionControllerPoseUpdater_Invoke_mBD061702E432F2F4ACC16C0FD24840324643E9C8 (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * __this, const RuntimeMethod* method)
{
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  result;
	memset((&result), 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = GenericInterfaceFuncInvoker0< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(targetMethod, targetThis);
					else
						result = GenericVirtFuncInvoker0< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(targetMethod, targetThis);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						result = InterfaceFuncInvoker0< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
					else
						result = VirtFuncInvoker0< MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
				}
			}
			else
			{
				typedef MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater::BeginInvoke(System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MotionControllerPoseUpdater_BeginInvoke_mDFA674D4371C5AD6C9FA57F3DF2AF28260EEF59B (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData/MotionControllerPoseUpdater::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MotionControllerPoseUpdater_EndInvoke_m31C2D8397EC41C67235756F4B0CAD418D838169B (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider::.ctor(Microsoft.MixedReality.Toolkit.Input.MixedRealityInputSimulationProfile)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerDataProvider__ctor_m350C0175955DC63BBAE134800E709A40D34E757F (SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C * __this, MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * ____profile0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerDataProvider__ctor_m350C0175955DC63BBAE134800E709A40D34E757F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&____profile0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerDataProvider__ctor_m350C0175955DC63BBAE134800E709A40D34E757F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4113));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4114));
	{
		// public SimulatedMotionControllerDataProvider(MixedRealityInputSimulationProfile _profile) : base(_profile)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4115));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_0 = ____profile0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4120));
		IL2CPP_RUNTIME_CLASS_INIT(SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C_il2cpp_TypeInfo_var);
		SimulatedControllerDataProvider__ctor_m3BAB2EECEAB474D4C22EEA869BB89B0D46203157(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4120));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4116));
		// InputStateLeft = new SimulatedMotionControllerState(Handedness.Left);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4117));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4121));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_1 = (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 *)il2cpp_codegen_object_new(SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_il2cpp_TypeInfo_var);
		SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E(L_1, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4121));
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateLeft_3(L_1);
		// InputStateRight = new SimulatedMotionControllerState(Handedness.Right);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4118));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4122));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_2 = (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 *)il2cpp_codegen_object_new(SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_il2cpp_TypeInfo_var);
		SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E(L_2, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4122));
		((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->set_InputStateRight_4(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4119));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider::SimulateInput(System.Int64&,Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState,System.Boolean,System.Boolean,Microsoft.MixedReality.Toolkit.Input.MouseDelta,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerDataProvider_SimulateInput_m9BE039ED4086A61E981F80EED82789C6D4F26362 (SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C * __this, int64_t* ___lastMotionControllerTrackedTimestamp0, SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___state1, bool ___isSimulating2, bool ___isAlwaysVisible3, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta4, bool ___useMouseRotation5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerDataProvider_SimulateInput_m9BE039ED4086A61E981F80EED82789C6D4F26362_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * V_0 = NULL;
	bool V_1 = false;
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	float V_8 = 0.0f;
	TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  V_9;
	memset((&V_9), 0, sizeof(V_9));
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___lastMotionControllerTrackedTimestamp0), (&___state1), (&___isSimulating2), (&___isAlwaysVisible3), (&___mouseDelta4), (&___useMouseRotation5));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerDataProvider_SimulateInput_m9BE039ED4086A61E981F80EED82789C6D4F26362_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4123));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4124));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4125));
		// if (!(state is SimulatedMotionControllerState motionControllerState))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4126));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_0 = ___state1;
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_1 = ((SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 *)IsInstClass((RuntimeObject*)L_0, SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_il2cpp_TypeInfo_var));
		V_0 = L_1;
		V_3 = (bool)((((RuntimeObject*)(SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 *)L_1) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4127));
		bool L_2 = V_3;
		if (!L_2)
		{
			goto IL_0016;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4128));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4129));
		goto IL_0120;
	}

IL_0016:
	{
		// bool enableTracking = isAlwaysVisible || isSimulating;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4130));
		bool L_3 = ___isAlwaysVisible3;
		bool L_4 = ___isSimulating2;
		V_1 = (bool)((int32_t)((int32_t)L_3|(int32_t)L_4));
		// if (!motionControllerState.IsTracked && enableTracking)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4131));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_5 = V_0;
		NullCheck(L_5);
		bool L_6 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_5)->get_IsTracked_1();
		bool L_7 = V_1;
		V_4 = (bool)((int32_t)((int32_t)((((int32_t)L_6) == ((int32_t)0))? 1 : 0)&(int32_t)L_7));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4132));
		bool L_8 = V_4;
		if (!L_8)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4133));
		// ResetInput(motionControllerState, isSimulating);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4134));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_9 = V_0;
		bool L_10 = ___isSimulating2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4158));
		VirtActionInvoker2< SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *, bool >::Invoke(6 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::ResetInput(Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState,System.Boolean) */, __this, L_9, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4158));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4135));
	}

IL_0037:
	{
		// if (isSimulating)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4136));
		bool L_11 = ___isSimulating2;
		V_5 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4137));
		bool L_12 = V_5;
		if (!L_12)
		{
			goto IL_00c5;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4138));
		// motionControllerState.SimulateInput(mouseDelta, useMouseRotation, profile.MouseRotationSensitivity, profile.MouseControllerRotationSpeed, profile.ControllerJitterAmount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4139));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_13 = V_0;
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_14 = ___mouseDelta4;
		bool L_15 = ___useMouseRotation5;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_16 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4159));
		NullCheck(L_16);
		float L_17 = MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25D_inline(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4159));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_18 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4160));
		NullCheck(L_18);
		float L_19 = MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73_inline(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4160));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_20 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4161));
		NullCheck(L_20);
		float L_21 = MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2C_inline(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4161));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4162));
		NullCheck(L_13);
		SimulatedControllerState_SimulateInput_m0911022E362937396CD387A11B7E373D4B64C395(L_13, L_14, L_15, L_17, L_19, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4162));
		// motionControllerState.ButtonState = new SimulatedMotionControllerButtonState
		// {
		//     IsSelecting = KeyInputSystem.GetKey(profile.MotionControllerTriggerKey),
		//     IsGrabbing = KeyInputSystem.GetKey(profile.MotionControllerGrabKey),
		//     IsPressingMenu = KeyInputSystem.GetKey(profile.MotionControllerMenuKey)
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4140));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_22 = V_0;
		il2cpp_codegen_initobj((&V_6), sizeof(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C ));
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_23 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4163));
		NullCheck(L_23);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_24 = MixedRealityInputSimulationProfile_get_MotionControllerTriggerKey_m32AC0FAA8689395388B5F53DE37E4FA437E76D98_inline(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4164));
		bool L_25 = KeyInputSystem_GetKey_m2EE019355844DA29C17B8678F49586574D5A6D49(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4164));
		(&V_6)->set_IsSelecting_0(L_25);
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_26 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4165));
		NullCheck(L_26);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_27 = MixedRealityInputSimulationProfile_get_MotionControllerGrabKey_mAA8B5087F8597D4A60166E3C7C93EFFA2F7C23EB_inline(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4165));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4166));
		bool L_28 = KeyInputSystem_GetKey_m2EE019355844DA29C17B8678F49586574D5A6D49(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4166));
		(&V_6)->set_IsGrabbing_1(L_28);
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_29 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4167));
		NullCheck(L_29);
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_30 = MixedRealityInputSimulationProfile_get_MotionControllerMenuKey_m82072D42ED0258F1D0AF0861F4253EBC3B0AA969_inline(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4167));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4168));
		bool L_31 = KeyInputSystem_GetKey_m2EE019355844DA29C17B8678F49586574D5A6D49(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4168));
		(&V_6)->set_IsPressingMenu_2(L_31);
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_32 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4169));
		NullCheck(L_22);
		SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_inline(L_22, L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4169));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4141));
	}

IL_00c5:
	{
		// DateTime currentTime = DateTime.UtcNow;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4142));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4170));
		IL2CPP_RUNTIME_CLASS_INIT(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_il2cpp_TypeInfo_var);
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_33 = DateTime_get_UtcNow_m171F52F4B3A213E4BAD7B78DC8E794A269DE38A1(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4170));
		V_2 = L_33;
		// if (enableTracking)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4143));
		bool L_34 = V_1;
		V_7 = L_34;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4144));
		bool L_35 = V_7;
		if (!L_35)
		{
			goto IL_00e6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4145));
		// motionControllerState.IsTracked = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4146));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_36 = V_0;
		NullCheck(L_36);
		((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_36)->set_IsTracked_1((bool)1);
		// lastMotionControllerTrackedTimestamp = currentTime.Ticks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4147));
		int64_t* L_37 = ___lastMotionControllerTrackedTimestamp0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4171));
		int64_t L_38 = DateTime_get_Ticks_mBCB529E43D065E498EAF08971D2EB49D5CB59D60((DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4171));
		*((int64_t*)L_37) = (int64_t)L_38;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4148));
		goto IL_0120;
	}

IL_00e6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4149));
		// float timeSinceTracking = (float)currentTime.Subtract(new DateTime(lastMotionControllerTrackedTimestamp)).TotalSeconds;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4150));
		int64_t* L_39 = ___lastMotionControllerTrackedTimestamp0;
		int64_t L_40 = *((int64_t*)L_39);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4172));
		DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  L_41;
		memset((&L_41), 0, sizeof(L_41));
		DateTime__ctor_m027A935E14EB81BCC0739BD56AE60CDE3387990C((&L_41), L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4172));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4173));
		TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4  L_42 = DateTime_Subtract_m12814A53110B4E3887A84A911C5F9C1402D98842((DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 *)(&V_2), L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4173));
		V_9 = L_42;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4174));
		double L_43 = TimeSpan_get_TotalSeconds_m0F8F314166E6D1F9D36F32EB1272451EDE56B4EA((TimeSpan_tA8069278ACE8A74D6DF7D514A9CD4432433F64C4 *)(&V_9), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4174));
		V_8 = (((float)((float)L_43)));
		// if (timeSinceTracking > profile.ControllerHideTimeout)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4151));
		float L_44 = V_8;
		MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * L_45 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_profile_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4175));
		NullCheck(L_45);
		float L_46 = MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0_inline(L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4175));
		V_10 = (bool)((((float)L_44) > ((float)L_46))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4152));
		bool L_47 = V_10;
		if (!L_47)
		{
			goto IL_011f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4153));
		// motionControllerState.IsTracked = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4154));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_48 = V_0;
		NullCheck(L_48);
		((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_48)->set_IsTracked_1((bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4155));
	}

IL_011f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4156));
	}

IL_0120:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4157));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider::UpdateControllerData(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData,Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerData,Microsoft.MixedReality.Toolkit.Input.MouseDelta)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerDataProvider_UpdateControllerData_m644372626B2BC3711A63099DB33FCAC37CFEE2C7 (SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C * __this, SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * ___motionControllerDataLeft0, SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * ___motionControllerDataRight1, MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * ___mouseDelta2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerDataProvider_UpdateControllerData_m644372626B2BC3711A63099DB33FCAC37CFEE2C7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * V_0 = NULL;
	SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___motionControllerDataLeft0), (&___motionControllerDataRight1), (&___mouseDelta2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerDataProvider_UpdateControllerData_m644372626B2BC3711A63099DB33FCAC37CFEE2C7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4176));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4177));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4178));
		// SimulateUserInput(mouseDelta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4179));
		MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * L_0 = ___mouseDelta2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4197));
		VirtActionInvoker1< MouseDelta_t0E462C79061DA8B939B70ED326AD774A0B2D479A * >::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerDataProvider::SimulateUserInput(Microsoft.MixedReality.Toolkit.Input.MouseDelta) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4197));
		// SimulatedMotionControllerState motionControllerStateLeft = InputStateLeft as SimulatedMotionControllerState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4180));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_1 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateLeft_3();
		V_0 = ((SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 *)IsInstClass((RuntimeObject*)L_1, SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_il2cpp_TypeInfo_var));
		// SimulatedMotionControllerState motionControllerStateRight = InputStateRight as SimulatedMotionControllerState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4181));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_2 = ((SimulatedControllerDataProvider_t563E06B7E569D3A81B3729F58A907123654C722C *)__this)->get_InputStateRight_4();
		V_1 = ((SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 *)IsInstClass((RuntimeObject*)L_2, SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_il2cpp_TypeInfo_var));
		// motionControllerStateLeft.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4182));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4198));
		NullCheck(L_3);
		SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4198));
		// motionControllerStateRight.Update();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4183));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_4 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4199));
		NullCheck(L_4);
		SimulatedControllerState_Update_mFE6035AB5231F25CA1E962F8E6273B8988C3C1CA(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4199));
		// if (updaterLeft == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4184));
		MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * L_5 = __this->get_updaterLeft_16();
		V_2 = (bool)((((RuntimeObject*)(MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D *)L_5) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4185));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_0050;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4186));
		// updaterLeft = motionControllerStateLeft.UpdateControllerPose;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4187));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4200));
		MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * L_8 = (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D *)il2cpp_codegen_object_new(MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D_il2cpp_TypeInfo_var);
		MotionControllerPoseUpdater__ctor_m5995208AAA08D3DA12A0741094A56DEABD39888F(L_8, L_7, (intptr_t)((intptr_t)SimulatedMotionControllerState_UpdateControllerPose_mD56A48F14E714A0BCDEE059055C2A4E366C82CBB_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4200));
		__this->set_updaterLeft_16(L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4188));
	}

IL_0050:
	{
		// if (updaterRight == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4189));
		MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * L_9 = __this->get_updaterRight_17();
		V_3 = (bool)((((RuntimeObject*)(MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D *)L_9) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4190));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_0071;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4191));
		// updaterRight = motionControllerStateRight.UpdateControllerPose;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4192));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4201));
		MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * L_12 = (MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D *)il2cpp_codegen_object_new(MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D_il2cpp_TypeInfo_var);
		MotionControllerPoseUpdater__ctor_m5995208AAA08D3DA12A0741094A56DEABD39888F(L_12, L_11, (intptr_t)((intptr_t)SimulatedMotionControllerState_UpdateControllerPose_mD56A48F14E714A0BCDEE059055C2A4E366C82CBB_RuntimeMethod_var), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4201));
		__this->set_updaterRight_17(L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4193));
	}

IL_0071:
	{
		// motionControllerDataLeft.Update(motionControllerStateLeft.IsTracked, motionControllerStateLeft.ButtonState, updaterLeft);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4194));
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_13 = ___motionControllerDataLeft0;
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_14 = V_0;
		NullCheck(L_14);
		bool L_15 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_14)->get_IsTracked_1();
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_16 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4202));
		NullCheck(L_16);
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_17 = SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_inline(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4202));
		MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * L_18 = __this->get_updaterLeft_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4203));
		NullCheck(L_13);
		SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140(L_13, L_15, L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4203));
		// motionControllerDataRight.Update(motionControllerStateRight.IsTracked, motionControllerStateRight.ButtonState, updaterRight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4195));
		SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * L_19 = ___motionControllerDataRight1;
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_20 = V_1;
		NullCheck(L_20);
		bool L_21 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)L_20)->get_IsTracked_1();
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_22 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4204));
		NullCheck(L_22);
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_23 = SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_inline(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4204));
		MotionControllerPoseUpdater_t34AD5837047B9CEBBD0BA9CCB63CB07AAB9FC93D * L_24 = __this->get_updaterRight_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4205));
		NullCheck(L_19);
		SimulatedMotionControllerData_Update_m1B9D361251927DDCAE7C28A5B12DFC11845AC140(L_19, L_21, L_23, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4205));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4196));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerDataProvider::ResetInput(Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerDataProvider_ResetInput_m3D788FF8EEBE0670393A4FBE9DB6402E050B9740 (SimulatedMotionControllerDataProvider_t82C45B8ED010DB44ED5671E1738BAC63F869BE9C * __this, SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * ___state0, bool ___isSimulating1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerDataProvider_ResetInput_m3D788FF8EEBE0670393A4FBE9DB6402E050B9740_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___state0), (&___isSimulating1));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerDataProvider_ResetInput_m3D788FF8EEBE0670393A4FBE9DB6402E050B9740_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4206));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4207));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4208));
		// base.ResetInput(state, isSimulating);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4209));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_0 = ___state0;
		bool L_1 = ___isSimulating1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4214));
		SimulatedControllerDataProvider_ResetInput_mCA7DB0D28644ED1AB2BB68AEC1E1BFF9C55FF300(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4214));
		// var motionControllerState = state as SimulatedMotionControllerState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4210));
		SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF * L_2 = ___state0;
		V_0 = ((SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 *)IsInstClass((RuntimeObject*)L_2, SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3_il2cpp_TypeInfo_var));
		// motionControllerState.ResetButtonStates();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4211));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4215));
		NullCheck(L_3);
		SimulatedMotionControllerState_ResetButtonStates_m855FD55EE27F5E79946166E71552304D8452D30F(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4215));
		// motionControllerState.ResetRotation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4212));
		SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4216));
		NullCheck(L_4);
		VirtActionInvoker0::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedControllerState::ResetRotation() */, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4216));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4213));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::get_ButtonState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343 (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4063));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4064));
	{
		// public SimulatedMotionControllerButtonState ButtonState { get; set; } = new SimulatedMotionControllerButtonState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4065));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = __this->get_U3CButtonStateU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::set_ButtonState(Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerButtonState)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551 (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4066));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4067));
	{
		// public SimulatedMotionControllerButtonState ButtonState { get; set; } = new SimulatedMotionControllerButtonState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4068));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = ___value0;
		__this->set_U3CButtonStateU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::.ctor(Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, uint8_t ____handedness0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&____handedness0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState__ctor_m50EB15729D6DF6A0090422552CC4264E6D26EA4E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4069));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4070));
	{
		// public SimulatedMotionControllerButtonState ButtonState { get; set; } = new SimulatedMotionControllerButtonState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4071));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C * L_0 = __this->get_address_of_U3CButtonStateU3Ek__BackingField_7();
		il2cpp_codegen_initobj(L_0, sizeof(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C ));
		// public SimulatedMotionControllerState(Handedness _handedness) : base(_handedness) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4072));
		uint8_t L_1 = ____handedness0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4075));
		SimulatedControllerState__ctor_mC0D284BFC0ADB7A27A191F96D389C2B2B3412A9B(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4075));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4073));
		// public SimulatedMotionControllerState(Handedness _handedness) : base(_handedness) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4074));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::ResetRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerState_ResetRotation_m37A0837B85470344FF2924838E29FD8F16FF0093 (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState_ResetRotation_m37A0837B85470344FF2924838E29FD8F16FF0093_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState_ResetRotation_m37A0837B85470344FF2924838E29FD8F16FF0093_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4076));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4077));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4078));
		// ViewportRotation = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4079));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4081));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4081));
		((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->set_ViewportRotation_3(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4080));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::ResetButtonStates()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimulatedMotionControllerState_ResetButtonStates_m855FD55EE27F5E79946166E71552304D8452D30F (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState_ResetButtonStates_m855FD55EE27F5E79946166E71552304D8452D30F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState_ResetButtonStates_m855FD55EE27F5E79946166E71552304D8452D30F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4082));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4083));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4084));
		// ButtonState = new SimulatedMotionControllerButtonState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4085));
		il2cpp_codegen_initobj((&V_0), sizeof(SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C ));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4087));
		SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_inline(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4087));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4086));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Input.SimulatedMotionControllerState::UpdateControllerPose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  SimulatedMotionControllerState_UpdateControllerPose_mD56A48F14E714A0BCDEE059055C2A4E366C82CBB (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState_UpdateControllerPose_mD56A48F14E714A0BCDEE059055C2A4E366C82CBB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	int32_t V_5 = 0;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_6;
	memset((&V_6), 0, sizeof(V_6));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_7;
	memset((&V_7), 0, sizeof(V_7));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState_UpdateControllerPose_mD56A48F14E714A0BCDEE059055C2A4E366C82CBB_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4088));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4089));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4090));
		// Vector3 screenPosition = CameraCache.Main.ViewportToScreenPoint(ViewportPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4091));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4100));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_0 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4100));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_ViewportPosition_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4101));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Camera_ViewportToScreenPoint_m8B42382A0571F1F6F1162F3DA05A9317F903B657(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4101));
		V_0 = L_2;
		// Vector3 worldPosition = CameraCache.Main.ScreenToWorldPoint(screenPosition + JitterOffset);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4092));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4102));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_3 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4102));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_JitterOffset_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4103));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4103));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4104));
		NullCheck(L_3);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Camera_ScreenToWorldPoint_m179BB999DC97A251D0892B39C98F3FACDF0617C5(L_3, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4104));
		V_1 = L_7;
		// Quaternion localRotation = Quaternion.Euler(ViewportRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4093));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_ViewportRotation_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4105));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_9 = Quaternion_Euler_m55C96FCD397CC69109261572710608D12A4CBD2B(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4105));
		V_2 = L_9;
		// Quaternion worldRotation = CameraCache.Main.transform.rotation * localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4094));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4106));
		Camera_t48B2B9ECB3CE6108A98BF949A1CECF0FE3421F34 * L_10 = CameraCache_get_Main_m23FB3162F6476988FEE59F829DEAF08702D81554(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4106));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4107));
		NullCheck(L_10);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4107));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4108));
		NullCheck(L_11);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_12 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4108));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4109));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_14 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4109));
		V_3 = L_14;
		// Vector3 eulerAngles = worldRotation.eulerAngles;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4095));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4110));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Quaternion_get_eulerAngles_mF8ABA8EB77CD682017E92F0F457374E54BC943F9((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4110));
		V_4 = L_15;
		// int yOffsetSign = handedness == Handedness.Left ? -1 : 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4096));
		uint8_t L_16 = ((SimulatedControllerState_tF6C078B6568DFA2C391F641A73DC22F5D4ACEEFF *)__this)->get_handedness_0();
		if ((((int32_t)L_16) == ((int32_t)1)))
		{
			goto IL_0060;
		}
	}
	{
		G_B3_0 = 1;
		goto IL_0061;
	}

IL_0060:
	{
		G_B3_0 = (-1);
	}

IL_0061:
	{
		V_5 = G_B3_0;
		// Quaternion modifiedRotation = Quaternion.Euler(eulerAngles.x + rotationXOffset, eulerAngles.y + rotationYOffset * yOffsetSign, eulerAngles.z);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4097));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_4;
		float L_18 = L_17.get_x_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = V_4;
		float L_20 = L_19.get_y_3();
		int32_t L_21 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = V_4;
		float L_23 = L_22.get_z_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4111));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_24 = Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05(((float)il2cpp_codegen_add((float)L_18, (float)(-15.0f))), ((float)il2cpp_codegen_add((float)L_20, (float)((float)il2cpp_codegen_multiply((float)(-10.0f), (float)(((float)((float)L_21))))))), L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4111));
		V_6 = L_24;
		// return new MixedRealityPose(worldPosition, modifiedRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4098));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = V_1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_26 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4112));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_27;
		memset((&L_27), 0, sizeof(L_27));
		MixedRealityPose__ctor_m139F7F8104CAB889E5AE6A14090A9764E39DFCAC((&L_27), L_25, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4112));
		V_7 = L_27;
		goto IL_009b;
	}

IL_009b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4099));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_28 = V_7;
		return L_28;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25999));
	{
		// public static MixedRealityInputAction None { get; } = new MixedRealityInputAction(0, "None");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26000));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var))->get_U3CNoneU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547ADMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPose_get_ZeroIdentity_m80C016329EAADDC4EB8DFD80ED0CF614A5E547AD_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9772));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9773));
	{
		// public static MixedRealityPose ZeroIdentity { get; } = new MixedRealityPose(Vector3.zero, Quaternion.identity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9774));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = ((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_il2cpp_TypeInfo_var))->get_U3CZeroIdentityU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_inline (MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityGesturesProfile_get_Gestures_mBAB7F3737E09478B3FA7F30ECAC24D6840E98580_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25973));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25974));
	{
		// public MixedRealityGestureMapping[] Gestures => gestures;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25975));
		MixedRealityGestureMappingU5BU5D_t2F3D7B685E29F06002C6BD2EF99A97C8DF6BD874* L_0 = __this->get_gestures_10();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityGestureMapping_get_GestureType_m6798792581776B818AF6A5307DD72D3425420C20_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25952));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25953));
	{
		// public GestureInputType GestureType => gestureType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25954));
		int32_t L_0 = __this->get_gestureType_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_inline (MixedRealityGestureMapping_t765237603301D949A532A3533D70FB492A6E3074 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityGestureMapping_get_Action_mF225EE997BA38AFC7DCCA99F71434633FD683D82_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25955));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25956));
	{
		// public MixedRealityInputAction Action => action;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25957));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_action_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool MixedRealityGesturesProfile_get_UseRailsNavigation_mEAE6D30B9C69C0E5EA8115068FDA600F87CE02C6_inline (MixedRealityGesturesProfile_t9CC7974AD508EC596BC2FD0C5D3807CA076D7725 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityGesturesProfile_get_UseRailsNavigation_mEAE6D30B9C69C0E5EA8115068FDA600F87CE02C6Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityGesturesProfile_get_UseRailsNavigation_mEAE6D30B9C69C0E5EA8115068FDA600F87CE02C6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25964));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25965));
	{
		// public bool UseRailsNavigation => useRailsNavigation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25966));
		bool L_0 = __this->get_useRailsNavigation_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_HoldStartDuration_mBC1A3E5C22D4854356392379561E246374610007_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_HoldStartDuration_mBC1A3E5C22D4854356392379561E246374610007Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_HoldStartDuration_mBC1A3E5C22D4854356392379561E246374610007_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2027));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2028));
	{
		// public float HoldStartDuration => holdStartDuration;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2029));
		float L_0 = __this->get_holdStartDuration_42();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_NavigationStartThreshold_m30BD08DA409E73AE42567F6420EB5E92DC7981E4_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_NavigationStartThreshold_m30BD08DA409E73AE42567F6420EB5E92DC7981E4Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_NavigationStartThreshold_m30BD08DA409E73AE42567F6420EB5E92DC7981E4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2030));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2031));
	{
		// public float NavigationStartThreshold => navigationStartThreshold;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2032));
		float L_0 = __this->get_navigationStartThreshold_43();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_inline (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData_get_Joints_m0137F96239589766E8132147EBBC5D1C24516B7C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3289));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3290));
	{
		// public MixedRealityPose[] Joints => joints;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3291));
		MixedRealityPoseU5BU5D_t9A8494A57EE87642D3A570AB9C476CE039C529BD* L_0 = __this->get_joints_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ArticulatedHandPose_get_JointCount_m941BC2F16875A8640E6B81BF825563F48C14B035_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9460));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9461));
	{
		// public static int JointCount { get; } = Joints.Length;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 9462));
		IL2CPP_RUNTIME_CLASS_INIT(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_il2cpp_TypeInfo_var);
		int32_t L_0 = ((ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_StaticFields*)il2cpp_codegen_static_fields_for(ArticulatedHandPose_t528DF49FF6B18F5FEC9A968DFBFB235FC429F422_il2cpp_TypeInfo_var))->get_U3CJointCountU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFDMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_InputSource_m9F9D70F24AC4D5605665D31F6D8A6083A3CA1CFD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27078));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27079));
	{
		// public IMixedRealityInputSource InputSource { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27080));
		RuntimeObject* L_0 = __this->get_U3CInputSourceU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint8_t BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995AMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_ControllerHandedness_mA18814111E1328E1C7C04C383CC44E8A2F8A995A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27075));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27076));
	{
		// public Handedness ControllerHandedness { get; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27077));
		uint8_t L_0 = __this->get_U3CControllerHandednessU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_Interactions_mC6BB2DCE6BB5806FB3AEA325A55FB53BD7D3C561_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27106));
	{
		// public MixedRealityInteractionMapping[] Interactions { get; private set; } = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27107));
		MixedRealityInteractionMappingU5BU5D_tA9021B8F5A4C53A970615CF32CF4B0992DEFB4FA* L_0 = __this->get_U3CInteractionsU3Ek__BackingField_9();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_inline (MixedRealityInteractionMapping_tF40535F5D25A7AEA688519D1A5674324B999CAE2 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CDMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInteractionMapping_get_InputType_mA8C027545479C380F87D72BDED734A9BDBFA40CD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25329));
	{
		// public DeviceInputType InputType => inputType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25330));
		int32_t L_0 = __this->get_inputType_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_inline (SimulatedHandData_t414B6A5A422CE06387BF5DB28CCAF451A21FCBA1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedHandData_get_IsPinching_mB7C40888399E88C93E755FE89D50234CF5F5C981_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3292));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3293));
	{
		// public bool IsPinching => isPinching;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3294));
		bool L_0 = __this->get_isPinching_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923EMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_DefaultHandGesture_mD3A6A7B18EE78308C4EB5A9E34D9E724D214923E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2012));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2013));
	{
		// public ArticulatedHandPose.GestureId DefaultHandGesture => defaultHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2014));
		int32_t L_0 = __this->get_defaultHandGesture_37();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_HandGestureAnimationSpeed_m159042CFADEA1948914A6AD9D52193E9179B0AF5_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_HandGestureAnimationSpeed_m159042CFADEA1948914A6AD9D52193E9179B0AF5Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_HandGestureAnimationSpeed_m159042CFADEA1948914A6AD9D52193E9179B0AF5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2024));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2025));
	{
		// public float HandGestureAnimationSpeed => handGestureAnimationSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2026));
		float L_0 = __this->get_handGestureAnimationSpeed_41();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25D_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25DMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_MouseRotationSensitivity_mF845BEED2D0B763CE04CB80387448092D1E6A25D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1916));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1917));
	{
		// public float MouseRotationSensitivity => mouseRotationSensitivity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1918));
		float L_0 = __this->get_mouseRotationSensitivity_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_MouseControllerRotationSpeed_m55909FB309AC06A9329333932434594568266A73_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2006));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2007));
	{
		// public float MouseControllerRotationSpeed => mouseControllerRotationSpeed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2008));
		float L_0 = __this->get_mouseControllerRotationSpeed_35();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2C_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_ControllerJitterAmount_m4AB07F2B29DCAE6D23D909FB0783B32A444F2B2C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2039));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2040));
	{
		// public float ControllerJitterAmount => controllerJitterAmount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2041));
		float L_0 = __this->get_controllerJitterAmount_46();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_ControllerHideTimeout_m4B1449C9989B58FB410A3C37ABE17371BA4DDED0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1997));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1998));
	{
		// public float ControllerHideTimeout => controllerHideTimeout;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1999));
		float L_0 = __this->get_controllerHideTimeout_32();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24E_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24EMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_InteractionButton_mA234D79C38047858D5F3E4AA790AE5CBE307F24E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1928));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1929));
	{
		// public KeyBinding InteractionButton => interactionButton;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1930));
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_0 = __this->get_interactionButton_10();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_LeftMouseHandGesture_mEBCDA2D66B78F65369F66DE1153FEC879F096A82_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2015));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2016));
	{
		// public ArticulatedHandPose.GestureId LeftMouseHandGesture => leftMouseHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2017));
		int32_t L_0 = __this->get_leftMouseHandGesture_38();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_MouseLookButton_m802B81E2426D106617415BC82AB160F7C7C6C626_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1943));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1944));
	{
		// public KeyBinding MouseLookButton => mouseLookButton;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 1945));
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_0 = __this->get_mouseLookButton_15();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_RightMouseHandGesture_m73169C1AC874B34BE0ED76158486C07403F82432_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2021));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2022));
	{
		// public ArticulatedHandPose.GestureId RightMouseHandGesture => rightMouseHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2023));
		int32_t L_0 = __this->get_rightMouseHandGesture_40();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_MiddleMouseHandGesture_mD1F5A9F51BCF91EC6D5F0AB990FD0183F0F0EE0C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2018));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2019));
	{
		// public ArticulatedHandPose.GestureId MiddleMouseHandGesture => middleMouseHandGesture;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2020));
		int32_t L_0 = __this->get_middleMouseHandGesture_39();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9ACMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_get_Position_m5D1F29955A86E52A2D087ED34CC0348C6B89B9AC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3823));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3824));
	{
		// public Vector3 Position { get; set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3825));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPositionU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_get_Rotation_m10423CE84D86AD80DD8D08BA294C9845D6779363_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3829));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3830));
	{
		// public Quaternion Rotation { get; set; } = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3831));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3CRotationU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseController_set_IsRotationAvailable_m5259A799822AFD94A2BEE4B47F887A03158FE308_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_set_IsRotationAvailable_m5259A799822AFD94A2BEE4B47F887A03158FE308Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_set_IsRotationAvailable_m5259A799822AFD94A2BEE4B47F887A03158FE308_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27102));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27103));
	{
		// public bool IsRotationAvailable { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27104));
		bool L_0 = ___value0;
		__this->set_U3CIsRotationAvailableU3Ek__BackingField_8(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void BaseController_set_IsPositionAvailable_m76D7FB5DBF945174A9D9B7A19123783742C6B57F_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_set_IsPositionAvailable_m76D7FB5DBF945174A9D9B7A19123783742C6B57FMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_set_IsPositionAvailable_m76D7FB5DBF945174A9D9B7A19123783742C6B57F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27090));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27091));
	{
		// public bool IsPositionAvailable { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27092));
		bool L_0 = ___value0;
		__this->set_U3CIsPositionAvailableU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseController_get_IsPositionAvailable_m3E2EB0D15AAADABB3D967535353AD53539677046_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_IsPositionAvailable_m3E2EB0D15AAADABB3D967535353AD53539677046Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_IsPositionAvailable_m3E2EB0D15AAADABB3D967535353AD53539677046_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27087));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27088));
	{
		// public bool IsPositionAvailable { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27089));
		bool L_0 = __this->get_U3CIsPositionAvailableU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool BaseController_get_IsRotationAvailable_m59D5E1DD267C83A3DB834096028590522C934868_inline (BaseController_t3529EF2CB2E73206F555D8AF9468309DFF9B1E9B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseController_get_IsRotationAvailable_m59D5E1DD267C83A3DB834096028590522C934868Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseController_get_IsRotationAvailable_m59D5E1DD267C83A3DB834096028590522C934868_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27099));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27100));
	{
		// public bool IsRotationAvailable { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 27101));
		bool L_0 = __this->get_U3CIsRotationAvailableU3Ek__BackingField_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983BMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_get_ButtonState_mEAF78B4E929CCB9FCC98329D86DBF9E7FDD7983B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3820));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3821));
	{
		// public SimulatedMotionControllerButtonState ButtonState => buttonState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3822));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = __this->get_buttonState_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_set_Position_mE6E4C8DFB2B10F2B2069301DD7AB6F8FF8CA2EB9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3826));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3827));
	{
		// public Vector3 Position { get; set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3828));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPositionU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_inline (SimulatedMotionControllerData_t67F138121920F1956F543963F4759ECED75A47AE * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301CMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerData_set_Rotation_m9E184836D43BB996C4200AA4BDD420BEA196301C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3832));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3833));
	{
		// public Quaternion Rotation { get; set; } = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 3834));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3CRotationU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MotionControllerTriggerKey_m32AC0FAA8689395388B5F53DE37E4FA437E76D98_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_MotionControllerTriggerKey_m32AC0FAA8689395388B5F53DE37E4FA437E76D98Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_MotionControllerTriggerKey_m32AC0FAA8689395388B5F53DE37E4FA437E76D98_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2042));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2043));
	{
		// public KeyBinding MotionControllerTriggerKey => motionControllerTriggerKey;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2044));
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_0 = __this->get_motionControllerTriggerKey_47();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MotionControllerGrabKey_mAA8B5087F8597D4A60166E3C7C93EFFA2F7C23EB_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_MotionControllerGrabKey_mAA8B5087F8597D4A60166E3C7C93EFFA2F7C23EBMicrosoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_MotionControllerGrabKey_mAA8B5087F8597D4A60166E3C7C93EFFA2F7C23EB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2046));
	{
		// public KeyBinding MotionControllerGrabKey => motionControllerGrabKey;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2047));
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_0 = __this->get_motionControllerGrabKey_48();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  MixedRealityInputSimulationProfile_get_MotionControllerMenuKey_m82072D42ED0258F1D0AF0861F4253EBC3B0AA969_inline (MixedRealityInputSimulationProfile_t752581F6963049D1D77F1BB3E533640527CD7977 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputSimulationProfile_get_MotionControllerMenuKey_m82072D42ED0258F1D0AF0861F4253EBC3B0AA969Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputSimulationProfile_get_MotionControllerMenuKey_m82072D42ED0258F1D0AF0861F4253EBC3B0AA969_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2048));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2049));
	{
		// public KeyBinding MotionControllerMenuKey => motionControllerMenuKey;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 2050));
		KeyBinding_tB411D21A41BE54262ECD35999E2324DFF1C6ED79  L_0 = __this->get_motionControllerMenuKey_49();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_inline (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState_set_ButtonState_mB0EF91ECA98AC76F62DB6FC108EF7B40B82BC551_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4066));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4067));
	{
		// public SimulatedMotionControllerButtonState ButtonState { get; set; } = new SimulatedMotionControllerButtonState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4068));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = ___value0;
		__this->set_U3CButtonStateU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_inline (SimulatedMotionControllerState_t91C06753373AC2FFC3EE809811CEBB232BB947C3 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimulatedMotionControllerState_get_ButtonState_m308011A4AE5F42D04C047E75D47A049AFBCF3343_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4063));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4064));
	{
		// public SimulatedMotionControllerButtonState ButtonState { get; set; } = new SimulatedMotionControllerButtonState();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Services_InputSimulation + 4065));
		SimulatedMotionControllerButtonState_t6970051BA84F51688B3996EC1B42E37D0F950F8C  L_0 = __this->get_U3CButtonStateU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_mE89BB8F302DF31EE202251F4746859285860B6B6_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get_value_0();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_gshared_inline (Nullable_1_t0D03270832B3FFDDC0E7C2D89D4A0EA25376A1EB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15Microsoft_MixedReality_Toolkit_Services_InputSimulation1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_mB664E2C41CADA8413EF8842E6601B8C696A7CE15_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
