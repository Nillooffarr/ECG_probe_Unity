#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct InterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};

// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration
struct ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB;
// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager
struct ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD;
// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Quaternion>
struct IElasticSystem_1_tC4A5D59B462B7700E208F9FFF3205DDD0A12CFB7;
// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Vector3>
struct IElasticSystem_1_t9A39D2BA58EDC4AFE4123A812DA35B79FE6B7728;
// Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler
struct BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2;
// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE;
// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable
struct BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03;
// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F;
// Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData
struct HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69;
// Microsoft.MixedReality.Toolkit.Input.ICursorModifier
struct ICursorModifier_tDE9922B058ED50BEA8696DA85B1548D40B879493;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController
struct IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor
struct IMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler
struct IMixedRealityFocusHandler_t5437E688850A82CF30CBB00C70F476568C7AC7A5;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource
struct IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource[]
struct IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971;
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer
struct IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53;
// Microsoft.MixedReality.Toolkit.Input.IPointerResult
struct IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278;
// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>
struct InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5;
// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector3>
struct InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D;
// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940;
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E;
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable[]
struct NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD;
// Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableSurface
struct NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0;
// Microsoft.MixedReality.Toolkit.Input.PokePointer
struct PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18;
// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.TrackingState>
struct SourcePoseEventData_1_tB0375F43F33B46CEA5D6000C5D4568E11AE9F590;
// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141;
// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Quaternion>
struct SourcePoseEventData_1_tD410360A48B6B0AE8038633AA1162438C43932B8;
// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Vector2>
struct SourcePoseEventData_1_t430F7C5A3C56DD25E51A5E6F637258FD7EE65A33;
// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Vector3>
struct SourcePoseEventData_1_t4E368D6217C6DB36C64907D93C386DBD7181E438;
// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8;
// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer
struct IBaseRayStabilizer_t000C7DD2EF1C8945F60CEE682C1643C59EA020CD;
// Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic
struct ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50;
// Microsoft.MixedReality.Toolkit.Physics.RayStep[]
struct RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8;
// Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic
struct TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2;
// Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic
struct TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172;
// Microsoft.MixedReality.Toolkit.UI.ConstraintManager
struct ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781;
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent
struct ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26;
// Microsoft.MixedReality.Toolkit.UI.ManipulationEventData
struct ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29;
// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint
struct MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F;
// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint
struct MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B;
// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator
struct ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40;
// Microsoft.MixedReality.Toolkit.UI.PanUnityEvent
struct PanUnityEvent_t576F4F1E310A2B14DA15D75B9277BB98A6E81AF6;
// Microsoft.MixedReality.Toolkit.UI.PinchSlider
struct PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C;
// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls
struct PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028;
// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner
struct PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7;
// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16
struct U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB;
// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17
struct U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868;
// Microsoft.MixedReality.Toolkit.UI.PressableButton
struct PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1;
// Microsoft.MixedReality.Toolkit.UI.SliderEvent
struct SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF;
// Microsoft.MixedReality.Toolkit.UI.SliderEventData
struct SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C;
// Microsoft.MixedReality.Toolkit.UI.TransformConstraint
struct TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C;
// Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter
struct SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE;
// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection
struct GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4;
// Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic
struct ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299;
// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight
struct ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F;
// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight/LightSettings
struct LightSettings_t374A3978CEBC9BFA16B8336623E760D4F59BD107;
// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight[]
struct ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD;
// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432;
// Microsoft.MixedReality.Toolkit.Utilities.WaitForUpdate
struct WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B;
// System.Action
struct Action_t591D2A86165F896B4B800BB5C25CE18672A55579;
// System.Action`1<Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection>
struct Action_1_tA52C815DBCC271D58DD715D9119E8FADD0789DB4;
// System.Action`1<System.Object>
struct Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0;
// System.ArgumentOutOfRangeException
struct ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2/Entry<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>[]
struct EntryU5BU5D_t20CC89BDD1C9F82CCF9AD4EED3BEEA2DA9FE2153;
// System.Collections.Generic.Dictionary`2/Entry<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>[]
struct EntryU5BU5D_tD94BD347743FC17AB3358184E3FD6241187C3E95;
// System.Collections.Generic.Dictionary`2/KeyCollection<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>
struct KeyCollection_tB49414C03F9EEA9992253F2123AA6D1601D14852;
// System.Collections.Generic.Dictionary`2/KeyCollection<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct KeyCollection_tED8060DA6A5512BC0FCF8C672F059461057C954F;
// System.Collections.Generic.Dictionary`2/ValueCollection<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>
struct ValueCollection_t684550AAC253F84EA7B5D6B66A0CDE7BF76ABB74;
// System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9;
// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>
struct Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464;
// System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.Tasks.Task>
struct Dictionary_2_t70161CFEB8DA3C79E19E31D0ED948D3C2925095F;
// System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>
struct Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878;
// System.Collections.Generic.Dictionary`2<System.String,System.String>
struct Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC;
// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F;
// System.Collections.Generic.IEnumerable`1<Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct IEnumerable_1_tE3EA85E9FFF22B580214316F30B586C4045FFC12;
// System.Collections.Generic.IEqualityComparer`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController>
struct IEqualityComparer_1_tAAAF3681567B6F264703A0E15FC97E88BBF520D3;
// System.Collections.Generic.IEqualityComparer`1<System.UInt32>
struct IEqualityComparer_1_t8D13638D3E8C85B2BF37618A54F8C19DD8DF2523;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct List_1_t74E48C60E247472C3845D62B1372777193ED6D09;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer>
struct List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.TransformConstraint>
struct List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Utilities.ObjectCollectionNode>
struct List_1_t7D6E0A1B3973E8AC2D2A398241BE620D8F10E9FE;
// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Utilities.ProximityLight>
struct List_1_t4DDB24C2DBD7F8DD39F6A10D457D98B74CD5919A;
// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D;
// System.Collections.IDictionary
struct IDictionary_t1BD5C1546718A374EA8122FBD6C6EE45331E8CE7;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196;
// System.Exception
struct Exception_t;
// System.Func`1<System.Threading.Tasks.Task/ContingentProperties>
struct Func_1_t48C2978A48CE3F2F6EB5B6DE269D00746483BB1F;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.IntPtr[]
struct IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Predicate`1<System.Object>
struct Predicate_1_t4AA10EFD4C5497CA1CD0FE35A6AF5990FF5D0979;
// System.Predicate`1<System.Threading.Tasks.Task>
struct Predicate_1_tF4286C34BB184CE5690FDCEBA7F09FC68D229335;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Runtime.CompilerServices.IAsyncStateMachine
struct IAsyncStateMachine_tEFDFBE18E061A6065AB2FF735F1425FB59F919BC;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Threading.ContextCallback
struct ContextCallback_t8AE8A965AC6C7ECD396F527F15CDC8E683BE1676;
// System.Threading.SynchronizationContext
struct SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7;
// System.Threading.Tasks.StackGuard
struct StackGuard_tE431ED3BBD1A18705FEE6F948EBF7FA2E99D64A9;
// System.Threading.Tasks.Task
struct Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2;
// System.Threading.Tasks.Task/ContingentProperties
struct ContingentProperties_t7149A27D01507C74E8BDAAA3848B45D2644FDF08;
// System.Threading.Tasks.TaskFactory
struct TaskFactory_tF3C6D983390ACFB40B4979E225368F78006D6155;
// System.Threading.Tasks.TaskScheduler
struct TaskScheduler_t966F2798F198FA90A0DA8EFC92BAC08297793114;
// System.Threading.Tasks.Task`1<System.Threading.Tasks.VoidTaskResult>
struct Task_1_t1359D75350E9D976BFA28AD96E417450DE277673;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF;
// UnityEngine.Collider[]
struct ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252;
// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621;
// UnityEngine.EventSystems.BaseRaycaster
struct BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F;
// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.HandPanEventData>
struct UnityEvent_1_t79EBB1A568834D5983F856843EDDF4B8EC7D5033;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.ManipulationEventData>
struct UnityEvent_1_tFE32718C2D85520135189F951A3C74E7766E1330;
// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.SliderEventData>
struct UnityEvent_1_tA8F75AF3945C0A4BD85C05EB2E7E55BDFFE94DE5;
// UnityEngine.Events.UnityEvent`1<System.Object>
struct UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D;
// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F;
// UnityEngine.LayerMask[]
struct LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D;
// UnityEngine.Mesh
struct Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429;
// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0;
// UnityEngine.Rigidbody
struct Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
// UnityEngine.Vector4[]
struct Vector4U5BU5D_t51402C154FFFCF7217A9BEC4B834F0B726C10F66;
// UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_Async[];
IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK[];
IL2CPP_EXTERN_C RuntimeClass* ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Assert_t124AD7D2277A352FA54D1E6AAF8AFD5992FD39EC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Exception_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t74E48C60E247472C3845D62B1372777193ED6D09_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral0D27C9C7626DF39667CC96249CE84C8FFB003C3A;
IL2CPP_EXTERN_C String_t* _stringLiteral53FAF79EF2441A5938D371142211A4FEFEC53CD9;
IL2CPP_EXTERN_C String_t* _stringLiteral56DD023AB0BC249AEA78AA316BD62F042FCBA77A;
IL2CPP_EXTERN_C String_t* _stringLiteral644C976130D56A4A52962FBC90C8EA6194A50DF4;
IL2CPP_EXTERN_C String_t* _stringLiteral6B7DF468D376A96FE4F69E74ABBCB655A1118A80;
IL2CPP_EXTERN_C String_t* _stringLiteral94D3B83DC69E89CBAA3242AC31983A99C843A351;
IL2CPP_EXTERN_C String_t* _stringLiteral9D76A407F560F0C80A487533F9E7C07AC5AFCCCB;
IL2CPP_EXTERN_C String_t* _stringLiteral9F559FF9A8E13289187429C6E3C8AB4172A71128;
IL2CPP_EXTERN_C const RuntimeMethod* AsyncTaskMethodBuilder_AwaitOnCompleted_TisSimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m716DC9960E36A5812253AF7D23CB8B81EE7AA8E1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AsyncTaskMethodBuilder_Start_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m33CF64D86791D39E95A7A9C84CE5C28813920070_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AsyncVoidMethodBuilder_AwaitUnsafeOnCompleted_TisTaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m1AE09BCF8BFEFD584002656B3B366B30D3330570_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* AsyncVoidMethodBuilder_Start_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m100596A3EB59A0538697AC868F63CA0EF3634415_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisNearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0_m5D1FF954F59BC4FDE0F6AAC0A4A77E686771771D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentsInChildren_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m0EAEDF94A7ED1678BDEAECC06B498FB9FBA280E6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m480AE7AA5182821F55308BC4A8D1E80C674D0434_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Add_m54469B6D64C15CF6B859A0A7DEFB39A0351B33F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Clear_m84CB183AE77233CC31FF3B7B79C667B2BF6F302A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Clear_mAD74413C5E561E2314E39854F01AD7391F6C33B4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_GetEnumerator_m70D9D6966D6841CC1781795FDACE68E79665518E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_mA2871E196E054502D7EBF852037B6619C3E4401E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_Remove_mA9A238AFB8FB365E35C5B8F80D49CBE7B157A26C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m2219CC6B4DF5EDDC0C34EFC5A84893BFDCCB2041_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2__ctor_m76FCE8DD849EAC0BC38426280427DE68F860E51C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Count_m78E2DE480413AF6EE8EB3006B4065AF38E0234C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Item_mFBE56D7101B648C2AD5C76E33DBE4E1DF9D97875_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Dictionary_2_set_Item_m25245EC06ACEF489BBDD0EFE80B485AA39F8E78A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerable_First_TisPointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_m89A13A7E828690671B7F9464D7F0B56218391FC7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m6C2F8400E251DF11AE3893B9FF0DCB0A9C447ECC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mB34B0E1E152876F8FC913C2BBF18CB5F9BA01217_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m9DFAAD33679F4782E51C9414618305A9A38C5E0A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mC00EA5818B17D0255C1CDAFFF2BF2A5B49011A80_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisGridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4_mE86F5C2AB5CD50711C1600A28E4A4BE75B12F100_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponentsInChildren_TisProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_mFB7C6A37DF0B47AF47C680BC769E9146CB2748F6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_m7CE41DE5F70BD19965A75CC4AB1BF0F50B829D98_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_mA14FAE0D9F17BE95224D4C6B4A717086A350C8C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mAC7F377FC00749E98D997CB913D6AF547F56F769_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m214870E1012EB144761CC52D6F6AAC2AEEC33532_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Remove_mC1DB35F985B1E0BF0158F3E5519E5C620654E0E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m53489CC19A10DC6F7A732FB60152B290AB934BE1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m30A79D2B92893FC561D87B7D9DDB83DF1C9B7E94_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_ApplyConstraint_m47DAC098B542AC947E7C414386EC4B70E807A10A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_Initialize_m3E99833609D66366129B9FBD128168AA2B7D2C8A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint__ctor_m3EA21AD79D566289683B9A14B9DCF2D3B1E721D8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_get_ConstraintType_m923651DF4A3C4FA6D9D52A4435FCED57E363BE7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_get_RelativeToInitialState_m91ADB98ECB02E4D7966032883F23F4DFD7878B37_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_get_ScaleMaximum_m13143A12C20422F0221A6A8617229F92C8A18FE9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_get_ScaleMinimum_mC26392D3DDCB3E39CA474E5B6BF5CA1063088AED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_set_RelativeToInitialState_m9A2830E49B96C933799E82E23A1FF793F47A30C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_set_ScaleMaximum_m63D0ED899DF9AAC2187B1991F7585F4925E4DFD6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MinMaxScaleConstraint_set_ScaleMinimum_mCF4B4B808EB77CB3628F077B991A786AC3D17F9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveAxisConstraint_ApplyConstraint_m929D2B3AE794C9DB1E39720FC012426E7B571C35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveAxisConstraint__ctor_m5E3DB1708D211D01BE356689DB83AC9EE5FA372E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveAxisConstraint_get_ConstraintOnMovement_m8A528FA62E51C0437E27285358F970CF176FD7C5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveAxisConstraint_get_ConstraintType_mD484F36521D0609BDE3BD51F51B88BAFF3C1D74C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveAxisConstraint_get_UseLocalSpaceForConstraint_m5C8E144F4FFFDAD3D2563361B65B1B4668C69B82_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveAxisConstraint_set_ConstraintOnMovement_m9142968D6F42BCB7A3EBE3301EF690BD7DC6C17B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MoveAxisConstraint_set_UseLocalSpaceForConstraint_m9E51F3E2CA67ED347400FCE4811C741240097E25_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1__ctor_m89465509FD2DFCB2D3544A0595BB690F1404AB66_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m243C0A419A326DF7FEB2FEB2F3A4C8FC6CC12A7A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_HasValue_mC29B4C7196AADFA83B949CC2581AA1CBC5B29865_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Nullable_1_get_Value_m5BAA188D62913A4DECBEFF69D3237AF278432752_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_Awake_m4717ED74FB7D3169EFE48F8E1B21345719C4B67E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_ForceEndManipulation_mB0E5E3E064F57364D7A3BD878DE5D3F437BC9974_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_GetPointerGrabPoint_mF9D06F61012B20CC8A61DC9FB9CC025E5836A1BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_HandleOneHandMoveUpdated_m453177B65388DD02BDBE00161EE5CA3C50A4B68B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_HandleTwoHandManipulationStarted_mA35767E1B86018C080646E74E48E314D8FF142C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_HandleTwoHandManipulationUpdated_m0E67F096C31B8526903359F6C61B66AEA70CE960_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnBeforeFocusChange_m560D9AE6999B37AB59565178816E07890742E723_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnFocusChanged_m327A6ED1273C31321D50D2F6AB5B4022106D6265_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnPointerClicked_m72DBDCD293671904E997AA2A891AE9C555839F1C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnPointerDown_m622518952E73070FC22E3B71AED84931B4EF4AB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnPointerDragged_m6FDD81888D79E78046EDA3FB19FB27A4A5356B79_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnPointerUp_m502682BA04082F1FF6FF7F6D7C6E48808294CCFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnSourceDetected_m875E8F5675F532FE39C229B67E2A8CBE87C9D3A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnSourceLost_m6F771F2B5B07B15396CD19A799408C99EABDD51F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnSourcePoseChanged_m364320D37454D39AC37C151096142FA9AFA611C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnSourcePoseChanged_m3C599D93502F9BBF0525DEEDB2B35C5198A0371C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnSourcePoseChanged_m4EBA76A8516B9D3FF4AD275EFDAADCEA5B677ECE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnSourcePoseChanged_m671EB060D1196BDC62597A9F7E00A473FC6CDB69_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_OnSourcePoseChanged_m8132B2B3BBD8E936B0202F236615A9CFD2233F29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_ReleaseRigidBody_m6C4C5F0BF5F3236D22F4B25C933B8FA97F56232D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_Start_mDC2A0E0BB6A694344090CEB22B506B7B8723EFB2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator__ctor_mA91A753105F66C64765FEA3A353A764748D9DEC0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_ConstraintsManager_mDC372CBEF83D7E502344C8E3F829B57DE4568B06_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_ElasticsManager_m09D0545BC27590E5AC9C681DA742EBB170BCF56E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_ManipulationType_mD8C0FC3EF3E9BCBC3D3539F9407B2CDC67582422_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_MoveLerpTime_mD8F5C86BBEBE4E4E8472D8AB50765962DC11F0AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_OneHandRotationModeFar_m6C5084C932AEEE899816E1669DF6942CB5D9106D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_OneHandRotationModeNear_m1418822D9BC857D4A005CB22FEA98CE187624F61_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_ReleaseBehavior_m805C9392CADAEAF75C487B3F087245E454156E70_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_RotateLerpTime_mFA1A7E3D84B241F9058317D6AE2C2F2466341381_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_ScaleLerpTime_m11FC32B43850A00156B9C5F737C63FED864BDE16_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_SmoothingActive_mABEAA6012D2C1360A4A65E1A01BBEEFC12ED2CE9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_SmoothingFar_m38F8C0E1A37028F129983179D70240374F54BBB9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_SmoothingNear_m4E6D5E3AA489FD2B348D3021161E0C3336FE5AE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_TwoHandedManipulationType_m3955F80C07A7FA62C0F74D41BE6B6FBCF038D191_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_get_UseForcesForNearManipulation_mE78F832EAB033C458DCAD51FAE38498B1D9F5D41_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_AllowFarManipulation_m20B813EE205B9AB354902D6E2CEC625BA35A9FB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_ConstraintsManager_m7AAE84B7D2F3BE5560B516E71854525E2C76E9B7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_ElasticsManager_m90622E038419A1EE98ADCCDA05B11D6478140759_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_EnableConstraints_mD1E67FCF924CCAE462E4C229E33CECC90475E4BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_HostTransform_m63F5A9D0E7DD697F0C764204D58666815705F799_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_ManipulationType_m9B97FE9C0B4EB4FD5658EE7F838BF7261AB991A7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_MoveLerpTime_mBC0C783E5FE7B00528ED75D50DD5194EAF263378_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_OnHoverEntered_m8ED10E6AC40F39A07AEC3BFAFD1538BDE12B8E10_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_OnHoverExited_m6D6B07D204D67A910988E54E8507DDFC4A193EFD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_OnManipulationEnded_m8D045F48764772F64959369F128C82BD723978C8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_OnManipulationStarted_m50EA36717BC1A209704F6463DE18CB5C0BAAE137_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_OneHandRotationModeFar_mADD49886EEB00FDE995B8126E4DFB12445D87152_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_OneHandRotationModeNear_mA12B01FBCBDCAE8FFF22EC43F5E930575D77F4D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_ReleaseBehavior_m3616DDDA5116EC83FD190AE08FDAE8C41D66F285_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_RotateLerpTime_m1A34D54E32F830524DE795D8AE0D2DFEAF357429_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_ScaleLerpTime_mCA6323F12CF357C1B89EBF9200545F5D4FA917D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_SmoothingActive_m89F89601F20B6848D40DD47A91A6A49BA42BA87C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_SmoothingFar_mC8AA424DACFDD1D09A565B2A1FB90A9F17A5295D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_SmoothingNear_m1BB112F51B58ACDDB0FBF973D65D5E4D1E674BF9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_TwoHandedManipulationType_mA94FE3FE40A3D0B826C2847987F3C7DA5B24E90E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ObjectManipulator_set_UseForcesForNearManipulation_mFDB5E40E3320C5E03C67D500AA3E5CF06F885A64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PanUnityEvent__ctor_m59D10679D1C26FD4DC6F7C1C37804F04A942F463_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_InitializeStepDivisions_mC63E8145E9FF4C7894C51EFC66D489C2B33E2CD2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnDisable_m6B97A4A749CF70CAE446DFB4543DB11D2FC8C581_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnFocusEnter_m2300A8FC5C1553B35A1AFDCDB757F638693C3BB7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnFocusExit_m023CBC70BDD6FA6F2C13A79FBECBBFA3589B3035_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnPointerClicked_m6EBCC7EE55E1713CFFC7F1D8613EAF98488E35EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnPointerDown_mD677D654D4A6E1AA9160D5EC03C07C5BA33676FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnPointerDragged_m85A8AB7F1BC871E39692D9510AF3B8DA1F755560_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnPointerUp_mED760D3F0106E6C04520DADBA787D185DD2B2FD6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnTouchCompleted_mE6F32408342DF091032307A9EB4626F61072BBD7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnTouchStarted_m91992FCC9906EA380D6395C94EC4C12C7A86007F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnTouchUpdated_m5A015377DB7569EDF549627A377B4C8F77A5ABA2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_OnValidate_mDF9E46A319529830972FD60D9A58F0E13F5F6DDA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_Start_m4BE0499EB373783E1234D43B4875C819C6823E50_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_UpdateVisualsOrientation_m1EEE9683EC7443D7FF8FB21903345462D85F89F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider__ctor_mA3314E097B50883E4649DFF4E838714EF49DB20F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_CurrentSliderAxis_mD079B37B6BAD3AA9000538A23A5240B4A1EDB524_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_IsTouchable_mD56C75437B7175DCD19A4143699DBD5F9CD38562_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_PreviousSliderAxis_m10CE18867811ADE200F346104C30FB8E89C1C6E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SliderEndDistance_m2C65BC89B90F58F00BC463C7812CF06C60A4FE09_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SliderStartDistance_mF613AFDA142D3D34FFD8902E8C0708C879A656FB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SliderStepDivisions_mF26274B324DE21B57B34ADFD6EA71A9610DA146B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SliderValue_mBBD36F5E24DCE7F6FE869F0F60BA4594983E0E17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_SnapToPosition_m84E85515252482BA2C0CB0D6C7045041735DB27A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_ThumbCollider_m6F9A1DF39053663A8DB2E231D48510536C4992C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_ThumbRoot_m62AEDD6354A9A3BF5AE45574B3B730C4C17E895B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_TouchCollider_m937DE891453111FEE84B558254E22C3BC33D7C35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_UseSliderStepDivisions_mEDD7A104041FF32573C3E97B5DA1621EE7A97722_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_CurrentSliderAxis_m2BFE9ED9C96A107D321C96A3F5C2599FC606B2CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_IsTouchable_m4E1DAEECD1D523541F4DD0B26C1246211F29F237_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_PreviousSliderAxis_m27919E84E9D56615BFCBBADCD64BEA01AF63A82E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_SliderEndDistance_m6E5898EFEA5CD39E528CE47061BB5484904722D6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_SliderEndPosition_mE1D6A37FE94B16C890D7833CC2CEB70881507DB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_SliderStartDistance_mFC430215869889F726D4ED957FBED4840EE54321_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_SliderStartPosition_m56EC29C72154ACDCAC465101CD2A63D42F350841_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_SliderStepDivisions_m56A3BF0C2B3ACF36C406FB5B682EDE3F735D9DA7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_SnapToPosition_m88095ABBB4A5E21BF64EDBF97058EE642F9DBE9E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_ThumbCollider_m7FC75EE0744ACA28DE5043FADF44BE168124D8C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_ThumbRoot_mAD9C82F544DABB6C317071BBC3B4A2F79662C72D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_ThumbVisuals_mD379D3ED7020818D69420ADC3F13249F2585CE58_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_TickMarks_m154A6CD1D851AE3277E2C95D0E83E789A438FBA4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_TouchCollider_mF638A10669CF7AE7C3DDF670DF25EDBCEAF19961_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_TrackVisuals_m359351F1BD6DD0D4BA927B8FB4332A69EAE53ECE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PinchSlider_set_UseSliderStepDivisions_m32B42A580DA2452CFE04E410B47070BAE18186EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetControllerRayEnabled_mCB9E864F4469251907A670E9D58A1DD750C065BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetFingerOnly_mBD13B3D1727C3F03BCA0B8D8CE12AD57338187E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetGazeEnabled_m2DC36E0FF8FC82C800B26FFB6832B904044F13AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetGrabEnabled_m176936B62AD1B880E7860EF191685B8FF483850E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetHandRayEnabled_mF677459FBE11C9D68830C129FF6C61DBD407DFD6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetHoloLens1_m135313D5D4FD1C8FBE3F6D5B557F03DA4A96033C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetHoloLens2_m4655C680C359B6F0B2425624D6210442F5039580_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetPokeEnabled_mEAE3E8C0929AA0EDD31419F17ACC87E248BC30AB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_SetVR_m7B7F2D919353E504F292427293B5706C5C4ADA9A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_ToggleControllerRayEnabled_mA95B1D1C92DAC2A7F5A587674091A6F4DA2FE941_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_ToggleHandGrabEnabled_m86D08EC7E2B367835C34D594DC7CBD97E02394D0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_ToggleHandPokeEnabled_m4ABA7E09DDF7C5B805606C007E31B8133B892383_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_ToggleHandRayEnabled_mE89C194484777775DC12A9BCAE41F3DA68ACC258_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_TogglePointerEnabled_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_mD70F211A89851FE7596980E2A210F053D4D0BA54_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_TogglePointerEnabled_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_mAA514B4401282B92B4D1A0167F65CAB4717F1465_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls_TogglePointerEnabled_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mF52869F99912D417BF9040C27010CDD342C2AA90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerBehaviorControls__ctor_mF5663BBC18344B4A869FFD402CD20A52FC450EEF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_HandleFocusEnter_m618E1E62E5F07BFBD8A07B97023398C8C1541B21_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_HandleFocusExit_m41F074106A7F8E92191D5BFE4609B2766307B296_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_HandleTap_mA9ABDED6FED2E895B1E40D1EE14FA45133ED5420_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_HasVanishDelayElapsed_m8CEED241162D9D6718453AED25F0B7B20488E133_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandlerU3CSystem_SingleU3E_OnInputChanged_mC61D331A956EA13E6B17D903812557E0955DD64B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputDown_m98AF587F4AA84D33F4DE7292BA7089FE9AD65185_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputUp_m4824D932F03688F18568D6A4097EBBB4F7DA0EDB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_OnFocusEnter_mBF22CC893DA95E5DF685C3421BCA97D40A42029C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_OnFocusExit_mCF88A32187EBD5682F1263AB46CADA331267FAC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_SpawnableActivated_mA170AF7A1D4BE52E7D509A6F6E89DE0DE6967289_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner_UpdateSpawnable_m2C199EF2FC62A0ED22B8104D303DDA0B7581602E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PrefabSpawner__ctor_mF8A94FAD73BB8E7FE58737FEFDD338332C5D4960_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_GetFarthestDistanceAlongPressDirection_m0505BE444BEBF3FAA2BABF301FA6AF5F723A2846_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_GetLocalPositionAlongPushDirection_mA98FE628589D4F47B28B71B4E929C15453B2D8F3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_GetWorldPositionAlongPushDirection_m595769BB4510FC482EBBF1A967DFB883B6B06846_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_HasPassedThroughStartPlane_m0BA017A9988AD256A41D9E3088D99A2CFC26DD7E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_m1F059F2EF836458C098C464099D0390E7F5DDFAD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m9093FA6580377E368B06A71F6281F9307D7677B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_mDCF8FAE53349EC1D5E4F8DE7C0BE6C1126249196_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_OnDisable_mA76273FF023905FD2D7B82280BD1C99B1263D4C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_OnEnable_m84A50284CE66DAFEB3347BE9AB1A70C35A1F67C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_PulseProximityLight_m1EBDFA4D807318B0B7A2CC516E68E0606A92F4E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_RetractButton_mE4499A700141447BFBFB22BC8477C6F77A1E85C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_Start_mC07A27216DD34C5DB31EE59C18C3963344AF1820_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_UpdateMovingVisualsPosition_m38AB0C37B8CD3F70CF263E7606AA915D6B3CA531_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_Update_mF258E83A995C348D26E568D58672F9648648DF6E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton__ctor_m53F686FF1D9988CFB22048A7F7D102D59E36C85B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_CurrentPushDistance_m1A1E7FD5999A04DDE0ABC8C2F1D55ED3F5554594_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_DistanceSpaceMode_m13A16C24520327F8959AECD4D1779AAC6BC1FFDB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_EnforceFrontPush_mE66AFE773FCC4393ECB0CA1B33C5D3066118960C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_InitialLocalPosition_m8D225ECB8F5146925F94C5C587C8984DF38F9506_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_LocalSpacePressDirection_mD89D464FE64A8BA09D8E41AF37A942CE14260E3F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_MaxPushDistance_mC4D857945B9E6DA93D55966A5C2E6870B42995C9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_PressDistance_m2100E845747CC9564DE98C1E979543340A1D9B93_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_PushSpaceSourceParentPosition_mE92CCDF7D2B6694AC32920B3896264E6966691D6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_ReleaseDistanceDelta_mBA3B4ED7A07CAF0AB2E328E2A87E1C80FACD87F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_ReleaseOnTouchEnd_m51468F01E46EE321AA2EC8F57C359E93D47E3D71_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_CurrentPushDistance_m769268C30F6DB65470C70F9ECBF483FB379BDA89_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_DistanceSpaceMode_m5C54C67B4905BA0A9E80CCA024A66D3396C41679_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_EnforceFrontPush_mA01C51284BD2A4EED6CBCD9B9575F2C1926DC7E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_MaxPushDistance_m468B8A68FB6A387165DC11312369D2D2F625AE66_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_PressDistance_mB6BBD2846A2606B099CF61BC24189E78CC99BE8C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_ReleaseDistanceDelta_mFB32B05CE78BBFE66095B2C270789D97C04683DB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_ReleaseOnTouchEnd_m9CD20BD9693A00888666A64A898AFF75AA1102E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* PressableButton_set_StartPushDistance_m4E414245B5B7889A4676A146E063F3C1E361ADD3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CShowSpawnableU3Ed__16_MoveNext_m2F0068AF016A3A794C835B2493384C89CC6A12D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CShowSpawnableU3Ed__16_SetStateMachine_mCC292B486A7795382E344075247498196755CBE4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CShowSpawnableU3Ed__16__ctor_m82B6494BA2C9CA525D43CE0070E02E7ED0CE7B39_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CUpdateSpawnableU3Ed__17_MoveNext_mBFDB331E6650BA7ED03288645C605FA01BAE1646_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CUpdateSpawnableU3Ed__17_SetStateMachine_mC42136A7213855D1C3F98E4B79D9E08433F2D97A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CUpdateSpawnableU3Ed__17__ctor_mFA3382E64598FD0B170FE41A9D8B25F740D54FBD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_1__ctor_m0F9361EECA2A2045CBB750F03F51F25EAF1481E0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* AppearType_t6C8C594CEB57AD15329A4025520F4A1A9CB46604_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* DefaultTransformSmoothingLogic_t9242FF33F5EDB13226C032ADED70BC6E64EED2E0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Exception_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputEventData_1_tB7CFFF4084649FE066002BB179F7CC250E6A8968_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* LayoutOrder_tEEB3CE75A90E480BA984ADC4632861C017D51C0A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* RotateInOneHandType_tA9771B352C02CEEE41B8A02E0A95C0DBB587E840_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SliderAxis_t739DEAA212ACD61A043DDA20236AEF0D9D0536B2_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SourcePoseEventData_1_t9D3B7EB9E933AEA1E1A0B4EC495DA02BCCAC0304_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* TransformFlags_t1BFF9FDB164FC56111295BAD00B86A5DFFD62CFC_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VanishType_t7A6303A03FEA843D20BCE8C46BB034D3EC3C3C97_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_m9DFAAD33679F4782E51C9414618305A9A38C5E0AMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_mA14FAE0D9F17BE95224D4C6B4A717086A350C8C9Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBCMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0CMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_ApplyConstraint_m47DAC098B542AC947E7C414386EC4B70E807A10A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_Initialize_m3E99833609D66366129B9FBD128168AA2B7D2C8A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint__ctor_m3EA21AD79D566289683B9A14B9DCF2D3B1E721D8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_get_ConstraintType_m923651DF4A3C4FA6D9D52A4435FCED57E363BE7B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_get_RelativeToInitialState_m91ADB98ECB02E4D7966032883F23F4DFD7878B37_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_get_ScaleMaximum_m13143A12C20422F0221A6A8617229F92C8A18FE9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_get_ScaleMinimum_mC26392D3DDCB3E39CA474E5B6BF5CA1063088AED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_set_RelativeToInitialState_m9A2830E49B96C933799E82E23A1FF793F47A30C5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_set_ScaleMaximum_m63D0ED899DF9AAC2187B1991F7585F4925E4DFD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MinMaxScaleConstraint_set_ScaleMinimum_mCF4B4B808EB77CB3628F077B991A786AC3D17F9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0DMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveAxisConstraint_ApplyConstraint_m929D2B3AE794C9DB1E39720FC012426E7B571C35_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveAxisConstraint__ctor_m5E3DB1708D211D01BE356689DB83AC9EE5FA372E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveAxisConstraint_get_ConstraintOnMovement_m8A528FA62E51C0437E27285358F970CF176FD7C5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveAxisConstraint_get_ConstraintType_mD484F36521D0609BDE3BD51F51B88BAFF3C1D74C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveAxisConstraint_get_UseLocalSpaceForConstraint_m5C8E144F4FFFDAD3D2563361B65B1B4668C69B82_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveAxisConstraint_set_ConstraintOnMovement_m9142968D6F42BCB7A3EBE3301EF690BD7DC6C17B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t MoveAxisConstraint_set_UseLocalSpaceForConstraint_m9E51F3E2CA67ED347400FCE4811C741240097E25_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EBMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m243C0A419A326DF7FEB2FEB2F3A4C8FC6CC12A7AMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4FMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_Awake_m4717ED74FB7D3169EFE48F8E1B21345719C4B67E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_ForceEndManipulation_mB0E5E3E064F57364D7A3BD878DE5D3F437BC9974_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_GetPointerGrabPoint_mF9D06F61012B20CC8A61DC9FB9CC025E5836A1BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_HandleOneHandMoveUpdated_m453177B65388DD02BDBE00161EE5CA3C50A4B68B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_HandleTwoHandManipulationStarted_mA35767E1B86018C080646E74E48E314D8FF142C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_HandleTwoHandManipulationUpdated_m0E67F096C31B8526903359F6C61B66AEA70CE960_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnBeforeFocusChange_m560D9AE6999B37AB59565178816E07890742E723_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnFocusChanged_m327A6ED1273C31321D50D2F6AB5B4022106D6265_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnPointerClicked_m72DBDCD293671904E997AA2A891AE9C555839F1C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnPointerDown_m622518952E73070FC22E3B71AED84931B4EF4AB7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnPointerDragged_m6FDD81888D79E78046EDA3FB19FB27A4A5356B79_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnPointerUp_m502682BA04082F1FF6FF7F6D7C6E48808294CCFE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnSourceDetected_m875E8F5675F532FE39C229B67E2A8CBE87C9D3A9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnSourceLost_m6F771F2B5B07B15396CD19A799408C99EABDD51F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnSourcePoseChanged_m364320D37454D39AC37C151096142FA9AFA611C7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnSourcePoseChanged_m3C599D93502F9BBF0525DEEDB2B35C5198A0371C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnSourcePoseChanged_m4EBA76A8516B9D3FF4AD275EFDAADCEA5B677ECE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnSourcePoseChanged_m671EB060D1196BDC62597A9F7E00A473FC6CDB69_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_OnSourcePoseChanged_m8132B2B3BBD8E936B0202F236615A9CFD2233F29_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_ReleaseRigidBody_m6C4C5F0BF5F3236D22F4B25C933B8FA97F56232D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_Start_mDC2A0E0BB6A694344090CEB22B506B7B8723EFB2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator__ctor_mA91A753105F66C64765FEA3A353A764748D9DEC0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_ConstraintsManager_mDC372CBEF83D7E502344C8E3F829B57DE4568B06_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_ElasticsManager_m09D0545BC27590E5AC9C681DA742EBB170BCF56E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95DMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_ManipulationType_mD8C0FC3EF3E9BCBC3D3539F9407B2CDC67582422_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_MoveLerpTime_mD8F5C86BBEBE4E4E8472D8AB50765962DC11F0AA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEFMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OneHandRotationModeFar_m6C5084C932AEEE899816E1669DF6942CB5D9106D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_OneHandRotationModeNear_m1418822D9BC857D4A005CB22FEA98CE187624F61_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_ReleaseBehavior_m805C9392CADAEAF75C487B3F087245E454156E70_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_RotateLerpTime_mFA1A7E3D84B241F9058317D6AE2C2F2466341381_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_ScaleLerpTime_m11FC32B43850A00156B9C5F737C63FED864BDE16_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_SmoothingActive_mABEAA6012D2C1360A4A65E1A01BBEEFC12ED2CE9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_SmoothingFar_m38F8C0E1A37028F129983179D70240374F54BBB9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_SmoothingNear_m4E6D5E3AA489FD2B348D3021161E0C3336FE5AE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_TwoHandedManipulationType_m3955F80C07A7FA62C0F74D41BE6B6FBCF038D191_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_get_UseForcesForNearManipulation_mE78F832EAB033C458DCAD51FAE38498B1D9F5D41_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_AllowFarManipulation_m20B813EE205B9AB354902D6E2CEC625BA35A9FB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_ConstraintsManager_m7AAE84B7D2F3BE5560B516E71854525E2C76E9B7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_ElasticsManager_m90622E038419A1EE98ADCCDA05B11D6478140759_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_EnableConstraints_mD1E67FCF924CCAE462E4C229E33CECC90475E4BF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_HostTransform_m63F5A9D0E7DD697F0C764204D58666815705F799_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_ManipulationType_m9B97FE9C0B4EB4FD5658EE7F838BF7261AB991A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_MoveLerpTime_mBC0C783E5FE7B00528ED75D50DD5194EAF263378_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_OnHoverEntered_m8ED10E6AC40F39A07AEC3BFAFD1538BDE12B8E10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_OnHoverExited_m6D6B07D204D67A910988E54E8507DDFC4A193EFD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_OnManipulationEnded_m8D045F48764772F64959369F128C82BD723978C8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_OnManipulationStarted_m50EA36717BC1A209704F6463DE18CB5C0BAAE137_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_OneHandRotationModeFar_mADD49886EEB00FDE995B8126E4DFB12445D87152_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_OneHandRotationModeNear_mA12B01FBCBDCAE8FFF22EC43F5E930575D77F4D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_ReleaseBehavior_m3616DDDA5116EC83FD190AE08FDAE8C41D66F285_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_RotateLerpTime_m1A34D54E32F830524DE795D8AE0D2DFEAF357429_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_ScaleLerpTime_mCA6323F12CF357C1B89EBF9200545F5D4FA917D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_SmoothingActive_m89F89601F20B6848D40DD47A91A6A49BA42BA87C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_SmoothingFar_mC8AA424DACFDD1D09A565B2A1FB90A9F17A5295D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_SmoothingNear_m1BB112F51B58ACDDB0FBF973D65D5E4D1E674BF9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_TwoHandedManipulationType_mA94FE3FE40A3D0B826C2847987F3C7DA5B24E90E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ObjectManipulator_set_UseForcesForNearManipulation_mFDB5E40E3320C5E03C67D500AA3E5CF06F885A64_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PanUnityEvent__ctor_m59D10679D1C26FD4DC6F7C1C37804F04A942F463_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_InitializeStepDivisions_mC63E8145E9FF4C7894C51EFC66D489C2B33E2CD2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnDisable_m6B97A4A749CF70CAE446DFB4543DB11D2FC8C581_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnFocusEnter_m2300A8FC5C1553B35A1AFDCDB757F638693C3BB7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnFocusExit_m023CBC70BDD6FA6F2C13A79FBECBBFA3589B3035_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnPointerClicked_m6EBCC7EE55E1713CFFC7F1D8613EAF98488E35EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnPointerDown_mD677D654D4A6E1AA9160D5EC03C07C5BA33676FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnPointerDragged_m85A8AB7F1BC871E39692D9510AF3B8DA1F755560_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnPointerUp_mED760D3F0106E6C04520DADBA787D185DD2B2FD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnTouchCompleted_mE6F32408342DF091032307A9EB4626F61072BBD7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnTouchStarted_m91992FCC9906EA380D6395C94EC4C12C7A86007F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnTouchUpdated_m5A015377DB7569EDF549627A377B4C8F77A5ABA2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_OnValidate_mDF9E46A319529830972FD60D9A58F0E13F5F6DDA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_Start_m4BE0499EB373783E1234D43B4875C819C6823E50_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_UpdateVisualsOrientation_m1EEE9683EC7443D7FF8FB21903345462D85F89F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider__ctor_mA3314E097B50883E4649DFF4E838714EF49DB20F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_CurrentSliderAxis_mD079B37B6BAD3AA9000538A23A5240B4A1EDB524_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_IsTouchable_mD56C75437B7175DCD19A4143699DBD5F9CD38562_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_PreviousSliderAxis_m10CE18867811ADE200F346104C30FB8E89C1C6E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SliderEndDistance_m2C65BC89B90F58F00BC463C7812CF06C60A4FE09_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SliderStartDistance_mF613AFDA142D3D34FFD8902E8C0708C879A656FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SliderStepDivisions_mF26274B324DE21B57B34ADFD6EA71A9610DA146B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SliderValue_mBBD36F5E24DCE7F6FE869F0F60BA4594983E0E17_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_SnapToPosition_m84E85515252482BA2C0CB0D6C7045041735DB27A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3EMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_ThumbCollider_m6F9A1DF39053663A8DB2E231D48510536C4992C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_ThumbRoot_m62AEDD6354A9A3BF5AE45574B3B730C4C17E895B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_TouchCollider_m937DE891453111FEE84B558254E22C3BC33D7C35_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_UseSliderStepDivisions_mEDD7A104041FF32573C3E97B5DA1621EE7A97722_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633FMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_CurrentSliderAxis_m2BFE9ED9C96A107D321C96A3F5C2599FC606B2CB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_IsTouchable_m4E1DAEECD1D523541F4DD0B26C1246211F29F237_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_PreviousSliderAxis_m27919E84E9D56615BFCBBADCD64BEA01AF63A82E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_SliderEndDistance_m6E5898EFEA5CD39E528CE47061BB5484904722D6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_SliderEndPosition_mE1D6A37FE94B16C890D7833CC2CEB70881507DB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_SliderStartDistance_mFC430215869889F726D4ED957FBED4840EE54321_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_SliderStartPosition_m56EC29C72154ACDCAC465101CD2A63D42F350841_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_SliderStepDivisions_m56A3BF0C2B3ACF36C406FB5B682EDE3F735D9DA7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_SnapToPosition_m88095ABBB4A5E21BF64EDBF97058EE642F9DBE9E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAEMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_ThumbCollider_m7FC75EE0744ACA28DE5043FADF44BE168124D8C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_ThumbRoot_mAD9C82F544DABB6C317071BBC3B4A2F79662C72D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_ThumbVisuals_mD379D3ED7020818D69420ADC3F13249F2585CE58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_TickMarks_m154A6CD1D851AE3277E2C95D0E83E789A438FBA4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_TouchCollider_mF638A10669CF7AE7C3DDF670DF25EDBCEAF19961_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_TrackVisuals_m359351F1BD6DD0D4BA927B8FB4332A69EAE53ECE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PinchSlider_set_UseSliderStepDivisions_m32B42A580DA2452CFE04E410B47070BAE18186EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetControllerRayEnabled_mCB9E864F4469251907A670E9D58A1DD750C065BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetFingerOnly_mBD13B3D1727C3F03BCA0B8D8CE12AD57338187E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetGazeEnabled_m2DC36E0FF8FC82C800B26FFB6832B904044F13AD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetGrabEnabled_m176936B62AD1B880E7860EF191685B8FF483850E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetHandRayEnabled_mF677459FBE11C9D68830C129FF6C61DBD407DFD6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetHoloLens1_m135313D5D4FD1C8FBE3F6D5B557F03DA4A96033C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetHoloLens2_m4655C680C359B6F0B2425624D6210442F5039580_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetPokeEnabled_mEAE3E8C0929AA0EDD31419F17ACC87E248BC30AB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_SetVR_m7B7F2D919353E504F292427293B5706C5C4ADA9A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_ToggleControllerRayEnabled_mA95B1D1C92DAC2A7F5A587674091A6F4DA2FE941_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_ToggleHandGrabEnabled_m86D08EC7E2B367835C34D594DC7CBD97E02394D0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_ToggleHandPokeEnabled_m4ABA7E09DDF7C5B805606C007E31B8133B892383_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls_ToggleHandRayEnabled_mE89C194484777775DC12A9BCAE41F3DA68ACC258_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerBehaviorControls__ctor_mF5663BBC18344B4A869FFD402CD20A52FC450EEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7DMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_HandleFocusEnter_m618E1E62E5F07BFBD8A07B97023398C8C1541B21_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_HandleFocusExit_m41F074106A7F8E92191D5BFE4609B2766307B296_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_HandleTap_mA9ABDED6FED2E895B1E40D1EE14FA45133ED5420_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_HasVanishDelayElapsed_m8CEED241162D9D6718453AED25F0B7B20488E133_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandlerU3CSystem_SingleU3E_OnInputChanged_mC61D331A956EA13E6B17D903812557E0955DD64B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputDown_m98AF587F4AA84D33F4DE7292BA7089FE9AD65185_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputUp_m4824D932F03688F18568D6A4097EBBB4F7DA0EDB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_OnFocusEnter_mBF22CC893DA95E5DF685C3421BCA97D40A42029C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_OnFocusExit_mCF88A32187EBD5682F1263AB46CADA331267FAC3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_SpawnableActivated_mA170AF7A1D4BE52E7D509A6F6E89DE0DE6967289_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner_UpdateSpawnable_m2C199EF2FC62A0ED22B8104D303DDA0B7581602E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PrefabSpawner__ctor_mF8A94FAD73BB8E7FE58737FEFDD338332C5D4960_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_GetFarthestDistanceAlongPressDirection_m0505BE444BEBF3FAA2BABF301FA6AF5F723A2846_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_GetLocalPositionAlongPushDirection_mA98FE628589D4F47B28B71B4E929C15453B2D8F3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_GetWorldPositionAlongPushDirection_m595769BB4510FC482EBBF1A967DFB883B6B06846_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_HasPassedThroughStartPlane_m0BA017A9988AD256A41D9E3088D99A2CFC26DD7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_m1F059F2EF836458C098C464099D0390E7F5DDFAD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m9093FA6580377E368B06A71F6281F9307D7677B6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_mDCF8FAE53349EC1D5E4F8DE7C0BE6C1126249196_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_OnDisable_mA76273FF023905FD2D7B82280BD1C99B1263D4C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_OnEnable_m84A50284CE66DAFEB3347BE9AB1A70C35A1F67C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_PulseProximityLight_m1EBDFA4D807318B0B7A2CC516E68E0606A92F4E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_RetractButton_mE4499A700141447BFBFB22BC8477C6F77A1E85C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_Start_mC07A27216DD34C5DB31EE59C18C3963344AF1820_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_UpdateMovingVisualsPosition_m38AB0C37B8CD3F70CF263E7606AA915D6B3CA531_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_Update_mF258E83A995C348D26E568D58672F9648648DF6E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton__ctor_m53F686FF1D9988CFB22048A7F7D102D59E36C85B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_CurrentPushDistance_m1A1E7FD5999A04DDE0ABC8C2F1D55ED3F5554594_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_DistanceSpaceMode_m13A16C24520327F8959AECD4D1779AAC6BC1FFDB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_EnforceFrontPush_mE66AFE773FCC4393ECB0CA1B33C5D3066118960C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_InitialLocalPosition_m8D225ECB8F5146925F94C5C587C8984DF38F9506_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EAMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFAMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_LocalSpacePressDirection_mD89D464FE64A8BA09D8E41AF37A942CE14260E3F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_MaxPushDistance_mC4D857945B9E6DA93D55966A5C2E6870B42995C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_PressDistance_m2100E845747CC9564DE98C1E979543340A1D9B93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_PushSpaceSourceParentPosition_mE92CCDF7D2B6694AC32920B3896264E6966691D6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_ReleaseDistanceDelta_mBA3B4ED7A07CAF0AB2E328E2A87E1C80FACD87F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_ReleaseOnTouchEnd_m51468F01E46EE321AA2EC8F57C359E93D47E3D71_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92CMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_CurrentPushDistance_m769268C30F6DB65470C70F9ECBF483FB379BDA89_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_DistanceSpaceMode_m5C54C67B4905BA0A9E80CCA024A66D3396C41679_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_EnforceFrontPush_mA01C51284BD2A4EED6CBCD9B9575F2C1926DC7E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DABMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_MaxPushDistance_m468B8A68FB6A387165DC11312369D2D2F625AE66_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_PressDistance_mB6BBD2846A2606B099CF61BC24189E78CC99BE8C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_ReleaseDistanceDelta_mFB32B05CE78BBFE66095B2C270789D97C04683DB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_ReleaseOnTouchEnd_m9CD20BD9693A00888666A64A898AFF75AA1102E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t PressableButton_set_StartPushDistance_m4E414245B5B7889A4676A146E063F3C1E361ADD3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CShowSpawnableU3Ed__16_MoveNext_m2F0068AF016A3A794C835B2493384C89CC6A12D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CShowSpawnableU3Ed__16_SetStateMachine_mCC292B486A7795382E344075247498196755CBE4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CShowSpawnableU3Ed__16__ctor_m82B6494BA2C9CA525D43CE0070E02E7ED0CE7B39_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CUpdateSpawnableU3Ed__17_MoveNext_mBFDB331E6650BA7ED03288645C605FA01BAE1646_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CUpdateSpawnableU3Ed__17_SetStateMachine_mC42136A7213855D1C3F98E4B79D9E08433F2D97A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t U3CUpdateSpawnableU3Ed__17__ctor_mFA3382E64598FD0B170FE41A9D8B25F740D54FBD_MetadataUsageId;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 ;

struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778;
struct NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD;
struct ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD;
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object


// Microsoft.MixedReality.Toolkit.UI.SliderEventData
struct SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C  : public RuntimeObject
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.UI.SliderEventData::<OldValue>k__BackingField
	float ___U3COldValueU3Ek__BackingField_0;
	// System.Single Microsoft.MixedReality.Toolkit.UI.SliderEventData::<NewValue>k__BackingField
	float ___U3CNewValueU3Ek__BackingField_1;
	// Microsoft.MixedReality.Toolkit.UI.PinchSlider Microsoft.MixedReality.Toolkit.UI.SliderEventData::<Slider>k__BackingField
	PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * ___U3CSliderU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.SliderEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_3;

public:
	inline static int32_t get_offset_of_U3COldValueU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C, ___U3COldValueU3Ek__BackingField_0)); }
	inline float get_U3COldValueU3Ek__BackingField_0() const { return ___U3COldValueU3Ek__BackingField_0; }
	inline float* get_address_of_U3COldValueU3Ek__BackingField_0() { return &___U3COldValueU3Ek__BackingField_0; }
	inline void set_U3COldValueU3Ek__BackingField_0(float value)
	{
		___U3COldValueU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CNewValueU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C, ___U3CNewValueU3Ek__BackingField_1)); }
	inline float get_U3CNewValueU3Ek__BackingField_1() const { return ___U3CNewValueU3Ek__BackingField_1; }
	inline float* get_address_of_U3CNewValueU3Ek__BackingField_1() { return &___U3CNewValueU3Ek__BackingField_1; }
	inline void set_U3CNewValueU3Ek__BackingField_1(float value)
	{
		___U3CNewValueU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CSliderU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C, ___U3CSliderU3Ek__BackingField_2)); }
	inline PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * get_U3CSliderU3Ek__BackingField_2() const { return ___U3CSliderU3Ek__BackingField_2; }
	inline PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C ** get_address_of_U3CSliderU3Ek__BackingField_2() { return &___U3CSliderU3Ek__BackingField_2; }
	inline void set_U3CSliderU3Ek__BackingField_2(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * value)
	{
		___U3CSliderU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CSliderU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C, ___U3CPointerU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_3() const { return ___U3CPointerU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_3() { return &___U3CPointerU3Ek__BackingField_3; }
	inline void set_U3CPointerU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_3), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter
struct SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE  : public RuntimeObject
{
public:
	// System.Exception Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter::exception
	Exception_t * ___exception_0;
	// System.Action Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter::continuation
	Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * ___continuation_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter::<IsCompleted>k__BackingField
	bool ___U3CIsCompletedU3Ek__BackingField_2;

public:
	inline static int32_t get_offset_of_exception_0() { return static_cast<int32_t>(offsetof(SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE, ___exception_0)); }
	inline Exception_t * get_exception_0() const { return ___exception_0; }
	inline Exception_t ** get_address_of_exception_0() { return &___exception_0; }
	inline void set_exception_0(Exception_t * value)
	{
		___exception_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___exception_0), (void*)value);
	}

	inline static int32_t get_offset_of_continuation_1() { return static_cast<int32_t>(offsetof(SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE, ___continuation_1)); }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * get_continuation_1() const { return ___continuation_1; }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 ** get_address_of_continuation_1() { return &___continuation_1; }
	inline void set_continuation_1(Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * value)
	{
		___continuation_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___continuation_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsCompletedU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE, ___U3CIsCompletedU3Ek__BackingField_2)); }
	inline bool get_U3CIsCompletedU3Ek__BackingField_2() const { return ___U3CIsCompletedU3Ek__BackingField_2; }
	inline bool* get_address_of_U3CIsCompletedU3Ek__BackingField_2() { return &___U3CIsCompletedU3Ek__BackingField_2; }
	inline void set_U3CIsCompletedU3Ek__BackingField_2(bool value)
	{
		___U3CIsCompletedU3Ek__BackingField_2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.SystemType
struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432  : public RuntimeObject
{
public:
	// System.String Microsoft.MixedReality.Toolkit.Utilities.SystemType::reference
	String_t* ___reference_0;
	// System.Type Microsoft.MixedReality.Toolkit.Utilities.SystemType::type
	Type_t * ___type_1;

public:
	inline static int32_t get_offset_of_reference_0() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432, ___reference_0)); }
	inline String_t* get_reference_0() const { return ___reference_0; }
	inline String_t** get_address_of_reference_0() { return &___reference_0; }
	inline void set_reference_0(String_t* value)
	{
		___reference_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___reference_0), (void*)value);
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432, ___type_1)); }
	inline Type_t * get_type_1() const { return ___type_1; }
	inline Type_t ** get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(Type_t * value)
	{
		___type_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___type_1), (void*)value);
	}
};

struct SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_StaticFields
{
public:
	// System.Collections.Generic.Dictionary`2<System.String,System.String> Microsoft.MixedReality.Toolkit.Utilities.SystemType::ReferenceMappings
	Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * ___ReferenceMappings_2;

public:
	inline static int32_t get_offset_of_ReferenceMappings_2() { return static_cast<int32_t>(offsetof(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_StaticFields, ___ReferenceMappings_2)); }
	inline Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * get_ReferenceMappings_2() const { return ___ReferenceMappings_2; }
	inline Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC ** get_address_of_ReferenceMappings_2() { return &___ReferenceMappings_2; }
	inline void set_ReferenceMappings_2(Dictionary_2_t931BF283048C4E74FC063C3036E5F3FE328861FC * value)
	{
		___ReferenceMappings_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ReferenceMappings_2), (void*)value);
	}
};

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9  : public RuntimeObject
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/ValueCollection::dictionary
	Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * ___dictionary_0;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9, ___dictionary_0)); }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>
struct Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_t20CC89BDD1C9F82CCF9AD4EED3BEEA2DA9FE2153* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_tB49414C03F9EEA9992253F2123AA6D1601D14852 * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_t684550AAC253F84EA7B5D6B66A0CDE7BF76ABB74 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___entries_1)); }
	inline EntryU5BU5D_t20CC89BDD1C9F82CCF9AD4EED3BEEA2DA9FE2153* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_t20CC89BDD1C9F82CCF9AD4EED3BEEA2DA9FE2153** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_t20CC89BDD1C9F82CCF9AD4EED3BEEA2DA9FE2153* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___keys_7)); }
	inline KeyCollection_tB49414C03F9EEA9992253F2123AA6D1601D14852 * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_tB49414C03F9EEA9992253F2123AA6D1601D14852 ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_tB49414C03F9EEA9992253F2123AA6D1601D14852 * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ___values_8)); }
	inline ValueCollection_t684550AAC253F84EA7B5D6B66A0CDE7BF76ABB74 * get_values_8() const { return ___values_8; }
	inline ValueCollection_t684550AAC253F84EA7B5D6B66A0CDE7BF76ABB74 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_t684550AAC253F84EA7B5D6B66A0CDE7BF76ABB74 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F  : public RuntimeObject
{
public:
	// System.Int32[] System.Collections.Generic.Dictionary`2::buckets
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___buckets_0;
	// System.Collections.Generic.Dictionary`2/Entry<TKey,TValue>[] System.Collections.Generic.Dictionary`2::entries
	EntryU5BU5D_tD94BD347743FC17AB3358184E3FD6241187C3E95* ___entries_1;
	// System.Int32 System.Collections.Generic.Dictionary`2::count
	int32_t ___count_2;
	// System.Int32 System.Collections.Generic.Dictionary`2::version
	int32_t ___version_3;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeList
	int32_t ___freeList_4;
	// System.Int32 System.Collections.Generic.Dictionary`2::freeCount
	int32_t ___freeCount_5;
	// System.Collections.Generic.IEqualityComparer`1<TKey> System.Collections.Generic.Dictionary`2::comparer
	RuntimeObject* ___comparer_6;
	// System.Collections.Generic.Dictionary`2/KeyCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::keys
	KeyCollection_tED8060DA6A5512BC0FCF8C672F059461057C954F * ___keys_7;
	// System.Collections.Generic.Dictionary`2/ValueCollection<TKey,TValue> System.Collections.Generic.Dictionary`2::values
	ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * ___values_8;
	// System.Object System.Collections.Generic.Dictionary`2::_syncRoot
	RuntimeObject * ____syncRoot_9;

public:
	inline static int32_t get_offset_of_buckets_0() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___buckets_0)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_buckets_0() const { return ___buckets_0; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_buckets_0() { return &___buckets_0; }
	inline void set_buckets_0(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___buckets_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___buckets_0), (void*)value);
	}

	inline static int32_t get_offset_of_entries_1() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___entries_1)); }
	inline EntryU5BU5D_tD94BD347743FC17AB3358184E3FD6241187C3E95* get_entries_1() const { return ___entries_1; }
	inline EntryU5BU5D_tD94BD347743FC17AB3358184E3FD6241187C3E95** get_address_of_entries_1() { return &___entries_1; }
	inline void set_entries_1(EntryU5BU5D_tD94BD347743FC17AB3358184E3FD6241187C3E95* value)
	{
		___entries_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___entries_1), (void*)value);
	}

	inline static int32_t get_offset_of_count_2() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___count_2)); }
	inline int32_t get_count_2() const { return ___count_2; }
	inline int32_t* get_address_of_count_2() { return &___count_2; }
	inline void set_count_2(int32_t value)
	{
		___count_2 = value;
	}

	inline static int32_t get_offset_of_version_3() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___version_3)); }
	inline int32_t get_version_3() const { return ___version_3; }
	inline int32_t* get_address_of_version_3() { return &___version_3; }
	inline void set_version_3(int32_t value)
	{
		___version_3 = value;
	}

	inline static int32_t get_offset_of_freeList_4() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___freeList_4)); }
	inline int32_t get_freeList_4() const { return ___freeList_4; }
	inline int32_t* get_address_of_freeList_4() { return &___freeList_4; }
	inline void set_freeList_4(int32_t value)
	{
		___freeList_4 = value;
	}

	inline static int32_t get_offset_of_freeCount_5() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___freeCount_5)); }
	inline int32_t get_freeCount_5() const { return ___freeCount_5; }
	inline int32_t* get_address_of_freeCount_5() { return &___freeCount_5; }
	inline void set_freeCount_5(int32_t value)
	{
		___freeCount_5 = value;
	}

	inline static int32_t get_offset_of_comparer_6() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___comparer_6)); }
	inline RuntimeObject* get_comparer_6() const { return ___comparer_6; }
	inline RuntimeObject** get_address_of_comparer_6() { return &___comparer_6; }
	inline void set_comparer_6(RuntimeObject* value)
	{
		___comparer_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___comparer_6), (void*)value);
	}

	inline static int32_t get_offset_of_keys_7() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___keys_7)); }
	inline KeyCollection_tED8060DA6A5512BC0FCF8C672F059461057C954F * get_keys_7() const { return ___keys_7; }
	inline KeyCollection_tED8060DA6A5512BC0FCF8C672F059461057C954F ** get_address_of_keys_7() { return &___keys_7; }
	inline void set_keys_7(KeyCollection_tED8060DA6A5512BC0FCF8C672F059461057C954F * value)
	{
		___keys_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___keys_7), (void*)value);
	}

	inline static int32_t get_offset_of_values_8() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ___values_8)); }
	inline ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * get_values_8() const { return ___values_8; }
	inline ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 ** get_address_of_values_8() { return &___values_8; }
	inline void set_values_8(ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * value)
	{
		___values_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___values_8), (void*)value);
	}

	inline static int32_t get_offset_of__syncRoot_9() { return static_cast<int32_t>(offsetof(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F, ____syncRoot_9)); }
	inline RuntimeObject * get__syncRoot_9() const { return ____syncRoot_9; }
	inline RuntimeObject ** get_address_of__syncRoot_9() { return &____syncRoot_9; }
	inline void set__syncRoot_9(RuntimeObject * value)
	{
		____syncRoot_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_9), (void*)value);
	}
};


// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>
struct List_1_t74E48C60E247472C3845D62B1372777193ED6D09  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____items_1)); }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* get__items_1() const { return ____items_1; }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t74E48C60E247472C3845D62B1372777193ED6D09_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t74E48C60E247472C3845D62B1372777193ED6D09_StaticFields, ____emptyArray_5)); }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* get__emptyArray_5() const { return ____emptyArray_5; }
	inline IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(IMixedRealityInputSourceU5BU5D_tD62D64590A6937FDA22CC0AA1DADF185D136F971* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____items_1)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__items_1() const { return ____items_1; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D_StaticFields, ____emptyArray_5)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// UnityEngine.CustomYieldInstruction
struct CustomYieldInstruction_t819BB0973AFF22766749FF087B8AEFEAF3C2CB7D  : public RuntimeObject
{
public:

public:
};


// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6  : public RuntimeObject
{
public:
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;

public:
	inline static int32_t get_offset_of_m_Used_0() { return static_cast<int32_t>(offsetof(AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6, ___m_Used_0)); }
	inline bool get_m_Used_0() const { return ___m_Used_0; }
	inline bool* get_address_of_m_Used_0() { return &___m_Used_0; }
	inline void set_m_Used_0(bool value)
	{
		___m_Used_0 = value;
	}
};


// UnityEngine.Events.UnityEventBase
struct UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5  : public RuntimeObject
{
public:
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;

public:
	inline static int32_t get_offset_of_m_Calls_0() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_Calls_0)); }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * get_m_Calls_0() const { return ___m_Calls_0; }
	inline InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F ** get_address_of_m_Calls_0() { return &___m_Calls_0; }
	inline void set_m_Calls_0(InvokableCallList_t18AA4F473C7B295216B7D4B9723B4F3DFCCC9A3F * value)
	{
		___m_Calls_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_Calls_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_PersistentCalls_1() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_PersistentCalls_1)); }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * get_m_PersistentCalls_1() const { return ___m_PersistentCalls_1; }
	inline PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F ** get_address_of_m_PersistentCalls_1() { return &___m_PersistentCalls_1; }
	inline void set_m_PersistentCalls_1(PersistentCallGroup_t6E5DF2EBDA42794B5FE0C6DAA97DF65F0BFF571F * value)
	{
		___m_PersistentCalls_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_PersistentCalls_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_CallsDirty_2() { return static_cast<int32_t>(offsetof(UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5, ___m_CallsDirty_2)); }
	inline bool get_m_CallsDirty_2() const { return ___m_CallsDirty_2; }
	inline bool* get_address_of_m_CallsDirty_2() { return &___m_CallsDirty_2; }
	inline void set_m_CallsDirty_2(bool value)
	{
		___m_CallsDirty_2 = value;
	}
};


// UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
};

// Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent
struct QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA 
{
public:
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent::SnapPoints
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___SnapPoints_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent::RepeatSnapPoints
	bool ___RepeatSnapPoints_1;
	// System.Single Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent::SnapRadius
	float ___SnapRadius_2;

public:
	inline static int32_t get_offset_of_SnapPoints_0() { return static_cast<int32_t>(offsetof(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA, ___SnapPoints_0)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_SnapPoints_0() const { return ___SnapPoints_0; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_SnapPoints_0() { return &___SnapPoints_0; }
	inline void set_SnapPoints_0(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___SnapPoints_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SnapPoints_0), (void*)value);
	}

	inline static int32_t get_offset_of_RepeatSnapPoints_1() { return static_cast<int32_t>(offsetof(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA, ___RepeatSnapPoints_1)); }
	inline bool get_RepeatSnapPoints_1() const { return ___RepeatSnapPoints_1; }
	inline bool* get_address_of_RepeatSnapPoints_1() { return &___RepeatSnapPoints_1; }
	inline void set_RepeatSnapPoints_1(bool value)
	{
		___RepeatSnapPoints_1 = value;
	}

	inline static int32_t get_offset_of_SnapRadius_2() { return static_cast<int32_t>(offsetof(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA, ___SnapRadius_2)); }
	inline float get_SnapRadius_2() const { return ___SnapRadius_2; }
	inline float* get_address_of_SnapRadius_2() { return &___SnapRadius_2; }
	inline void set_SnapRadius_2(float value)
	{
		___SnapRadius_2 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent
struct QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_0;
	int32_t ___RepeatSnapPoints_1;
	float ___SnapRadius_2;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent
struct QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_0;
	int32_t ___RepeatSnapPoints_1;
	float ___SnapRadius_2;
};

// Microsoft.MixedReality.Toolkit.Utilities.WaitForUpdate
struct WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B  : public CustomYieldInstruction_t819BB0973AFF22766749FF087B8AEFEAF3C2CB7D
{
public:

public:
};


// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.DateTime
struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 
{
public:
	// System.UInt64 System.DateTime::dateData
	uint64_t ___dateData_44;

public:
	inline static int32_t get_offset_of_dateData_44() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132, ___dateData_44)); }
	inline uint64_t get_dateData_44() const { return ___dateData_44; }
	inline uint64_t* get_address_of_dateData_44() { return &___dateData_44; }
	inline void set_dateData_44(uint64_t value)
	{
		___dateData_44 = value;
	}
};

struct DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields
{
public:
	// System.Int32[] System.DateTime::DaysToMonth365
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth365_29;
	// System.Int32[] System.DateTime::DaysToMonth366
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___DaysToMonth366_30;
	// System.DateTime System.DateTime::MinValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MinValue_31;
	// System.DateTime System.DateTime::MaxValue
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___MaxValue_32;

public:
	inline static int32_t get_offset_of_DaysToMonth365_29() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth365_29)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth365_29() const { return ___DaysToMonth365_29; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth365_29() { return &___DaysToMonth365_29; }
	inline void set_DaysToMonth365_29(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth365_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth365_29), (void*)value);
	}

	inline static int32_t get_offset_of_DaysToMonth366_30() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___DaysToMonth366_30)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_DaysToMonth366_30() const { return ___DaysToMonth366_30; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_DaysToMonth366_30() { return &___DaysToMonth366_30; }
	inline void set_DaysToMonth366_30(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___DaysToMonth366_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DaysToMonth366_30), (void*)value);
	}

	inline static int32_t get_offset_of_MinValue_31() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MinValue_31)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MinValue_31() const { return ___MinValue_31; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MinValue_31() { return &___MinValue_31; }
	inline void set_MinValue_31(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MinValue_31 = value;
	}

	inline static int32_t get_offset_of_MaxValue_32() { return static_cast<int32_t>(offsetof(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132_StaticFields, ___MaxValue_32)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_MaxValue_32() const { return ___MaxValue_32; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_MaxValue_32() { return &___MaxValue_32; }
	inline void set_MaxValue_32(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___MaxValue_32 = value;
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Runtime.CompilerServices.AsyncMethodBuilderCore
struct AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01 
{
public:
	// System.Runtime.CompilerServices.IAsyncStateMachine System.Runtime.CompilerServices.AsyncMethodBuilderCore::m_stateMachine
	RuntimeObject* ___m_stateMachine_0;
	// System.Action System.Runtime.CompilerServices.AsyncMethodBuilderCore::m_defaultContextAction
	Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * ___m_defaultContextAction_1;

public:
	inline static int32_t get_offset_of_m_stateMachine_0() { return static_cast<int32_t>(offsetof(AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01, ___m_stateMachine_0)); }
	inline RuntimeObject* get_m_stateMachine_0() const { return ___m_stateMachine_0; }
	inline RuntimeObject** get_address_of_m_stateMachine_0() { return &___m_stateMachine_0; }
	inline void set_m_stateMachine_0(RuntimeObject* value)
	{
		___m_stateMachine_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_stateMachine_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_defaultContextAction_1() { return static_cast<int32_t>(offsetof(AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01, ___m_defaultContextAction_1)); }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * get_m_defaultContextAction_1() const { return ___m_defaultContextAction_1; }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 ** get_address_of_m_defaultContextAction_1() { return &___m_defaultContextAction_1; }
	inline void set_m_defaultContextAction_1(Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * value)
	{
		___m_defaultContextAction_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_defaultContextAction_1), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Runtime.CompilerServices.AsyncMethodBuilderCore
struct AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_pinvoke
{
	RuntimeObject* ___m_stateMachine_0;
	Il2CppMethodPointer ___m_defaultContextAction_1;
};
// Native definition for COM marshalling of System.Runtime.CompilerServices.AsyncMethodBuilderCore
struct AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_com
{
	RuntimeObject* ___m_stateMachine_0;
	Il2CppMethodPointer ___m_defaultContextAction_1;
};

// System.Runtime.CompilerServices.TaskAwaiter
struct TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F 
{
public:
	// System.Threading.Tasks.Task System.Runtime.CompilerServices.TaskAwaiter::m_task
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_0;

public:
	inline static int32_t get_offset_of_m_task_0() { return static_cast<int32_t>(offsetof(TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F, ___m_task_0)); }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * get_m_task_0() const { return ___m_task_0; }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 ** get_address_of_m_task_0() { return &___m_task_0; }
	inline void set_m_task_0(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * value)
	{
		___m_task_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_task_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Runtime.CompilerServices.TaskAwaiter
struct TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_marshaled_pinvoke
{
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_0;
};
// Native definition for COM marshalling of System.Runtime.CompilerServices.TaskAwaiter
struct TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_marshaled_com
{
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_0;
};

// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5  : public AbstractEventData_t636F385820C291DAE25897BCEB4FBCADDA3B75F6
{
public:
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * ___m_EventSystem_1;

public:
	inline static int32_t get_offset_of_m_EventSystem_1() { return static_cast<int32_t>(offsetof(BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5, ___m_EventSystem_1)); }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * get_m_EventSystem_1() const { return ___m_EventSystem_1; }
	inline EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 ** get_address_of_m_EventSystem_1() { return &___m_EventSystem_1; }
	inline void set_m_EventSystem_1(EventSystem_t06ACEF1C8D95D44D3A7F57ED4BAA577101B4EA77 * value)
	{
		___m_EventSystem_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_EventSystem_1), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent
struct UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.HandPanEventData>
struct UnityEvent_1_t79EBB1A568834D5983F856843EDDF4B8EC7D5033  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_t79EBB1A568834D5983F856843EDDF4B8EC7D5033, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.ManipulationEventData>
struct UnityEvent_1_tFE32718C2D85520135189F951A3C74E7766E1330  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_tFE32718C2D85520135189F951A3C74E7766E1330, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.SliderEventData>
struct UnityEvent_1_tA8F75AF3945C0A4BD85C05EB2E7E55BDFFE94DE5  : public UnityEventBase_t6E0F7823762EE94BB8489B5AE41C7802A266D3D5
{
public:
	// System.Object[] UnityEngine.Events.UnityEvent`1::m_InvokeArray
	ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* ___m_InvokeArray_3;

public:
	inline static int32_t get_offset_of_m_InvokeArray_3() { return static_cast<int32_t>(offsetof(UnityEvent_1_tA8F75AF3945C0A4BD85C05EB2E7E55BDFFE94DE5, ___m_InvokeArray_3)); }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* get_m_InvokeArray_3() const { return ___m_InvokeArray_3; }
	inline ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A** get_address_of_m_InvokeArray_3() { return &___m_InvokeArray_3; }
	inline void set_m_InvokeArray_3(ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* value)
	{
		___m_InvokeArray_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_InvokeArray_3), (void*)value);
	}
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8  : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44
{
public:
	// System.Single UnityEngine.WaitForSeconds::m_Seconds
	float ___m_Seconds_0;

public:
	inline static int32_t get_offset_of_m_Seconds_0() { return static_cast<int32_t>(offsetof(WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8, ___m_Seconds_0)); }
	inline float get_m_Seconds_0() const { return ___m_Seconds_0; }
	inline float* get_address_of_m_Seconds_0() { return &___m_Seconds_0; }
	inline void set_m_Seconds_0(float value)
	{
		___m_Seconds_0 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_marshaled_pinvoke : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_pinvoke
{
	float ___m_Seconds_0;
};
// Native definition for COM marshalling of UnityEngine.WaitForSeconds
struct WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_marshaled_com : public YieldInstruction_t836035AC7BD07A3C7909F7AD2A5B42DE99D91C44_marshaled_com
{
	float ___m_Seconds_0;
};

// Microsoft.MixedReality.Toolkit.Input.FocusEventData
struct FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<OldFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3COldFocusedObjectU3Ek__BackingField_3;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::<NewFocusedObject>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CNewFocusedObjectU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CPointerU3Ek__BackingField_2)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_2() const { return ___U3CPointerU3Ek__BackingField_2; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_2() { return &___U3CPointerU3Ek__BackingField_2; }
	inline void set_U3CPointerU3Ek__BackingField_2(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3COldFocusedObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3COldFocusedObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3COldFocusedObjectU3Ek__BackingField_3() const { return ___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3COldFocusedObjectU3Ek__BackingField_3() { return &___U3COldFocusedObjectU3Ek__BackingField_3; }
	inline void set_U3COldFocusedObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3COldFocusedObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3COldFocusedObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F, ___U3CNewFocusedObjectU3Ek__BackingField_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CNewFocusedObjectU3Ek__BackingField_4() const { return ___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CNewFocusedObjectU3Ek__BackingField_4() { return &___U3CNewFocusedObjectU3Ek__BackingField_4; }
	inline void set_U3CNewFocusedObjectU3Ek__BackingField_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CNewFocusedObjectU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CNewFocusedObjectU3Ek__BackingField_4), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSourceType
struct InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.InputSourceType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InputSourceType_t7E93B54E969B1ADEFA7692E15D26DD751A47D22A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::point
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::normal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::barycentricCoordinate
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	// System.Single Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::distance
	float ___distance_3;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::triangleIndex
	int32_t ___triangleIndex_4;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::textureCoord2
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::transform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::lightmapCoord
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::raycastValid
	bool ___raycastValid_9;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit::collider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;

public:
	inline static int32_t get_offset_of_point_0() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___point_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_point_0() const { return ___point_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_point_0() { return &___point_0; }
	inline void set_point_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___point_0 = value;
	}

	inline static int32_t get_offset_of_normal_1() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___normal_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_normal_1() const { return ___normal_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_normal_1() { return &___normal_1; }
	inline void set_normal_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___normal_1 = value;
	}

	inline static int32_t get_offset_of_barycentricCoordinate_2() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___barycentricCoordinate_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_barycentricCoordinate_2() const { return ___barycentricCoordinate_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_barycentricCoordinate_2() { return &___barycentricCoordinate_2; }
	inline void set_barycentricCoordinate_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___barycentricCoordinate_2 = value;
	}

	inline static int32_t get_offset_of_distance_3() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___distance_3)); }
	inline float get_distance_3() const { return ___distance_3; }
	inline float* get_address_of_distance_3() { return &___distance_3; }
	inline void set_distance_3(float value)
	{
		___distance_3 = value;
	}

	inline static int32_t get_offset_of_triangleIndex_4() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___triangleIndex_4)); }
	inline int32_t get_triangleIndex_4() const { return ___triangleIndex_4; }
	inline int32_t* get_address_of_triangleIndex_4() { return &___triangleIndex_4; }
	inline void set_triangleIndex_4(int32_t value)
	{
		___triangleIndex_4 = value;
	}

	inline static int32_t get_offset_of_textureCoord_5() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord_5() const { return ___textureCoord_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord_5() { return &___textureCoord_5; }
	inline void set_textureCoord_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord_5 = value;
	}

	inline static int32_t get_offset_of_textureCoord2_6() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___textureCoord2_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_textureCoord2_6() const { return ___textureCoord2_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_textureCoord2_6() { return &___textureCoord2_6; }
	inline void set_textureCoord2_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___textureCoord2_6 = value;
	}

	inline static int32_t get_offset_of_transform_7() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___transform_7)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_transform_7() const { return ___transform_7; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_transform_7() { return &___transform_7; }
	inline void set_transform_7(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___transform_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transform_7), (void*)value);
	}

	inline static int32_t get_offset_of_lightmapCoord_8() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___lightmapCoord_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_lightmapCoord_8() const { return ___lightmapCoord_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_lightmapCoord_8() { return &___lightmapCoord_8; }
	inline void set_lightmapCoord_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___lightmapCoord_8 = value;
	}

	inline static int32_t get_offset_of_raycastValid_9() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___raycastValid_9)); }
	inline bool get_raycastValid_9() const { return ___raycastValid_9; }
	inline bool* get_address_of_raycastValid_9() { return &___raycastValid_9; }
	inline void set_raycastValid_9(bool value)
	{
		___raycastValid_9 = value;
	}

	inline static int32_t get_offset_of_collider_10() { return static_cast<int32_t>(offsetof(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A, ___collider_10)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_collider_10() const { return ___collider_10; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_collider_10() { return &___collider_10; }
	inline void set_collider_10(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___collider_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___collider_10), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit
struct MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___normal_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___barycentricCoordinate_2;
	float ___distance_3;
	int32_t ___triangleIndex_4;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord_5;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___textureCoord2_6;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform_7;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lightmapCoord_8;
	int32_t ___raycastValid_9;
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___collider_10;
};

// Microsoft.MixedReality.Toolkit.Input.PointerBehavior
struct PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PointerBehavior::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(PointerBehavior_tC6ECF84FA7BCDF4DC7E0F92ACFA54D0A4B2B8D4C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.TouchableEventType
struct TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.TouchableEventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TouchableEventType_tB03E410CDDC86FEA645BC51320DB9C1806141AF2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic
struct ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50  : public RuntimeObject
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::pointerRefDistance
	float ___pointerRefDistance_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::pointerPosIndependentOfHead
	bool ___pointerPosIndependentOfHead_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::pointerLocalGrabPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerLocalGrabPoint_2;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::objectLocalGrabPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___objectLocalGrabPoint_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::grabToObject
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___grabToObject_4;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::objectLocalAttachPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___objectLocalAttachPoint_5;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::attachToObject
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___attachToObject_6;

public:
	inline static int32_t get_offset_of_pointerRefDistance_0() { return static_cast<int32_t>(offsetof(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50, ___pointerRefDistance_0)); }
	inline float get_pointerRefDistance_0() const { return ___pointerRefDistance_0; }
	inline float* get_address_of_pointerRefDistance_0() { return &___pointerRefDistance_0; }
	inline void set_pointerRefDistance_0(float value)
	{
		___pointerRefDistance_0 = value;
	}

	inline static int32_t get_offset_of_pointerPosIndependentOfHead_1() { return static_cast<int32_t>(offsetof(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50, ___pointerPosIndependentOfHead_1)); }
	inline bool get_pointerPosIndependentOfHead_1() const { return ___pointerPosIndependentOfHead_1; }
	inline bool* get_address_of_pointerPosIndependentOfHead_1() { return &___pointerPosIndependentOfHead_1; }
	inline void set_pointerPosIndependentOfHead_1(bool value)
	{
		___pointerPosIndependentOfHead_1 = value;
	}

	inline static int32_t get_offset_of_pointerLocalGrabPoint_2() { return static_cast<int32_t>(offsetof(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50, ___pointerLocalGrabPoint_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pointerLocalGrabPoint_2() const { return ___pointerLocalGrabPoint_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pointerLocalGrabPoint_2() { return &___pointerLocalGrabPoint_2; }
	inline void set_pointerLocalGrabPoint_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pointerLocalGrabPoint_2 = value;
	}

	inline static int32_t get_offset_of_objectLocalGrabPoint_3() { return static_cast<int32_t>(offsetof(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50, ___objectLocalGrabPoint_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_objectLocalGrabPoint_3() const { return ___objectLocalGrabPoint_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_objectLocalGrabPoint_3() { return &___objectLocalGrabPoint_3; }
	inline void set_objectLocalGrabPoint_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___objectLocalGrabPoint_3 = value;
	}

	inline static int32_t get_offset_of_grabToObject_4() { return static_cast<int32_t>(offsetof(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50, ___grabToObject_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_grabToObject_4() const { return ___grabToObject_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_grabToObject_4() { return &___grabToObject_4; }
	inline void set_grabToObject_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___grabToObject_4 = value;
	}

	inline static int32_t get_offset_of_objectLocalAttachPoint_5() { return static_cast<int32_t>(offsetof(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50, ___objectLocalAttachPoint_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_objectLocalAttachPoint_5() const { return ___objectLocalAttachPoint_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_objectLocalAttachPoint_5() { return &___objectLocalAttachPoint_5; }
	inline void set_objectLocalAttachPoint_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___objectLocalAttachPoint_5 = value;
	}

	inline static int32_t get_offset_of_attachToObject_6() { return static_cast<int32_t>(offsetof(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50, ___attachToObject_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_attachToObject_6() const { return ___attachToObject_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_attachToObject_6() { return &___attachToObject_6; }
	inline void set_attachToObject_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___attachToObject_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType
struct SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Physics.SceneQueryType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SceneQueryType_t3A84FBB8135D4A121DDF1E93FA4AA08BF6C80229, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic
struct TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2  : public RuntimeObject
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic::startHandlebar
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___startHandlebar_0;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic::startRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___startRotation_1;

public:
	inline static int32_t get_offset_of_startHandlebar_0() { return static_cast<int32_t>(offsetof(TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2, ___startHandlebar_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_startHandlebar_0() const { return ___startHandlebar_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_startHandlebar_0() { return &___startHandlebar_0; }
	inline void set_startHandlebar_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___startHandlebar_0 = value;
	}

	inline static int32_t get_offset_of_startRotation_1() { return static_cast<int32_t>(offsetof(TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2, ___startRotation_1)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_startRotation_1() const { return ___startRotation_1; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_startRotation_1() { return &___startRotation_1; }
	inline void set_startRotation_1(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___startRotation_1 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic
struct TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172  : public RuntimeObject
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic::startObjectScale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___startObjectScale_0;
	// System.Single Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic::startHandDistanceMeters
	float ___startHandDistanceMeters_1;

public:
	inline static int32_t get_offset_of_startObjectScale_0() { return static_cast<int32_t>(offsetof(TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172, ___startObjectScale_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_startObjectScale_0() const { return ___startObjectScale_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_startObjectScale_0() { return &___startObjectScale_0; }
	inline void set_startObjectScale_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___startObjectScale_0 = value;
	}

	inline static int32_t get_offset_of_startHandDistanceMeters_1() { return static_cast<int32_t>(offsetof(TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172, ___startHandDistanceMeters_1)); }
	inline float get_startHandDistanceMeters_1() const { return ___startHandDistanceMeters_1; }
	inline float* get_address_of_startHandDistanceMeters_1() { return &___startHandDistanceMeters_1; }
	inline void set_startHandDistanceMeters_1(float value)
	{
		___startHandDistanceMeters_1 = value;
	}
};


// Microsoft.MixedReality.Toolkit.TrackingState
struct TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.TrackingState::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TrackingState_tA4B3C624DF9D6B518A15D682BA0207573D1611EA, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent
struct ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26  : public UnityEvent_1_tFE32718C2D85520135189F951A3C74E7766E1330
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.ManipulationEventData
struct ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29  : public RuntimeObject
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::<ManipulationSource>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CManipulationSourceU3Ek__BackingField_0;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_1;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::<IsNearInteraction>k__BackingField
	bool ___U3CIsNearInteractionU3Ek__BackingField_2;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::<PointerCentroid>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointerCentroidU3Ek__BackingField_3;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::<PointerVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointerVelocityU3Ek__BackingField_4;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::<PointerAngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointerAngularVelocityU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CManipulationSourceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29, ___U3CManipulationSourceU3Ek__BackingField_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CManipulationSourceU3Ek__BackingField_0() const { return ___U3CManipulationSourceU3Ek__BackingField_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CManipulationSourceU3Ek__BackingField_0() { return &___U3CManipulationSourceU3Ek__BackingField_0; }
	inline void set_U3CManipulationSourceU3Ek__BackingField_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CManipulationSourceU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CManipulationSourceU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29, ___U3CPointerU3Ek__BackingField_1)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_1() const { return ___U3CPointerU3Ek__BackingField_1; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_1() { return &___U3CPointerU3Ek__BackingField_1; }
	inline void set_U3CPointerU3Ek__BackingField_1(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsNearInteractionU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29, ___U3CIsNearInteractionU3Ek__BackingField_2)); }
	inline bool get_U3CIsNearInteractionU3Ek__BackingField_2() const { return ___U3CIsNearInteractionU3Ek__BackingField_2; }
	inline bool* get_address_of_U3CIsNearInteractionU3Ek__BackingField_2() { return &___U3CIsNearInteractionU3Ek__BackingField_2; }
	inline void set_U3CIsNearInteractionU3Ek__BackingField_2(bool value)
	{
		___U3CIsNearInteractionU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CPointerCentroidU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29, ___U3CPointerCentroidU3Ek__BackingField_3)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointerCentroidU3Ek__BackingField_3() const { return ___U3CPointerCentroidU3Ek__BackingField_3; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointerCentroidU3Ek__BackingField_3() { return &___U3CPointerCentroidU3Ek__BackingField_3; }
	inline void set_U3CPointerCentroidU3Ek__BackingField_3(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointerCentroidU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_U3CPointerVelocityU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29, ___U3CPointerVelocityU3Ek__BackingField_4)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointerVelocityU3Ek__BackingField_4() const { return ___U3CPointerVelocityU3Ek__BackingField_4; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointerVelocityU3Ek__BackingField_4() { return &___U3CPointerVelocityU3Ek__BackingField_4; }
	inline void set_U3CPointerVelocityU3Ek__BackingField_4(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointerVelocityU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CPointerAngularVelocityU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29, ___U3CPointerAngularVelocityU3Ek__BackingField_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointerAngularVelocityU3Ek__BackingField_5() const { return ___U3CPointerAngularVelocityU3Ek__BackingField_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointerAngularVelocityU3Ek__BackingField_5() { return &___U3CPointerAngularVelocityU3Ek__BackingField_5; }
	inline void set_U3CPointerAngularVelocityU3Ek__BackingField_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointerAngularVelocityU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/HandMovementType
struct HandMovementType_t916CC1FD808B8FCA8EA71E38B4A9F5105D8B0F05 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/HandMovementType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(HandMovementType_t916CC1FD808B8FCA8EA71E38B4A9F5105D8B0F05, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData
struct PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B 
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::pointer
	RuntimeObject* ___pointer_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::initialGrabPointInPointer
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer_1;

public:
	inline static int32_t get_offset_of_pointer_0() { return static_cast<int32_t>(offsetof(PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B, ___pointer_0)); }
	inline RuntimeObject* get_pointer_0() const { return ___pointer_0; }
	inline RuntimeObject** get_address_of_pointer_0() { return &___pointer_0; }
	inline void set_pointer_0(RuntimeObject* value)
	{
		___pointer_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointer_0), (void*)value);
	}

	inline static int32_t get_offset_of_initialGrabPointInPointer_1() { return static_cast<int32_t>(offsetof(PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B, ___initialGrabPointInPointer_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialGrabPointInPointer_1() const { return ___initialGrabPointInPointer_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialGrabPointInPointer_1() { return &___initialGrabPointInPointer_1; }
	inline void set_initialGrabPointInPointer_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialGrabPointInPointer_1 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData
struct PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_pinvoke
{
	RuntimeObject* ___pointer_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer_1;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData
struct PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_com
{
	RuntimeObject* ___pointer_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer_1;
};

// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/ReleaseBehaviorType
struct ReleaseBehaviorType_tFB74D9E0F75C842C63DC68C9837028849589DB34 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/ReleaseBehaviorType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ReleaseBehaviorType_tFB74D9E0F75C842C63DC68C9837028849589DB34, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/RotateInOneHandType
struct RotateInOneHandType_tE3D7A881BEFE8F0AB939BC4C9DC961B09894D3B3 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/RotateInOneHandType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RotateInOneHandType_tE3D7A881BEFE8F0AB939BC4C9DC961B09894D3B3, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/State
struct State_t0DCD8B685361128DBB403DB910C71A4E58E1ABAD 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/State::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(State_t0DCD8B685361128DBB403DB910C71A4E58E1ABAD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/TwoHandedManipulation
struct TwoHandedManipulation_tF417E3ED0522AC152981ABD6E83633EF3BDDE26E 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/TwoHandedManipulation::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TwoHandedManipulation_tF417E3ED0522AC152981ABD6E83633EF3BDDE26E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData
struct PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F 
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::pointer
	RuntimeObject* ___pointer_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::initialGrabPointInPointer
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer_1;

public:
	inline static int32_t get_offset_of_pointer_0() { return static_cast<int32_t>(offsetof(PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F, ___pointer_0)); }
	inline RuntimeObject* get_pointer_0() const { return ___pointer_0; }
	inline RuntimeObject** get_address_of_pointer_0() { return &___pointer_0; }
	inline void set_pointer_0(RuntimeObject* value)
	{
		___pointer_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointer_0), (void*)value);
	}

	inline static int32_t get_offset_of_initialGrabPointInPointer_1() { return static_cast<int32_t>(offsetof(PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F, ___initialGrabPointInPointer_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_initialGrabPointInPointer_1() const { return ___initialGrabPointInPointer_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_initialGrabPointInPointer_1() { return &___initialGrabPointInPointer_1; }
	inline void set_initialGrabPointInPointer_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___initialGrabPointInPointer_1 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData
struct PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_pinvoke
{
	RuntimeObject* ___pointer_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer_1;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData
struct PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_com
{
	RuntimeObject* ___pointer_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer_1;
};

// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/ReleaseBehaviorType
struct ReleaseBehaviorType_tA9E83DBF3F38DB45F3D3E1C374C536E5B2F6752A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/ReleaseBehaviorType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ReleaseBehaviorType_tA9E83DBF3F38DB45F3D3E1C374C536E5B2F6752A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType
struct RotateInOneHandType_tA9771B352C02CEEE41B8A02E0A95C0DBB587E840 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RotateInOneHandType_tA9771B352C02CEEE41B8A02E0A95C0DBB587E840, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.PanUnityEvent
struct PanUnityEvent_t576F4F1E310A2B14DA15D75B9277BB98A6E81AF6  : public UnityEvent_1_t79EBB1A568834D5983F856843EDDF4B8EC7D5033
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/AppearType
struct AppearType_t6C8C594CEB57AD15329A4025520F4A1A9CB46604 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/AppearType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AppearType_t6C8C594CEB57AD15329A4025520F4A1A9CB46604, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/RemainType
struct RemainType_tA0DDF7A906488882752303D6F17ADB791515A1BC 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/RemainType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(RemainType_tA0DDF7A906488882752303D6F17ADB791515A1BC, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/VanishType
struct VanishType_t7A6303A03FEA843D20BCE8C46BB034D3EC3C3C97 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/VanishType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VanishType_t7A6303A03FEA843D20BCE8C46BB034D3EC3C3C97, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.PressableButton/SpaceMode
struct SpaceMode_tF9CE94E108EACCA3CE1DD4BAED5488E05FB80A44 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.PressableButton/SpaceMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SpaceMode_tF9CE94E108EACCA3CE1DD4BAED5488E05FB80A44, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.SliderAxis
struct SliderAxis_t739DEAA212ACD61A043DDA20236AEF0D9D0536B2 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.SliderAxis::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SliderAxis_t739DEAA212ACD61A043DDA20236AEF0D9D0536B2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.SliderEvent
struct SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF  : public UnityEvent_1_tA8F75AF3945C0A4BD85C05EB2E7E55BDFFE94DE5
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisFlags
struct AxisFlags_tA706F4AF32ADDF855FEB5300A9A8DAB8F33D0696 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisFlags_tA706F4AF32ADDF855FEB5300A9A8DAB8F33D0696, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.AxisType
struct AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.AxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(AxisType_t45CEF046648179DA1FDF98C495D40AA34823C164, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.CollationOrder
struct CollationOrder_t515E0BB074BE25ED67629C76ACFE667E2DD373B6 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.CollationOrder::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(CollationOrder_t515E0BB074BE25ED67629C76ACFE667E2DD373B6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.Handedness
struct Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB 
{
public:
	// System.Byte Microsoft.MixedReality.Toolkit.Utilities.Handedness::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Handedness_tA51C49CA286A1BC201E1680F521639E9AC1165AB, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.LayoutAnchor
struct LayoutAnchor_t2EBE10B32649E6BB5397827A8BFAD1C8AD9B2914 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.LayoutAnchor::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LayoutAnchor_t2EBE10B32649E6BB5397827A8BFAD1C8AD9B2914, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.LayoutHorizontalAlignment
struct LayoutHorizontalAlignment_t7D6E56488785A501AFED9095CD688E0744EE3E48 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.LayoutHorizontalAlignment::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LayoutHorizontalAlignment_t7D6E56488785A501AFED9095CD688E0744EE3E48, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.LayoutOrder
struct LayoutOrder_tEEB3CE75A90E480BA984ADC4632861C017D51C0A 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.LayoutOrder::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LayoutOrder_tEEB3CE75A90E480BA984ADC4632861C017D51C0A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.LayoutVerticalAlignment
struct LayoutVerticalAlignment_tE626FCEA65D2DC8A9FE06DBD89C572A06DD6B025 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.LayoutVerticalAlignment::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(LayoutVerticalAlignment_tE626FCEA65D2DC8A9FE06DBD89C572A06DD6B025, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags
struct ManipulationHandFlags_t95672FD8A142E343D22D7F92A63363ADD03DA361 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ManipulationHandFlags_t95672FD8A142E343D22D7F92A63363ADD03DA361, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.ManipulationProximityFlags
struct ManipulationProximityFlags_t43006216F1968B983A3F490D21C7CE9F542288F7 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ManipulationProximityFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ManipulationProximityFlags_t43006216F1968B983A3F490D21C7CE9F542288F7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose
struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 
{
public:
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::position
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position_1;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::rotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation_2;

public:
	inline static int32_t get_offset_of_position_1() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___position_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_position_1() const { return ___position_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_position_1() { return &___position_1; }
	inline void set_position_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___position_1 = value;
	}

	inline static int32_t get_offset_of_rotation_2() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45, ___rotation_2)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rotation_2() const { return ___rotation_2; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rotation_2() { return &___rotation_2; }
	inline void set_rotation_2(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rotation_2 = value;
	}
};

struct MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::<ZeroIdentity>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CZeroIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CZeroIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45_StaticFields, ___U3CZeroIdentityU3Ek__BackingField_0)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CZeroIdentityU3Ek__BackingField_0() const { return ___U3CZeroIdentityU3Ek__BackingField_0; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CZeroIdentityU3Ek__BackingField_0() { return &___U3CZeroIdentityU3Ek__BackingField_0; }
	inline void set_U3CZeroIdentityU3Ek__BackingField_0(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CZeroIdentityU3Ek__BackingField_0 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.ObjectOrientationSurfaceType
struct ObjectOrientationSurfaceType_tEA4BE4186E677D04B5105B7CF9F5026895AF9F5D 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ObjectOrientationSurfaceType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ObjectOrientationSurfaceType_tEA4BE4186E677D04B5105B7CF9F5026895AF9F5D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.OrientationType
struct OrientationType_tB6FB0E1746B10E1C14DCCEF33535D2EF537D1BEC 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.OrientationType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(OrientationType_tB6FB0E1746B10E1C14DCCEF33535D2EF537D1BEC, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags
struct TransformFlags_t1BFF9FDB164FC56111295BAD00B86A5DFFD62CFC 
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.TransformFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(TransformFlags_t1BFF9FDB164FC56111295BAD00B86A5DFFD62CFC, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.ByteEnum
struct ByteEnum_t406C975039F6312CDE58A265A6ECFD861F8C06CD 
{
public:
	// System.Byte System.ByteEnum::value__
	uint8_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ByteEnum_t406C975039F6312CDE58A265A6ECFD861F8C06CD, ___value___2)); }
	inline uint8_t get_value___2() const { return ___value___2; }
	inline uint8_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(uint8_t value)
	{
		___value___2 = value;
	}
};


// System.Collections.Generic.KeyValuePair`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>
struct KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	RuntimeObject* ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C, ___key_0)); }
	inline RuntimeObject* get_key_0() const { return ___key_0; }
	inline RuntimeObject** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(RuntimeObject* value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C, ___value_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_value_1() const { return ___value_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___value_1 = value;
	}
};


// System.Collections.Generic.KeyValuePair`2<System.Object,UnityEngine.Vector3>
struct KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	RuntimeObject * ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822, ___key_0)); }
	inline RuntimeObject * get_key_0() const { return ___key_0; }
	inline RuntimeObject ** get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(RuntimeObject * value)
	{
		___key_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___key_0), (void*)value);
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822, ___value_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_value_1() const { return ___value_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___value_1 = value;
	}
};


// System.Exception
struct Exception_t  : public RuntimeObject
{
public:
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t * ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject * ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject * ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* ___native_trace_ips_15;

public:
	inline static int32_t get_offset_of__className_1() { return static_cast<int32_t>(offsetof(Exception_t, ____className_1)); }
	inline String_t* get__className_1() const { return ____className_1; }
	inline String_t** get_address_of__className_1() { return &____className_1; }
	inline void set__className_1(String_t* value)
	{
		____className_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____className_1), (void*)value);
	}

	inline static int32_t get_offset_of__message_2() { return static_cast<int32_t>(offsetof(Exception_t, ____message_2)); }
	inline String_t* get__message_2() const { return ____message_2; }
	inline String_t** get_address_of__message_2() { return &____message_2; }
	inline void set__message_2(String_t* value)
	{
		____message_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____message_2), (void*)value);
	}

	inline static int32_t get_offset_of__data_3() { return static_cast<int32_t>(offsetof(Exception_t, ____data_3)); }
	inline RuntimeObject* get__data_3() const { return ____data_3; }
	inline RuntimeObject** get_address_of__data_3() { return &____data_3; }
	inline void set__data_3(RuntimeObject* value)
	{
		____data_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____data_3), (void*)value);
	}

	inline static int32_t get_offset_of__innerException_4() { return static_cast<int32_t>(offsetof(Exception_t, ____innerException_4)); }
	inline Exception_t * get__innerException_4() const { return ____innerException_4; }
	inline Exception_t ** get_address_of__innerException_4() { return &____innerException_4; }
	inline void set__innerException_4(Exception_t * value)
	{
		____innerException_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____innerException_4), (void*)value);
	}

	inline static int32_t get_offset_of__helpURL_5() { return static_cast<int32_t>(offsetof(Exception_t, ____helpURL_5)); }
	inline String_t* get__helpURL_5() const { return ____helpURL_5; }
	inline String_t** get_address_of__helpURL_5() { return &____helpURL_5; }
	inline void set__helpURL_5(String_t* value)
	{
		____helpURL_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____helpURL_5), (void*)value);
	}

	inline static int32_t get_offset_of__stackTrace_6() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTrace_6)); }
	inline RuntimeObject * get__stackTrace_6() const { return ____stackTrace_6; }
	inline RuntimeObject ** get_address_of__stackTrace_6() { return &____stackTrace_6; }
	inline void set__stackTrace_6(RuntimeObject * value)
	{
		____stackTrace_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTrace_6), (void*)value);
	}

	inline static int32_t get_offset_of__stackTraceString_7() { return static_cast<int32_t>(offsetof(Exception_t, ____stackTraceString_7)); }
	inline String_t* get__stackTraceString_7() const { return ____stackTraceString_7; }
	inline String_t** get_address_of__stackTraceString_7() { return &____stackTraceString_7; }
	inline void set__stackTraceString_7(String_t* value)
	{
		____stackTraceString_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____stackTraceString_7), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackTraceString_8() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackTraceString_8)); }
	inline String_t* get__remoteStackTraceString_8() const { return ____remoteStackTraceString_8; }
	inline String_t** get_address_of__remoteStackTraceString_8() { return &____remoteStackTraceString_8; }
	inline void set__remoteStackTraceString_8(String_t* value)
	{
		____remoteStackTraceString_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____remoteStackTraceString_8), (void*)value);
	}

	inline static int32_t get_offset_of__remoteStackIndex_9() { return static_cast<int32_t>(offsetof(Exception_t, ____remoteStackIndex_9)); }
	inline int32_t get__remoteStackIndex_9() const { return ____remoteStackIndex_9; }
	inline int32_t* get_address_of__remoteStackIndex_9() { return &____remoteStackIndex_9; }
	inline void set__remoteStackIndex_9(int32_t value)
	{
		____remoteStackIndex_9 = value;
	}

	inline static int32_t get_offset_of__dynamicMethods_10() { return static_cast<int32_t>(offsetof(Exception_t, ____dynamicMethods_10)); }
	inline RuntimeObject * get__dynamicMethods_10() const { return ____dynamicMethods_10; }
	inline RuntimeObject ** get_address_of__dynamicMethods_10() { return &____dynamicMethods_10; }
	inline void set__dynamicMethods_10(RuntimeObject * value)
	{
		____dynamicMethods_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____dynamicMethods_10), (void*)value);
	}

	inline static int32_t get_offset_of__HResult_11() { return static_cast<int32_t>(offsetof(Exception_t, ____HResult_11)); }
	inline int32_t get__HResult_11() const { return ____HResult_11; }
	inline int32_t* get_address_of__HResult_11() { return &____HResult_11; }
	inline void set__HResult_11(int32_t value)
	{
		____HResult_11 = value;
	}

	inline static int32_t get_offset_of__source_12() { return static_cast<int32_t>(offsetof(Exception_t, ____source_12)); }
	inline String_t* get__source_12() const { return ____source_12; }
	inline String_t** get_address_of__source_12() { return &____source_12; }
	inline void set__source_12(String_t* value)
	{
		____source_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____source_12), (void*)value);
	}

	inline static int32_t get_offset_of__safeSerializationManager_13() { return static_cast<int32_t>(offsetof(Exception_t, ____safeSerializationManager_13)); }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * get__safeSerializationManager_13() const { return ____safeSerializationManager_13; }
	inline SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 ** get_address_of__safeSerializationManager_13() { return &____safeSerializationManager_13; }
	inline void set__safeSerializationManager_13(SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * value)
	{
		____safeSerializationManager_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____safeSerializationManager_13), (void*)value);
	}

	inline static int32_t get_offset_of_captured_traces_14() { return static_cast<int32_t>(offsetof(Exception_t, ___captured_traces_14)); }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* get_captured_traces_14() const { return ___captured_traces_14; }
	inline StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196** get_address_of_captured_traces_14() { return &___captured_traces_14; }
	inline void set_captured_traces_14(StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* value)
	{
		___captured_traces_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___captured_traces_14), (void*)value);
	}

	inline static int32_t get_offset_of_native_trace_ips_15() { return static_cast<int32_t>(offsetof(Exception_t, ___native_trace_ips_15)); }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* get_native_trace_ips_15() const { return ___native_trace_ips_15; }
	inline IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD** get_address_of_native_trace_ips_15() { return &___native_trace_ips_15; }
	inline void set_native_trace_ips_15(IntPtrU5BU5D_t4DC01DCB9A6DF6C9792A6513595D7A11E637DCDD* value)
	{
		___native_trace_ips_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_trace_ips_15), (void*)value);
	}
};

struct Exception_t_StaticFields
{
public:
	// System.Object System.Exception::s_EDILock
	RuntimeObject * ___s_EDILock_0;

public:
	inline static int32_t get_offset_of_s_EDILock_0() { return static_cast<int32_t>(offsetof(Exception_t_StaticFields, ___s_EDILock_0)); }
	inline RuntimeObject * get_s_EDILock_0() const { return ___s_EDILock_0; }
	inline RuntimeObject ** get_address_of_s_EDILock_0() { return &___s_EDILock_0; }
	inline void set_s_EDILock_0(RuntimeObject * value)
	{
		___s_EDILock_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_EDILock_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_t4A754D86B0F784B18CBC36C073BA564BED109770 * ____safeSerializationManager_13;
	StackTraceU5BU5D_t855F09649EA34DEE7C1B6F088E0538E3CCC3F196* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
};

// System.Int32Enum
struct Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD 
{
public:
	// System.Int32 System.Int32Enum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(Int32Enum_t6312CE4586C17FE2E2E513D2E7655B574F10FDCD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Reflection.BindingFlags
struct BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Threading.Tasks.VoidTaskResult>
struct AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9 
{
public:
	// System.Runtime.CompilerServices.AsyncMethodBuilderCore System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1::m_coreState
	AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  ___m_coreState_1;
	// System.Threading.Tasks.Task`1<TResult> System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1::m_task
	Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * ___m_task_2;

public:
	inline static int32_t get_offset_of_m_coreState_1() { return static_cast<int32_t>(offsetof(AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9, ___m_coreState_1)); }
	inline AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  get_m_coreState_1() const { return ___m_coreState_1; }
	inline AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01 * get_address_of_m_coreState_1() { return &___m_coreState_1; }
	inline void set_m_coreState_1(AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  value)
	{
		___m_coreState_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_m_task_2() { return static_cast<int32_t>(offsetof(AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9, ___m_task_2)); }
	inline Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * get_m_task_2() const { return ___m_task_2; }
	inline Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 ** get_address_of_m_task_2() { return &___m_task_2; }
	inline void set_m_task_2(Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * value)
	{
		___m_task_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_task_2), (void*)value);
	}
};

struct AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9_StaticFields
{
public:
	// System.Threading.Tasks.Task`1<TResult> System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1::s_defaultResultTask
	Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * ___s_defaultResultTask_0;

public:
	inline static int32_t get_offset_of_s_defaultResultTask_0() { return static_cast<int32_t>(offsetof(AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9_StaticFields, ___s_defaultResultTask_0)); }
	inline Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * get_s_defaultResultTask_0() const { return ___s_defaultResultTask_0; }
	inline Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 ** get_address_of_s_defaultResultTask_0() { return &___s_defaultResultTask_0; }
	inline void set_s_defaultResultTask_0(Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * value)
	{
		___s_defaultResultTask_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_defaultResultTask_0), (void*)value);
	}
};


// System.Runtime.CompilerServices.AsyncVoidMethodBuilder
struct AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF 
{
public:
	// System.Threading.SynchronizationContext System.Runtime.CompilerServices.AsyncVoidMethodBuilder::m_synchronizationContext
	SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * ___m_synchronizationContext_0;
	// System.Runtime.CompilerServices.AsyncMethodBuilderCore System.Runtime.CompilerServices.AsyncVoidMethodBuilder::m_coreState
	AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  ___m_coreState_1;
	// System.Threading.Tasks.Task System.Runtime.CompilerServices.AsyncVoidMethodBuilder::m_task
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_2;

public:
	inline static int32_t get_offset_of_m_synchronizationContext_0() { return static_cast<int32_t>(offsetof(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF, ___m_synchronizationContext_0)); }
	inline SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * get_m_synchronizationContext_0() const { return ___m_synchronizationContext_0; }
	inline SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 ** get_address_of_m_synchronizationContext_0() { return &___m_synchronizationContext_0; }
	inline void set_m_synchronizationContext_0(SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * value)
	{
		___m_synchronizationContext_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_synchronizationContext_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_coreState_1() { return static_cast<int32_t>(offsetof(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF, ___m_coreState_1)); }
	inline AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  get_m_coreState_1() const { return ___m_coreState_1; }
	inline AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01 * get_address_of_m_coreState_1() { return &___m_coreState_1; }
	inline void set_m_coreState_1(AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01  value)
	{
		___m_coreState_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_m_task_2() { return static_cast<int32_t>(offsetof(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF, ___m_task_2)); }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * get_m_task_2() const { return ___m_task_2; }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 ** get_address_of_m_task_2() { return &___m_task_2; }
	inline void set_m_task_2(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * value)
	{
		___m_task_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_task_2), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Runtime.CompilerServices.AsyncVoidMethodBuilder
struct AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF_marshaled_pinvoke
{
	SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * ___m_synchronizationContext_0;
	AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_pinvoke ___m_coreState_1;
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_2;
};
// Native definition for COM marshalling of System.Runtime.CompilerServices.AsyncVoidMethodBuilder
struct AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF_marshaled_com
{
	SynchronizationContext_t06AEFE2C7CFCFC242D0A5729A74464AF18CF84E7 * ___m_synchronizationContext_0;
	AsyncMethodBuilderCore_t4CE6C1E4B0621A6EC45CF6E0E8F1F633FFF9FF01_marshaled_com ___m_coreState_1;
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_task_2;
};

// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// System.Threading.Tasks.Task
struct Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2  : public RuntimeObject
{
public:
	// System.Int32 modreq(System.Runtime.CompilerServices.IsVolatile) System.Threading.Tasks.Task::m_taskId
	int32_t ___m_taskId_4;
	// System.Object System.Threading.Tasks.Task::m_action
	RuntimeObject * ___m_action_5;
	// System.Object System.Threading.Tasks.Task::m_stateObject
	RuntimeObject * ___m_stateObject_6;
	// System.Threading.Tasks.TaskScheduler System.Threading.Tasks.Task::m_taskScheduler
	TaskScheduler_t966F2798F198FA90A0DA8EFC92BAC08297793114 * ___m_taskScheduler_7;
	// System.Threading.Tasks.Task System.Threading.Tasks.Task::m_parent
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___m_parent_8;
	// System.Int32 modreq(System.Runtime.CompilerServices.IsVolatile) System.Threading.Tasks.Task::m_stateFlags
	int32_t ___m_stateFlags_9;
	// System.Object modreq(System.Runtime.CompilerServices.IsVolatile) System.Threading.Tasks.Task::m_continuationObject
	RuntimeObject * ___m_continuationObject_10;
	// System.Threading.Tasks.Task/ContingentProperties modreq(System.Runtime.CompilerServices.IsVolatile) System.Threading.Tasks.Task::m_contingentProperties
	ContingentProperties_t7149A27D01507C74E8BDAAA3848B45D2644FDF08 * ___m_contingentProperties_15;

public:
	inline static int32_t get_offset_of_m_taskId_4() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_taskId_4)); }
	inline int32_t get_m_taskId_4() const { return ___m_taskId_4; }
	inline int32_t* get_address_of_m_taskId_4() { return &___m_taskId_4; }
	inline void set_m_taskId_4(int32_t value)
	{
		___m_taskId_4 = value;
	}

	inline static int32_t get_offset_of_m_action_5() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_action_5)); }
	inline RuntimeObject * get_m_action_5() const { return ___m_action_5; }
	inline RuntimeObject ** get_address_of_m_action_5() { return &___m_action_5; }
	inline void set_m_action_5(RuntimeObject * value)
	{
		___m_action_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_action_5), (void*)value);
	}

	inline static int32_t get_offset_of_m_stateObject_6() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_stateObject_6)); }
	inline RuntimeObject * get_m_stateObject_6() const { return ___m_stateObject_6; }
	inline RuntimeObject ** get_address_of_m_stateObject_6() { return &___m_stateObject_6; }
	inline void set_m_stateObject_6(RuntimeObject * value)
	{
		___m_stateObject_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_stateObject_6), (void*)value);
	}

	inline static int32_t get_offset_of_m_taskScheduler_7() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_taskScheduler_7)); }
	inline TaskScheduler_t966F2798F198FA90A0DA8EFC92BAC08297793114 * get_m_taskScheduler_7() const { return ___m_taskScheduler_7; }
	inline TaskScheduler_t966F2798F198FA90A0DA8EFC92BAC08297793114 ** get_address_of_m_taskScheduler_7() { return &___m_taskScheduler_7; }
	inline void set_m_taskScheduler_7(TaskScheduler_t966F2798F198FA90A0DA8EFC92BAC08297793114 * value)
	{
		___m_taskScheduler_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_taskScheduler_7), (void*)value);
	}

	inline static int32_t get_offset_of_m_parent_8() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_parent_8)); }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * get_m_parent_8() const { return ___m_parent_8; }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 ** get_address_of_m_parent_8() { return &___m_parent_8; }
	inline void set_m_parent_8(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * value)
	{
		___m_parent_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_parent_8), (void*)value);
	}

	inline static int32_t get_offset_of_m_stateFlags_9() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_stateFlags_9)); }
	inline int32_t get_m_stateFlags_9() const { return ___m_stateFlags_9; }
	inline int32_t* get_address_of_m_stateFlags_9() { return &___m_stateFlags_9; }
	inline void set_m_stateFlags_9(int32_t value)
	{
		___m_stateFlags_9 = value;
	}

	inline static int32_t get_offset_of_m_continuationObject_10() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_continuationObject_10)); }
	inline RuntimeObject * get_m_continuationObject_10() const { return ___m_continuationObject_10; }
	inline RuntimeObject ** get_address_of_m_continuationObject_10() { return &___m_continuationObject_10; }
	inline void set_m_continuationObject_10(RuntimeObject * value)
	{
		___m_continuationObject_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_continuationObject_10), (void*)value);
	}

	inline static int32_t get_offset_of_m_contingentProperties_15() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2, ___m_contingentProperties_15)); }
	inline ContingentProperties_t7149A27D01507C74E8BDAAA3848B45D2644FDF08 * get_m_contingentProperties_15() const { return ___m_contingentProperties_15; }
	inline ContingentProperties_t7149A27D01507C74E8BDAAA3848B45D2644FDF08 ** get_address_of_m_contingentProperties_15() { return &___m_contingentProperties_15; }
	inline void set_m_contingentProperties_15(ContingentProperties_t7149A27D01507C74E8BDAAA3848B45D2644FDF08 * value)
	{
		___m_contingentProperties_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_contingentProperties_15), (void*)value);
	}
};

struct Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields
{
public:
	// System.Int32 System.Threading.Tasks.Task::s_taskIdCounter
	int32_t ___s_taskIdCounter_2;
	// System.Threading.Tasks.TaskFactory System.Threading.Tasks.Task::s_factory
	TaskFactory_tF3C6D983390ACFB40B4979E225368F78006D6155 * ___s_factory_3;
	// System.Object System.Threading.Tasks.Task::s_taskCompletionSentinel
	RuntimeObject * ___s_taskCompletionSentinel_11;
	// System.Boolean System.Threading.Tasks.Task::s_asyncDebuggingEnabled
	bool ___s_asyncDebuggingEnabled_12;
	// System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.Tasks.Task> System.Threading.Tasks.Task::s_currentActiveTasks
	Dictionary_2_t70161CFEB8DA3C79E19E31D0ED948D3C2925095F * ___s_currentActiveTasks_13;
	// System.Object System.Threading.Tasks.Task::s_activeTasksLock
	RuntimeObject * ___s_activeTasksLock_14;
	// System.Action`1<System.Object> System.Threading.Tasks.Task::s_taskCancelCallback
	Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 * ___s_taskCancelCallback_16;
	// System.Func`1<System.Threading.Tasks.Task/ContingentProperties> System.Threading.Tasks.Task::s_createContingentProperties
	Func_1_t48C2978A48CE3F2F6EB5B6DE269D00746483BB1F * ___s_createContingentProperties_17;
	// System.Threading.Tasks.Task System.Threading.Tasks.Task::s_completedTask
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___s_completedTask_18;
	// System.Predicate`1<System.Threading.Tasks.Task> System.Threading.Tasks.Task::s_IsExceptionObservedByParentPredicate
	Predicate_1_tF4286C34BB184CE5690FDCEBA7F09FC68D229335 * ___s_IsExceptionObservedByParentPredicate_19;
	// System.Threading.ContextCallback System.Threading.Tasks.Task::s_ecCallback
	ContextCallback_t8AE8A965AC6C7ECD396F527F15CDC8E683BE1676 * ___s_ecCallback_20;
	// System.Predicate`1<System.Object> System.Threading.Tasks.Task::s_IsTaskContinuationNullPredicate
	Predicate_1_t4AA10EFD4C5497CA1CD0FE35A6AF5990FF5D0979 * ___s_IsTaskContinuationNullPredicate_21;

public:
	inline static int32_t get_offset_of_s_taskIdCounter_2() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_taskIdCounter_2)); }
	inline int32_t get_s_taskIdCounter_2() const { return ___s_taskIdCounter_2; }
	inline int32_t* get_address_of_s_taskIdCounter_2() { return &___s_taskIdCounter_2; }
	inline void set_s_taskIdCounter_2(int32_t value)
	{
		___s_taskIdCounter_2 = value;
	}

	inline static int32_t get_offset_of_s_factory_3() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_factory_3)); }
	inline TaskFactory_tF3C6D983390ACFB40B4979E225368F78006D6155 * get_s_factory_3() const { return ___s_factory_3; }
	inline TaskFactory_tF3C6D983390ACFB40B4979E225368F78006D6155 ** get_address_of_s_factory_3() { return &___s_factory_3; }
	inline void set_s_factory_3(TaskFactory_tF3C6D983390ACFB40B4979E225368F78006D6155 * value)
	{
		___s_factory_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_factory_3), (void*)value);
	}

	inline static int32_t get_offset_of_s_taskCompletionSentinel_11() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_taskCompletionSentinel_11)); }
	inline RuntimeObject * get_s_taskCompletionSentinel_11() const { return ___s_taskCompletionSentinel_11; }
	inline RuntimeObject ** get_address_of_s_taskCompletionSentinel_11() { return &___s_taskCompletionSentinel_11; }
	inline void set_s_taskCompletionSentinel_11(RuntimeObject * value)
	{
		___s_taskCompletionSentinel_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_taskCompletionSentinel_11), (void*)value);
	}

	inline static int32_t get_offset_of_s_asyncDebuggingEnabled_12() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_asyncDebuggingEnabled_12)); }
	inline bool get_s_asyncDebuggingEnabled_12() const { return ___s_asyncDebuggingEnabled_12; }
	inline bool* get_address_of_s_asyncDebuggingEnabled_12() { return &___s_asyncDebuggingEnabled_12; }
	inline void set_s_asyncDebuggingEnabled_12(bool value)
	{
		___s_asyncDebuggingEnabled_12 = value;
	}

	inline static int32_t get_offset_of_s_currentActiveTasks_13() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_currentActiveTasks_13)); }
	inline Dictionary_2_t70161CFEB8DA3C79E19E31D0ED948D3C2925095F * get_s_currentActiveTasks_13() const { return ___s_currentActiveTasks_13; }
	inline Dictionary_2_t70161CFEB8DA3C79E19E31D0ED948D3C2925095F ** get_address_of_s_currentActiveTasks_13() { return &___s_currentActiveTasks_13; }
	inline void set_s_currentActiveTasks_13(Dictionary_2_t70161CFEB8DA3C79E19E31D0ED948D3C2925095F * value)
	{
		___s_currentActiveTasks_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_currentActiveTasks_13), (void*)value);
	}

	inline static int32_t get_offset_of_s_activeTasksLock_14() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_activeTasksLock_14)); }
	inline RuntimeObject * get_s_activeTasksLock_14() const { return ___s_activeTasksLock_14; }
	inline RuntimeObject ** get_address_of_s_activeTasksLock_14() { return &___s_activeTasksLock_14; }
	inline void set_s_activeTasksLock_14(RuntimeObject * value)
	{
		___s_activeTasksLock_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_activeTasksLock_14), (void*)value);
	}

	inline static int32_t get_offset_of_s_taskCancelCallback_16() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_taskCancelCallback_16)); }
	inline Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 * get_s_taskCancelCallback_16() const { return ___s_taskCancelCallback_16; }
	inline Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 ** get_address_of_s_taskCancelCallback_16() { return &___s_taskCancelCallback_16; }
	inline void set_s_taskCancelCallback_16(Action_1_t551A279CEADCF6EEAE8FA2B1E1E757D0D15290D0 * value)
	{
		___s_taskCancelCallback_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_taskCancelCallback_16), (void*)value);
	}

	inline static int32_t get_offset_of_s_createContingentProperties_17() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_createContingentProperties_17)); }
	inline Func_1_t48C2978A48CE3F2F6EB5B6DE269D00746483BB1F * get_s_createContingentProperties_17() const { return ___s_createContingentProperties_17; }
	inline Func_1_t48C2978A48CE3F2F6EB5B6DE269D00746483BB1F ** get_address_of_s_createContingentProperties_17() { return &___s_createContingentProperties_17; }
	inline void set_s_createContingentProperties_17(Func_1_t48C2978A48CE3F2F6EB5B6DE269D00746483BB1F * value)
	{
		___s_createContingentProperties_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_createContingentProperties_17), (void*)value);
	}

	inline static int32_t get_offset_of_s_completedTask_18() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_completedTask_18)); }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * get_s_completedTask_18() const { return ___s_completedTask_18; }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 ** get_address_of_s_completedTask_18() { return &___s_completedTask_18; }
	inline void set_s_completedTask_18(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * value)
	{
		___s_completedTask_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_completedTask_18), (void*)value);
	}

	inline static int32_t get_offset_of_s_IsExceptionObservedByParentPredicate_19() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_IsExceptionObservedByParentPredicate_19)); }
	inline Predicate_1_tF4286C34BB184CE5690FDCEBA7F09FC68D229335 * get_s_IsExceptionObservedByParentPredicate_19() const { return ___s_IsExceptionObservedByParentPredicate_19; }
	inline Predicate_1_tF4286C34BB184CE5690FDCEBA7F09FC68D229335 ** get_address_of_s_IsExceptionObservedByParentPredicate_19() { return &___s_IsExceptionObservedByParentPredicate_19; }
	inline void set_s_IsExceptionObservedByParentPredicate_19(Predicate_1_tF4286C34BB184CE5690FDCEBA7F09FC68D229335 * value)
	{
		___s_IsExceptionObservedByParentPredicate_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_IsExceptionObservedByParentPredicate_19), (void*)value);
	}

	inline static int32_t get_offset_of_s_ecCallback_20() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_ecCallback_20)); }
	inline ContextCallback_t8AE8A965AC6C7ECD396F527F15CDC8E683BE1676 * get_s_ecCallback_20() const { return ___s_ecCallback_20; }
	inline ContextCallback_t8AE8A965AC6C7ECD396F527F15CDC8E683BE1676 ** get_address_of_s_ecCallback_20() { return &___s_ecCallback_20; }
	inline void set_s_ecCallback_20(ContextCallback_t8AE8A965AC6C7ECD396F527F15CDC8E683BE1676 * value)
	{
		___s_ecCallback_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_ecCallback_20), (void*)value);
	}

	inline static int32_t get_offset_of_s_IsTaskContinuationNullPredicate_21() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_StaticFields, ___s_IsTaskContinuationNullPredicate_21)); }
	inline Predicate_1_t4AA10EFD4C5497CA1CD0FE35A6AF5990FF5D0979 * get_s_IsTaskContinuationNullPredicate_21() const { return ___s_IsTaskContinuationNullPredicate_21; }
	inline Predicate_1_t4AA10EFD4C5497CA1CD0FE35A6AF5990FF5D0979 ** get_address_of_s_IsTaskContinuationNullPredicate_21() { return &___s_IsTaskContinuationNullPredicate_21; }
	inline void set_s_IsTaskContinuationNullPredicate_21(Predicate_1_t4AA10EFD4C5497CA1CD0FE35A6AF5990FF5D0979 * value)
	{
		___s_IsTaskContinuationNullPredicate_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_IsTaskContinuationNullPredicate_21), (void*)value);
	}
};

struct Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_ThreadStaticFields
{
public:
	// System.Threading.Tasks.Task System.Threading.Tasks.Task::t_currentTask
	Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * ___t_currentTask_0;
	// System.Threading.Tasks.StackGuard System.Threading.Tasks.Task::t_stackGuard
	StackGuard_tE431ED3BBD1A18705FEE6F948EBF7FA2E99D64A9 * ___t_stackGuard_1;

public:
	inline static int32_t get_offset_of_t_currentTask_0() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_ThreadStaticFields, ___t_currentTask_0)); }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * get_t_currentTask_0() const { return ___t_currentTask_0; }
	inline Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 ** get_address_of_t_currentTask_0() { return &___t_currentTask_0; }
	inline void set_t_currentTask_0(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * value)
	{
		___t_currentTask_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___t_currentTask_0), (void*)value);
	}

	inline static int32_t get_offset_of_t_stackGuard_1() { return static_cast<int32_t>(offsetof(Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2_ThreadStaticFields, ___t_stackGuard_1)); }
	inline StackGuard_tE431ED3BBD1A18705FEE6F948EBF7FA2E99D64A9 * get_t_stackGuard_1() const { return ___t_stackGuard_1; }
	inline StackGuard_tE431ED3BBD1A18705FEE6F948EBF7FA2E99D64A9 ** get_address_of_t_stackGuard_1() { return &___t_stackGuard_1; }
	inline void set_t_stackGuard_1(StackGuard_tE431ED3BBD1A18705FEE6F948EBF7FA2E99D64A9 * value)
	{
		___t_stackGuard_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___t_stackGuard_1), (void*)value);
	}
};


// Unity.Profiling.ProfilerMarker
struct ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 
{
public:
	// System.IntPtr Unity.Profiling.ProfilerMarker::m_Ptr
	intptr_t ___m_Ptr_0;

public:
	inline static int32_t get_offset_of_m_Ptr_0() { return static_cast<int32_t>(offsetof(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86, ___m_Ptr_0)); }
	inline intptr_t get_m_Ptr_0() const { return ___m_Ptr_0; }
	inline intptr_t* get_address_of_m_Ptr_0() { return &___m_Ptr_0; }
	inline void set_m_Ptr_0(intptr_t value)
	{
		___m_Ptr_0 = value;
	}
};


// UnityEngine.Bounds
struct Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 
{
public:
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Center
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Center_0;
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Extents
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___m_Extents_1;

public:
	inline static int32_t get_offset_of_m_Center_0() { return static_cast<int32_t>(offsetof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890, ___m_Center_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Center_0() const { return ___m_Center_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Center_0() { return &___m_Center_0; }
	inline void set_m_Center_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Center_0 = value;
	}

	inline static int32_t get_offset_of_m_Extents_1() { return static_cast<int32_t>(offsetof(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890, ___m_Extents_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_m_Extents_1() const { return ___m_Extents_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_m_Extents_1() { return &___m_Extents_1; }
	inline void set_m_Extents_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___m_Extents_1 = value;
	}
};


// UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 
{
public:
	// UnityEngine.GameObject UnityEngine.EventSystems.RaycastResult::m_GameObject
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	// UnityEngine.EventSystems.BaseRaycaster UnityEngine.EventSystems.RaycastResult::module
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	// System.Single UnityEngine.EventSystems.RaycastResult::distance
	float ___distance_2;
	// System.Single UnityEngine.EventSystems.RaycastResult::index
	float ___index_3;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::depth
	int32_t ___depth_4;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingLayer
	int32_t ___sortingLayer_5;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingOrder
	int32_t ___sortingOrder_6;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldNormal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	// UnityEngine.Vector2 UnityEngine.EventSystems.RaycastResult::screenPosition
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::displayIndex
	int32_t ___displayIndex_10;

public:
	inline static int32_t get_offset_of_m_GameObject_0() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___m_GameObject_0)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_m_GameObject_0() const { return ___m_GameObject_0; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_m_GameObject_0() { return &___m_GameObject_0; }
	inline void set_m_GameObject_0(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___m_GameObject_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_GameObject_0), (void*)value);
	}

	inline static int32_t get_offset_of_module_1() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___module_1)); }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * get_module_1() const { return ___module_1; }
	inline BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 ** get_address_of_module_1() { return &___module_1; }
	inline void set_module_1(BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * value)
	{
		___module_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___module_1), (void*)value);
	}

	inline static int32_t get_offset_of_distance_2() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___distance_2)); }
	inline float get_distance_2() const { return ___distance_2; }
	inline float* get_address_of_distance_2() { return &___distance_2; }
	inline void set_distance_2(float value)
	{
		___distance_2 = value;
	}

	inline static int32_t get_offset_of_index_3() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___index_3)); }
	inline float get_index_3() const { return ___index_3; }
	inline float* get_address_of_index_3() { return &___index_3; }
	inline void set_index_3(float value)
	{
		___index_3 = value;
	}

	inline static int32_t get_offset_of_depth_4() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___depth_4)); }
	inline int32_t get_depth_4() const { return ___depth_4; }
	inline int32_t* get_address_of_depth_4() { return &___depth_4; }
	inline void set_depth_4(int32_t value)
	{
		___depth_4 = value;
	}

	inline static int32_t get_offset_of_sortingLayer_5() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingLayer_5)); }
	inline int32_t get_sortingLayer_5() const { return ___sortingLayer_5; }
	inline int32_t* get_address_of_sortingLayer_5() { return &___sortingLayer_5; }
	inline void set_sortingLayer_5(int32_t value)
	{
		___sortingLayer_5 = value;
	}

	inline static int32_t get_offset_of_sortingOrder_6() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___sortingOrder_6)); }
	inline int32_t get_sortingOrder_6() const { return ___sortingOrder_6; }
	inline int32_t* get_address_of_sortingOrder_6() { return &___sortingOrder_6; }
	inline void set_sortingOrder_6(int32_t value)
	{
		___sortingOrder_6 = value;
	}

	inline static int32_t get_offset_of_worldPosition_7() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldPosition_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldPosition_7() const { return ___worldPosition_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldPosition_7() { return &___worldPosition_7; }
	inline void set_worldPosition_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldPosition_7 = value;
	}

	inline static int32_t get_offset_of_worldNormal_8() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___worldNormal_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_worldNormal_8() const { return ___worldNormal_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_worldNormal_8() { return &___worldNormal_8; }
	inline void set_worldNormal_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___worldNormal_8 = value;
	}

	inline static int32_t get_offset_of_screenPosition_9() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___screenPosition_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_screenPosition_9() const { return ___screenPosition_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_screenPosition_9() { return &___screenPosition_9; }
	inline void set_screenPosition_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___screenPosition_9 = value;
	}

	inline static int32_t get_offset_of_displayIndex_10() { return static_cast<int32_t>(offsetof(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91, ___displayIndex_10)); }
	inline int32_t get_displayIndex_10() const { return ___displayIndex_10; }
	inline int32_t* get_address_of_displayIndex_10() { return &___displayIndex_10; }
	inline void set_displayIndex_10(int32_t value)
	{
		___displayIndex_10 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};
// Native definition for COM marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com
{
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___m_GameObject_0;
	BaseRaycaster_tC7F6105A89F54A38FBFC2659901855FDBB0E3966 * ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldPosition_7;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldNormal_8;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___screenPosition_9;
	int32_t ___displayIndex_10;
};

// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.QueryTriggerInteraction
struct QueryTriggerInteraction_t56ABDF7B81C5D989BE40455CF39647A532791739 
{
public:
	// System.Int32 UnityEngine.QueryTriggerInteraction::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(QueryTriggerInteraction_t56ABDF7B81C5D989BE40455CF39647A532791739, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent
struct VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F 
{
public:
	// UnityEngine.Bounds Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::StretchBounds
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___StretchBounds_0;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::UseBounds
	bool ___UseBounds_1;
	// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::SnapPoints
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___SnapPoints_2;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::RepeatSnapPoints
	bool ___RepeatSnapPoints_3;
	// System.Single Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent::SnapRadius
	float ___SnapRadius_4;

public:
	inline static int32_t get_offset_of_StretchBounds_0() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___StretchBounds_0)); }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  get_StretchBounds_0() const { return ___StretchBounds_0; }
	inline Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890 * get_address_of_StretchBounds_0() { return &___StretchBounds_0; }
	inline void set_StretchBounds_0(Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  value)
	{
		___StretchBounds_0 = value;
	}

	inline static int32_t get_offset_of_UseBounds_1() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___UseBounds_1)); }
	inline bool get_UseBounds_1() const { return ___UseBounds_1; }
	inline bool* get_address_of_UseBounds_1() { return &___UseBounds_1; }
	inline void set_UseBounds_1(bool value)
	{
		___UseBounds_1 = value;
	}

	inline static int32_t get_offset_of_SnapPoints_2() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___SnapPoints_2)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_SnapPoints_2() const { return ___SnapPoints_2; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_SnapPoints_2() { return &___SnapPoints_2; }
	inline void set_SnapPoints_2(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___SnapPoints_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SnapPoints_2), (void*)value);
	}

	inline static int32_t get_offset_of_RepeatSnapPoints_3() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___RepeatSnapPoints_3)); }
	inline bool get_RepeatSnapPoints_3() const { return ___RepeatSnapPoints_3; }
	inline bool* get_address_of_RepeatSnapPoints_3() { return &___RepeatSnapPoints_3; }
	inline void set_RepeatSnapPoints_3(bool value)
	{
		___RepeatSnapPoints_3 = value;
	}

	inline static int32_t get_offset_of_SnapRadius_4() { return static_cast<int32_t>(offsetof(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F, ___SnapRadius_4)); }
	inline float get_SnapRadius_4() const { return ___SnapRadius_4; }
	inline float* get_address_of_SnapRadius_4() { return &___SnapRadius_4; }
	inline void set_SnapRadius_4(float value)
	{
		___SnapRadius_4 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent
struct VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F_marshaled_pinvoke
{
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___StretchBounds_0;
	int32_t ___UseBounds_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_2;
	int32_t ___RepeatSnapPoints_3;
	float ___SnapRadius_4;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent
struct VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F_marshaled_com
{
	Bounds_tA2716F5212749C61B0E7B7B77E0CD3D79B742890  ___StretchBounds_0;
	int32_t ___UseBounds_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___SnapPoints_2;
	int32_t ___RepeatSnapPoints_3;
	float ___SnapRadius_4;
};

// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 
{
public:
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::id
	uint32_t ___id_1;
	// System.String Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::description
	String_t* ___description_2;
	// Microsoft.MixedReality.Toolkit.Utilities.AxisType Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::axisConstraint
	int32_t ___axisConstraint_3;

public:
	inline static int32_t get_offset_of_id_1() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___id_1)); }
	inline uint32_t get_id_1() const { return ___id_1; }
	inline uint32_t* get_address_of_id_1() { return &___id_1; }
	inline void set_id_1(uint32_t value)
	{
		___id_1 = value;
	}

	inline static int32_t get_offset_of_description_2() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___description_2)); }
	inline String_t* get_description_2() const { return ___description_2; }
	inline String_t** get_address_of_description_2() { return &___description_2; }
	inline void set_description_2(String_t* value)
	{
		___description_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___description_2), (void*)value);
	}

	inline static int32_t get_offset_of_axisConstraint_3() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073, ___axisConstraint_3)); }
	inline int32_t get_axisConstraint_3() const { return ___axisConstraint_3; }
	inline int32_t* get_address_of_axisConstraint_3() { return &___axisConstraint_3; }
	inline void set_axisConstraint_3(int32_t value)
	{
		___axisConstraint_3 = value;
	}
};

struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::<None>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CNoneU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CNoneU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields, ___U3CNoneU3Ek__BackingField_0)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CNoneU3Ek__BackingField_0() const { return ___U3CNoneU3Ek__BackingField_0; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CNoneU3Ek__BackingField_0() { return &___U3CNoneU3Ek__BackingField_0; }
	inline void set_U3CNoneU3Ek__BackingField_0(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CNoneU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CNoneU3Ek__BackingField_0))->___description_2), (void*)NULL);
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_pinvoke
{
	uint32_t ___id_1;
	char* ___description_2;
	int32_t ___axisConstraint_3;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction
struct MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_marshaled_com
{
	uint32_t ___id_1;
	Il2CppChar* ___description_2;
	int32_t ___axisConstraint_3;
};

// Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<RayDistance>k__BackingField
	float ___U3CRayDistanceU3Ek__BackingField_0;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Point>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Normal>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<Object>k__BackingField
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityRaycastHit Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastRaycastHit>k__BackingField
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  ___U3CLastRaycastHitU3Ek__BackingField_4;
	// UnityEngine.EventSystems.RaycastResult Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<LastGraphicsRaycastResult>k__BackingField
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<PointLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::<NormalLocalSpace>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CRayDistanceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CRayDistanceU3Ek__BackingField_0)); }
	inline float get_U3CRayDistanceU3Ek__BackingField_0() const { return ___U3CRayDistanceU3Ek__BackingField_0; }
	inline float* get_address_of_U3CRayDistanceU3Ek__BackingField_0() { return &___U3CRayDistanceU3Ek__BackingField_0; }
	inline void set_U3CRayDistanceU3Ek__BackingField_0(float value)
	{
		___U3CRayDistanceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_U3CPointU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointU3Ek__BackingField_1)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointU3Ek__BackingField_1() const { return ___U3CPointU3Ek__BackingField_1; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointU3Ek__BackingField_1() { return &___U3CPointU3Ek__BackingField_1; }
	inline void set_U3CPointU3Ek__BackingField_1(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CNormalU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalU3Ek__BackingField_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalU3Ek__BackingField_2() const { return ___U3CNormalU3Ek__BackingField_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalU3Ek__BackingField_2() { return &___U3CNormalU3Ek__BackingField_2; }
	inline void set_U3CNormalU3Ek__BackingField_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CObjectU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CObjectU3Ek__BackingField_3)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_U3CObjectU3Ek__BackingField_3() const { return ___U3CObjectU3Ek__BackingField_3; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_U3CObjectU3Ek__BackingField_3() { return &___U3CObjectU3Ek__BackingField_3; }
	inline void set_U3CObjectU3Ek__BackingField_3(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___U3CObjectU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CObjectU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CLastRaycastHitU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastRaycastHitU3Ek__BackingField_4)); }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  get_U3CLastRaycastHitU3Ek__BackingField_4() const { return ___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A * get_address_of_U3CLastRaycastHitU3Ek__BackingField_4() { return &___U3CLastRaycastHitU3Ek__BackingField_4; }
	inline void set_U3CLastRaycastHitU3Ek__BackingField_4(MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A  value)
	{
		___U3CLastRaycastHitU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___transform_7), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastRaycastHitU3Ek__BackingField_4))->___collider_10), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5)); }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  get_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() const { return ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91 * get_address_of_U3CLastGraphicsRaycastResultU3Ek__BackingField_5() { return &___U3CLastGraphicsRaycastResultU3Ek__BackingField_5; }
	inline void set_U3CLastGraphicsRaycastResultU3Ek__BackingField_5(RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91  value)
	{
		___U3CLastGraphicsRaycastResultU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___m_GameObject_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CLastGraphicsRaycastResultU3Ek__BackingField_5))->___module_1), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CPointLocalSpaceU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPointLocalSpaceU3Ek__BackingField_6() const { return ___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPointLocalSpaceU3Ek__BackingField_6() { return &___U3CPointLocalSpaceU3Ek__BackingField_6; }
	inline void set_U3CPointLocalSpaceU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPointLocalSpaceU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7, ___U3CNormalLocalSpaceU3Ek__BackingField_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CNormalLocalSpaceU3Ek__BackingField_7() const { return ___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CNormalLocalSpaceU3Ek__BackingField_7() { return &___U3CNormalLocalSpaceU3Ek__BackingField_7; }
	inline void set_U3CNormalLocalSpaceU3Ek__BackingField_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CNormalLocalSpaceU3Ek__BackingField_7 = value;
	}
};

// Native definition for P/Invoke marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_pinvoke
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_pinvoke ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_pinvoke ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};
// Native definition for COM marshalling of Microsoft.MixedReality.Toolkit.Physics.FocusDetails
struct FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7_marshaled_com
{
	float ___U3CRayDistanceU3Ek__BackingField_0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointU3Ek__BackingField_1;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalU3Ek__BackingField_2;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___U3CObjectU3Ek__BackingField_3;
	MixedRealityRaycastHit_t17451FCC62C3327AFF436240AB842E81270CFA5A_marshaled_com ___U3CLastRaycastHitU3Ek__BackingField_4;
	RaycastResult_t991BCED43A91EDD8580F39631DA07B1F88C58B91_marshaled_com ___U3CLastGraphicsRaycastResultU3Ek__BackingField_5;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPointLocalSpaceU3Ek__BackingField_6;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CNormalLocalSpaceU3Ek__BackingField_7;
};

// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16
struct U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB  : public RuntimeObject
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Runtime.CompilerServices.AsyncVoidMethodBuilder Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::<>t__builder
	AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  ___U3CU3Et__builder_1;
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::<>4__this
	PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * ___U3CU3E4__this_2;
	// System.Runtime.CompilerServices.TaskAwaiter Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::<>u__1
	TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  ___U3CU3Eu__1_3;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3Et__builder_1() { return static_cast<int32_t>(offsetof(U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB, ___U3CU3Et__builder_1)); }
	inline AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  get_U3CU3Et__builder_1() const { return ___U3CU3Et__builder_1; }
	inline AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * get_address_of_U3CU3Et__builder_1() { return &___U3CU3Et__builder_1; }
	inline void set_U3CU3Et__builder_1(AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  value)
	{
		___U3CU3Et__builder_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Et__builder_1))->___m_synchronizationContext_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CU3Et__builder_1))->___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CU3Et__builder_1))->___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Et__builder_1))->___m_task_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_U3CU3E4__this_2() { return static_cast<int32_t>(offsetof(U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB, ___U3CU3E4__this_2)); }
	inline PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * get_U3CU3E4__this_2() const { return ___U3CU3E4__this_2; }
	inline PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 ** get_address_of_U3CU3E4__this_2() { return &___U3CU3E4__this_2; }
	inline void set_U3CU3E4__this_2(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * value)
	{
		___U3CU3E4__this_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3Eu__1_3() { return static_cast<int32_t>(offsetof(U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB, ___U3CU3Eu__1_3)); }
	inline TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  get_U3CU3Eu__1_3() const { return ___U3CU3Eu__1_3; }
	inline TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * get_address_of_U3CU3Eu__1_3() { return &___U3CU3Eu__1_3; }
	inline void set_U3CU3Eu__1_3(TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  value)
	{
		___U3CU3Eu__1_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CU3Eu__1_3))->___m_task_0), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform
struct MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::pose
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___pose_1;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::scale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scale_2;

public:
	inline static int32_t get_offset_of_pose_1() { return static_cast<int32_t>(offsetof(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14, ___pose_1)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_pose_1() const { return ___pose_1; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_pose_1() { return &___pose_1; }
	inline void set_pose_1(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___pose_1 = value;
	}

	inline static int32_t get_offset_of_scale_2() { return static_cast<int32_t>(offsetof(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14, ___scale_2)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_scale_2() const { return ___scale_2; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_scale_2() { return &___scale_2; }
	inline void set_scale_2(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___scale_2 = value;
	}
};

struct MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_StaticFields
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::<Identity>k__BackingField
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___U3CIdentityU3Ek__BackingField_0;

public:
	inline static int32_t get_offset_of_U3CIdentityU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14_StaticFields, ___U3CIdentityU3Ek__BackingField_0)); }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  get_U3CIdentityU3Ek__BackingField_0() const { return ___U3CIdentityU3Ek__BackingField_0; }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * get_address_of_U3CIdentityU3Ek__BackingField_0() { return &___U3CIdentityU3Ek__BackingField_0; }
	inline void set_U3CIdentityU3Ek__BackingField_0(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  value)
	{
		___U3CIdentityU3Ek__BackingField_0 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>
struct Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F, ___dictionary_0)); }
	inline Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F, ___current_3)); }
	inline KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___key_0), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.Object,UnityEngine.Vector3>
struct Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028, ___dictionary_0)); }
	inline Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028, ___current_3)); }
	inline KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822 * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___current_3))->___key_0), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::dictionary
	Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::index
	int32_t ___index_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::version
	int32_t ___version_2;
	// TValue System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator::currentValue
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  ___currentValue_3;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7, ___dictionary_0)); }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_index_1() { return static_cast<int32_t>(offsetof(Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7, ___index_1)); }
	inline int32_t get_index_1() const { return ___index_1; }
	inline int32_t* get_address_of_index_1() { return &___index_1; }
	inline void set_index_1(int32_t value)
	{
		___index_1 = value;
	}

	inline static int32_t get_offset_of_version_2() { return static_cast<int32_t>(offsetof(Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7, ___version_2)); }
	inline int32_t get_version_2() const { return ___version_2; }
	inline int32_t* get_address_of_version_2() { return &___version_2; }
	inline void set_version_2(int32_t value)
	{
		___version_2 = value;
	}

	inline static int32_t get_offset_of_currentValue_3() { return static_cast<int32_t>(offsetof(Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7, ___currentValue_3)); }
	inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  get_currentValue_3() const { return ___currentValue_3; }
	inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * get_address_of_currentValue_3() { return &___currentValue_3; }
	inline void set_currentValue_3(PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  value)
	{
		___currentValue_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___currentValue_3))->___pointer_0), (void*)NULL);
	}
};


// System.Collections.Generic.KeyValuePair`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 
{
public:
	// TKey System.Collections.Generic.KeyValuePair`2::key
	uint32_t ___key_0;
	// TValue System.Collections.Generic.KeyValuePair`2::value
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  ___value_1;

public:
	inline static int32_t get_offset_of_key_0() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207, ___key_0)); }
	inline uint32_t get_key_0() const { return ___key_0; }
	inline uint32_t* get_address_of_key_0() { return &___key_0; }
	inline void set_key_0(uint32_t value)
	{
		___key_0 = value;
	}

	inline static int32_t get_offset_of_value_1() { return static_cast<int32_t>(offsetof(KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207, ___value_1)); }
	inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  get_value_1() const { return ___value_1; }
	inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * get_address_of_value_1() { return &___value_1; }
	inline void set_value_1(PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  value)
	{
		___value_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___value_1))->___pointer_0), (void*)NULL);
	}
};


// System.Nullable`1<Microsoft.MixedReality.Toolkit.UI.SliderAxis>
struct Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 
{
public:
	// T System.Nullable`1::value
	int32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610, ___value_0)); }
	inline int32_t get_value_0() const { return ___value_0; }
	inline int32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(int32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>
struct Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 
{
public:
	// T System.Nullable`1::value
	uint8_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231, ___value_0)); }
	inline uint8_t get_value_0() const { return ___value_0; }
	inline uint8_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(uint8_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Nullable`1<System.ByteEnum>
struct Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 
{
public:
	// T System.Nullable`1::value
	uint8_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152, ___value_0)); }
	inline uint8_t get_value_0() const { return ___value_0; }
	inline uint8_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(uint8_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Nullable`1<System.Int32Enum>
struct Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 
{
public:
	// T System.Nullable`1::value
	int32_t ___value_0;
	// System.Boolean System.Nullable`1::has_value
	bool ___has_value_1;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833, ___value_0)); }
	inline int32_t get_value_0() const { return ___value_0; }
	inline int32_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(int32_t value)
	{
		___value_0 = value;
	}

	inline static int32_t get_offset_of_has_value_1() { return static_cast<int32_t>(offsetof(Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833, ___has_value_1)); }
	inline bool get_has_value_1() const { return ___has_value_1; }
	inline bool* get_address_of_has_value_1() { return &___has_value_1; }
	inline void set_has_value_1(bool value)
	{
		___has_value_1 = value;
	}
};


// System.Runtime.CompilerServices.AsyncTaskMethodBuilder
struct AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 
{
public:
	// System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Threading.Tasks.VoidTaskResult> System.Runtime.CompilerServices.AsyncTaskMethodBuilder::m_builder
	AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9  ___m_builder_1;

public:
	inline static int32_t get_offset_of_m_builder_1() { return static_cast<int32_t>(offsetof(AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487, ___m_builder_1)); }
	inline AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9  get_m_builder_1() const { return ___m_builder_1; }
	inline AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9 * get_address_of_m_builder_1() { return &___m_builder_1; }
	inline void set_m_builder_1(AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9  value)
	{
		___m_builder_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___m_builder_1))->___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___m_builder_1))->___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___m_builder_1))->___m_task_2), (void*)NULL);
		#endif
	}
};

struct AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487_StaticFields
{
public:
	// System.Threading.Tasks.Task`1<System.Threading.Tasks.VoidTaskResult> System.Runtime.CompilerServices.AsyncTaskMethodBuilder::s_cachedCompleted
	Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * ___s_cachedCompleted_0;

public:
	inline static int32_t get_offset_of_s_cachedCompleted_0() { return static_cast<int32_t>(offsetof(AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487_StaticFields, ___s_cachedCompleted_0)); }
	inline Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * get_s_cachedCompleted_0() const { return ___s_cachedCompleted_0; }
	inline Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 ** get_address_of_s_cachedCompleted_0() { return &___s_cachedCompleted_0; }
	inline void set_s_cachedCompleted_0(Task_1_t1359D75350E9D976BFA28AD96E417450DE277673 * value)
	{
		___s_cachedCompleted_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_cachedCompleted_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Runtime.CompilerServices.AsyncTaskMethodBuilder
struct AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487_marshaled_pinvoke
{
	AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9  ___m_builder_1;
};
// Native definition for COM marshalling of System.Runtime.CompilerServices.AsyncTaskMethodBuilder
struct AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487_marshaled_com
{
	AsyncTaskMethodBuilder_1_t66ED1808B26B8081A2804D6A750D13386E360BD9  ___m_builder_1;
};

// System.SystemException
struct SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782  : public Exception_t
{
public:

public:
};


// System.Type
struct Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// UnityEngine.GameObject
struct GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.BaseInputEventData
struct BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE  : public BaseEventData_t46C9D2AE3183A742EDE89944AF64A23DBF1B80A5
{
public:
	// System.DateTime Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<EventTime>k__BackingField
	DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  ___U3CEventTimeU3Ek__BackingField_2;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<InputSource>k__BackingField
	RuntimeObject* ___U3CInputSourceU3Ek__BackingField_3;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::<MixedRealityInputAction>k__BackingField
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___U3CMixedRealityInputActionU3Ek__BackingField_4;

public:
	inline static int32_t get_offset_of_U3CEventTimeU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CEventTimeU3Ek__BackingField_2)); }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  get_U3CEventTimeU3Ek__BackingField_2() const { return ___U3CEventTimeU3Ek__BackingField_2; }
	inline DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132 * get_address_of_U3CEventTimeU3Ek__BackingField_2() { return &___U3CEventTimeU3Ek__BackingField_2; }
	inline void set_U3CEventTimeU3Ek__BackingField_2(DateTime_t349B7449FBAAFF4192636E2B7A07694DA9236132  value)
	{
		___U3CEventTimeU3Ek__BackingField_2 = value;
	}

	inline static int32_t get_offset_of_U3CInputSourceU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CInputSourceU3Ek__BackingField_3)); }
	inline RuntimeObject* get_U3CInputSourceU3Ek__BackingField_3() const { return ___U3CInputSourceU3Ek__BackingField_3; }
	inline RuntimeObject** get_address_of_U3CInputSourceU3Ek__BackingField_3() { return &___U3CInputSourceU3Ek__BackingField_3; }
	inline void set_U3CInputSourceU3Ek__BackingField_3(RuntimeObject* value)
	{
		___U3CInputSourceU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE, ___U3CMixedRealityInputActionU3Ek__BackingField_4)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_U3CMixedRealityInputActionU3Ek__BackingField_4() const { return ___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_U3CMixedRealityInputActionU3Ek__BackingField_4() { return &___U3CMixedRealityInputActionU3Ek__BackingField_4; }
	inline void set_U3CMixedRealityInputActionU3Ek__BackingField_4(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___U3CMixedRealityInputActionU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___U3CMixedRealityInputActionU3Ek__BackingField_4))->___description_2), (void*)NULL);
	}
};


// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17
struct U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868  : public RuntimeObject
{
public:
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Runtime.CompilerServices.AsyncTaskMethodBuilder Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::<>t__builder
	AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487  ___U3CU3Et__builder_1;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::focusEnterTimeOnStart
	float ___focusEnterTimeOnStart_2;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::tappedTimeOnStart
	float ___tappedTimeOnStart_3;
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::<>4__this
	PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * ___U3CU3E4__this_4;
	// System.Object Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::<>u__1
	RuntimeObject * ___U3CU3Eu__1_5;

public:
	inline static int32_t get_offset_of_U3CU3E1__state_0() { return static_cast<int32_t>(offsetof(U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868, ___U3CU3E1__state_0)); }
	inline int32_t get_U3CU3E1__state_0() const { return ___U3CU3E1__state_0; }
	inline int32_t* get_address_of_U3CU3E1__state_0() { return &___U3CU3E1__state_0; }
	inline void set_U3CU3E1__state_0(int32_t value)
	{
		___U3CU3E1__state_0 = value;
	}

	inline static int32_t get_offset_of_U3CU3Et__builder_1() { return static_cast<int32_t>(offsetof(U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868, ___U3CU3Et__builder_1)); }
	inline AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487  get_U3CU3Et__builder_1() const { return ___U3CU3Et__builder_1; }
	inline AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * get_address_of_U3CU3Et__builder_1() { return &___U3CU3Et__builder_1; }
	inline void set_U3CU3Et__builder_1(AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487  value)
	{
		___U3CU3Et__builder_1 = value;
		Il2CppCodeGenWriteBarrier((void**)&((&((&(((&___U3CU3Et__builder_1))->___m_builder_1))->___m_coreState_1))->___m_stateMachine_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&((&(((&___U3CU3Et__builder_1))->___m_builder_1))->___m_coreState_1))->___m_defaultContextAction_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___U3CU3Et__builder_1))->___m_builder_1))->___m_task_2), (void*)NULL);
		#endif
	}

	inline static int32_t get_offset_of_focusEnterTimeOnStart_2() { return static_cast<int32_t>(offsetof(U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868, ___focusEnterTimeOnStart_2)); }
	inline float get_focusEnterTimeOnStart_2() const { return ___focusEnterTimeOnStart_2; }
	inline float* get_address_of_focusEnterTimeOnStart_2() { return &___focusEnterTimeOnStart_2; }
	inline void set_focusEnterTimeOnStart_2(float value)
	{
		___focusEnterTimeOnStart_2 = value;
	}

	inline static int32_t get_offset_of_tappedTimeOnStart_3() { return static_cast<int32_t>(offsetof(U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868, ___tappedTimeOnStart_3)); }
	inline float get_tappedTimeOnStart_3() const { return ___tappedTimeOnStart_3; }
	inline float* get_address_of_tappedTimeOnStart_3() { return &___tappedTimeOnStart_3; }
	inline void set_tappedTimeOnStart_3(float value)
	{
		___tappedTimeOnStart_3 = value;
	}

	inline static int32_t get_offset_of_U3CU3E4__this_4() { return static_cast<int32_t>(offsetof(U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868, ___U3CU3E4__this_4)); }
	inline PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * get_U3CU3E4__this_4() const { return ___U3CU3E4__this_4; }
	inline PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 ** get_address_of_U3CU3E4__this_4() { return &___U3CU3E4__this_4; }
	inline void set_U3CU3E4__this_4(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * value)
	{
		___U3CU3E4__this_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3E4__this_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CU3Eu__1_5() { return static_cast<int32_t>(offsetof(U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868, ___U3CU3Eu__1_5)); }
	inline RuntimeObject * get_U3CU3Eu__1_5() const { return ___U3CU3Eu__1_5; }
	inline RuntimeObject ** get_address_of_U3CU3Eu__1_5() { return &___U3CU3Eu__1_5; }
	inline void set_U3CU3Eu__1_5(RuntimeObject * value)
	{
		___U3CU3Eu__1_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CU3Eu__1_5), (void*)value);
	}
};


// System.ArgumentException
struct ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1  : public SystemException_t5380468142AA850BE4A341D7AF3EAB9C78746782
{
public:
	// System.String System.ArgumentException::m_paramName
	String_t* ___m_paramName_17;

public:
	inline static int32_t get_offset_of_m_paramName_17() { return static_cast<int32_t>(offsetof(ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1, ___m_paramName_17)); }
	inline String_t* get_m_paramName_17() const { return ___m_paramName_17; }
	inline String_t** get_address_of_m_paramName_17() { return &___m_paramName_17; }
	inline void set_m_paramName_17(String_t* value)
	{
		___m_paramName_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_paramName_17), (void*)value);
	}
};


// System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>
struct Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 
{
public:
	// System.Collections.Generic.Dictionary`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::dictionary
	Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * ___dictionary_0;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::version
	int32_t ___version_1;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::index
	int32_t ___index_2;
	// System.Collections.Generic.KeyValuePair`2<TKey,TValue> System.Collections.Generic.Dictionary`2/Enumerator::current
	KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  ___current_3;
	// System.Int32 System.Collections.Generic.Dictionary`2/Enumerator::getEnumeratorRetType
	int32_t ___getEnumeratorRetType_4;

public:
	inline static int32_t get_offset_of_dictionary_0() { return static_cast<int32_t>(offsetof(Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1, ___dictionary_0)); }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * get_dictionary_0() const { return ___dictionary_0; }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F ** get_address_of_dictionary_0() { return &___dictionary_0; }
	inline void set_dictionary_0(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * value)
	{
		___dictionary_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dictionary_0), (void*)value);
	}

	inline static int32_t get_offset_of_version_1() { return static_cast<int32_t>(offsetof(Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1, ___version_1)); }
	inline int32_t get_version_1() const { return ___version_1; }
	inline int32_t* get_address_of_version_1() { return &___version_1; }
	inline void set_version_1(int32_t value)
	{
		___version_1 = value;
	}

	inline static int32_t get_offset_of_index_2() { return static_cast<int32_t>(offsetof(Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1, ___index_2)); }
	inline int32_t get_index_2() const { return ___index_2; }
	inline int32_t* get_address_of_index_2() { return &___index_2; }
	inline void set_index_2(int32_t value)
	{
		___index_2 = value;
	}

	inline static int32_t get_offset_of_current_3() { return static_cast<int32_t>(offsetof(Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1, ___current_3)); }
	inline KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  get_current_3() const { return ___current_3; }
	inline KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 * get_address_of_current_3() { return &___current_3; }
	inline void set_current_3(KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  value)
	{
		___current_3 = value;
		Il2CppCodeGenWriteBarrier((void**)&((&(((&___current_3))->___value_1))->___pointer_0), (void*)NULL);
	}

	inline static int32_t get_offset_of_getEnumeratorRetType_4() { return static_cast<int32_t>(offsetof(Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1, ___getEnumeratorRetType_4)); }
	inline int32_t get_getEnumeratorRetType_4() const { return ___getEnumeratorRetType_4; }
	inline int32_t* get_address_of_getEnumeratorRetType_4() { return &___getEnumeratorRetType_4; }
	inline void set_getEnumeratorRetType_4(int32_t value)
	{
		___getEnumeratorRetType_4 = value;
	}
};


// UnityEngine.Behaviour
struct Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Collider
struct Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Rigidbody
struct Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData
struct InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.InputEventData::<Handedness>k__BackingField
	uint8_t ___U3CHandednessU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CHandednessU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A, ___U3CHandednessU3Ek__BackingField_5)); }
	inline uint8_t get_U3CHandednessU3Ek__BackingField_5() const { return ___U3CHandednessU3Ek__BackingField_5; }
	inline uint8_t* get_address_of_U3CHandednessU3Ek__BackingField_5() { return &___U3CHandednessU3Ek__BackingField_5; }
	inline void set_U3CHandednessU3Ek__BackingField_5(uint8_t value)
	{
		___U3CHandednessU3Ek__BackingField_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourceStateEventData
struct SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8  : public BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8, ___U3CControllerU3Ek__BackingField_5)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_5() const { return ___U3CControllerU3Ek__BackingField_5; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_5() { return &___U3CControllerU3Ek__BackingField_5; }
	inline void set_U3CControllerU3Ek__BackingField_5(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_5), (void*)value);
	}
};


// System.ArgumentOutOfRangeException
struct ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA  : public ArgumentException_tEDCD16F20A09ECE461C3DA766C16EDA8864057D1
{
public:
	// System.Object System.ArgumentOutOfRangeException::m_actualValue
	RuntimeObject * ___m_actualValue_19;

public:
	inline static int32_t get_offset_of_m_actualValue_19() { return static_cast<int32_t>(offsetof(ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA, ___m_actualValue_19)); }
	inline RuntimeObject * get_m_actualValue_19() const { return ___m_actualValue_19; }
	inline RuntimeObject ** get_address_of_m_actualValue_19() { return &___m_actualValue_19; }
	inline void set_m_actualValue_19(RuntimeObject * value)
	{
		___m_actualValue_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_actualValue_19), (void*)value);
	}
};

struct ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA_StaticFields
{
public:
	// System.String modreq(System.Runtime.CompilerServices.IsVolatile) System.ArgumentOutOfRangeException::_rangeMessage
	String_t* ____rangeMessage_18;

public:
	inline static int32_t get_offset_of__rangeMessage_18() { return static_cast<int32_t>(offsetof(ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA_StaticFields, ____rangeMessage_18)); }
	inline String_t* get__rangeMessage_18() const { return ____rangeMessage_18; }
	inline String_t** get_address_of__rangeMessage_18() { return &____rangeMessage_18; }
	inline void set__rangeMessage_18(String_t* value)
	{
		____rangeMessage_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____rangeMessage_18), (void*)value);
	}
};


// UnityEngine.MonoBehaviour
struct MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429  : public Behaviour_tBDC7E9C3C898AD8348891B82D3E345801D920CA8
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager
struct ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::translationElasticConfigurationObject
	ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * ___translationElasticConfigurationObject_4;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::rotationElasticConfigurationObject
	ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * ___rotationElasticConfigurationObject_5;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticConfiguration Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::scaleElasticConfigurationObject
	ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * ___scaleElasticConfigurationObject_6;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::translationElasticExtent
	VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  ___translationElasticExtent_7;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.QuaternionElasticExtent Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::rotationElasticExtent
	QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA  ___rotationElasticExtent_8;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.VolumeElasticExtent Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::scaleElasticExtent
	VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  ___scaleElasticExtent_9;
	// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::elasticTypes
	int32_t ___elasticTypes_10;
	// System.Boolean Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::<EnableElasticsUpdate>k__BackingField
	bool ___U3CEnableElasticsUpdateU3Ek__BackingField_11;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::translationElastic
	RuntimeObject* ___translationElastic_13;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Quaternion> Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::rotationElastic
	RuntimeObject* ___rotationElastic_14;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.IElasticSystem`1<UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::scaleElastic
	RuntimeObject* ___scaleElastic_15;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::hostTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___hostTransform_16;
	// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::elasticTypesSimulating
	int32_t ___elasticTypesSimulating_17;

public:
	inline static int32_t get_offset_of_translationElasticConfigurationObject_4() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___translationElasticConfigurationObject_4)); }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * get_translationElasticConfigurationObject_4() const { return ___translationElasticConfigurationObject_4; }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB ** get_address_of_translationElasticConfigurationObject_4() { return &___translationElasticConfigurationObject_4; }
	inline void set_translationElasticConfigurationObject_4(ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * value)
	{
		___translationElasticConfigurationObject_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translationElasticConfigurationObject_4), (void*)value);
	}

	inline static int32_t get_offset_of_rotationElasticConfigurationObject_5() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___rotationElasticConfigurationObject_5)); }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * get_rotationElasticConfigurationObject_5() const { return ___rotationElasticConfigurationObject_5; }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB ** get_address_of_rotationElasticConfigurationObject_5() { return &___rotationElasticConfigurationObject_5; }
	inline void set_rotationElasticConfigurationObject_5(ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * value)
	{
		___rotationElasticConfigurationObject_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotationElasticConfigurationObject_5), (void*)value);
	}

	inline static int32_t get_offset_of_scaleElasticConfigurationObject_6() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___scaleElasticConfigurationObject_6)); }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * get_scaleElasticConfigurationObject_6() const { return ___scaleElasticConfigurationObject_6; }
	inline ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB ** get_address_of_scaleElasticConfigurationObject_6() { return &___scaleElasticConfigurationObject_6; }
	inline void set_scaleElasticConfigurationObject_6(ElasticConfiguration_t5E3D1C0E91332CB46807A64900E90060A1316DAB * value)
	{
		___scaleElasticConfigurationObject_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleElasticConfigurationObject_6), (void*)value);
	}

	inline static int32_t get_offset_of_translationElasticExtent_7() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___translationElasticExtent_7)); }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  get_translationElasticExtent_7() const { return ___translationElasticExtent_7; }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F * get_address_of_translationElasticExtent_7() { return &___translationElasticExtent_7; }
	inline void set_translationElasticExtent_7(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  value)
	{
		___translationElasticExtent_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___translationElasticExtent_7))->___SnapPoints_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_rotationElasticExtent_8() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___rotationElasticExtent_8)); }
	inline QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA  get_rotationElasticExtent_8() const { return ___rotationElasticExtent_8; }
	inline QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA * get_address_of_rotationElasticExtent_8() { return &___rotationElasticExtent_8; }
	inline void set_rotationElasticExtent_8(QuaternionElasticExtent_t57CBE5CB07F36EAC6E25CA1C6318F3D7C340C7DA  value)
	{
		___rotationElasticExtent_8 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___rotationElasticExtent_8))->___SnapPoints_0), (void*)NULL);
	}

	inline static int32_t get_offset_of_scaleElasticExtent_9() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___scaleElasticExtent_9)); }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  get_scaleElasticExtent_9() const { return ___scaleElasticExtent_9; }
	inline VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F * get_address_of_scaleElasticExtent_9() { return &___scaleElasticExtent_9; }
	inline void set_scaleElasticExtent_9(VolumeElasticExtent_tA7C423284C0CA589BAB96B740AC0699B61FDE19F  value)
	{
		___scaleElasticExtent_9 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___scaleElasticExtent_9))->___SnapPoints_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_elasticTypes_10() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___elasticTypes_10)); }
	inline int32_t get_elasticTypes_10() const { return ___elasticTypes_10; }
	inline int32_t* get_address_of_elasticTypes_10() { return &___elasticTypes_10; }
	inline void set_elasticTypes_10(int32_t value)
	{
		___elasticTypes_10 = value;
	}

	inline static int32_t get_offset_of_U3CEnableElasticsUpdateU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___U3CEnableElasticsUpdateU3Ek__BackingField_11)); }
	inline bool get_U3CEnableElasticsUpdateU3Ek__BackingField_11() const { return ___U3CEnableElasticsUpdateU3Ek__BackingField_11; }
	inline bool* get_address_of_U3CEnableElasticsUpdateU3Ek__BackingField_11() { return &___U3CEnableElasticsUpdateU3Ek__BackingField_11; }
	inline void set_U3CEnableElasticsUpdateU3Ek__BackingField_11(bool value)
	{
		___U3CEnableElasticsUpdateU3Ek__BackingField_11 = value;
	}

	inline static int32_t get_offset_of_translationElastic_13() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___translationElastic_13)); }
	inline RuntimeObject* get_translationElastic_13() const { return ___translationElastic_13; }
	inline RuntimeObject** get_address_of_translationElastic_13() { return &___translationElastic_13; }
	inline void set_translationElastic_13(RuntimeObject* value)
	{
		___translationElastic_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___translationElastic_13), (void*)value);
	}

	inline static int32_t get_offset_of_rotationElastic_14() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___rotationElastic_14)); }
	inline RuntimeObject* get_rotationElastic_14() const { return ___rotationElastic_14; }
	inline RuntimeObject** get_address_of_rotationElastic_14() { return &___rotationElastic_14; }
	inline void set_rotationElastic_14(RuntimeObject* value)
	{
		___rotationElastic_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotationElastic_14), (void*)value);
	}

	inline static int32_t get_offset_of_scaleElastic_15() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___scaleElastic_15)); }
	inline RuntimeObject* get_scaleElastic_15() const { return ___scaleElastic_15; }
	inline RuntimeObject** get_address_of_scaleElastic_15() { return &___scaleElastic_15; }
	inline void set_scaleElastic_15(RuntimeObject* value)
	{
		___scaleElastic_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleElastic_15), (void*)value);
	}

	inline static int32_t get_offset_of_hostTransform_16() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___hostTransform_16)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_hostTransform_16() const { return ___hostTransform_16; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_hostTransform_16() { return &___hostTransform_16; }
	inline void set_hostTransform_16(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___hostTransform_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hostTransform_16), (void*)value);
	}

	inline static int32_t get_offset_of_elasticTypesSimulating_17() { return static_cast<int32_t>(offsetof(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD, ___elasticTypesSimulating_17)); }
	inline int32_t get_elasticTypesSimulating_17() const { return ___elasticTypesSimulating_17; }
	inline int32_t* get_address_of_elasticTypesSimulating_17() { return &___elasticTypesSimulating_17; }
	inline void set_elasticTypesSimulating_17(int32_t value)
	{
		___elasticTypesSimulating_17 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler
struct BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::focusEnabled
	bool ___focusEnabled_4;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer> Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::<Focusers>k__BackingField
	List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A * ___U3CFocusersU3Ek__BackingField_5;

public:
	inline static int32_t get_offset_of_focusEnabled_4() { return static_cast<int32_t>(offsetof(BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2, ___focusEnabled_4)); }
	inline bool get_focusEnabled_4() const { return ___focusEnabled_4; }
	inline bool* get_address_of_focusEnabled_4() { return &___focusEnabled_4; }
	inline void set_focusEnabled_4(bool value)
	{
		___focusEnabled_4 = value;
	}

	inline static int32_t get_offset_of_U3CFocusersU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2, ___U3CFocusersU3Ek__BackingField_5)); }
	inline List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A * get_U3CFocusersU3Ek__BackingField_5() const { return ___U3CFocusersU3Ek__BackingField_5; }
	inline List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A ** get_address_of_U3CFocusersU3Ek__BackingField_5() { return &___U3CFocusersU3Ek__BackingField_5; }
	inline void set_U3CFocusersU3Ek__BackingField_5(List_1_tFB8AE15106688FE7121599865683AA5D4CBC6B0A * value)
	{
		___U3CFocusersU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CFocusersU3Ek__BackingField_5), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable
struct BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Input.TouchableEventType Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::eventsToReceive
	int32_t ___eventsToReceive_4;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable::debounceThreshold
	float ___debounceThreshold_5;

public:
	inline static int32_t get_offset_of_eventsToReceive_4() { return static_cast<int32_t>(offsetof(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03, ___eventsToReceive_4)); }
	inline int32_t get_eventsToReceive_4() const { return ___eventsToReceive_4; }
	inline int32_t* get_address_of_eventsToReceive_4() { return &___eventsToReceive_4; }
	inline void set_eventsToReceive_4(int32_t value)
	{
		___eventsToReceive_4 = value;
	}

	inline static int32_t get_offset_of_debounceThreshold_5() { return static_cast<int32_t>(offsetof(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03, ___debounceThreshold_5)); }
	inline float get_debounceThreshold_5() const { return ___debounceThreshold_5; }
	inline float* get_address_of_debounceThreshold_5() { return &___debounceThreshold_5; }
	inline void set_debounceThreshold_5(float value)
	{
		___debounceThreshold_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>
struct InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	float ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5, ___U3CInputDataU3Ek__BackingField_6)); }
	inline float get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline float* get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(float value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector3>
struct InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.InputEventData`1::<InputData>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CInputDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CInputDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D, ___U3CInputDataU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CInputDataU3Ek__BackingField_6() const { return ___U3CInputDataU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CInputDataU3Ek__BackingField_6() { return &___U3CInputDataU3Ek__BackingField_6; }
	inline void set_U3CInputDataU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CInputDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener
struct InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.InputSystemGlobalHandlerListener::lateInitialize
	bool ___lateInitialize_4;

public:
	inline static int32_t get_offset_of_lateInitialize_4() { return static_cast<int32_t>(offsetof(InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5, ___lateInitialize_4)); }
	inline bool get_lateInitialize_4() const { return ___lateInitialize_4; }
	inline bool* get_address_of_lateInitialize_4() { return &___lateInitialize_4; }
	inline void set_lateInitialize_4(bool value)
	{
		___lateInitialize_4 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData
struct MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940  : public InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Pointer>k__BackingField
	RuntimeObject* ___U3CPointerU3Ek__BackingField_6;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::<Count>k__BackingField
	int32_t ___U3CCountU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CPointerU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CPointerU3Ek__BackingField_6)); }
	inline RuntimeObject* get_U3CPointerU3Ek__BackingField_6() const { return ___U3CPointerU3Ek__BackingField_6; }
	inline RuntimeObject** get_address_of_U3CPointerU3Ek__BackingField_6() { return &___U3CPointerU3Ek__BackingField_6; }
	inline void set_U3CPointerU3Ek__BackingField_6(RuntimeObject* value)
	{
		___U3CPointerU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPointerU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCountU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940, ___U3CCountU3Ek__BackingField_7)); }
	inline int32_t get_U3CCountU3Ek__BackingField_7() const { return ___U3CCountU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3CCountU3Ek__BackingField_7() { return &___U3CCountU3Ek__BackingField_7; }
	inline void set_U3CCountU3Ek__BackingField_7(int32_t value)
	{
		___U3CCountU3Ek__BackingField_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable
struct NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::ShowTetherWhenManipulating
	bool ___ShowTetherWhenManipulating_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable::IsBoundsHandles
	bool ___IsBoundsHandles_5;

public:
	inline static int32_t get_offset_of_ShowTetherWhenManipulating_4() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___ShowTetherWhenManipulating_4)); }
	inline bool get_ShowTetherWhenManipulating_4() const { return ___ShowTetherWhenManipulating_4; }
	inline bool* get_address_of_ShowTetherWhenManipulating_4() { return &___ShowTetherWhenManipulating_4; }
	inline void set_ShowTetherWhenManipulating_4(bool value)
	{
		___ShowTetherWhenManipulating_4 = value;
	}

	inline static int32_t get_offset_of_IsBoundsHandles_5() { return static_cast<int32_t>(offsetof(NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E, ___IsBoundsHandles_5)); }
	inline bool get_IsBoundsHandles_5() const { return ___IsBoundsHandles_5; }
	inline bool* get_address_of_IsBoundsHandles_5() { return &___IsBoundsHandles_5; }
	inline void set_IsBoundsHandles_5(bool value)
	{
		___IsBoundsHandles_5 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.TrackingState>
struct SourcePoseEventData_1_tB0375F43F33B46CEA5D6000C5D4568E11AE9F590  : public SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1::<SourceData>k__BackingField
	int32_t ___U3CSourceDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CSourceDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SourcePoseEventData_1_tB0375F43F33B46CEA5D6000C5D4568E11AE9F590, ___U3CSourceDataU3Ek__BackingField_6)); }
	inline int32_t get_U3CSourceDataU3Ek__BackingField_6() const { return ___U3CSourceDataU3Ek__BackingField_6; }
	inline int32_t* get_address_of_U3CSourceDataU3Ek__BackingField_6() { return &___U3CSourceDataU3Ek__BackingField_6; }
	inline void set_U3CSourceDataU3Ek__BackingField_6(int32_t value)
	{
		___U3CSourceDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>
struct SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141  : public SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1::<SourceData>k__BackingField
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___U3CSourceDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CSourceDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141, ___U3CSourceDataU3Ek__BackingField_6)); }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  get_U3CSourceDataU3Ek__BackingField_6() const { return ___U3CSourceDataU3Ek__BackingField_6; }
	inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * get_address_of_U3CSourceDataU3Ek__BackingField_6() { return &___U3CSourceDataU3Ek__BackingField_6; }
	inline void set_U3CSourceDataU3Ek__BackingField_6(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  value)
	{
		___U3CSourceDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Quaternion>
struct SourcePoseEventData_1_tD410360A48B6B0AE8038633AA1162438C43932B8  : public SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1::<SourceData>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3CSourceDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CSourceDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SourcePoseEventData_1_tD410360A48B6B0AE8038633AA1162438C43932B8, ___U3CSourceDataU3Ek__BackingField_6)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3CSourceDataU3Ek__BackingField_6() const { return ___U3CSourceDataU3Ek__BackingField_6; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3CSourceDataU3Ek__BackingField_6() { return &___U3CSourceDataU3Ek__BackingField_6; }
	inline void set_U3CSourceDataU3Ek__BackingField_6(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3CSourceDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Vector2>
struct SourcePoseEventData_1_t430F7C5A3C56DD25E51A5E6F637258FD7EE65A33  : public SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1::<SourceData>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CSourceDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CSourceDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SourcePoseEventData_1_t430F7C5A3C56DD25E51A5E6F637258FD7EE65A33, ___U3CSourceDataU3Ek__BackingField_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CSourceDataU3Ek__BackingField_6() const { return ___U3CSourceDataU3Ek__BackingField_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CSourceDataU3Ek__BackingField_6() { return &___U3CSourceDataU3Ek__BackingField_6; }
	inline void set_U3CSourceDataU3Ek__BackingField_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CSourceDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Vector3>
struct SourcePoseEventData_1_t4E368D6217C6DB36C64907D93C386DBD7181E438  : public SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8
{
public:
	// T Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1::<SourceData>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CSourceDataU3Ek__BackingField_6;

public:
	inline static int32_t get_offset_of_U3CSourceDataU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SourcePoseEventData_1_t4E368D6217C6DB36C64907D93C386DBD7181E438, ___U3CSourceDataU3Ek__BackingField_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CSourceDataU3Ek__BackingField_6() const { return ___U3CSourceDataU3Ek__BackingField_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CSourceDataU3Ek__BackingField_6() { return &___U3CSourceDataU3Ek__BackingField_6; }
	inline void set_U3CSourceDataU3Ek__BackingField_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CSourceDataU3Ek__BackingField_6 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ConstraintManager
struct ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ConstraintManager::autoConstraintSelection
	bool ___autoConstraintSelection_4;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.TransformConstraint> Microsoft.MixedReality.Toolkit.UI.ConstraintManager::selectedConstraints
	List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * ___selectedConstraints_5;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.UI.TransformConstraint> Microsoft.MixedReality.Toolkit.UI.ConstraintManager::constraints
	List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * ___constraints_6;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.UI.ConstraintManager::initialWorldPose
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___initialWorldPose_7;

public:
	inline static int32_t get_offset_of_autoConstraintSelection_4() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___autoConstraintSelection_4)); }
	inline bool get_autoConstraintSelection_4() const { return ___autoConstraintSelection_4; }
	inline bool* get_address_of_autoConstraintSelection_4() { return &___autoConstraintSelection_4; }
	inline void set_autoConstraintSelection_4(bool value)
	{
		___autoConstraintSelection_4 = value;
	}

	inline static int32_t get_offset_of_selectedConstraints_5() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___selectedConstraints_5)); }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * get_selectedConstraints_5() const { return ___selectedConstraints_5; }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 ** get_address_of_selectedConstraints_5() { return &___selectedConstraints_5; }
	inline void set_selectedConstraints_5(List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * value)
	{
		___selectedConstraints_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___selectedConstraints_5), (void*)value);
	}

	inline static int32_t get_offset_of_constraints_6() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___constraints_6)); }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * get_constraints_6() const { return ___constraints_6; }
	inline List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 ** get_address_of_constraints_6() { return &___constraints_6; }
	inline void set_constraints_6(List_1_t1F25376ADC0A4972A82260F72757A84B6DB70722 * value)
	{
		___constraints_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___constraints_6), (void*)value);
	}

	inline static int32_t get_offset_of_initialWorldPose_7() { return static_cast<int32_t>(offsetof(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781, ___initialWorldPose_7)); }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  get_initialWorldPose_7() const { return ___initialWorldPose_7; }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * get_address_of_initialWorldPose_7() { return &___initialWorldPose_7; }
	inline void set_initialWorldPose_7(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  value)
	{
		___initialWorldPose_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator
struct ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::hostTransform
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___hostTransform_4;
	// Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::manipulationType
	int32_t ___manipulationType_5;
	// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::twoHandedManipulationType
	int32_t ___twoHandedManipulationType_6;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::allowFarManipulation
	bool ___allowFarManipulation_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::useForcesForNearManipulation
	bool ___useForcesForNearManipulation_8;
	// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::oneHandRotationModeNear
	int32_t ___oneHandRotationModeNear_9;
	// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::oneHandRotationModeFar
	int32_t ___oneHandRotationModeFar_10;
	// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/ReleaseBehaviorType Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::releaseBehavior
	int32_t ___releaseBehavior_11;
	// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::transformSmoothingLogicType
	SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___transformSmoothingLogicType_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::smoothingFar
	bool ___smoothingFar_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::smoothingNear
	bool ___smoothingNear_14;
	// System.Single Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::moveLerpTime
	float ___moveLerpTime_15;
	// System.Single Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::rotateLerpTime
	float ___rotateLerpTime_16;
	// System.Single Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::scaleLerpTime
	float ___scaleLerpTime_17;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::enableConstraints
	bool ___enableConstraints_18;
	// Microsoft.MixedReality.Toolkit.UI.ConstraintManager Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::constraintsManager
	ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * ___constraintsManager_19;
	// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::elasticsManager
	ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * ___elasticsManager_20;
	// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::onManipulationStarted
	ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___onManipulationStarted_21;
	// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::onManipulationEnded
	ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___onManipulationEnded_22;
	// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::onHoverEntered
	ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___onHoverEntered_23;
	// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::onHoverExited
	ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___onHoverExited_24;
	// Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::moveLogic
	ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * ___moveLogic_25;
	// Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::scaleLogic
	TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 * ___scaleLogic_26;
	// Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::rotateLogic
	TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * ___rotateLogic_27;
	// Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::smoothingLogic
	RuntimeObject* ___smoothingLogic_28;
	// System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData> Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::pointerIdToPointerMap
	Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * ___pointerIdToPointerMap_29;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::objectToGripRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___objectToGripRotation_30;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::isNearManipulation
	bool ___isNearManipulation_31;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::isManipulationStarted
	bool ___isManipulationStarted_32;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::isSmoothing
	bool ___isSmoothing_33;
	// UnityEngine.Rigidbody Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::rigidBody
	Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * ___rigidBody_34;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::wasGravity
	bool ___wasGravity_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::wasKinematic
	bool ___wasKinematic_36;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::leftHandRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___leftHandRotation_37;
	// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::rightHandRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rightHandRotation_38;

public:
	inline static int32_t get_offset_of_hostTransform_4() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___hostTransform_4)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_hostTransform_4() const { return ___hostTransform_4; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_hostTransform_4() { return &___hostTransform_4; }
	inline void set_hostTransform_4(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___hostTransform_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___hostTransform_4), (void*)value);
	}

	inline static int32_t get_offset_of_manipulationType_5() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___manipulationType_5)); }
	inline int32_t get_manipulationType_5() const { return ___manipulationType_5; }
	inline int32_t* get_address_of_manipulationType_5() { return &___manipulationType_5; }
	inline void set_manipulationType_5(int32_t value)
	{
		___manipulationType_5 = value;
	}

	inline static int32_t get_offset_of_twoHandedManipulationType_6() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___twoHandedManipulationType_6)); }
	inline int32_t get_twoHandedManipulationType_6() const { return ___twoHandedManipulationType_6; }
	inline int32_t* get_address_of_twoHandedManipulationType_6() { return &___twoHandedManipulationType_6; }
	inline void set_twoHandedManipulationType_6(int32_t value)
	{
		___twoHandedManipulationType_6 = value;
	}

	inline static int32_t get_offset_of_allowFarManipulation_7() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___allowFarManipulation_7)); }
	inline bool get_allowFarManipulation_7() const { return ___allowFarManipulation_7; }
	inline bool* get_address_of_allowFarManipulation_7() { return &___allowFarManipulation_7; }
	inline void set_allowFarManipulation_7(bool value)
	{
		___allowFarManipulation_7 = value;
	}

	inline static int32_t get_offset_of_useForcesForNearManipulation_8() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___useForcesForNearManipulation_8)); }
	inline bool get_useForcesForNearManipulation_8() const { return ___useForcesForNearManipulation_8; }
	inline bool* get_address_of_useForcesForNearManipulation_8() { return &___useForcesForNearManipulation_8; }
	inline void set_useForcesForNearManipulation_8(bool value)
	{
		___useForcesForNearManipulation_8 = value;
	}

	inline static int32_t get_offset_of_oneHandRotationModeNear_9() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___oneHandRotationModeNear_9)); }
	inline int32_t get_oneHandRotationModeNear_9() const { return ___oneHandRotationModeNear_9; }
	inline int32_t* get_address_of_oneHandRotationModeNear_9() { return &___oneHandRotationModeNear_9; }
	inline void set_oneHandRotationModeNear_9(int32_t value)
	{
		___oneHandRotationModeNear_9 = value;
	}

	inline static int32_t get_offset_of_oneHandRotationModeFar_10() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___oneHandRotationModeFar_10)); }
	inline int32_t get_oneHandRotationModeFar_10() const { return ___oneHandRotationModeFar_10; }
	inline int32_t* get_address_of_oneHandRotationModeFar_10() { return &___oneHandRotationModeFar_10; }
	inline void set_oneHandRotationModeFar_10(int32_t value)
	{
		___oneHandRotationModeFar_10 = value;
	}

	inline static int32_t get_offset_of_releaseBehavior_11() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___releaseBehavior_11)); }
	inline int32_t get_releaseBehavior_11() const { return ___releaseBehavior_11; }
	inline int32_t* get_address_of_releaseBehavior_11() { return &___releaseBehavior_11; }
	inline void set_releaseBehavior_11(int32_t value)
	{
		___releaseBehavior_11 = value;
	}

	inline static int32_t get_offset_of_transformSmoothingLogicType_12() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___transformSmoothingLogicType_12)); }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * get_transformSmoothingLogicType_12() const { return ___transformSmoothingLogicType_12; }
	inline SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 ** get_address_of_transformSmoothingLogicType_12() { return &___transformSmoothingLogicType_12; }
	inline void set_transformSmoothingLogicType_12(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * value)
	{
		___transformSmoothingLogicType_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___transformSmoothingLogicType_12), (void*)value);
	}

	inline static int32_t get_offset_of_smoothingFar_13() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___smoothingFar_13)); }
	inline bool get_smoothingFar_13() const { return ___smoothingFar_13; }
	inline bool* get_address_of_smoothingFar_13() { return &___smoothingFar_13; }
	inline void set_smoothingFar_13(bool value)
	{
		___smoothingFar_13 = value;
	}

	inline static int32_t get_offset_of_smoothingNear_14() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___smoothingNear_14)); }
	inline bool get_smoothingNear_14() const { return ___smoothingNear_14; }
	inline bool* get_address_of_smoothingNear_14() { return &___smoothingNear_14; }
	inline void set_smoothingNear_14(bool value)
	{
		___smoothingNear_14 = value;
	}

	inline static int32_t get_offset_of_moveLerpTime_15() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___moveLerpTime_15)); }
	inline float get_moveLerpTime_15() const { return ___moveLerpTime_15; }
	inline float* get_address_of_moveLerpTime_15() { return &___moveLerpTime_15; }
	inline void set_moveLerpTime_15(float value)
	{
		___moveLerpTime_15 = value;
	}

	inline static int32_t get_offset_of_rotateLerpTime_16() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___rotateLerpTime_16)); }
	inline float get_rotateLerpTime_16() const { return ___rotateLerpTime_16; }
	inline float* get_address_of_rotateLerpTime_16() { return &___rotateLerpTime_16; }
	inline void set_rotateLerpTime_16(float value)
	{
		___rotateLerpTime_16 = value;
	}

	inline static int32_t get_offset_of_scaleLerpTime_17() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___scaleLerpTime_17)); }
	inline float get_scaleLerpTime_17() const { return ___scaleLerpTime_17; }
	inline float* get_address_of_scaleLerpTime_17() { return &___scaleLerpTime_17; }
	inline void set_scaleLerpTime_17(float value)
	{
		___scaleLerpTime_17 = value;
	}

	inline static int32_t get_offset_of_enableConstraints_18() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___enableConstraints_18)); }
	inline bool get_enableConstraints_18() const { return ___enableConstraints_18; }
	inline bool* get_address_of_enableConstraints_18() { return &___enableConstraints_18; }
	inline void set_enableConstraints_18(bool value)
	{
		___enableConstraints_18 = value;
	}

	inline static int32_t get_offset_of_constraintsManager_19() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___constraintsManager_19)); }
	inline ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * get_constraintsManager_19() const { return ___constraintsManager_19; }
	inline ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 ** get_address_of_constraintsManager_19() { return &___constraintsManager_19; }
	inline void set_constraintsManager_19(ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * value)
	{
		___constraintsManager_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___constraintsManager_19), (void*)value);
	}

	inline static int32_t get_offset_of_elasticsManager_20() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___elasticsManager_20)); }
	inline ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * get_elasticsManager_20() const { return ___elasticsManager_20; }
	inline ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD ** get_address_of_elasticsManager_20() { return &___elasticsManager_20; }
	inline void set_elasticsManager_20(ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * value)
	{
		___elasticsManager_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___elasticsManager_20), (void*)value);
	}

	inline static int32_t get_offset_of_onManipulationStarted_21() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___onManipulationStarted_21)); }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * get_onManipulationStarted_21() const { return ___onManipulationStarted_21; }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 ** get_address_of_onManipulationStarted_21() { return &___onManipulationStarted_21; }
	inline void set_onManipulationStarted_21(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * value)
	{
		___onManipulationStarted_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onManipulationStarted_21), (void*)value);
	}

	inline static int32_t get_offset_of_onManipulationEnded_22() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___onManipulationEnded_22)); }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * get_onManipulationEnded_22() const { return ___onManipulationEnded_22; }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 ** get_address_of_onManipulationEnded_22() { return &___onManipulationEnded_22; }
	inline void set_onManipulationEnded_22(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * value)
	{
		___onManipulationEnded_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onManipulationEnded_22), (void*)value);
	}

	inline static int32_t get_offset_of_onHoverEntered_23() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___onHoverEntered_23)); }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * get_onHoverEntered_23() const { return ___onHoverEntered_23; }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 ** get_address_of_onHoverEntered_23() { return &___onHoverEntered_23; }
	inline void set_onHoverEntered_23(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * value)
	{
		___onHoverEntered_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onHoverEntered_23), (void*)value);
	}

	inline static int32_t get_offset_of_onHoverExited_24() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___onHoverExited_24)); }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * get_onHoverExited_24() const { return ___onHoverExited_24; }
	inline ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 ** get_address_of_onHoverExited_24() { return &___onHoverExited_24; }
	inline void set_onHoverExited_24(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * value)
	{
		___onHoverExited_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onHoverExited_24), (void*)value);
	}

	inline static int32_t get_offset_of_moveLogic_25() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___moveLogic_25)); }
	inline ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * get_moveLogic_25() const { return ___moveLogic_25; }
	inline ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 ** get_address_of_moveLogic_25() { return &___moveLogic_25; }
	inline void set_moveLogic_25(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * value)
	{
		___moveLogic_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___moveLogic_25), (void*)value);
	}

	inline static int32_t get_offset_of_scaleLogic_26() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___scaleLogic_26)); }
	inline TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 * get_scaleLogic_26() const { return ___scaleLogic_26; }
	inline TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 ** get_address_of_scaleLogic_26() { return &___scaleLogic_26; }
	inline void set_scaleLogic_26(TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 * value)
	{
		___scaleLogic_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___scaleLogic_26), (void*)value);
	}

	inline static int32_t get_offset_of_rotateLogic_27() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___rotateLogic_27)); }
	inline TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * get_rotateLogic_27() const { return ___rotateLogic_27; }
	inline TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 ** get_address_of_rotateLogic_27() { return &___rotateLogic_27; }
	inline void set_rotateLogic_27(TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * value)
	{
		___rotateLogic_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rotateLogic_27), (void*)value);
	}

	inline static int32_t get_offset_of_smoothingLogic_28() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___smoothingLogic_28)); }
	inline RuntimeObject* get_smoothingLogic_28() const { return ___smoothingLogic_28; }
	inline RuntimeObject** get_address_of_smoothingLogic_28() { return &___smoothingLogic_28; }
	inline void set_smoothingLogic_28(RuntimeObject* value)
	{
		___smoothingLogic_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___smoothingLogic_28), (void*)value);
	}

	inline static int32_t get_offset_of_pointerIdToPointerMap_29() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___pointerIdToPointerMap_29)); }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * get_pointerIdToPointerMap_29() const { return ___pointerIdToPointerMap_29; }
	inline Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F ** get_address_of_pointerIdToPointerMap_29() { return &___pointerIdToPointerMap_29; }
	inline void set_pointerIdToPointerMap_29(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * value)
	{
		___pointerIdToPointerMap_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerIdToPointerMap_29), (void*)value);
	}

	inline static int32_t get_offset_of_objectToGripRotation_30() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___objectToGripRotation_30)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_objectToGripRotation_30() const { return ___objectToGripRotation_30; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_objectToGripRotation_30() { return &___objectToGripRotation_30; }
	inline void set_objectToGripRotation_30(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___objectToGripRotation_30 = value;
	}

	inline static int32_t get_offset_of_isNearManipulation_31() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___isNearManipulation_31)); }
	inline bool get_isNearManipulation_31() const { return ___isNearManipulation_31; }
	inline bool* get_address_of_isNearManipulation_31() { return &___isNearManipulation_31; }
	inline void set_isNearManipulation_31(bool value)
	{
		___isNearManipulation_31 = value;
	}

	inline static int32_t get_offset_of_isManipulationStarted_32() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___isManipulationStarted_32)); }
	inline bool get_isManipulationStarted_32() const { return ___isManipulationStarted_32; }
	inline bool* get_address_of_isManipulationStarted_32() { return &___isManipulationStarted_32; }
	inline void set_isManipulationStarted_32(bool value)
	{
		___isManipulationStarted_32 = value;
	}

	inline static int32_t get_offset_of_isSmoothing_33() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___isSmoothing_33)); }
	inline bool get_isSmoothing_33() const { return ___isSmoothing_33; }
	inline bool* get_address_of_isSmoothing_33() { return &___isSmoothing_33; }
	inline void set_isSmoothing_33(bool value)
	{
		___isSmoothing_33 = value;
	}

	inline static int32_t get_offset_of_rigidBody_34() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___rigidBody_34)); }
	inline Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * get_rigidBody_34() const { return ___rigidBody_34; }
	inline Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 ** get_address_of_rigidBody_34() { return &___rigidBody_34; }
	inline void set_rigidBody_34(Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * value)
	{
		___rigidBody_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rigidBody_34), (void*)value);
	}

	inline static int32_t get_offset_of_wasGravity_35() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___wasGravity_35)); }
	inline bool get_wasGravity_35() const { return ___wasGravity_35; }
	inline bool* get_address_of_wasGravity_35() { return &___wasGravity_35; }
	inline void set_wasGravity_35(bool value)
	{
		___wasGravity_35 = value;
	}

	inline static int32_t get_offset_of_wasKinematic_36() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___wasKinematic_36)); }
	inline bool get_wasKinematic_36() const { return ___wasKinematic_36; }
	inline bool* get_address_of_wasKinematic_36() { return &___wasKinematic_36; }
	inline void set_wasKinematic_36(bool value)
	{
		___wasKinematic_36 = value;
	}

	inline static int32_t get_offset_of_leftHandRotation_37() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___leftHandRotation_37)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_leftHandRotation_37() const { return ___leftHandRotation_37; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_leftHandRotation_37() { return &___leftHandRotation_37; }
	inline void set_leftHandRotation_37(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___leftHandRotation_37 = value;
	}

	inline static int32_t get_offset_of_rightHandRotation_38() { return static_cast<int32_t>(offsetof(ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40, ___rightHandRotation_38)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rightHandRotation_38() const { return ___rightHandRotation_38; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rightHandRotation_38() { return &___rightHandRotation_38; }
	inline void set_rightHandRotation_38(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rightHandRotation_38 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.PinchSlider
struct PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::thumbRoot
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___thumbRoot_4;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::isTouchable
	bool ___isTouchable_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::snapToPosition
	bool ___snapToPosition_6;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.PinchSlider::thumbCollider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___thumbCollider_7;
	// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.PinchSlider::touchCollider
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___touchCollider_8;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::sliderValue
	float ___sliderValue_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::useSliderStepDivisions
	bool ___useSliderStepDivisions_10;
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.PinchSlider::sliderStepDivisions
	int32_t ___sliderStepDivisions_11;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::trackVisuals
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___trackVisuals_12;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::tickMarks
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___tickMarks_13;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::thumbVisuals
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___thumbVisuals_14;
	// Microsoft.MixedReality.Toolkit.UI.SliderAxis Microsoft.MixedReality.Toolkit.UI.PinchSlider::sliderAxis
	int32_t ___sliderAxis_15;
	// System.Nullable`1<Microsoft.MixedReality.Toolkit.UI.SliderAxis> Microsoft.MixedReality.Toolkit.UI.PinchSlider::previousSliderAxis
	Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610  ___previousSliderAxis_16;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::sliderStartDistance
	float ___sliderStartDistance_17;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::sliderEndDistance
	float ___sliderEndDistance_18;
	// Microsoft.MixedReality.Toolkit.UI.SliderEvent Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnValueUpdated
	SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * ___OnValueUpdated_19;
	// Microsoft.MixedReality.Toolkit.UI.SliderEvent Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnInteractionStarted
	SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * ___OnInteractionStarted_20;
	// Microsoft.MixedReality.Toolkit.UI.SliderEvent Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnInteractionEnded
	SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * ___OnInteractionEnded_21;
	// Microsoft.MixedReality.Toolkit.UI.SliderEvent Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnHoverEntered
	SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * ___OnHoverEntered_22;
	// Microsoft.MixedReality.Toolkit.UI.SliderEvent Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnHoverExited
	SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * ___OnHoverExited_23;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::sliderThumbOffset
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___sliderThumbOffset_24;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::<StartSliderValue>k__BackingField
	float ___U3CStartSliderValueU3Ek__BackingField_25;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::<StartPointerPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CStartPointerPositionU3Ek__BackingField_26;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.PinchSlider::<ActivePointer>k__BackingField
	RuntimeObject* ___U3CActivePointerU3Ek__BackingField_27;

public:
	inline static int32_t get_offset_of_thumbRoot_4() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___thumbRoot_4)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_thumbRoot_4() const { return ___thumbRoot_4; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_thumbRoot_4() { return &___thumbRoot_4; }
	inline void set_thumbRoot_4(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___thumbRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbRoot_4), (void*)value);
	}

	inline static int32_t get_offset_of_isTouchable_5() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___isTouchable_5)); }
	inline bool get_isTouchable_5() const { return ___isTouchable_5; }
	inline bool* get_address_of_isTouchable_5() { return &___isTouchable_5; }
	inline void set_isTouchable_5(bool value)
	{
		___isTouchable_5 = value;
	}

	inline static int32_t get_offset_of_snapToPosition_6() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___snapToPosition_6)); }
	inline bool get_snapToPosition_6() const { return ___snapToPosition_6; }
	inline bool* get_address_of_snapToPosition_6() { return &___snapToPosition_6; }
	inline void set_snapToPosition_6(bool value)
	{
		___snapToPosition_6 = value;
	}

	inline static int32_t get_offset_of_thumbCollider_7() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___thumbCollider_7)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_thumbCollider_7() const { return ___thumbCollider_7; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_thumbCollider_7() { return &___thumbCollider_7; }
	inline void set_thumbCollider_7(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___thumbCollider_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbCollider_7), (void*)value);
	}

	inline static int32_t get_offset_of_touchCollider_8() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___touchCollider_8)); }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * get_touchCollider_8() const { return ___touchCollider_8; }
	inline Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF ** get_address_of_touchCollider_8() { return &___touchCollider_8; }
	inline void set_touchCollider_8(Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * value)
	{
		___touchCollider_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchCollider_8), (void*)value);
	}

	inline static int32_t get_offset_of_sliderValue_9() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___sliderValue_9)); }
	inline float get_sliderValue_9() const { return ___sliderValue_9; }
	inline float* get_address_of_sliderValue_9() { return &___sliderValue_9; }
	inline void set_sliderValue_9(float value)
	{
		___sliderValue_9 = value;
	}

	inline static int32_t get_offset_of_useSliderStepDivisions_10() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___useSliderStepDivisions_10)); }
	inline bool get_useSliderStepDivisions_10() const { return ___useSliderStepDivisions_10; }
	inline bool* get_address_of_useSliderStepDivisions_10() { return &___useSliderStepDivisions_10; }
	inline void set_useSliderStepDivisions_10(bool value)
	{
		___useSliderStepDivisions_10 = value;
	}

	inline static int32_t get_offset_of_sliderStepDivisions_11() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___sliderStepDivisions_11)); }
	inline int32_t get_sliderStepDivisions_11() const { return ___sliderStepDivisions_11; }
	inline int32_t* get_address_of_sliderStepDivisions_11() { return &___sliderStepDivisions_11; }
	inline void set_sliderStepDivisions_11(int32_t value)
	{
		___sliderStepDivisions_11 = value;
	}

	inline static int32_t get_offset_of_trackVisuals_12() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___trackVisuals_12)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_trackVisuals_12() const { return ___trackVisuals_12; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_trackVisuals_12() { return &___trackVisuals_12; }
	inline void set_trackVisuals_12(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___trackVisuals_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___trackVisuals_12), (void*)value);
	}

	inline static int32_t get_offset_of_tickMarks_13() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___tickMarks_13)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_tickMarks_13() const { return ___tickMarks_13; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_tickMarks_13() { return &___tickMarks_13; }
	inline void set_tickMarks_13(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___tickMarks_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___tickMarks_13), (void*)value);
	}

	inline static int32_t get_offset_of_thumbVisuals_14() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___thumbVisuals_14)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_thumbVisuals_14() const { return ___thumbVisuals_14; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_thumbVisuals_14() { return &___thumbVisuals_14; }
	inline void set_thumbVisuals_14(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___thumbVisuals_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___thumbVisuals_14), (void*)value);
	}

	inline static int32_t get_offset_of_sliderAxis_15() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___sliderAxis_15)); }
	inline int32_t get_sliderAxis_15() const { return ___sliderAxis_15; }
	inline int32_t* get_address_of_sliderAxis_15() { return &___sliderAxis_15; }
	inline void set_sliderAxis_15(int32_t value)
	{
		___sliderAxis_15 = value;
	}

	inline static int32_t get_offset_of_previousSliderAxis_16() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___previousSliderAxis_16)); }
	inline Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610  get_previousSliderAxis_16() const { return ___previousSliderAxis_16; }
	inline Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 * get_address_of_previousSliderAxis_16() { return &___previousSliderAxis_16; }
	inline void set_previousSliderAxis_16(Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610  value)
	{
		___previousSliderAxis_16 = value;
	}

	inline static int32_t get_offset_of_sliderStartDistance_17() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___sliderStartDistance_17)); }
	inline float get_sliderStartDistance_17() const { return ___sliderStartDistance_17; }
	inline float* get_address_of_sliderStartDistance_17() { return &___sliderStartDistance_17; }
	inline void set_sliderStartDistance_17(float value)
	{
		___sliderStartDistance_17 = value;
	}

	inline static int32_t get_offset_of_sliderEndDistance_18() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___sliderEndDistance_18)); }
	inline float get_sliderEndDistance_18() const { return ___sliderEndDistance_18; }
	inline float* get_address_of_sliderEndDistance_18() { return &___sliderEndDistance_18; }
	inline void set_sliderEndDistance_18(float value)
	{
		___sliderEndDistance_18 = value;
	}

	inline static int32_t get_offset_of_OnValueUpdated_19() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___OnValueUpdated_19)); }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * get_OnValueUpdated_19() const { return ___OnValueUpdated_19; }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF ** get_address_of_OnValueUpdated_19() { return &___OnValueUpdated_19; }
	inline void set_OnValueUpdated_19(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * value)
	{
		___OnValueUpdated_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnValueUpdated_19), (void*)value);
	}

	inline static int32_t get_offset_of_OnInteractionStarted_20() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___OnInteractionStarted_20)); }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * get_OnInteractionStarted_20() const { return ___OnInteractionStarted_20; }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF ** get_address_of_OnInteractionStarted_20() { return &___OnInteractionStarted_20; }
	inline void set_OnInteractionStarted_20(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * value)
	{
		___OnInteractionStarted_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnInteractionStarted_20), (void*)value);
	}

	inline static int32_t get_offset_of_OnInteractionEnded_21() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___OnInteractionEnded_21)); }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * get_OnInteractionEnded_21() const { return ___OnInteractionEnded_21; }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF ** get_address_of_OnInteractionEnded_21() { return &___OnInteractionEnded_21; }
	inline void set_OnInteractionEnded_21(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * value)
	{
		___OnInteractionEnded_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnInteractionEnded_21), (void*)value);
	}

	inline static int32_t get_offset_of_OnHoverEntered_22() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___OnHoverEntered_22)); }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * get_OnHoverEntered_22() const { return ___OnHoverEntered_22; }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF ** get_address_of_OnHoverEntered_22() { return &___OnHoverEntered_22; }
	inline void set_OnHoverEntered_22(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * value)
	{
		___OnHoverEntered_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnHoverEntered_22), (void*)value);
	}

	inline static int32_t get_offset_of_OnHoverExited_23() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___OnHoverExited_23)); }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * get_OnHoverExited_23() const { return ___OnHoverExited_23; }
	inline SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF ** get_address_of_OnHoverExited_23() { return &___OnHoverExited_23; }
	inline void set_OnHoverExited_23(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * value)
	{
		___OnHoverExited_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OnHoverExited_23), (void*)value);
	}

	inline static int32_t get_offset_of_sliderThumbOffset_24() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___sliderThumbOffset_24)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_sliderThumbOffset_24() const { return ___sliderThumbOffset_24; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_sliderThumbOffset_24() { return &___sliderThumbOffset_24; }
	inline void set_sliderThumbOffset_24(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___sliderThumbOffset_24 = value;
	}

	inline static int32_t get_offset_of_U3CStartSliderValueU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___U3CStartSliderValueU3Ek__BackingField_25)); }
	inline float get_U3CStartSliderValueU3Ek__BackingField_25() const { return ___U3CStartSliderValueU3Ek__BackingField_25; }
	inline float* get_address_of_U3CStartSliderValueU3Ek__BackingField_25() { return &___U3CStartSliderValueU3Ek__BackingField_25; }
	inline void set_U3CStartSliderValueU3Ek__BackingField_25(float value)
	{
		___U3CStartSliderValueU3Ek__BackingField_25 = value;
	}

	inline static int32_t get_offset_of_U3CStartPointerPositionU3Ek__BackingField_26() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___U3CStartPointerPositionU3Ek__BackingField_26)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CStartPointerPositionU3Ek__BackingField_26() const { return ___U3CStartPointerPositionU3Ek__BackingField_26; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CStartPointerPositionU3Ek__BackingField_26() { return &___U3CStartPointerPositionU3Ek__BackingField_26; }
	inline void set_U3CStartPointerPositionU3Ek__BackingField_26(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CStartPointerPositionU3Ek__BackingField_26 = value;
	}

	inline static int32_t get_offset_of_U3CActivePointerU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C, ___U3CActivePointerU3Ek__BackingField_27)); }
	inline RuntimeObject* get_U3CActivePointerU3Ek__BackingField_27() const { return ___U3CActivePointerU3Ek__BackingField_27; }
	inline RuntimeObject** get_address_of_U3CActivePointerU3Ek__BackingField_27() { return &___U3CActivePointerU3Ek__BackingField_27; }
	inline void set_U3CActivePointerU3Ek__BackingField_27(RuntimeObject* value)
	{
		___U3CActivePointerU3Ek__BackingField_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CActivePointerU3Ek__BackingField_27), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls
struct PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.PressableButton
struct PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::hasStarted
	bool ___hasStarted_5;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PressableButton::movingButtonVisuals
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___movingButtonVisuals_6;
	// Microsoft.MixedReality.Toolkit.UI.PressableButton/SpaceMode Microsoft.MixedReality.Toolkit.UI.PressableButton::distanceSpaceMode
	int32_t ___distanceSpaceMode_7;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::startPushDistance
	float ___startPushDistance_8;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::maxPushDistance
	float ___maxPushDistance_9;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::pressDistance
	float ___pressDistance_10;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::releaseDistanceDelta
	float ___releaseDistanceDelta_11;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::returnSpeed
	float ___returnSpeed_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::releaseOnTouchEnd
	bool ___releaseOnTouchEnd_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::enforceFrontPush
	bool ___enforceFrontPush_14;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.PressableButton::TouchBegin
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___TouchBegin_15;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.PressableButton::TouchEnd
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___TouchEnd_16;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.PressableButton::ButtonPressed
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___ButtonPressed_17;
	// UnityEngine.Events.UnityEvent Microsoft.MixedReality.Toolkit.UI.PressableButton::ButtonReleased
	UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * ___ButtonReleased_18;
	// System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3> Microsoft.MixedReality.Toolkit.UI.PressableButton::touchPoints
	Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * ___touchPoints_20;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource> Microsoft.MixedReality.Toolkit.UI.PressableButton::currentInputSources
	List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * ___currentInputSources_21;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::currentPushDistance
	float ___currentPushDistance_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::isTouching
	bool ___isTouching_23;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::<IsPressing>k__BackingField
	bool ___U3CIsPressingU3Ek__BackingField_24;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::movingVisualsInitialLocalPosition
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___movingVisualsInitialLocalPosition_25;

public:
	inline static int32_t get_offset_of_hasStarted_5() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___hasStarted_5)); }
	inline bool get_hasStarted_5() const { return ___hasStarted_5; }
	inline bool* get_address_of_hasStarted_5() { return &___hasStarted_5; }
	inline void set_hasStarted_5(bool value)
	{
		___hasStarted_5 = value;
	}

	inline static int32_t get_offset_of_movingButtonVisuals_6() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___movingButtonVisuals_6)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_movingButtonVisuals_6() const { return ___movingButtonVisuals_6; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_movingButtonVisuals_6() { return &___movingButtonVisuals_6; }
	inline void set_movingButtonVisuals_6(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___movingButtonVisuals_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___movingButtonVisuals_6), (void*)value);
	}

	inline static int32_t get_offset_of_distanceSpaceMode_7() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___distanceSpaceMode_7)); }
	inline int32_t get_distanceSpaceMode_7() const { return ___distanceSpaceMode_7; }
	inline int32_t* get_address_of_distanceSpaceMode_7() { return &___distanceSpaceMode_7; }
	inline void set_distanceSpaceMode_7(int32_t value)
	{
		___distanceSpaceMode_7 = value;
	}

	inline static int32_t get_offset_of_startPushDistance_8() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___startPushDistance_8)); }
	inline float get_startPushDistance_8() const { return ___startPushDistance_8; }
	inline float* get_address_of_startPushDistance_8() { return &___startPushDistance_8; }
	inline void set_startPushDistance_8(float value)
	{
		___startPushDistance_8 = value;
	}

	inline static int32_t get_offset_of_maxPushDistance_9() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___maxPushDistance_9)); }
	inline float get_maxPushDistance_9() const { return ___maxPushDistance_9; }
	inline float* get_address_of_maxPushDistance_9() { return &___maxPushDistance_9; }
	inline void set_maxPushDistance_9(float value)
	{
		___maxPushDistance_9 = value;
	}

	inline static int32_t get_offset_of_pressDistance_10() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___pressDistance_10)); }
	inline float get_pressDistance_10() const { return ___pressDistance_10; }
	inline float* get_address_of_pressDistance_10() { return &___pressDistance_10; }
	inline void set_pressDistance_10(float value)
	{
		___pressDistance_10 = value;
	}

	inline static int32_t get_offset_of_releaseDistanceDelta_11() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___releaseDistanceDelta_11)); }
	inline float get_releaseDistanceDelta_11() const { return ___releaseDistanceDelta_11; }
	inline float* get_address_of_releaseDistanceDelta_11() { return &___releaseDistanceDelta_11; }
	inline void set_releaseDistanceDelta_11(float value)
	{
		___releaseDistanceDelta_11 = value;
	}

	inline static int32_t get_offset_of_returnSpeed_12() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___returnSpeed_12)); }
	inline float get_returnSpeed_12() const { return ___returnSpeed_12; }
	inline float* get_address_of_returnSpeed_12() { return &___returnSpeed_12; }
	inline void set_returnSpeed_12(float value)
	{
		___returnSpeed_12 = value;
	}

	inline static int32_t get_offset_of_releaseOnTouchEnd_13() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___releaseOnTouchEnd_13)); }
	inline bool get_releaseOnTouchEnd_13() const { return ___releaseOnTouchEnd_13; }
	inline bool* get_address_of_releaseOnTouchEnd_13() { return &___releaseOnTouchEnd_13; }
	inline void set_releaseOnTouchEnd_13(bool value)
	{
		___releaseOnTouchEnd_13 = value;
	}

	inline static int32_t get_offset_of_enforceFrontPush_14() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___enforceFrontPush_14)); }
	inline bool get_enforceFrontPush_14() const { return ___enforceFrontPush_14; }
	inline bool* get_address_of_enforceFrontPush_14() { return &___enforceFrontPush_14; }
	inline void set_enforceFrontPush_14(bool value)
	{
		___enforceFrontPush_14 = value;
	}

	inline static int32_t get_offset_of_TouchBegin_15() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___TouchBegin_15)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_TouchBegin_15() const { return ___TouchBegin_15; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_TouchBegin_15() { return &___TouchBegin_15; }
	inline void set_TouchBegin_15(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___TouchBegin_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TouchBegin_15), (void*)value);
	}

	inline static int32_t get_offset_of_TouchEnd_16() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___TouchEnd_16)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_TouchEnd_16() const { return ___TouchEnd_16; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_TouchEnd_16() { return &___TouchEnd_16; }
	inline void set_TouchEnd_16(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___TouchEnd_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TouchEnd_16), (void*)value);
	}

	inline static int32_t get_offset_of_ButtonPressed_17() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___ButtonPressed_17)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_ButtonPressed_17() const { return ___ButtonPressed_17; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_ButtonPressed_17() { return &___ButtonPressed_17; }
	inline void set_ButtonPressed_17(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___ButtonPressed_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ButtonPressed_17), (void*)value);
	}

	inline static int32_t get_offset_of_ButtonReleased_18() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___ButtonReleased_18)); }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * get_ButtonReleased_18() const { return ___ButtonReleased_18; }
	inline UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F ** get_address_of_ButtonReleased_18() { return &___ButtonReleased_18; }
	inline void set_ButtonReleased_18(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * value)
	{
		___ButtonReleased_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ButtonReleased_18), (void*)value);
	}

	inline static int32_t get_offset_of_touchPoints_20() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___touchPoints_20)); }
	inline Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * get_touchPoints_20() const { return ___touchPoints_20; }
	inline Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 ** get_address_of_touchPoints_20() { return &___touchPoints_20; }
	inline void set_touchPoints_20(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * value)
	{
		___touchPoints_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___touchPoints_20), (void*)value);
	}

	inline static int32_t get_offset_of_currentInputSources_21() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___currentInputSources_21)); }
	inline List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * get_currentInputSources_21() const { return ___currentInputSources_21; }
	inline List_1_t74E48C60E247472C3845D62B1372777193ED6D09 ** get_address_of_currentInputSources_21() { return &___currentInputSources_21; }
	inline void set_currentInputSources_21(List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * value)
	{
		___currentInputSources_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentInputSources_21), (void*)value);
	}

	inline static int32_t get_offset_of_currentPushDistance_22() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___currentPushDistance_22)); }
	inline float get_currentPushDistance_22() const { return ___currentPushDistance_22; }
	inline float* get_address_of_currentPushDistance_22() { return &___currentPushDistance_22; }
	inline void set_currentPushDistance_22(float value)
	{
		___currentPushDistance_22 = value;
	}

	inline static int32_t get_offset_of_isTouching_23() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___isTouching_23)); }
	inline bool get_isTouching_23() const { return ___isTouching_23; }
	inline bool* get_address_of_isTouching_23() { return &___isTouching_23; }
	inline void set_isTouching_23(bool value)
	{
		___isTouching_23 = value;
	}

	inline static int32_t get_offset_of_U3CIsPressingU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___U3CIsPressingU3Ek__BackingField_24)); }
	inline bool get_U3CIsPressingU3Ek__BackingField_24() const { return ___U3CIsPressingU3Ek__BackingField_24; }
	inline bool* get_address_of_U3CIsPressingU3Ek__BackingField_24() { return &___U3CIsPressingU3Ek__BackingField_24; }
	inline void set_U3CIsPressingU3Ek__BackingField_24(bool value)
	{
		___U3CIsPressingU3Ek__BackingField_24 = value;
	}

	inline static int32_t get_offset_of_movingVisualsInitialLocalPosition_25() { return static_cast<int32_t>(offsetof(PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1, ___movingVisualsInitialLocalPosition_25)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_movingVisualsInitialLocalPosition_25() const { return ___movingVisualsInitialLocalPosition_25; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_movingVisualsInitialLocalPosition_25() { return &___movingVisualsInitialLocalPosition_25; }
	inline void set_movingVisualsInitialLocalPosition_25(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___movingVisualsInitialLocalPosition_25 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.TransformConstraint
struct TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags Microsoft.MixedReality.Toolkit.UI.TransformConstraint::handType
	int32_t ___handType_4;
	// Microsoft.MixedReality.Toolkit.Utilities.ManipulationProximityFlags Microsoft.MixedReality.Toolkit.UI.TransformConstraint::proximityType
	int32_t ___proximityType_5;
	// System.Int32 Microsoft.MixedReality.Toolkit.UI.TransformConstraint::executionOrder
	int32_t ___executionOrder_6;
	// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform Microsoft.MixedReality.Toolkit.UI.TransformConstraint::worldPoseOnManipulationStart
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___worldPoseOnManipulationStart_7;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.TransformConstraint::<TargetTransform>k__BackingField
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___U3CTargetTransformU3Ek__BackingField_8;

public:
	inline static int32_t get_offset_of_handType_4() { return static_cast<int32_t>(offsetof(TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C, ___handType_4)); }
	inline int32_t get_handType_4() const { return ___handType_4; }
	inline int32_t* get_address_of_handType_4() { return &___handType_4; }
	inline void set_handType_4(int32_t value)
	{
		___handType_4 = value;
	}

	inline static int32_t get_offset_of_proximityType_5() { return static_cast<int32_t>(offsetof(TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C, ___proximityType_5)); }
	inline int32_t get_proximityType_5() const { return ___proximityType_5; }
	inline int32_t* get_address_of_proximityType_5() { return &___proximityType_5; }
	inline void set_proximityType_5(int32_t value)
	{
		___proximityType_5 = value;
	}

	inline static int32_t get_offset_of_executionOrder_6() { return static_cast<int32_t>(offsetof(TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C, ___executionOrder_6)); }
	inline int32_t get_executionOrder_6() const { return ___executionOrder_6; }
	inline int32_t* get_address_of_executionOrder_6() { return &___executionOrder_6; }
	inline void set_executionOrder_6(int32_t value)
	{
		___executionOrder_6 = value;
	}

	inline static int32_t get_offset_of_worldPoseOnManipulationStart_7() { return static_cast<int32_t>(offsetof(TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C, ___worldPoseOnManipulationStart_7)); }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  get_worldPoseOnManipulationStart_7() const { return ___worldPoseOnManipulationStart_7; }
	inline MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * get_address_of_worldPoseOnManipulationStart_7() { return &___worldPoseOnManipulationStart_7; }
	inline void set_worldPoseOnManipulationStart_7(MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  value)
	{
		___worldPoseOnManipulationStart_7 = value;
	}

	inline static int32_t get_offset_of_U3CTargetTransformU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C, ___U3CTargetTransformU3Ek__BackingField_8)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_U3CTargetTransformU3Ek__BackingField_8() const { return ___U3CTargetTransformU3Ek__BackingField_8; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_U3CTargetTransformU3Ek__BackingField_8() { return &___U3CTargetTransformU3Ek__BackingField_8; }
	inline void set_U3CTargetTransformU3Ek__BackingField_8(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___U3CTargetTransformU3Ek__BackingField_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CTargetTransformU3Ek__BackingField_8), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection
struct BaseObjectCollection_t28800ED99C48E52676F95791DA3FE02771D11873  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// System.Action`1<Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection> Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection::<OnCollectionUpdated>k__BackingField
	Action_1_tA52C815DBCC271D58DD715D9119E8FADD0789DB4 * ___U3COnCollectionUpdatedU3Ek__BackingField_4;
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Utilities.ObjectCollectionNode> Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection::nodeList
	List_1_t7D6E0A1B3973E8AC2D2A398241BE620D8F10E9FE * ___nodeList_5;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection::ignoreInactiveTransforms
	bool ___ignoreInactiveTransforms_6;
	// Microsoft.MixedReality.Toolkit.Utilities.CollationOrder Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection::sortType
	int32_t ___sortType_7;

public:
	inline static int32_t get_offset_of_U3COnCollectionUpdatedU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(BaseObjectCollection_t28800ED99C48E52676F95791DA3FE02771D11873, ___U3COnCollectionUpdatedU3Ek__BackingField_4)); }
	inline Action_1_tA52C815DBCC271D58DD715D9119E8FADD0789DB4 * get_U3COnCollectionUpdatedU3Ek__BackingField_4() const { return ___U3COnCollectionUpdatedU3Ek__BackingField_4; }
	inline Action_1_tA52C815DBCC271D58DD715D9119E8FADD0789DB4 ** get_address_of_U3COnCollectionUpdatedU3Ek__BackingField_4() { return &___U3COnCollectionUpdatedU3Ek__BackingField_4; }
	inline void set_U3COnCollectionUpdatedU3Ek__BackingField_4(Action_1_tA52C815DBCC271D58DD715D9119E8FADD0789DB4 * value)
	{
		___U3COnCollectionUpdatedU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3COnCollectionUpdatedU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_nodeList_5() { return static_cast<int32_t>(offsetof(BaseObjectCollection_t28800ED99C48E52676F95791DA3FE02771D11873, ___nodeList_5)); }
	inline List_1_t7D6E0A1B3973E8AC2D2A398241BE620D8F10E9FE * get_nodeList_5() const { return ___nodeList_5; }
	inline List_1_t7D6E0A1B3973E8AC2D2A398241BE620D8F10E9FE ** get_address_of_nodeList_5() { return &___nodeList_5; }
	inline void set_nodeList_5(List_1_t7D6E0A1B3973E8AC2D2A398241BE620D8F10E9FE * value)
	{
		___nodeList_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___nodeList_5), (void*)value);
	}

	inline static int32_t get_offset_of_ignoreInactiveTransforms_6() { return static_cast<int32_t>(offsetof(BaseObjectCollection_t28800ED99C48E52676F95791DA3FE02771D11873, ___ignoreInactiveTransforms_6)); }
	inline bool get_ignoreInactiveTransforms_6() const { return ___ignoreInactiveTransforms_6; }
	inline bool* get_address_of_ignoreInactiveTransforms_6() { return &___ignoreInactiveTransforms_6; }
	inline void set_ignoreInactiveTransforms_6(bool value)
	{
		___ignoreInactiveTransforms_6 = value;
	}

	inline static int32_t get_offset_of_sortType_7() { return static_cast<int32_t>(offsetof(BaseObjectCollection_t28800ED99C48E52676F95791DA3FE02771D11873, ___sortType_7)); }
	inline int32_t get_sortType_7() const { return ___sortType_7; }
	inline int32_t* get_address_of_sortType_7() { return &___sortType_7; }
	inline void set_sortType_7(int32_t value)
	{
		___sortType_7 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight
struct ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F  : public MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight/LightSettings Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::settings
	LightSettings_t374A3978CEBC9BFA16B8336623E760D4F59BD107 * ___settings_10;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::pulseTime
	float ___pulseTime_11;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::pulseFade
	float ___pulseFade_12;

public:
	inline static int32_t get_offset_of_settings_10() { return static_cast<int32_t>(offsetof(ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F, ___settings_10)); }
	inline LightSettings_t374A3978CEBC9BFA16B8336623E760D4F59BD107 * get_settings_10() const { return ___settings_10; }
	inline LightSettings_t374A3978CEBC9BFA16B8336623E760D4F59BD107 ** get_address_of_settings_10() { return &___settings_10; }
	inline void set_settings_10(LightSettings_t374A3978CEBC9BFA16B8336623E760D4F59BD107 * value)
	{
		___settings_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___settings_10), (void*)value);
	}

	inline static int32_t get_offset_of_pulseTime_11() { return static_cast<int32_t>(offsetof(ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F, ___pulseTime_11)); }
	inline float get_pulseTime_11() const { return ___pulseTime_11; }
	inline float* get_address_of_pulseTime_11() { return &___pulseTime_11; }
	inline void set_pulseTime_11(float value)
	{
		___pulseTime_11 = value;
	}

	inline static int32_t get_offset_of_pulseFade_12() { return static_cast<int32_t>(offsetof(ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F, ___pulseFade_12)); }
	inline float get_pulseFade_12() const { return ___pulseFade_12; }
	inline float* get_address_of_pulseFade_12() { return &___pulseFade_12; }
	inline void set_pulseFade_12(float value)
	{
		___pulseFade_12 = value;
	}
};

struct ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_StaticFields
{
public:
	// System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Utilities.ProximityLight> Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::activeProximityLights
	List_1_t4DDB24C2DBD7F8DD39F6A10D457D98B74CD5919A * ___activeProximityLights_6;
	// UnityEngine.Vector4[] Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::proximityLightData
	Vector4U5BU5D_t51402C154FFFCF7217A9BEC4B834F0B726C10F66* ___proximityLightData_7;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::proximityLightDataID
	int32_t ___proximityLightDataID_8;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::lastProximityLightUpdate
	int32_t ___lastProximityLightUpdate_9;

public:
	inline static int32_t get_offset_of_activeProximityLights_6() { return static_cast<int32_t>(offsetof(ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_StaticFields, ___activeProximityLights_6)); }
	inline List_1_t4DDB24C2DBD7F8DD39F6A10D457D98B74CD5919A * get_activeProximityLights_6() const { return ___activeProximityLights_6; }
	inline List_1_t4DDB24C2DBD7F8DD39F6A10D457D98B74CD5919A ** get_address_of_activeProximityLights_6() { return &___activeProximityLights_6; }
	inline void set_activeProximityLights_6(List_1_t4DDB24C2DBD7F8DD39F6A10D457D98B74CD5919A * value)
	{
		___activeProximityLights_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___activeProximityLights_6), (void*)value);
	}

	inline static int32_t get_offset_of_proximityLightData_7() { return static_cast<int32_t>(offsetof(ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_StaticFields, ___proximityLightData_7)); }
	inline Vector4U5BU5D_t51402C154FFFCF7217A9BEC4B834F0B726C10F66* get_proximityLightData_7() const { return ___proximityLightData_7; }
	inline Vector4U5BU5D_t51402C154FFFCF7217A9BEC4B834F0B726C10F66** get_address_of_proximityLightData_7() { return &___proximityLightData_7; }
	inline void set_proximityLightData_7(Vector4U5BU5D_t51402C154FFFCF7217A9BEC4B834F0B726C10F66* value)
	{
		___proximityLightData_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___proximityLightData_7), (void*)value);
	}

	inline static int32_t get_offset_of_proximityLightDataID_8() { return static_cast<int32_t>(offsetof(ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_StaticFields, ___proximityLightDataID_8)); }
	inline int32_t get_proximityLightDataID_8() const { return ___proximityLightDataID_8; }
	inline int32_t* get_address_of_proximityLightDataID_8() { return &___proximityLightDataID_8; }
	inline void set_proximityLightDataID_8(int32_t value)
	{
		___proximityLightDataID_8 = value;
	}

	inline static int32_t get_offset_of_lastProximityLightUpdate_9() { return static_cast<int32_t>(offsetof(ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_StaticFields, ___lastProximityLightUpdate_9)); }
	inline int32_t get_lastProximityLightUpdate_9() const { return ___lastProximityLightUpdate_9; }
	inline int32_t* get_address_of_lastProximityLightUpdate_9() { return &___lastProximityLightUpdate_9; }
	inline void set_lastProximityLightUpdate_9(int32_t value)
	{
		___lastProximityLightUpdate_9 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer
struct ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064  : public InputSystemGlobalHandlerListener_t6BAFB249977BA35CB02F8905D80180E54F4119C5
{
public:
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::destroyOnSourceLost
	bool ___destroyOnSourceLost_5;
	// Microsoft.MixedReality.Toolkit.TrackingState Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::TrackingState
	int32_t ___TrackingState_6;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::controller
	RuntimeObject* ___controller_7;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::useSourcePoseData
	bool ___useSourcePoseData_8;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::useSourcePoseAsFallback
	bool ___useSourcePoseAsFallback_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::poseActionDetected
	bool ___poseActionDetected_10;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::poseAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___poseAction_11;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.ControllerPoseSynchronizer::handedness
	uint8_t ___handedness_12;

public:
	inline static int32_t get_offset_of_destroyOnSourceLost_5() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___destroyOnSourceLost_5)); }
	inline bool get_destroyOnSourceLost_5() const { return ___destroyOnSourceLost_5; }
	inline bool* get_address_of_destroyOnSourceLost_5() { return &___destroyOnSourceLost_5; }
	inline void set_destroyOnSourceLost_5(bool value)
	{
		___destroyOnSourceLost_5 = value;
	}

	inline static int32_t get_offset_of_TrackingState_6() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___TrackingState_6)); }
	inline int32_t get_TrackingState_6() const { return ___TrackingState_6; }
	inline int32_t* get_address_of_TrackingState_6() { return &___TrackingState_6; }
	inline void set_TrackingState_6(int32_t value)
	{
		___TrackingState_6 = value;
	}

	inline static int32_t get_offset_of_controller_7() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___controller_7)); }
	inline RuntimeObject* get_controller_7() const { return ___controller_7; }
	inline RuntimeObject** get_address_of_controller_7() { return &___controller_7; }
	inline void set_controller_7(RuntimeObject* value)
	{
		___controller_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___controller_7), (void*)value);
	}

	inline static int32_t get_offset_of_useSourcePoseData_8() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___useSourcePoseData_8)); }
	inline bool get_useSourcePoseData_8() const { return ___useSourcePoseData_8; }
	inline bool* get_address_of_useSourcePoseData_8() { return &___useSourcePoseData_8; }
	inline void set_useSourcePoseData_8(bool value)
	{
		___useSourcePoseData_8 = value;
	}

	inline static int32_t get_offset_of_useSourcePoseAsFallback_9() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___useSourcePoseAsFallback_9)); }
	inline bool get_useSourcePoseAsFallback_9() const { return ___useSourcePoseAsFallback_9; }
	inline bool* get_address_of_useSourcePoseAsFallback_9() { return &___useSourcePoseAsFallback_9; }
	inline void set_useSourcePoseAsFallback_9(bool value)
	{
		___useSourcePoseAsFallback_9 = value;
	}

	inline static int32_t get_offset_of_poseActionDetected_10() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___poseActionDetected_10)); }
	inline bool get_poseActionDetected_10() const { return ___poseActionDetected_10; }
	inline bool* get_address_of_poseActionDetected_10() { return &___poseActionDetected_10; }
	inline void set_poseActionDetected_10(bool value)
	{
		___poseActionDetected_10 = value;
	}

	inline static int32_t get_offset_of_poseAction_11() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___poseAction_11)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_poseAction_11() const { return ___poseAction_11; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_poseAction_11() { return &___poseAction_11; }
	inline void set_poseAction_11(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___poseAction_11 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___poseAction_11))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_handedness_12() { return static_cast<int32_t>(offsetof(ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064, ___handedness_12)); }
	inline uint8_t get_handedness_12() const { return ___handedness_12; }
	inline uint8_t* get_address_of_handedness_12() { return &___handedness_12; }
	inline void set_handedness_12(uint8_t value)
	{
		___handedness_12 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData
struct HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69  : public InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D
{
public:
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData::<Controller>k__BackingField
	RuntimeObject* ___U3CControllerU3Ek__BackingField_7;

public:
	inline static int32_t get_offset_of_U3CControllerU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69, ___U3CControllerU3Ek__BackingField_7)); }
	inline RuntimeObject* get_U3CControllerU3Ek__BackingField_7() const { return ___U3CControllerU3Ek__BackingField_7; }
	inline RuntimeObject** get_address_of_U3CControllerU3Ek__BackingField_7() { return &___U3CControllerU3Ek__BackingField_7; }
	inline void set_U3CControllerU3Ek__BackingField_7(RuntimeObject* value)
	{
		___U3CControllerU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CControllerU3Ek__BackingField_7), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableSurface
struct NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0  : public BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03
{
public:

public:
};


// Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint
struct MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F  : public TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::scaleMinimum
	float ___scaleMinimum_9;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::minimumScale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___minimumScale_10;
	// System.Single Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::scaleMaximum
	float ___scaleMaximum_11;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::maximumScale
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___maximumScale_12;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::relativeToInitialState
	bool ___relativeToInitialState_13;

public:
	inline static int32_t get_offset_of_scaleMinimum_9() { return static_cast<int32_t>(offsetof(MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F, ___scaleMinimum_9)); }
	inline float get_scaleMinimum_9() const { return ___scaleMinimum_9; }
	inline float* get_address_of_scaleMinimum_9() { return &___scaleMinimum_9; }
	inline void set_scaleMinimum_9(float value)
	{
		___scaleMinimum_9 = value;
	}

	inline static int32_t get_offset_of_minimumScale_10() { return static_cast<int32_t>(offsetof(MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F, ___minimumScale_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_minimumScale_10() const { return ___minimumScale_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_minimumScale_10() { return &___minimumScale_10; }
	inline void set_minimumScale_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___minimumScale_10 = value;
	}

	inline static int32_t get_offset_of_scaleMaximum_11() { return static_cast<int32_t>(offsetof(MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F, ___scaleMaximum_11)); }
	inline float get_scaleMaximum_11() const { return ___scaleMaximum_11; }
	inline float* get_address_of_scaleMaximum_11() { return &___scaleMaximum_11; }
	inline void set_scaleMaximum_11(float value)
	{
		___scaleMaximum_11 = value;
	}

	inline static int32_t get_offset_of_maximumScale_12() { return static_cast<int32_t>(offsetof(MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F, ___maximumScale_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_maximumScale_12() const { return ___maximumScale_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_maximumScale_12() { return &___maximumScale_12; }
	inline void set_maximumScale_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___maximumScale_12 = value;
	}

	inline static int32_t get_offset_of_relativeToInitialState_13() { return static_cast<int32_t>(offsetof(MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F, ___relativeToInitialState_13)); }
	inline bool get_relativeToInitialState_13() const { return ___relativeToInitialState_13; }
	inline bool* get_address_of_relativeToInitialState_13() { return &___relativeToInitialState_13; }
	inline void set_relativeToInitialState_13(bool value)
	{
		___relativeToInitialState_13 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint
struct MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B  : public TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.AxisFlags Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::constraintOnMovement
	int32_t ___constraintOnMovement_9;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::useLocalSpaceForConstraint
	bool ___useLocalSpaceForConstraint_10;

public:
	inline static int32_t get_offset_of_constraintOnMovement_9() { return static_cast<int32_t>(offsetof(MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B, ___constraintOnMovement_9)); }
	inline int32_t get_constraintOnMovement_9() const { return ___constraintOnMovement_9; }
	inline int32_t* get_address_of_constraintOnMovement_9() { return &___constraintOnMovement_9; }
	inline void set_constraintOnMovement_9(int32_t value)
	{
		___constraintOnMovement_9 = value;
	}

	inline static int32_t get_offset_of_useLocalSpaceForConstraint_10() { return static_cast<int32_t>(offsetof(MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B, ___useLocalSpaceForConstraint_10)); }
	inline bool get_useLocalSpaceForConstraint_10() const { return ___useLocalSpaceForConstraint_10; }
	inline bool* get_address_of_useLocalSpaceForConstraint_10() { return &___useLocalSpaceForConstraint_10; }
	inline void set_useLocalSpaceForConstraint_10(bool value)
	{
		___useLocalSpaceForConstraint_10 = value;
	}
};


// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner
struct PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7  : public BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::prefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___prefab_6;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::tooltipToggleAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___tooltipToggleAction_7;
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/AppearType Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::appearType
	int32_t ___appearType_8;
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/VanishType Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::vanishType
	int32_t ___vanishType_9;
	// Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/RemainType Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::remainType
	int32_t ___remainType_10;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::appearDelay
	float ___appearDelay_11;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::vanishDelay
	float ___vanishDelay_12;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::lifetime
	float ___lifetime_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::keepWorldRotation
	bool ___keepWorldRotation_14;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::focusEnterTime
	float ___focusEnterTime_15;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::focusExitTime
	float ___focusExitTime_16;
	// System.Single Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::tappedTime
	float ___tappedTime_17;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::spawnable
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___spawnable_18;

public:
	inline static int32_t get_offset_of_prefab_6() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___prefab_6)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_prefab_6() const { return ___prefab_6; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_prefab_6() { return &___prefab_6; }
	inline void set_prefab_6(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___prefab_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___prefab_6), (void*)value);
	}

	inline static int32_t get_offset_of_tooltipToggleAction_7() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___tooltipToggleAction_7)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_tooltipToggleAction_7() const { return ___tooltipToggleAction_7; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_tooltipToggleAction_7() { return &___tooltipToggleAction_7; }
	inline void set_tooltipToggleAction_7(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___tooltipToggleAction_7 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___tooltipToggleAction_7))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_appearType_8() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___appearType_8)); }
	inline int32_t get_appearType_8() const { return ___appearType_8; }
	inline int32_t* get_address_of_appearType_8() { return &___appearType_8; }
	inline void set_appearType_8(int32_t value)
	{
		___appearType_8 = value;
	}

	inline static int32_t get_offset_of_vanishType_9() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___vanishType_9)); }
	inline int32_t get_vanishType_9() const { return ___vanishType_9; }
	inline int32_t* get_address_of_vanishType_9() { return &___vanishType_9; }
	inline void set_vanishType_9(int32_t value)
	{
		___vanishType_9 = value;
	}

	inline static int32_t get_offset_of_remainType_10() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___remainType_10)); }
	inline int32_t get_remainType_10() const { return ___remainType_10; }
	inline int32_t* get_address_of_remainType_10() { return &___remainType_10; }
	inline void set_remainType_10(int32_t value)
	{
		___remainType_10 = value;
	}

	inline static int32_t get_offset_of_appearDelay_11() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___appearDelay_11)); }
	inline float get_appearDelay_11() const { return ___appearDelay_11; }
	inline float* get_address_of_appearDelay_11() { return &___appearDelay_11; }
	inline void set_appearDelay_11(float value)
	{
		___appearDelay_11 = value;
	}

	inline static int32_t get_offset_of_vanishDelay_12() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___vanishDelay_12)); }
	inline float get_vanishDelay_12() const { return ___vanishDelay_12; }
	inline float* get_address_of_vanishDelay_12() { return &___vanishDelay_12; }
	inline void set_vanishDelay_12(float value)
	{
		___vanishDelay_12 = value;
	}

	inline static int32_t get_offset_of_lifetime_13() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___lifetime_13)); }
	inline float get_lifetime_13() const { return ___lifetime_13; }
	inline float* get_address_of_lifetime_13() { return &___lifetime_13; }
	inline void set_lifetime_13(float value)
	{
		___lifetime_13 = value;
	}

	inline static int32_t get_offset_of_keepWorldRotation_14() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___keepWorldRotation_14)); }
	inline bool get_keepWorldRotation_14() const { return ___keepWorldRotation_14; }
	inline bool* get_address_of_keepWorldRotation_14() { return &___keepWorldRotation_14; }
	inline void set_keepWorldRotation_14(bool value)
	{
		___keepWorldRotation_14 = value;
	}

	inline static int32_t get_offset_of_focusEnterTime_15() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___focusEnterTime_15)); }
	inline float get_focusEnterTime_15() const { return ___focusEnterTime_15; }
	inline float* get_address_of_focusEnterTime_15() { return &___focusEnterTime_15; }
	inline void set_focusEnterTime_15(float value)
	{
		___focusEnterTime_15 = value;
	}

	inline static int32_t get_offset_of_focusExitTime_16() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___focusExitTime_16)); }
	inline float get_focusExitTime_16() const { return ___focusExitTime_16; }
	inline float* get_address_of_focusExitTime_16() { return &___focusExitTime_16; }
	inline void set_focusExitTime_16(float value)
	{
		___focusExitTime_16 = value;
	}

	inline static int32_t get_offset_of_tappedTime_17() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___tappedTime_17)); }
	inline float get_tappedTime_17() const { return ___tappedTime_17; }
	inline float* get_address_of_tappedTime_17() { return &___tappedTime_17; }
	inline void set_tappedTime_17(float value)
	{
		___tappedTime_17 = value;
	}

	inline static int32_t get_offset_of_spawnable_18() { return static_cast<int32_t>(offsetof(PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7, ___spawnable_18)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_spawnable_18() const { return ___spawnable_18; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_spawnable_18() { return &___spawnable_18; }
	inline void set_spawnable_18(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___spawnable_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___spawnable_18), (void*)value);
	}
};


// Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection
struct GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4  : public BaseObjectCollection_t28800ED99C48E52676F95791DA3FE02771D11873
{
public:
	// Microsoft.MixedReality.Toolkit.Utilities.ObjectOrientationSurfaceType Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::surfaceType
	int32_t ___surfaceType_8;
	// Microsoft.MixedReality.Toolkit.Utilities.OrientationType Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::orientType
	int32_t ___orientType_9;
	// Microsoft.MixedReality.Toolkit.Utilities.LayoutOrder Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::layout
	int32_t ___layout_10;
	// Microsoft.MixedReality.Toolkit.Utilities.LayoutAnchor Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::anchor
	int32_t ___anchor_11;
	// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::anchorAlongAxis
	bool ___anchorAlongAxis_12;
	// Microsoft.MixedReality.Toolkit.Utilities.LayoutHorizontalAlignment Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::columnAlignment
	int32_t ___columnAlignment_13;
	// Microsoft.MixedReality.Toolkit.Utilities.LayoutVerticalAlignment Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::rowAlignment
	int32_t ___rowAlignment_14;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::radius
	float ___radius_15;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::radialRange
	float ___radialRange_16;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::distance
	float ___distance_17;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::rows
	int32_t ___rows_19;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::columns
	int32_t ___columns_20;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::cellWidth
	float ___cellWidth_21;
	// System.Single Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::cellHeight
	float ___cellHeight_22;
	// UnityEngine.Mesh Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::<SphereMesh>k__BackingField
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___U3CSphereMeshU3Ek__BackingField_23;
	// UnityEngine.Mesh Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::<CylinderMesh>k__BackingField
	Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * ___U3CCylinderMeshU3Ek__BackingField_24;
	// UnityEngine.Vector2 Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::HalfCell
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___HalfCell_25;
	// System.Int32 Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::assetVersion
	int32_t ___assetVersion_27;

public:
	inline static int32_t get_offset_of_surfaceType_8() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___surfaceType_8)); }
	inline int32_t get_surfaceType_8() const { return ___surfaceType_8; }
	inline int32_t* get_address_of_surfaceType_8() { return &___surfaceType_8; }
	inline void set_surfaceType_8(int32_t value)
	{
		___surfaceType_8 = value;
	}

	inline static int32_t get_offset_of_orientType_9() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___orientType_9)); }
	inline int32_t get_orientType_9() const { return ___orientType_9; }
	inline int32_t* get_address_of_orientType_9() { return &___orientType_9; }
	inline void set_orientType_9(int32_t value)
	{
		___orientType_9 = value;
	}

	inline static int32_t get_offset_of_layout_10() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___layout_10)); }
	inline int32_t get_layout_10() const { return ___layout_10; }
	inline int32_t* get_address_of_layout_10() { return &___layout_10; }
	inline void set_layout_10(int32_t value)
	{
		___layout_10 = value;
	}

	inline static int32_t get_offset_of_anchor_11() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___anchor_11)); }
	inline int32_t get_anchor_11() const { return ___anchor_11; }
	inline int32_t* get_address_of_anchor_11() { return &___anchor_11; }
	inline void set_anchor_11(int32_t value)
	{
		___anchor_11 = value;
	}

	inline static int32_t get_offset_of_anchorAlongAxis_12() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___anchorAlongAxis_12)); }
	inline bool get_anchorAlongAxis_12() const { return ___anchorAlongAxis_12; }
	inline bool* get_address_of_anchorAlongAxis_12() { return &___anchorAlongAxis_12; }
	inline void set_anchorAlongAxis_12(bool value)
	{
		___anchorAlongAxis_12 = value;
	}

	inline static int32_t get_offset_of_columnAlignment_13() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___columnAlignment_13)); }
	inline int32_t get_columnAlignment_13() const { return ___columnAlignment_13; }
	inline int32_t* get_address_of_columnAlignment_13() { return &___columnAlignment_13; }
	inline void set_columnAlignment_13(int32_t value)
	{
		___columnAlignment_13 = value;
	}

	inline static int32_t get_offset_of_rowAlignment_14() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___rowAlignment_14)); }
	inline int32_t get_rowAlignment_14() const { return ___rowAlignment_14; }
	inline int32_t* get_address_of_rowAlignment_14() { return &___rowAlignment_14; }
	inline void set_rowAlignment_14(int32_t value)
	{
		___rowAlignment_14 = value;
	}

	inline static int32_t get_offset_of_radius_15() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___radius_15)); }
	inline float get_radius_15() const { return ___radius_15; }
	inline float* get_address_of_radius_15() { return &___radius_15; }
	inline void set_radius_15(float value)
	{
		___radius_15 = value;
	}

	inline static int32_t get_offset_of_radialRange_16() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___radialRange_16)); }
	inline float get_radialRange_16() const { return ___radialRange_16; }
	inline float* get_address_of_radialRange_16() { return &___radialRange_16; }
	inline void set_radialRange_16(float value)
	{
		___radialRange_16 = value;
	}

	inline static int32_t get_offset_of_distance_17() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___distance_17)); }
	inline float get_distance_17() const { return ___distance_17; }
	inline float* get_address_of_distance_17() { return &___distance_17; }
	inline void set_distance_17(float value)
	{
		___distance_17 = value;
	}

	inline static int32_t get_offset_of_rows_19() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___rows_19)); }
	inline int32_t get_rows_19() const { return ___rows_19; }
	inline int32_t* get_address_of_rows_19() { return &___rows_19; }
	inline void set_rows_19(int32_t value)
	{
		___rows_19 = value;
	}

	inline static int32_t get_offset_of_columns_20() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___columns_20)); }
	inline int32_t get_columns_20() const { return ___columns_20; }
	inline int32_t* get_address_of_columns_20() { return &___columns_20; }
	inline void set_columns_20(int32_t value)
	{
		___columns_20 = value;
	}

	inline static int32_t get_offset_of_cellWidth_21() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___cellWidth_21)); }
	inline float get_cellWidth_21() const { return ___cellWidth_21; }
	inline float* get_address_of_cellWidth_21() { return &___cellWidth_21; }
	inline void set_cellWidth_21(float value)
	{
		___cellWidth_21 = value;
	}

	inline static int32_t get_offset_of_cellHeight_22() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___cellHeight_22)); }
	inline float get_cellHeight_22() const { return ___cellHeight_22; }
	inline float* get_address_of_cellHeight_22() { return &___cellHeight_22; }
	inline void set_cellHeight_22(float value)
	{
		___cellHeight_22 = value;
	}

	inline static int32_t get_offset_of_U3CSphereMeshU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___U3CSphereMeshU3Ek__BackingField_23)); }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * get_U3CSphereMeshU3Ek__BackingField_23() const { return ___U3CSphereMeshU3Ek__BackingField_23; }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C ** get_address_of_U3CSphereMeshU3Ek__BackingField_23() { return &___U3CSphereMeshU3Ek__BackingField_23; }
	inline void set_U3CSphereMeshU3Ek__BackingField_23(Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * value)
	{
		___U3CSphereMeshU3Ek__BackingField_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CSphereMeshU3Ek__BackingField_23), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCylinderMeshU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___U3CCylinderMeshU3Ek__BackingField_24)); }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * get_U3CCylinderMeshU3Ek__BackingField_24() const { return ___U3CCylinderMeshU3Ek__BackingField_24; }
	inline Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C ** get_address_of_U3CCylinderMeshU3Ek__BackingField_24() { return &___U3CCylinderMeshU3Ek__BackingField_24; }
	inline void set_U3CCylinderMeshU3Ek__BackingField_24(Mesh_t6106B8D8E4C691321581AB0445552EC78B947B8C * value)
	{
		___U3CCylinderMeshU3Ek__BackingField_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CCylinderMeshU3Ek__BackingField_24), (void*)value);
	}

	inline static int32_t get_offset_of_HalfCell_25() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___HalfCell_25)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_HalfCell_25() const { return ___HalfCell_25; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_HalfCell_25() { return &___HalfCell_25; }
	inline void set_HalfCell_25(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___HalfCell_25 = value;
	}

	inline static int32_t get_offset_of_assetVersion_27() { return static_cast<int32_t>(offsetof(GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4, ___assetVersion_27)); }
	inline int32_t get_assetVersion_27() const { return ___assetVersion_27; }
	inline int32_t* get_address_of_assetVersion_27() { return &___assetVersion_27; }
	inline void set_assetVersion_27(int32_t value)
	{
		___assetVersion_27 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer
struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7  : public ControllerPoseSynchronizer_t7F1506664CD6F23543D9577EAB574D57A795A064
{
public:
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::cursorPrefab
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursorPrefab_13;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::disableCursorOnStart
	bool ___disableCursorOnStart_14;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::setCursorVisibilityOnSourceDetected
	bool ___setCursorVisibilityOnSourceDetected_15;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::cursorInstance
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___cursorInstance_16;
	// UnityEngine.Transform Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::raycastOrigin
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___raycastOrigin_17;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::activeHoldAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___activeHoldAction_18;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___pointerAction_19;
	// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::grabAction
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  ___grabAction_20;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsGrabPressed
	bool ___IsGrabPressed_21;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::requiresHoldAction
	bool ___requiresHoldAction_22;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::requiresActionBeforeEnabling
	bool ___requiresActionBeforeEnabling_23;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsSelectPressed
	bool ___IsSelectPressed_24;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::HasSelectPressedOnce
	bool ___HasSelectPressedOnce_25;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::IsHoldPressed
	bool ___IsHoldPressed_26;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::isCursorInstantiatedFromPrefab
	bool ___isCursorInstantiatedFromPrefab_27;
	// System.UInt32 Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerId
	uint32_t ___pointerId_29;
	// System.String Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::basePointerName
	String_t* ___basePointerName_30;
	// System.String Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerName
	String_t* ___pointerName_31;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<InputSourceParent>k__BackingField
	RuntimeObject* ___U3CInputSourceParentU3Ek__BackingField_32;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<BaseCursor>k__BackingField
	RuntimeObject* ___U3CBaseCursorU3Ek__BackingField_33;
	// Microsoft.MixedReality.Toolkit.Input.ICursorModifier Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<CursorModifier>k__BackingField
	RuntimeObject* ___U3CCursorModifierU3Ek__BackingField_34;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsActive>k__BackingField
	bool ___U3CIsActiveU3Ek__BackingField_35;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsFocusLocked>k__BackingField
	bool ___U3CIsFocusLockedU3Ek__BackingField_36;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<IsTargetPositionLockedOnFocusLock>k__BackingField
	bool ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::overrideGlobalPointerExtent
	bool ___overrideGlobalPointerExtent_38;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::pointerExtent
	float ___pointerExtent_39;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::defaultPointerExtent
	float ___defaultPointerExtent_40;
	// Microsoft.MixedReality.Toolkit.Physics.RayStep[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<Rays>k__BackingField
	RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* ___U3CRaysU3Ek__BackingField_41;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<PrioritizedLayerMasksOverride>k__BackingField
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42;
	// Microsoft.MixedReality.Toolkit.Input.IMixedRealityFocusHandler Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<FocusTarget>k__BackingField
	RuntimeObject* ___U3CFocusTargetU3Ek__BackingField_43;
	// Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<Result>k__BackingField
	RuntimeObject* ___U3CResultU3Ek__BackingField_44;
	// Microsoft.MixedReality.Toolkit.Physics.IBaseRayStabilizer Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<RayStabilizer>k__BackingField
	RuntimeObject* ___U3CRayStabilizerU3Ek__BackingField_45;
	// Microsoft.MixedReality.Toolkit.Physics.SceneQueryType Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::<SceneQueryType>k__BackingField
	int32_t ___U3CSceneQueryTypeU3Ek__BackingField_46;
	// System.Single Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::sphereCastRadius
	float ___sphereCastRadius_47;

public:
	inline static int32_t get_offset_of_cursorPrefab_13() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___cursorPrefab_13)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_cursorPrefab_13() const { return ___cursorPrefab_13; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_cursorPrefab_13() { return &___cursorPrefab_13; }
	inline void set_cursorPrefab_13(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___cursorPrefab_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cursorPrefab_13), (void*)value);
	}

	inline static int32_t get_offset_of_disableCursorOnStart_14() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___disableCursorOnStart_14)); }
	inline bool get_disableCursorOnStart_14() const { return ___disableCursorOnStart_14; }
	inline bool* get_address_of_disableCursorOnStart_14() { return &___disableCursorOnStart_14; }
	inline void set_disableCursorOnStart_14(bool value)
	{
		___disableCursorOnStart_14 = value;
	}

	inline static int32_t get_offset_of_setCursorVisibilityOnSourceDetected_15() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___setCursorVisibilityOnSourceDetected_15)); }
	inline bool get_setCursorVisibilityOnSourceDetected_15() const { return ___setCursorVisibilityOnSourceDetected_15; }
	inline bool* get_address_of_setCursorVisibilityOnSourceDetected_15() { return &___setCursorVisibilityOnSourceDetected_15; }
	inline void set_setCursorVisibilityOnSourceDetected_15(bool value)
	{
		___setCursorVisibilityOnSourceDetected_15 = value;
	}

	inline static int32_t get_offset_of_cursorInstance_16() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___cursorInstance_16)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_cursorInstance_16() const { return ___cursorInstance_16; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_cursorInstance_16() { return &___cursorInstance_16; }
	inline void set_cursorInstance_16(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___cursorInstance_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cursorInstance_16), (void*)value);
	}

	inline static int32_t get_offset_of_raycastOrigin_17() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___raycastOrigin_17)); }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * get_raycastOrigin_17() const { return ___raycastOrigin_17; }
	inline Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA ** get_address_of_raycastOrigin_17() { return &___raycastOrigin_17; }
	inline void set_raycastOrigin_17(Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * value)
	{
		___raycastOrigin_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___raycastOrigin_17), (void*)value);
	}

	inline static int32_t get_offset_of_activeHoldAction_18() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___activeHoldAction_18)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_activeHoldAction_18() const { return ___activeHoldAction_18; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_activeHoldAction_18() { return &___activeHoldAction_18; }
	inline void set_activeHoldAction_18(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___activeHoldAction_18 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___activeHoldAction_18))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_pointerAction_19() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerAction_19)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_pointerAction_19() const { return ___pointerAction_19; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_pointerAction_19() { return &___pointerAction_19; }
	inline void set_pointerAction_19(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___pointerAction_19 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___pointerAction_19))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_grabAction_20() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___grabAction_20)); }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  get_grabAction_20() const { return ___grabAction_20; }
	inline MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * get_address_of_grabAction_20() { return &___grabAction_20; }
	inline void set_grabAction_20(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  value)
	{
		___grabAction_20 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___grabAction_20))->___description_2), (void*)NULL);
	}

	inline static int32_t get_offset_of_IsGrabPressed_21() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsGrabPressed_21)); }
	inline bool get_IsGrabPressed_21() const { return ___IsGrabPressed_21; }
	inline bool* get_address_of_IsGrabPressed_21() { return &___IsGrabPressed_21; }
	inline void set_IsGrabPressed_21(bool value)
	{
		___IsGrabPressed_21 = value;
	}

	inline static int32_t get_offset_of_requiresHoldAction_22() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___requiresHoldAction_22)); }
	inline bool get_requiresHoldAction_22() const { return ___requiresHoldAction_22; }
	inline bool* get_address_of_requiresHoldAction_22() { return &___requiresHoldAction_22; }
	inline void set_requiresHoldAction_22(bool value)
	{
		___requiresHoldAction_22 = value;
	}

	inline static int32_t get_offset_of_requiresActionBeforeEnabling_23() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___requiresActionBeforeEnabling_23)); }
	inline bool get_requiresActionBeforeEnabling_23() const { return ___requiresActionBeforeEnabling_23; }
	inline bool* get_address_of_requiresActionBeforeEnabling_23() { return &___requiresActionBeforeEnabling_23; }
	inline void set_requiresActionBeforeEnabling_23(bool value)
	{
		___requiresActionBeforeEnabling_23 = value;
	}

	inline static int32_t get_offset_of_IsSelectPressed_24() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsSelectPressed_24)); }
	inline bool get_IsSelectPressed_24() const { return ___IsSelectPressed_24; }
	inline bool* get_address_of_IsSelectPressed_24() { return &___IsSelectPressed_24; }
	inline void set_IsSelectPressed_24(bool value)
	{
		___IsSelectPressed_24 = value;
	}

	inline static int32_t get_offset_of_HasSelectPressedOnce_25() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___HasSelectPressedOnce_25)); }
	inline bool get_HasSelectPressedOnce_25() const { return ___HasSelectPressedOnce_25; }
	inline bool* get_address_of_HasSelectPressedOnce_25() { return &___HasSelectPressedOnce_25; }
	inline void set_HasSelectPressedOnce_25(bool value)
	{
		___HasSelectPressedOnce_25 = value;
	}

	inline static int32_t get_offset_of_IsHoldPressed_26() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___IsHoldPressed_26)); }
	inline bool get_IsHoldPressed_26() const { return ___IsHoldPressed_26; }
	inline bool* get_address_of_IsHoldPressed_26() { return &___IsHoldPressed_26; }
	inline void set_IsHoldPressed_26(bool value)
	{
		___IsHoldPressed_26 = value;
	}

	inline static int32_t get_offset_of_isCursorInstantiatedFromPrefab_27() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___isCursorInstantiatedFromPrefab_27)); }
	inline bool get_isCursorInstantiatedFromPrefab_27() const { return ___isCursorInstantiatedFromPrefab_27; }
	inline bool* get_address_of_isCursorInstantiatedFromPrefab_27() { return &___isCursorInstantiatedFromPrefab_27; }
	inline void set_isCursorInstantiatedFromPrefab_27(bool value)
	{
		___isCursorInstantiatedFromPrefab_27 = value;
	}

	inline static int32_t get_offset_of_pointerId_29() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerId_29)); }
	inline uint32_t get_pointerId_29() const { return ___pointerId_29; }
	inline uint32_t* get_address_of_pointerId_29() { return &___pointerId_29; }
	inline void set_pointerId_29(uint32_t value)
	{
		___pointerId_29 = value;
	}

	inline static int32_t get_offset_of_basePointerName_30() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___basePointerName_30)); }
	inline String_t* get_basePointerName_30() const { return ___basePointerName_30; }
	inline String_t** get_address_of_basePointerName_30() { return &___basePointerName_30; }
	inline void set_basePointerName_30(String_t* value)
	{
		___basePointerName_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___basePointerName_30), (void*)value);
	}

	inline static int32_t get_offset_of_pointerName_31() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerName_31)); }
	inline String_t* get_pointerName_31() const { return ___pointerName_31; }
	inline String_t** get_address_of_pointerName_31() { return &___pointerName_31; }
	inline void set_pointerName_31(String_t* value)
	{
		___pointerName_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pointerName_31), (void*)value);
	}

	inline static int32_t get_offset_of_U3CInputSourceParentU3Ek__BackingField_32() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CInputSourceParentU3Ek__BackingField_32)); }
	inline RuntimeObject* get_U3CInputSourceParentU3Ek__BackingField_32() const { return ___U3CInputSourceParentU3Ek__BackingField_32; }
	inline RuntimeObject** get_address_of_U3CInputSourceParentU3Ek__BackingField_32() { return &___U3CInputSourceParentU3Ek__BackingField_32; }
	inline void set_U3CInputSourceParentU3Ek__BackingField_32(RuntimeObject* value)
	{
		___U3CInputSourceParentU3Ek__BackingField_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CInputSourceParentU3Ek__BackingField_32), (void*)value);
	}

	inline static int32_t get_offset_of_U3CBaseCursorU3Ek__BackingField_33() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CBaseCursorU3Ek__BackingField_33)); }
	inline RuntimeObject* get_U3CBaseCursorU3Ek__BackingField_33() const { return ___U3CBaseCursorU3Ek__BackingField_33; }
	inline RuntimeObject** get_address_of_U3CBaseCursorU3Ek__BackingField_33() { return &___U3CBaseCursorU3Ek__BackingField_33; }
	inline void set_U3CBaseCursorU3Ek__BackingField_33(RuntimeObject* value)
	{
		___U3CBaseCursorU3Ek__BackingField_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CBaseCursorU3Ek__BackingField_33), (void*)value);
	}

	inline static int32_t get_offset_of_U3CCursorModifierU3Ek__BackingField_34() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CCursorModifierU3Ek__BackingField_34)); }
	inline RuntimeObject* get_U3CCursorModifierU3Ek__BackingField_34() const { return ___U3CCursorModifierU3Ek__BackingField_34; }
	inline RuntimeObject** get_address_of_U3CCursorModifierU3Ek__BackingField_34() { return &___U3CCursorModifierU3Ek__BackingField_34; }
	inline void set_U3CCursorModifierU3Ek__BackingField_34(RuntimeObject* value)
	{
		___U3CCursorModifierU3Ek__BackingField_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CCursorModifierU3Ek__BackingField_34), (void*)value);
	}

	inline static int32_t get_offset_of_U3CIsActiveU3Ek__BackingField_35() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsActiveU3Ek__BackingField_35)); }
	inline bool get_U3CIsActiveU3Ek__BackingField_35() const { return ___U3CIsActiveU3Ek__BackingField_35; }
	inline bool* get_address_of_U3CIsActiveU3Ek__BackingField_35() { return &___U3CIsActiveU3Ek__BackingField_35; }
	inline void set_U3CIsActiveU3Ek__BackingField_35(bool value)
	{
		___U3CIsActiveU3Ek__BackingField_35 = value;
	}

	inline static int32_t get_offset_of_U3CIsFocusLockedU3Ek__BackingField_36() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsFocusLockedU3Ek__BackingField_36)); }
	inline bool get_U3CIsFocusLockedU3Ek__BackingField_36() const { return ___U3CIsFocusLockedU3Ek__BackingField_36; }
	inline bool* get_address_of_U3CIsFocusLockedU3Ek__BackingField_36() { return &___U3CIsFocusLockedU3Ek__BackingField_36; }
	inline void set_U3CIsFocusLockedU3Ek__BackingField_36(bool value)
	{
		___U3CIsFocusLockedU3Ek__BackingField_36 = value;
	}

	inline static int32_t get_offset_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37)); }
	inline bool get_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() const { return ___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37; }
	inline bool* get_address_of_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37() { return &___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37; }
	inline void set_U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37(bool value)
	{
		___U3CIsTargetPositionLockedOnFocusLockU3Ek__BackingField_37 = value;
	}

	inline static int32_t get_offset_of_overrideGlobalPointerExtent_38() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___overrideGlobalPointerExtent_38)); }
	inline bool get_overrideGlobalPointerExtent_38() const { return ___overrideGlobalPointerExtent_38; }
	inline bool* get_address_of_overrideGlobalPointerExtent_38() { return &___overrideGlobalPointerExtent_38; }
	inline void set_overrideGlobalPointerExtent_38(bool value)
	{
		___overrideGlobalPointerExtent_38 = value;
	}

	inline static int32_t get_offset_of_pointerExtent_39() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___pointerExtent_39)); }
	inline float get_pointerExtent_39() const { return ___pointerExtent_39; }
	inline float* get_address_of_pointerExtent_39() { return &___pointerExtent_39; }
	inline void set_pointerExtent_39(float value)
	{
		___pointerExtent_39 = value;
	}

	inline static int32_t get_offset_of_defaultPointerExtent_40() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___defaultPointerExtent_40)); }
	inline float get_defaultPointerExtent_40() const { return ___defaultPointerExtent_40; }
	inline float* get_address_of_defaultPointerExtent_40() { return &___defaultPointerExtent_40; }
	inline void set_defaultPointerExtent_40(float value)
	{
		___defaultPointerExtent_40 = value;
	}

	inline static int32_t get_offset_of_U3CRaysU3Ek__BackingField_41() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CRaysU3Ek__BackingField_41)); }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* get_U3CRaysU3Ek__BackingField_41() const { return ___U3CRaysU3Ek__BackingField_41; }
	inline RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8** get_address_of_U3CRaysU3Ek__BackingField_41() { return &___U3CRaysU3Ek__BackingField_41; }
	inline void set_U3CRaysU3Ek__BackingField_41(RayStepU5BU5D_tD4863D674CE1452C8346109BBAEAB506F3B155B8* value)
	{
		___U3CRaysU3Ek__BackingField_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRaysU3Ek__BackingField_41), (void*)value);
	}

	inline static int32_t get_offset_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() const { return ___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42() { return &___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42; }
	inline void set_U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CPrioritizedLayerMasksOverrideU3Ek__BackingField_42), (void*)value);
	}

	inline static int32_t get_offset_of_U3CFocusTargetU3Ek__BackingField_43() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CFocusTargetU3Ek__BackingField_43)); }
	inline RuntimeObject* get_U3CFocusTargetU3Ek__BackingField_43() const { return ___U3CFocusTargetU3Ek__BackingField_43; }
	inline RuntimeObject** get_address_of_U3CFocusTargetU3Ek__BackingField_43() { return &___U3CFocusTargetU3Ek__BackingField_43; }
	inline void set_U3CFocusTargetU3Ek__BackingField_43(RuntimeObject* value)
	{
		___U3CFocusTargetU3Ek__BackingField_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CFocusTargetU3Ek__BackingField_43), (void*)value);
	}

	inline static int32_t get_offset_of_U3CResultU3Ek__BackingField_44() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CResultU3Ek__BackingField_44)); }
	inline RuntimeObject* get_U3CResultU3Ek__BackingField_44() const { return ___U3CResultU3Ek__BackingField_44; }
	inline RuntimeObject** get_address_of_U3CResultU3Ek__BackingField_44() { return &___U3CResultU3Ek__BackingField_44; }
	inline void set_U3CResultU3Ek__BackingField_44(RuntimeObject* value)
	{
		___U3CResultU3Ek__BackingField_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CResultU3Ek__BackingField_44), (void*)value);
	}

	inline static int32_t get_offset_of_U3CRayStabilizerU3Ek__BackingField_45() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CRayStabilizerU3Ek__BackingField_45)); }
	inline RuntimeObject* get_U3CRayStabilizerU3Ek__BackingField_45() const { return ___U3CRayStabilizerU3Ek__BackingField_45; }
	inline RuntimeObject** get_address_of_U3CRayStabilizerU3Ek__BackingField_45() { return &___U3CRayStabilizerU3Ek__BackingField_45; }
	inline void set_U3CRayStabilizerU3Ek__BackingField_45(RuntimeObject* value)
	{
		___U3CRayStabilizerU3Ek__BackingField_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CRayStabilizerU3Ek__BackingField_45), (void*)value);
	}

	inline static int32_t get_offset_of_U3CSceneQueryTypeU3Ek__BackingField_46() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___U3CSceneQueryTypeU3Ek__BackingField_46)); }
	inline int32_t get_U3CSceneQueryTypeU3Ek__BackingField_46() const { return ___U3CSceneQueryTypeU3Ek__BackingField_46; }
	inline int32_t* get_address_of_U3CSceneQueryTypeU3Ek__BackingField_46() { return &___U3CSceneQueryTypeU3Ek__BackingField_46; }
	inline void set_U3CSceneQueryTypeU3Ek__BackingField_46(int32_t value)
	{
		___U3CSceneQueryTypeU3Ek__BackingField_46 = value;
	}

	inline static int32_t get_offset_of_sphereCastRadius_47() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7, ___sphereCastRadius_47)); }
	inline float get_sphereCastRadius_47() const { return ___sphereCastRadius_47; }
	inline float* get_address_of_sphereCastRadius_47() { return &___sphereCastRadius_47; }
	inline void set_sphereCastRadius_47(float value)
	{
		___sphereCastRadius_47 = value;
	}
};

struct BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::SetCursorPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___SetCursorPerfMarker_28;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_48;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_49;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnInputUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputUpPerfMarker_50;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.BaseControllerPointer::OnInputDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnInputDownPerfMarker_51;

public:
	inline static int32_t get_offset_of_SetCursorPerfMarker_28() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___SetCursorPerfMarker_28)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_SetCursorPerfMarker_28() const { return ___SetCursorPerfMarker_28; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_SetCursorPerfMarker_28() { return &___SetCursorPerfMarker_28; }
	inline void set_SetCursorPerfMarker_28(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___SetCursorPerfMarker_28 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_48() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnPostSceneQueryPerfMarker_48)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_48() const { return ___OnPostSceneQueryPerfMarker_48; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_48() { return &___OnPostSceneQueryPerfMarker_48; }
	inline void set_OnPostSceneQueryPerfMarker_48(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_48 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_49() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnSourceLostPerfMarker_49)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_49() const { return ___OnSourceLostPerfMarker_49; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_49() { return &___OnSourceLostPerfMarker_49; }
	inline void set_OnSourceLostPerfMarker_49(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_49 = value;
	}

	inline static int32_t get_offset_of_OnInputUpPerfMarker_50() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnInputUpPerfMarker_50)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputUpPerfMarker_50() const { return ___OnInputUpPerfMarker_50; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputUpPerfMarker_50() { return &___OnInputUpPerfMarker_50; }
	inline void set_OnInputUpPerfMarker_50(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputUpPerfMarker_50 = value;
	}

	inline static int32_t get_offset_of_OnInputDownPerfMarker_51() { return static_cast<int32_t>(offsetof(BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7_StaticFields, ___OnInputDownPerfMarker_51)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnInputDownPerfMarker_51() const { return ___OnInputDownPerfMarker_51; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnInputDownPerfMarker_51() { return &___OnInputDownPerfMarker_51; }
	inline void set_OnInputDownPerfMarker_51(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnInputDownPerfMarker_51 = value;
	}
};


// Microsoft.MixedReality.Toolkit.Input.PokePointer
struct PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18  : public BaseControllerPointer_t706EB6D0A40F3227F91EC569843AB97394EE36B7
{
public:
	// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::touchableDistance
	float ___touchableDistance_53;
	// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::sourcePoseOffset
	float ___sourcePoseOffset_54;
	// System.Int32 Microsoft.MixedReality.Toolkit.Input.PokePointer::sceneQueryBufferSize
	int32_t ___sceneQueryBufferSize_55;
	// System.Boolean Microsoft.MixedReality.Toolkit.Input.PokePointer::ignoreCollidersNotInFOV
	bool ___ignoreCollidersNotInFOV_56;
	// UnityEngine.LayerMask[] Microsoft.MixedReality.Toolkit.Input.PokePointer::pokeLayerMasks
	LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* ___pokeLayerMasks_57;
	// UnityEngine.QueryTriggerInteraction Microsoft.MixedReality.Toolkit.Input.PokePointer::triggerInteraction
	int32_t ___triggerInteraction_58;
	// UnityEngine.Collider[] Microsoft.MixedReality.Toolkit.Input.PokePointer::queryBuffer
	ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* ___queryBuffer_59;
	// System.Single Microsoft.MixedReality.Toolkit.Input.PokePointer::closestDistance
	float ___closestDistance_60;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::closestNormal
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___closestNormal_61;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::endPoint
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___endPoint_62;
	// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::<PreviousPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CPreviousPositionU3Ek__BackingField_63;
	// Microsoft.MixedReality.Toolkit.Input.BaseNearInteractionTouchable Microsoft.MixedReality.Toolkit.Input.PokePointer::closestProximityTouchable
	BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * ___closestProximityTouchable_64;
	// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.PokePointer::currentTouchableObjectDown
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___currentTouchableObjectDown_65;

public:
	inline static int32_t get_offset_of_touchableDistance_53() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___touchableDistance_53)); }
	inline float get_touchableDistance_53() const { return ___touchableDistance_53; }
	inline float* get_address_of_touchableDistance_53() { return &___touchableDistance_53; }
	inline void set_touchableDistance_53(float value)
	{
		___touchableDistance_53 = value;
	}

	inline static int32_t get_offset_of_sourcePoseOffset_54() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___sourcePoseOffset_54)); }
	inline float get_sourcePoseOffset_54() const { return ___sourcePoseOffset_54; }
	inline float* get_address_of_sourcePoseOffset_54() { return &___sourcePoseOffset_54; }
	inline void set_sourcePoseOffset_54(float value)
	{
		___sourcePoseOffset_54 = value;
	}

	inline static int32_t get_offset_of_sceneQueryBufferSize_55() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___sceneQueryBufferSize_55)); }
	inline int32_t get_sceneQueryBufferSize_55() const { return ___sceneQueryBufferSize_55; }
	inline int32_t* get_address_of_sceneQueryBufferSize_55() { return &___sceneQueryBufferSize_55; }
	inline void set_sceneQueryBufferSize_55(int32_t value)
	{
		___sceneQueryBufferSize_55 = value;
	}

	inline static int32_t get_offset_of_ignoreCollidersNotInFOV_56() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___ignoreCollidersNotInFOV_56)); }
	inline bool get_ignoreCollidersNotInFOV_56() const { return ___ignoreCollidersNotInFOV_56; }
	inline bool* get_address_of_ignoreCollidersNotInFOV_56() { return &___ignoreCollidersNotInFOV_56; }
	inline void set_ignoreCollidersNotInFOV_56(bool value)
	{
		___ignoreCollidersNotInFOV_56 = value;
	}

	inline static int32_t get_offset_of_pokeLayerMasks_57() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___pokeLayerMasks_57)); }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* get_pokeLayerMasks_57() const { return ___pokeLayerMasks_57; }
	inline LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D** get_address_of_pokeLayerMasks_57() { return &___pokeLayerMasks_57; }
	inline void set_pokeLayerMasks_57(LayerMaskU5BU5D_tDFC13874A022E79527D2CDF572C06EC90D0F828D* value)
	{
		___pokeLayerMasks_57 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___pokeLayerMasks_57), (void*)value);
	}

	inline static int32_t get_offset_of_triggerInteraction_58() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___triggerInteraction_58)); }
	inline int32_t get_triggerInteraction_58() const { return ___triggerInteraction_58; }
	inline int32_t* get_address_of_triggerInteraction_58() { return &___triggerInteraction_58; }
	inline void set_triggerInteraction_58(int32_t value)
	{
		___triggerInteraction_58 = value;
	}

	inline static int32_t get_offset_of_queryBuffer_59() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___queryBuffer_59)); }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* get_queryBuffer_59() const { return ___queryBuffer_59; }
	inline ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252** get_address_of_queryBuffer_59() { return &___queryBuffer_59; }
	inline void set_queryBuffer_59(ColliderU5BU5D_t70D1FDAE17E4359298B2BAA828048D1B7CFFE252* value)
	{
		___queryBuffer_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___queryBuffer_59), (void*)value);
	}

	inline static int32_t get_offset_of_closestDistance_60() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___closestDistance_60)); }
	inline float get_closestDistance_60() const { return ___closestDistance_60; }
	inline float* get_address_of_closestDistance_60() { return &___closestDistance_60; }
	inline void set_closestDistance_60(float value)
	{
		___closestDistance_60 = value;
	}

	inline static int32_t get_offset_of_closestNormal_61() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___closestNormal_61)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_closestNormal_61() const { return ___closestNormal_61; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_closestNormal_61() { return &___closestNormal_61; }
	inline void set_closestNormal_61(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___closestNormal_61 = value;
	}

	inline static int32_t get_offset_of_endPoint_62() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___endPoint_62)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_endPoint_62() const { return ___endPoint_62; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_endPoint_62() { return &___endPoint_62; }
	inline void set_endPoint_62(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___endPoint_62 = value;
	}

	inline static int32_t get_offset_of_U3CPreviousPositionU3Ek__BackingField_63() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___U3CPreviousPositionU3Ek__BackingField_63)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CPreviousPositionU3Ek__BackingField_63() const { return ___U3CPreviousPositionU3Ek__BackingField_63; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CPreviousPositionU3Ek__BackingField_63() { return &___U3CPreviousPositionU3Ek__BackingField_63; }
	inline void set_U3CPreviousPositionU3Ek__BackingField_63(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CPreviousPositionU3Ek__BackingField_63 = value;
	}

	inline static int32_t get_offset_of_closestProximityTouchable_64() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___closestProximityTouchable_64)); }
	inline BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * get_closestProximityTouchable_64() const { return ___closestProximityTouchable_64; }
	inline BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 ** get_address_of_closestProximityTouchable_64() { return &___closestProximityTouchable_64; }
	inline void set_closestProximityTouchable_64(BaseNearInteractionTouchable_tDB9BBB2197CBA37E796405BC84273EAF03089F03 * value)
	{
		___closestProximityTouchable_64 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___closestProximityTouchable_64), (void*)value);
	}

	inline static int32_t get_offset_of_currentTouchableObjectDown_65() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18, ___currentTouchableObjectDown_65)); }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * get_currentTouchableObjectDown_65() const { return ___currentTouchableObjectDown_65; }
	inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F ** get_address_of_currentTouchableObjectDown_65() { return &___currentTouchableObjectDown_65; }
	inline void set_currentTouchableObjectDown_65(GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * value)
	{
		___currentTouchableObjectDown_65 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___currentTouchableObjectDown_65), (void*)value);
	}
};

struct PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields
{
public:
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPreSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreSceneQueryPerfMarker_66;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::FindClosestTouchableForLayerMaskPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___FindClosestTouchableForLayerMaskPerfMarker_67;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPostSceneQueryPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPostSceneQueryPerfMarker_68;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnPreCurrentPointerTargetChangePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnPreCurrentPointerTargetChangePerfMarker_69;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeDownPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryRaisePokeDownPerfMarker_70;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::TryRaisePokeUpPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___TryRaisePokeUpPerfMarker_71;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::RaiseTouchUpdatedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___RaiseTouchUpdatedPerfMarker_72;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::IsObjectPartOfTouchablePerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___IsObjectPartOfTouchablePerfMarker_73;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnSourceLostPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceLostPerfMarker_74;
	// Unity.Profiling.ProfilerMarker Microsoft.MixedReality.Toolkit.Input.PokePointer::OnSourceDetectedPerfMarker
	ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  ___OnSourceDetectedPerfMarker_75;

public:
	inline static int32_t get_offset_of_OnPreSceneQueryPerfMarker_66() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnPreSceneQueryPerfMarker_66)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreSceneQueryPerfMarker_66() const { return ___OnPreSceneQueryPerfMarker_66; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreSceneQueryPerfMarker_66() { return &___OnPreSceneQueryPerfMarker_66; }
	inline void set_OnPreSceneQueryPerfMarker_66(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreSceneQueryPerfMarker_66 = value;
	}

	inline static int32_t get_offset_of_FindClosestTouchableForLayerMaskPerfMarker_67() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___FindClosestTouchableForLayerMaskPerfMarker_67)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_FindClosestTouchableForLayerMaskPerfMarker_67() const { return ___FindClosestTouchableForLayerMaskPerfMarker_67; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_FindClosestTouchableForLayerMaskPerfMarker_67() { return &___FindClosestTouchableForLayerMaskPerfMarker_67; }
	inline void set_FindClosestTouchableForLayerMaskPerfMarker_67(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___FindClosestTouchableForLayerMaskPerfMarker_67 = value;
	}

	inline static int32_t get_offset_of_OnPostSceneQueryPerfMarker_68() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnPostSceneQueryPerfMarker_68)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPostSceneQueryPerfMarker_68() const { return ___OnPostSceneQueryPerfMarker_68; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPostSceneQueryPerfMarker_68() { return &___OnPostSceneQueryPerfMarker_68; }
	inline void set_OnPostSceneQueryPerfMarker_68(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPostSceneQueryPerfMarker_68 = value;
	}

	inline static int32_t get_offset_of_OnPreCurrentPointerTargetChangePerfMarker_69() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnPreCurrentPointerTargetChangePerfMarker_69)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnPreCurrentPointerTargetChangePerfMarker_69() const { return ___OnPreCurrentPointerTargetChangePerfMarker_69; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnPreCurrentPointerTargetChangePerfMarker_69() { return &___OnPreCurrentPointerTargetChangePerfMarker_69; }
	inline void set_OnPreCurrentPointerTargetChangePerfMarker_69(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnPreCurrentPointerTargetChangePerfMarker_69 = value;
	}

	inline static int32_t get_offset_of_TryRaisePokeDownPerfMarker_70() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___TryRaisePokeDownPerfMarker_70)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryRaisePokeDownPerfMarker_70() const { return ___TryRaisePokeDownPerfMarker_70; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryRaisePokeDownPerfMarker_70() { return &___TryRaisePokeDownPerfMarker_70; }
	inline void set_TryRaisePokeDownPerfMarker_70(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryRaisePokeDownPerfMarker_70 = value;
	}

	inline static int32_t get_offset_of_TryRaisePokeUpPerfMarker_71() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___TryRaisePokeUpPerfMarker_71)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_TryRaisePokeUpPerfMarker_71() const { return ___TryRaisePokeUpPerfMarker_71; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_TryRaisePokeUpPerfMarker_71() { return &___TryRaisePokeUpPerfMarker_71; }
	inline void set_TryRaisePokeUpPerfMarker_71(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___TryRaisePokeUpPerfMarker_71 = value;
	}

	inline static int32_t get_offset_of_RaiseTouchUpdatedPerfMarker_72() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___RaiseTouchUpdatedPerfMarker_72)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_RaiseTouchUpdatedPerfMarker_72() const { return ___RaiseTouchUpdatedPerfMarker_72; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_RaiseTouchUpdatedPerfMarker_72() { return &___RaiseTouchUpdatedPerfMarker_72; }
	inline void set_RaiseTouchUpdatedPerfMarker_72(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___RaiseTouchUpdatedPerfMarker_72 = value;
	}

	inline static int32_t get_offset_of_IsObjectPartOfTouchablePerfMarker_73() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___IsObjectPartOfTouchablePerfMarker_73)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_IsObjectPartOfTouchablePerfMarker_73() const { return ___IsObjectPartOfTouchablePerfMarker_73; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_IsObjectPartOfTouchablePerfMarker_73() { return &___IsObjectPartOfTouchablePerfMarker_73; }
	inline void set_IsObjectPartOfTouchablePerfMarker_73(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___IsObjectPartOfTouchablePerfMarker_73 = value;
	}

	inline static int32_t get_offset_of_OnSourceLostPerfMarker_74() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnSourceLostPerfMarker_74)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceLostPerfMarker_74() const { return ___OnSourceLostPerfMarker_74; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceLostPerfMarker_74() { return &___OnSourceLostPerfMarker_74; }
	inline void set_OnSourceLostPerfMarker_74(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceLostPerfMarker_74 = value;
	}

	inline static int32_t get_offset_of_OnSourceDetectedPerfMarker_75() { return static_cast<int32_t>(offsetof(PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_StaticFields, ___OnSourceDetectedPerfMarker_75)); }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  get_OnSourceDetectedPerfMarker_75() const { return ___OnSourceDetectedPerfMarker_75; }
	inline ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86 * get_address_of_OnSourceDetectedPerfMarker_75() { return &___OnSourceDetectedPerfMarker_75; }
	inline void set_OnSourceDetectedPerfMarker_75(ProfilerMarker_t41096870004E8A2081E31E01BC0552F2F01F2B86  value)
	{
		___OnSourceDetectedPerfMarker_75 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable[]
struct NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * m_Items[1];

public:
	inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, NearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  m_Items[1];

public:
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		m_Items[index] = value;
	}
};
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[]
struct IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Microsoft.MixedReality.Toolkit.Utilities.ProximityLight[]
struct ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * m_Items[1];

public:
	inline ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject * m_Items[1];

public:
	inline RuntimeObject * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// System.Int32 System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Count()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<System.Object>(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method);
// !!0[] UnityEngine.Component::GetComponentsInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/ValueCollection<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Values()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7_gshared (ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_gshared_inline (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69_gshared (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9_gshared (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1  Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method);
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_gshared_inline (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_gshared_inline (KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18_gshared (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316_gshared (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Clear_m84CB183AE77233CC31FF3B7B79C667B2BF6F302A_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::ContainsKey(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Item(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  Dictionary_2_get_Item_mFBE56D7101B648C2AD5C76E33DBE4E1DF9D97875_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_m480AE7AA5182821F55308BC4A8D1E80C674D0434_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  ___value1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_Remove_mA9A238AFB8FB365E35C5B8F80D49CBE7B157A26C_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::Invoke(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, RuntimeObject * ___arg00, const RuntimeMethod* method);
// !!0 System.Linq.Enumerable::First<Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>(System.Collections.Generic.IEnumerable`1<!!0>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  Enumerable_First_TisPointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_m89A13A7E828690671B7F9464D7F0B56218391FC7_gshared (RuntimeObject* ___source0, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.ByteEnum>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_mA37A97B81445268412FC4754069FD1AD7ED89B8E_gshared (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, uint8_t ___value0, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.ByteEnum>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method);
// !0 System.Nullable`1<System.ByteEnum>::GetValueOrDefault()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint8_t Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_SourceData()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_gshared_inline (SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_m76FCE8DD849EAC0BC38426280427DE68F860E51C_gshared (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_1__ctor_m38CD236F782AA440F6DDB5D90B4C9DA24CDBA3A7_gshared (UnityEvent_1_t9E897A46A46C78F7104A831E63BB081546EFFF0D * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<System.Int32Enum>::get_HasValue()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m243C0A419A326DF7FEB2FEB2F3A4C8FC6CC12A7A_gshared_inline (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<System.Int32Enum>::.ctor(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Nullable_1__ctor_m5C28B34DE8C6D3A1E136828428C71543A08B32D3_gshared (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, int32_t ___value0, const RuntimeMethod* method);
// !0 System.Nullable`1<System.Int32Enum>::get_Value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Nullable_1_get_Value_mDF2D4DC386BD762B8AF37F6F93B2F24EC5A49ABF_gshared (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector3>::get_InputData()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_gshared_inline (InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::TogglePointerEnabled<System.Object>(Microsoft.MixedReality.Toolkit.Input.InputSourceType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_TogglePointerEnabled_TisRuntimeObject_m4C93DF3435190D9D9ACA137AD8F496EA5FE5CD23_gshared (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, int32_t ___inputType0, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start<System.Object>(!!0&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncVoidMethodBuilder_Start_TisRuntimeObject_m8590BDB280C38FD9D41163DF39805FFA6EA8F508_gshared (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, RuntimeObject ** ___stateMachine0, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder::Start<System.Object>(!!0&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncTaskMethodBuilder_Start_TisRuntimeObject_m696634597BF79F3070C7F1040ABAC2FF9A616C79_gshared (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * __this, RuntimeObject ** ___stateMachine0, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>::get_InputData()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR float InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_gshared_inline (InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * __this, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted<System.Runtime.CompilerServices.TaskAwaiter,System.Object>(!!0&,!!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncVoidMethodBuilder_AwaitUnsafeOnCompleted_TisTaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_TisRuntimeObject_m97ECCB65C1BEF0E1858546511A21FE6583DEB2F8_gshared (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * ___awaiter0, RuntimeObject ** ___stateMachine1, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<System.Object>(!!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared (RuntimeObject * ___original0, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder::AwaitOnCompleted<System.Object,System.Object>(!!0&,!!1&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncTaskMethodBuilder_AwaitOnCompleted_TisRuntimeObject_TisRuntimeObject_m998E6DC2E193386FB9D8C483ADE66DBEE15EA6D7_gshared (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * __this, RuntimeObject ** ___awaiter0, RuntimeObject ** ___stateMachine1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Clear_m23A361EDCB8A3FEDB9A0F0D2E7D2743D00D95A16_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Clear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<System.Object>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<System.Object>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UnityObjectExtensions::TryGetMonoBehaviour<System.Object>(!!0,UnityEngine.MonoBehaviour&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool UnityObjectExtensions_TryGetMonoBehaviour_TisRuntimeObject_m1D14AA95B6684EE4118C0C05780D760C0E0E32F3_gshared (RuntimeObject * ___interface0, MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 ** ___monoBehaviour1, const RuntimeMethod* method);
// !!0[] UnityEngine.GameObject::GetComponentsInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* GameObject_GetComponentsInChildren_TisRuntimeObject_m800C0157D5841A8D4C6A741E6C4F9FFFC0E0E33F_gshared (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::ContainsKey(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_ContainsKey_m6637097C2E4A7CFC401ACCAF627AB84F2D2D7B23_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::Add(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_Add_mF48783DA7A410BABB5ADE3516B6DE5F87A0A0EC2_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, RuntimeObject * ___key0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.List`1<System.Object>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool List_1_Remove_m908B647BB9F807676DACE34E3E73475C3C3751D4_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::set_Item(!0,!1)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2_set_Item_mB185656B95426395501D626A8F4E662D7DB5FF9C_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, RuntimeObject * ___key0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::Remove(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Dictionary_2_Remove_m4A95130041BAC919F6E106FFDF79F5E9FF237376_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, RuntimeObject * ___key0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::get_Count()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Dictionary_2_get_Count_m17A4E3895AEFAE5E9A619CFD2D5EE8BEE49C3854_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028  Dictionary_2_GetEnumerator_m8131AF1E8427B8E2AECF6B6AC7F514DE98FECBC0_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, const RuntimeMethod* method);
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.Object,UnityEngine.Vector3>::get_Current()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822  Enumerator_get_Current_m9DFAAD33679F4782E51C9414618305A9A38C5E0A_gshared_inline (Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028 * __this, const RuntimeMethod* method);
// !1 System.Collections.Generic.KeyValuePair`2<System.Object,UnityEngine.Vector3>::get_Value()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  KeyValuePair_2_get_Value_mA14FAE0D9F17BE95224D4C6B4A717086A350C8C9_gshared_inline (KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.Object,UnityEngine.Vector3>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_mCF115D686367685FAD3D9E16685DA8B1E0F87345_gshared (Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.Object,UnityEngine.Vector3>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_m0551029F6912C50A5349075541E1E65C3A55236F_gshared (Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.Object,UnityEngine.Vector3>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Dictionary_2__ctor_mD83FF40A510C9FA8DCC52CDA64FCBE5425AA32CE_gshared (Dictionary_2_t7ECF75FEEB7926BD6FADFDAFE596B7C34BF57878 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);

// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213 (PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * __this, RuntimeObject* ___pointer0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::IsNearPointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58 (PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___point1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::get_GrabPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0 (PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::SetScaleLimits()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.TransformConstraint::Initialize(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TransformConstraint_Initialize_m244AB874230B8F3679070C065811C279E61B2152 (TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___worldPose0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::get_Scale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Min(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Min_m0D0997E6CDFF77E5177C8D4E0A21C592C63F747E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector3::op_Inequality(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, int32_t ___index0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Division(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::set_Scale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityTransform_set_Scale_mB61F9517606A3C0865BB858E45F125AA48C8A437 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Max(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Max_m78495079CA1E29B0658699B856AFF22E23180F36 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, float ___d1, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.TransformConstraint::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TransformConstraint__ctor_m4E2D48A942754D5787ECB9D447E247C4CA6F0B6A (TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Inverse(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::get_Position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.AxisFlagsExtensions::IsMaskSet(Microsoft.MixedReality.Toolkit.Utilities.AxisFlags,Microsoft.MixedReality.Toolkit.Utilities.AxisFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool AxisFlagsExtensions_IsMaskSet_m8EBA7A31AEC86DA4FD25AD8F559E467A1C48A66D (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::set_Position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityTransform_set_Position_m132CCC9279F03B590B6FD8AA94C807A93BFC52AD (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlagsExtensions::IsMaskSet(Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags,Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ManipulationHandFlagsExtensions_IsMaskSet_m8ECD5477BBB998BAE072400889C29BAB78469306 (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Count()
inline int32_t Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324 (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, const RuntimeMethod*))Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ManipulationMoveLogic__ctor_m11DEDD9E5340C854B6C6E6E6499117A76AA74A4F (ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TwoHandRotateLogic__ctor_mD20B8CD7693D8D01A2F7B98B7469404512820FA7 (TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TwoHandScaleLogic__ctor_mB3367E12C97D0E467AE02390DFC1B6CBB5AE10EB (TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 * __this, const RuntimeMethod* method);
// System.Type Microsoft.MixedReality.Toolkit.Utilities.SystemType::op_Implicit(Microsoft.MixedReality.Toolkit.Utilities.SystemType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * SystemType_op_Implicit_m54F88648AF2FAE9B25347D1C7F1CE06DFF7E466F (SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * ___type0, const RuntimeMethod* method);
// System.Object System.Activator::CreateInstance(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Activator_CreateInstance_mD06EE47879F606317C6DA91FB63E678CABAC6A16 (Type_t * ___type0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Implicit(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___exists0, const RuntimeMethod* method);
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_HostTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::InitializeElastics(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ElasticsManager_InitializeElastics_m1F2102BE2AF0AEEDD08ED0FAD49468C26D04E8A8 (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___elasticsTransform0, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<UnityEngine.Rigidbody>()
inline Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_EnableConstraints()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// !!0 Microsoft.MixedReality.Toolkit.ComponentExtensions::EnsureComponent<Microsoft.MixedReality.Toolkit.UI.ConstraintManager>(UnityEngine.GameObject)
inline ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___gameObject0, const RuntimeMethod* method)
{
	return ((  ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))ComponentExtensions_EnsureComponent_TisRuntimeObject_m94390D20BED66A3307D02BB20A1408C55C1F3666_gshared)(___gameObject0, method);
}
// !!0[] UnityEngine.Component::GetComponentsInChildren<Microsoft.MixedReality.Toolkit.Input.NearInteractionGrabbable>()
inline NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD* Component_GetComponentsInChildren_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m0EAEDF94A7ED1678BDEAECC06B498FB9FBA280E6 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD* (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponentsInChildren_TisRuntimeObject_m96A4AA0545C19F58121E6C5142474CB26EAB9717_gshared)(__this, method);
}
// System.String UnityEngine.Object::get_name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___values0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Log(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708 (RuntimeObject * ___message0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/ValueCollection<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Values()
inline ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6 (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method)
{
	return ((  ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, const RuntimeMethod*))Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_gshared)(__this, method);
}
// System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2/ValueCollection<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::GetEnumerator()
inline Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7 (ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  (*) (ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 *, const RuntimeMethod*))ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7_gshared)(__this, method);
}
// !1 System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Current()
inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_inline (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 * __this, const RuntimeMethod* method)
{
	return ((  PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  (*) (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *, const RuntimeMethod*))Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_gshared_inline)(__this, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::get_GrabPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::MoveNext()
inline bool Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69 (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *, const RuntimeMethod*))Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/ValueCollection/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Dispose()
inline void Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9 (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *, const RuntimeMethod*))Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9_gshared)(__this, method);
}
// System.Int32 System.Math::Max(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Math_Max_mA99E48BB021F2E4B62D4EA9F52EA6928EED618A2 (int32_t ___val10, int32_t ___val21, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::set_Position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::LookRotation(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forward0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::set_Rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::GetEnumerator()
inline Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1  Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8 (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1  (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, const RuntimeMethod*))Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8_gshared)(__this, method);
}
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Current()
inline KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_inline (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 * __this, const RuntimeMethod* method)
{
	return ((  KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  (*) (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *, const RuntimeMethod*))Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Value()
inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_inline (KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 * __this, const RuntimeMethod* method)
{
	return ((  PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  (*) (KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 *, const RuntimeMethod*))KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_gshared_inline)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::get_IsNearPointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::MoveNext()
inline bool Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18 (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *, const RuntimeMethod*))Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Dispose()
inline void Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316 (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *, const RuntimeMethod*))Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316_gshared)(__this, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersGrabPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleManipulationEnded(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerGrabPoint0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerVelocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAnglularVelocity2, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Clear()
inline void Dictionary_2_Clear_m84CB183AE77233CC31FF3B7B79C667B2BF6F302A (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, const RuntimeMethod*))Dictionary_2_Clear_m84CB183AE77233CC31FF3B7B79C667B2BF6F302A_gshared)(__this, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::ContainsKey(!0)
inline bool Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, uint32_t, const RuntimeMethod*))Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D_gshared)(__this, ___key0, method);
}
// System.Void UnityEngine.Assertions.Assert::IsTrue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Assert_IsTrue_mCD75233AD54148E7E430C58D180145ACEF22E9E7 (bool ___condition0, const RuntimeMethod* method);
// !1 System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::get_Item(!0)
inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  Dictionary_2_get_Item_mFBE56D7101B648C2AD5C76E33DBE4E1DF9D97875 (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, const RuntimeMethod* method)
{
	return ((  PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, uint32_t, const RuntimeMethod*))Dictionary_2_get_Item_mFBE56D7101B648C2AD5C76E33DBE4E1DF9D97875_gshared)(__this, ___key0, method);
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData::get_Pointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.FocusDetails::get_Point()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009 (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * __this, RuntimeObject* ___pointer0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldGrabPoint1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Add(!0,!1)
inline void Dictionary_2_Add_m480AE7AA5182821F55308BC4A8D1E80C674D0434 (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, uint32_t, PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F , const RuntimeMethod*))Dictionary_2_Add_m480AE7AA5182821F55308BC4A8D1E80C674D0434_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_IsTwoHandedManipulationEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleManipulationStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleTwoHandManipulationStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleTwoHandManipulationStarted_mA35767E1B86018C080646E74E48E314D8FF142C2 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_IsOneHandedManipulationEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleOneHandMoveStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleOneHandMoveUpdated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleOneHandMoveUpdated_m453177B65388DD02BDBE00161EE5CA3C50A4B68B (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleTwoHandManipulationUpdated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleTwoHandManipulationUpdated_m0E67F096C31B8526903359F6C61B66AEA70CE960 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::Remove(!0)
inline bool Dictionary_2_Remove_mA9A238AFB8FB365E35C5B8F80D49CBE7B157A26C (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, uint32_t ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, uint32_t, const RuntimeMethod*))Dictionary_2_Remove_mA9A238AFB8FB365E35C5B8F80D49CBE7B157A26C_gshared)(__this, ___key0, method);
}
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetHandPositionArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.TransformFlagsExtensions::IsMaskSet(Microsoft.MixedReality.Toolkit.Utilities.TransformFlags,Microsoft.MixedReality.Toolkit.Utilities.TransformFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic::Setup(UnityEngine.Vector3[],UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TwoHandRotateLogic_Setup_m29B7966E449713FC6279A588174F57917B06C944 (TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___handsPressedArray0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___t1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::IsNearManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersPose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::.ctor(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose__ctor_m10B17074E6638D44CA824E8942AF3CF9564CA51E (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::.ctor(UnityEngine.Vector3,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityPose__ctor_m139F7F8104CAB889E5AE6A14090A9764E39DFCAC (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::Setup(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose,UnityEngine.Vector3,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ManipulationMoveLogic_Setup_m2537AE07CEA78C23AAD50CC1266A6D6FA4D1D96A (ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * __this, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___pointerCentroidPose0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___grabCentroid1, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___objectPose2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___objectScale3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::.ctor(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityTransform__ctor_mF2050C567E426461B08F3836E0C02766F0143C9C (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rotation1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___scale2, const RuntimeMethod* method);
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1 (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___x0, Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 * ___y1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::ApplyScaleConstraints(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_ApplyScaleConstraints_m55C4DE269179C5500CC4C8AC95E06066749BFD6F (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, bool ___isOneHanded1, bool ___isNear2, const RuntimeMethod* method);
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Physics.TwoHandRotateLogic::Update(UnityEngine.Vector3[],UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  TwoHandRotateLogic_Update_mDB5CF8A924BFA05466C6A3D0C6850C414B69CDAF (TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___handsPressedArray0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___currentRotation1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::set_Rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityTransform_set_Rotation_mAA5BE9EB4534021266162D5E5BDA9A88722E58A7 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::ApplyRotationConstraints(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_ApplyRotationConstraints_mF00DF9ADCBCA35FFEC4317E59D3346BD1C7646BE (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, bool ___isOneHanded1, bool ___isNear2, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.ManipulationMoveLogic::UpdateTransform(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose,Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ManipulationMoveLogic_UpdateTransform_m11437EA43CDFF58C221916A86F70D8D1868AFABF (ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * __this, MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ___pointerCentroidPose0, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___currentTarget1, bool ___isPointerAnchor2, bool ___isNearManipulation3, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::ApplyTranslationConstraints(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&,System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_ApplyTranslationConstraints_mE33C3FEFE7E6C67D1F451EB9208E118328F8EB69 (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, bool ___isOneHanded1, bool ___isNear2, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::ApplyTargetTransform(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___targetTransform0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetFirstPointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::TryGetGripRotation(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.Quaternion&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, RuntimeObject* ___pointer0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotation1, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::Assert(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E (bool ___condition0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnManipulationStarted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ManipulationEventData__ctor_m6EEA7E66A0678134939E23D3B172D26AF5A82392 (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::set_ManipulationSource(UnityEngine.GameObject)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::set_IsNearInteraction(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::set_Pointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::set_PointerCentroid(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::set_PointerVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEventData::set_PointerAngularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.ManipulationEventData>::Invoke(!0)
inline void UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35 (UnityEvent_1_tFE32718C2D85520135189F951A3C74E7766E1330 * __this, ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_tFE32718C2D85520135189F951A3C74E7766E1330 *, ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 *, const RuntimeMethod*))UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared)(__this, ___arg00, method);
}
// System.Boolean UnityEngine.Rigidbody::get_useGravity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Rigidbody_get_useGravity_m802E0C0B4F2C2B521D5369EA027325157A53FCAA (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Rigidbody::get_isKinematic()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Rigidbody_get_isKinematic_mCF624F7C1C78267224EFBEAF9B4FD72CDE56CEB2 (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::set_useGravity(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_set_useGravity_mB0D957A9D8A9819E18D2E81F465C5C0B60CBC6DA (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::set_isKinematic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_set_isKinematic_m856AB59E5A6207892C439AFC8DDF5620B941E71B (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform::.ctor(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MixedRealityTransform__ctor_m9C17849F9137B911288BF804F27B607389C406F6 (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transform0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ConstraintManager::Initialize(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ConstraintManager_Initialize_mE5A32824EE2B7EB7BA63CCA8AC2EA028D83DA93F (ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___worldPose0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::set_EnableElasticsUpdate(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, bool ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnManipulationEnded()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::ReleaseRigidBody(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_ReleaseRigidBody_m6C4C5F0BF5F3236D22F4B25C933B8FA97F56232D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___angularVelocity1, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager::ApplyTargetTransform(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform,Microsoft.MixedReality.Toolkit.Utilities.TransformFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ElasticsManager_ApplyTargetTransform_m5A261D4771CE5BFF70831B3BF5595EA47F7B886C (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___targetTransform0, int32_t ___transformsToApply1, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E (const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localScale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Rigidbody::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Rigidbody_get_position_m478D060638E43DE3AE9C931A42593484B8310113 (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::MovePosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_MovePosition_m5807AA5CDEC1B8350618166B2DF56FCAAAFFF7C1 (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Rigidbody::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Rigidbody_get_rotation_mD967DD98F16F80C0D74F8F1C25953D0609906BE5 (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::MoveRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_MoveRotation_mCBE2CF9F1B4A86C4BCB899AAB4C4EE8BBAD21C84 (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839 (float ___d0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a1, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::set_velocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_set_velocity_m8D129E88E62AD02AB81CFC8BE694C4A5A2B2B380 (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Quaternion::ToAngleAxis(System.Single&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Quaternion_ToAngleAxis_m36E8C06D2D508B5BA5DE9CFBAD252989918D8813 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * __this, float* ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___axis1, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.VectorExtensions::IsValidVector(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool VectorExtensions_IsValidVector_mBFC785DA490369E01691E2DB71BC77571DDFBD09 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vector0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Rigidbody::set_angularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Rigidbody_set_angularVelocity_m1839DCBC87B01EFD0B4936E84E503E38774B962C (Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.Input.FocusEventData::get_Pointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_AllowFarManipulation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::get_OldFocusedObject()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9 (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method);
// System.Boolean UnityEngine.Transform::IsChildOf(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___parent0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnHoverEntered()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.FocusEventData::get_NewFocusedObject()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnHoverExited()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ReleaseBehaviorTypeExtensions::IsMaskSet(Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/ReleaseBehaviorType,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/ReleaseBehaviorType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ReleaseBehaviorTypeExtensions_IsMaskSet_mF5264E1905682A40E0679D97746BA318163E6EF0 (int32_t ___a0, int32_t ___b1, const RuntimeMethod* method);
// !!0 System.Linq.Enumerable::First<Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>(System.Collections.Generic.IEnumerable`1<!!0>)
inline PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  Enumerable_First_TisPointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_m89A13A7E828690671B7F9464D7F0B56218391FC7 (RuntimeObject* ___source0, const RuntimeMethod* method)
{
	return ((  PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  (*) (RuntimeObject*, const RuntimeMethod*))Enumerable_First_TisPointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_m89A13A7E828690671B7F9464D7F0B56218391FC7_gshared)(___source0, method);
}
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// System.Void System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>::.ctor(!0)
inline void Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 * __this, uint8_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *, uint8_t, const RuntimeMethod*))Nullable_1__ctor_mA37A97B81445268412FC4754069FD1AD7ED89B8E_gshared)(__this, ___value0, method);
}
// System.Boolean System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>::get_HasValue()
inline bool Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_inline (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *, const RuntimeMethod*))Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_gshared_inline)(__this, method);
}
// !0 System.Nullable`1<Microsoft.MixedReality.Toolkit.Utilities.Handedness>::GetValueOrDefault()
inline uint8_t Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_inline (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 * __this, const RuntimeMethod* method)
{
	return ((  uint8_t (*) (Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *, const RuntimeMethod*))Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_gshared_inline)(__this, method);
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.SourceStateEventData::get_Controller()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>::get_SourceData()
inline MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_inline (SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * __this, const RuntimeMethod* method)
{
	return ((  MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  (*) (SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 *, const RuntimeMethod*))SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_gshared_inline)(__this, method);
}
// UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose::get_Rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846 (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 * __this, const RuntimeMethod* method);
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6 (RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ___handle0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.SystemType Microsoft.MixedReality.Toolkit.Utilities.SystemType::op_Implicit(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * SystemType_op_Implicit_m4937EE683C2F906FD8ED561885D357030CCE3C92 (Type_t * ___type0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ManipulationEvent__ctor_m83A05FF4AD237C7C34AC8B564AA492B7EB0C48FD (ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<System.UInt32,Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData>::.ctor()
inline void Dictionary_2__ctor_m76FCE8DD849EAC0BC38426280427DE68F860E51C (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *, const RuntimeMethod*))Dictionary_2__ctor_m76FCE8DD849EAC0BC38426280427DE68F860E51C_gshared)(__this, method);
}
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97 (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.HandPanEventData>::.ctor()
inline void UnityEvent_1__ctor_m0F9361EECA2A2045CBB750F03F51F25EAF1481E0 (UnityEvent_1_t79EBB1A568834D5983F856843EDDF4B8EC7D5033 * __this, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_t79EBB1A568834D5983F856843EDDF4B8EC7D5033 *, const RuntimeMethod*))UnityEvent_1__ctor_m38CD236F782AA440F6DDB5D90B4C9DA24CDBA3A7_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::InitializeSliderThumb()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Collider::set_enabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Collider_set_enabled_mF84DE8B0C8CAF33ACDB7F29BC055D9C8CFACB57B (Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateUI()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_ActivePointer()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.SliderEventData::.ctor(System.Single,System.Single,Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,Microsoft.MixedReality.Toolkit.UI.PinchSlider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * __this, float ___o0, float ___n1, RuntimeObject* ___pointer2, PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * ___slider3, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent`1<Microsoft.MixedReality.Toolkit.UI.SliderEventData>::Invoke(!0)
inline void UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC (UnityEvent_1_tA8F75AF3945C0A4BD85C05EB2E7E55BDFFE94DE5 * __this, SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * ___arg00, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_1_tA8F75AF3945C0A4BD85C05EB2E7E55BDFFE94DE5 *, SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *, const RuntimeMethod*))UnityEvent_1_Invoke_m027706B0C7150736F066D5C663304CB0B80ABBF0_gshared)(__this, ___arg00, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateTrackVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateTickMarks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateThumbVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateVisualsOrientation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateVisualsOrientation_m1EEE9683EC7443D7FF8FB21903345462D85F89F3 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Boolean System.Nullable`1<Microsoft.MixedReality.Toolkit.UI.SliderAxis>::get_HasValue()
inline bool Nullable_1_get_HasValue_mC29B4C7196AADFA83B949CC2581AA1CBC5B29865_inline (Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 *, const RuntimeMethod*))Nullable_1_get_HasValue_m243C0A419A326DF7FEB2FEB2F3A4C8FC6CC12A7A_gshared_inline)(__this, method);
}
// Microsoft.MixedReality.Toolkit.UI.SliderAxis Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_CurrentSliderAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PinchSlider_get_CurrentSliderAxis_mD079B37B6BAD3AA9000538A23A5240B4A1EDB524 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void System.Nullable`1<Microsoft.MixedReality.Toolkit.UI.SliderAxis>::.ctor(!0)
inline void Nullable_1__ctor_m89465509FD2DFCB2D3544A0595BB690F1404AB66 (Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	((  void (*) (Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 *, int32_t, const RuntimeMethod*))Nullable_1__ctor_m5C28B34DE8C6D3A1E136828428C71543A08B32D3_gshared)(__this, ___value0, method);
}
// !0 System.Nullable`1<Microsoft.MixedReality.Toolkit.UI.SliderAxis>::get_Value()
inline int32_t Nullable_1_get_Value_m5BAA188D62913A4DECBEFF69D3237AF278432752 (Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 *, const RuntimeMethod*))Nullable_1_get_Value_mDF2D4DC386BD762B8AF37F6F93B2F24EC5A49ABF_gshared)(__this, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::GetSliderAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::InverseTransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___position0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Dot(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___lhs0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rhs1, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderEndPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderStartPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::InitializeStepDivisions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_InitializeStepDivisions_mC63E8145E9FF4C7894C51EFC66D489C2B33E2CD2 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mF4626905368D6558695A823466A1AF65EADB9923 (String_t* ___str00, String_t* ___str11, String_t* ___str22, const RuntimeMethod* method);
// System.Void System.Exception::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Exception__ctor_m89BADFF36C3B170013878726E07729D51AA9FBE0 (Exception_t * __this, String_t* ___message0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SnapToPosition(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SnapToPosition_m88095ABBB4A5E21BF64EDBF97058EE642F9DBE9E (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, bool ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::EndInteraction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_CurrentSliderAxis(Microsoft.MixedReality.Toolkit.UI.SliderAxis)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_CurrentSliderAxis_m2BFE9ED9C96A107D321C96A3F5C2599FC606B2CB (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, int32_t ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderTrackDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::Project(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_Project_m3A2D462C2548AA76EB0BCD3305B1E8588347DB9D (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vector0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___onNormal1, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_get_SliderValue_mBBD36F5E24DCE7F6FE869F0F60BA4594983E0E17 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::SnapSliderToStepPositions(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SliderValue(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_TrackVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05 (float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_TickMarks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// !!0 UnityEngine.GameObject::GetComponent<Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection>()
inline GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * GameObject_GetComponent_TisGridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4_mE86F5C2AB5CD50711C1600A28E4A4BE75B12F100 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_mE03C66715289D7957CA068A675826B7EE0887BE3_gshared)(__this, method);
}
// Microsoft.MixedReality.Toolkit.Utilities.LayoutOrder Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::get_Layout()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t GridObjectCollection_get_Layout_m96EDF92332EDE459727901EC07E140B64C44E0E1 (GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::get_CellHeight()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float GridObjectCollection_get_CellHeight_m1C4B4F4536B4B623B001A4420051135CAA61C269 (GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::set_CellWidth(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GridObjectCollection_set_CellWidth_m3FB013D09E5B26F7B37098E18B55E6878129CC7D (GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * __this, float ___value0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::get_CellWidth()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float GridObjectCollection_get_CellWidth_mBADA4F8389BA606453C7945E16049DE32DC62245 (GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::set_CellHeight(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GridObjectCollection_set_CellHeight_m2010B0EB3DAFB3587E753C89D99F1F8E930086B3 (GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * __this, float ___value0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.GridObjectCollection::set_Layout(Microsoft.MixedReality.Toolkit.Utilities.LayoutOrder)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GridObjectCollection_set_Layout_mC1F6A12B934C62FB23A2FD0FE2A27C301A9FEC17 (GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * __this, int32_t ___value0, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_ThumbVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.UI.SliderAxis Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_PreviousSliderAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PinchSlider_get_PreviousSliderAxis_m10CE18867811ADE200F346104C30FB8E89C1C6E5 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_PreviousSliderAxis(Microsoft.MixedReality.Toolkit.UI.SliderAxis)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_PreviousSliderAxis_m27919E84E9D56615BFCBBADCD64BEA01AF63A82E (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, int32_t ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_right()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_right_m6DD9559CA0C75BBA42D9140021C4C2A9AAA9B3F5 (const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7 (const RuntimeMethod* method);
// System.Void System.ArgumentOutOfRangeException::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArgumentOutOfRangeException__ctor_m6B36E60C989DC798A8B44556DB35960282B133A6 (ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA * __this, String_t* ___paramName0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_ActivePointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, RuntimeObject* ___value0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_sliderStepVal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Mathf::RoundToInt(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Mathf_RoundToInt_m0EAD8BD38FCB72FA1D8A04E96337C820EC83F041 (float ___f0, const RuntimeMethod* method);
// System.Single UnityEngine.Mathf::Clamp(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507 (float ___value0, float ___min1, float ___max2, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_UseSliderStepDivisions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PinchSlider_get_UseSliderStepDivisions_mEDD7A104041FF32573C3E97B5DA1621EE7A97722 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_StartPointerPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SnapToPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PinchSlider_get_SnapToPosition_m84E85515252482BA2C0CB0D6C7045041735DB27A (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::CalculateSliderValueBasedOnTouchPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___touchPoint0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_StartSliderValue(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_StartPointerPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_StartSliderValue()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<UnityEngine.Vector3>::get_InputData()
inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_inline (InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D * __this, const RuntimeMethod* method)
{
	return ((  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  (*) (InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D *, const RuntimeMethod*))InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_gshared_inline)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.SliderEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SliderEvent__ctor_mF9935714BB2E565594EEA0286F9CD4579F19230E (SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::TogglePointerEnabled<Microsoft.MixedReality.Toolkit.Input.ShellHandRayPointer>(Microsoft.MixedReality.Toolkit.Input.InputSourceType)
inline void PointerBehaviorControls_TogglePointerEnabled_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_mAA514B4401282B92B4D1A0167F65CAB4717F1465 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, int32_t ___inputType0, const RuntimeMethod* method)
{
	((  void (*) (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 *, int32_t, const RuntimeMethod*))PointerBehaviorControls_TogglePointerEnabled_TisRuntimeObject_m4C93DF3435190D9D9ACA137AD8F496EA5FE5CD23_gshared)(__this, ___inputType0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::TogglePointerEnabled<Microsoft.MixedReality.Toolkit.Input.SpherePointer>(Microsoft.MixedReality.Toolkit.Input.InputSourceType)
inline void PointerBehaviorControls_TogglePointerEnabled_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mF52869F99912D417BF9040C27010CDD342C2AA90 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, int32_t ___inputType0, const RuntimeMethod* method)
{
	((  void (*) (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 *, int32_t, const RuntimeMethod*))PointerBehaviorControls_TogglePointerEnabled_TisRuntimeObject_m4C93DF3435190D9D9ACA137AD8F496EA5FE5CD23_gshared)(__this, ___inputType0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::TogglePointerEnabled<Microsoft.MixedReality.Toolkit.Input.PokePointer>(Microsoft.MixedReality.Toolkit.Input.InputSourceType)
inline void PointerBehaviorControls_TogglePointerEnabled_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_mD70F211A89851FE7596980E2A210F053D4D0BA54 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, int32_t ___inputType0, const RuntimeMethod* method)
{
	((  void (*) (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 *, int32_t, const RuntimeMethod*))PointerBehaviorControls_TogglePointerEnabled_TisRuntimeObject_m4C93DF3435190D9D9ACA137AD8F496EA5FE5CD23_gshared)(__this, ___inputType0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetHandRayPointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6 (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetMotionControllerRayPointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80 (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetGazePointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5 (int32_t ___pointerBehavior0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetHandGrabPointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6 (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.PointerUtils::SetHandPokePointerBehavior(Microsoft.MixedReality.Toolkit.Input.PointerBehavior,Microsoft.MixedReality.Toolkit.Utilities.Handedness)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA (int32_t ___pointerBehavior0, uint8_t ___handedness1, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CShowSpawnableU3Ed__16__ctor_m82B6494BA2C9CA525D43CE0070E02E7ED0CE7B39 (U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * __this, const RuntimeMethod* method);
// System.Runtime.CompilerServices.AsyncVoidMethodBuilder System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  AsyncVoidMethodBuilder_Create_m2EF884A75C3C230F0E6A63B1E23DC82F3B159130 (const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::Start<Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16>(!!0&)
inline void AsyncVoidMethodBuilder_Start_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m100596A3EB59A0538697AC868F63CA0EF3634415 (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB ** ___stateMachine0, const RuntimeMethod* method)
{
	((  void (*) (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *, U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB **, const RuntimeMethod*))AsyncVoidMethodBuilder_Start_TisRuntimeObject_m8590BDB280C38FD9D41163DF39805FFA6EA8F508_gshared)(__this, ___stateMachine0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CUpdateSpawnableU3Ed__17__ctor_mFA3382E64598FD0B170FE41A9D8B25F740D54FBD (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * __this, const RuntimeMethod* method);
// System.Runtime.CompilerServices.AsyncTaskMethodBuilder System.Runtime.CompilerServices.AsyncTaskMethodBuilder::Create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487  AsyncTaskMethodBuilder_Create_m081DF9A202E7C2F3CF3D41E1E63E63DA18F19FDB (const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder::Start<Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17>(!!0&)
inline void AsyncTaskMethodBuilder_Start_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m33CF64D86791D39E95A7A9C84CE5C28813920070 (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * __this, U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 ** ___stateMachine0, const RuntimeMethod* method)
{
	((  void (*) (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *, U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 **, const RuntimeMethod*))AsyncTaskMethodBuilder_Start_TisRuntimeObject_m696634597BF79F3070C7F1040ABAC2FF9A616C79_gshared)(__this, ___stateMachine0, method);
}
// System.Threading.Tasks.Task System.Runtime.CompilerServices.AsyncTaskMethodBuilder::get_Task()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * AsyncTaskMethodBuilder_get_Task_m3E45BC00F7D224FEA04AB9BF26DB52E131D33022 (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::OnFocusEnter(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseFocusHandler_OnFocusEnter_mDC855BB42E50C498D5A8747D9F61AA77FF3C22AC (BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HandleFocusEnter()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_HandleFocusEnter_m618E1E62E5F07BFBD8A07B97023398C8C1541B21 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::OnFocusExit(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseFocusHandler_OnFocusExit_m4AE52C45D8A89F3926AF8B4E4AC0DF18C1DDA9CE (BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HandleFocusExit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_HandleFocusExit_m41F074106A7F8E92191D5BFE4609B2766307B296 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method);
// !0 Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>::get_InputData()
inline float InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_inline (InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * __this, const RuntimeMethod* method)
{
	return ((  float (*) (InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 *, const RuntimeMethod*))InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_gshared_inline)(__this, method);
}
// System.UInt32 Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_Id()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint32_t MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33_inline (MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_MixedRealityInputAction()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_unscaledTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_unscaledTime_m57F78B855097C5BA632CF9BE60667A9DEBCAA472 (const RuntimeMethod* method);
// System.Boolean UnityEngine.GameObject::get_activeSelf()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GameObject_get_activeSelf_mFE1834886CAE59884AC2BE707A3B821A1DB61F44 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::ShowSpawnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.GameObject::SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, bool ___value0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction Microsoft.MixedReality.Toolkit.Input.MixedRealityInputAction::get_None()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BaseFocusHandler__ctor_mB4B9DA64F6FDF318744D1011EF8D33E0C9126058 (BaseFocusHandler_t0170A1D29FF126F52A8093DB3B0D64471C3C75D2 * __this, const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Threading.Tasks.Task Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::UpdateSpawnable(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * PrefabSpawner_UpdateSpawnable_m2C199EF2FC62A0ED22B8104D303DDA0B7581602E (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, float ___focusEnterTimeOnStart0, float ___tappedTimeOnStart1, const RuntimeMethod* method);
// System.Runtime.CompilerServices.TaskAwaiter System.Threading.Tasks.Task::GetAwaiter()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  Task_GetAwaiter_m73027D5E4C16E961C658B83526BED8E32FD2AC6C (Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * __this, const RuntimeMethod* method);
// System.Boolean System.Runtime.CompilerServices.TaskAwaiter::get_IsCompleted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool TaskAwaiter_get_IsCompleted_m5A2B6FEA0ED3B01B5E88DBF2D8BC4A45652ABD87 (TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * __this, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::AwaitUnsafeOnCompleted<System.Runtime.CompilerServices.TaskAwaiter,Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16>(!!0&,!!1&)
inline void AsyncVoidMethodBuilder_AwaitUnsafeOnCompleted_TisTaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m1AE09BCF8BFEFD584002656B3B366B30D3330570 (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * ___awaiter0, U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB ** ___stateMachine1, const RuntimeMethod* method)
{
	((  void (*) (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *, TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F *, U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB **, const RuntimeMethod*))AsyncVoidMethodBuilder_AwaitUnsafeOnCompleted_TisTaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_TisRuntimeObject_m97ECCB65C1BEF0E1858546511A21FE6583DEB2F8_gshared)(__this, ___awaiter0, ___stateMachine1, method);
}
// System.Void System.Runtime.CompilerServices.TaskAwaiter::GetResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TaskAwaiter_GetResult_m89868C01592AC2B06CE1FD42D9B9C187C6FD928A (TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * __this, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::SetException(System.Exception)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncVoidMethodBuilder_SetException_mA7D834CA1ECA91D65074D7608AADA2E2A9533136 (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, Exception_t * ___exception0, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncVoidMethodBuilder::SetResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncVoidMethodBuilder_SetResult_mFF6028CDDC809252656354DC1714B4EB5E40A625 (AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * __this, const RuntimeMethod* method);
// !!0 UnityEngine.Object::Instantiate<UnityEngine.GameObject>(!!0)
inline GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___original0, const RuntimeMethod* method)
{
	return ((  GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_m4566F033303F52A6D430A06E5FA2D29E2A8D6ED3_gshared)(___original0, method);
}
// System.Void UnityEngine.Transform::set_parent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.WaitForSeconds::.ctor(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WaitForSeconds__ctor_m8E4BA3E27AEFFE5B74A815F26FF8AAB99743F559 (WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8 * __this, float ___seconds0, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions::GetAwaiter(UnityEngine.WaitForSeconds)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * AwaiterExtensions_GetAwaiter_mD7F49C5FF56CBC92D3E430086C2D7C52789BA1A5 (WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8 * ___instruction0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter::get_IsCompleted()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215_inline (SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * __this, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder::AwaitOnCompleted<Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter,Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17>(!!0&,!!1&)
inline void AsyncTaskMethodBuilder_AwaitOnCompleted_TisSimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m716DC9960E36A5812253AF7D23CB8B81EE7AA8E1 (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * __this, SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE ** ___awaiter0, U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 ** ___stateMachine1, const RuntimeMethod* method)
{
	((  void (*) (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *, SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE **, U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 **, const RuntimeMethod*))AsyncTaskMethodBuilder_AwaitOnCompleted_TisRuntimeObject_TisRuntimeObject_m998E6DC2E193386FB9D8C483ADE66DBEE15EA6D7_gshared)(__this, ___awaiter0, ___stateMachine1, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter::GetResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SimpleCoroutineAwaiter_GetResult_mA2E1941136B95442358BA03075F6AF1B0F2C159B (SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * __this, const RuntimeMethod* method);
// System.Boolean System.Single::Equals(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7 (float* __this, float ___obj0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HasVanishDelayElapsed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PrefabSpawner_HasVanishDelayElapsed_m8CEED241162D9D6718453AED25F0B7B20488E133 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.Utilities.WaitForUpdate::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WaitForUpdate__ctor_m560DECF350742F98595C929CAE04B5AF50EB142B (WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions/SimpleCoroutineAwaiter Microsoft.MixedReality.Toolkit.Utilities.AwaiterExtensions::GetAwaiter(Microsoft.MixedReality.Toolkit.Utilities.WaitForUpdate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * AwaiterExtensions_GetAwaiter_m46890DAF3EA82A802455AAC169215566DC8095A1 (WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B * ___instruction0, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder::SetException(System.Exception)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncTaskMethodBuilder_SetException_m370C484922A63A6EF96E241D1370B8814F1F2D6B (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * __this, Exception_t * ___exception0, const RuntimeMethod* method);
// System.Void System.Runtime.CompilerServices.AsyncTaskMethodBuilder::SetResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AsyncTaskMethodBuilder_SetResult_m151016FB698F3BB34A73BAE693A97513A7E4C838 (AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_LocalToWorldScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_WorldToLocalScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::Invoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_IsPressing(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, bool ___value0, const RuntimeMethod* method);
// !!0 UnityEngine.Component::GetComponent<Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableSurface>()
inline NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * Component_GetComponent_TisNearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0_m5D1FF954F59BC4FDE0F6AAC0A4A77E686771771D (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 * __this, const RuntimeMethod* method)
{
	return ((  NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * (*) (Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621 *, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m15E3130603CE5400743CCCDEE7600FB9EEFAE5C0_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Transform::TransformDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformDirection_m85FC1D7E1322E94F65DA59AEF3B1166850B183EF (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___direction0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_forward()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_WorldSpacePressDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::InverseTransformVector(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_InverseTransformVector_mC363B03FB4A80E242264469E68489E401285E525 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vector0, const RuntimeMethod* method);
// System.Boolean UnityEngine.Application::get_isPlaying()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Application_get_isPlaying_mF43B519662E7433DD90D883E5AE22EC3CFB65CA5 (const RuntimeMethod* method);
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.PressableButton::get_PushSpaceSourceTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// UnityEngine.Transform UnityEngine.Transform::get_parent()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::TransformVector(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_TransformVector_m75D0F9F62127C642869F5F0C865540FEE5BB3168 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___vector0, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_PushSpaceSourceParentPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_PushSpaceSourceParentPosition_mE92CCDF7D2B6694AC32920B3896264E6966691D6 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.GameObject::get_layer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogWarning(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568 (RuntimeObject * ___message0, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Transform::get_localPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::Clear()
inline void Dictionary_2_Clear_mAD74413C5E561E2314E39854F01AD7391F6C33B4 (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, const RuntimeMethod*))Dictionary_2_Clear_m23A361EDCB8A3FEDB9A0F0D2E7D2743D00D95A16_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::Clear()
inline void List_1_Clear_m214870E1012EB144761CC52D6F6AAC2AEEC33532 (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *, const RuntimeMethod*))List_1_Clear_mC5CFC6C9F3007FC24FE020198265D4B5B0659FFC_gshared)(__this, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::get_IsTouching()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdateTouch()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::RetractButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_RetractButton_mE4499A700141447BFBFB22BC8477C6F77A1E85C0 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::GetFarthestDistanceAlongPressDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_GetFarthestDistanceAlongPressDirection_m0505BE444BEBF3FAA2BABF301FA6AF5F723A2846 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdatePressedState(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___pushDistance0, const RuntimeMethod* method);
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::get_IsPressing()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::get_Count()
inline int32_t List_1_get_Count_m53489CC19A10DC6F7A732FB60152B290AB934BE1_inline (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *, const RuntimeMethod*))List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline)(__this, method);
}
// !0 System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::get_Item(System.Int32)
inline RuntimeObject* List_1_get_Item_m30A79D2B92893FC561D87B7D9DDB83DF1C9B7E94_inline (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  RuntimeObject* (*) (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *, int32_t, const RuntimeMethod*))List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline)(__this, ___index0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UnityObjectExtensions::TryGetMonoBehaviour<Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor>(!!0,UnityEngine.MonoBehaviour&)
inline bool UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18 (RuntimeObject* ___interface0, MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 ** ___monoBehaviour1, const RuntimeMethod* method)
{
	return ((  bool (*) (RuntimeObject*, MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 **, const RuntimeMethod*))UnityObjectExtensions_TryGetMonoBehaviour_TisRuntimeObject_m1D14AA95B6684EE4118C0C05780D760C0E0E32F3_gshared)(___interface0, ___monoBehaviour1, method);
}
// !!0[] UnityEngine.GameObject::GetComponentsInChildren<Microsoft.MixedReality.Toolkit.Utilities.ProximityLight>()
inline ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* GameObject_GetComponentsInChildren_TisProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_mFB7C6A37DF0B47AF47C680BC769E9146CB2748F6 (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * __this, const RuntimeMethod* method)
{
	return ((  ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* (*) (GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *, const RuntimeMethod*))GameObject_GetComponentsInChildren_TisRuntimeObject_m800C0157D5841A8D4C6A741E6C4F9FFFC0E0E33F_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.Utilities.ProximityLight::Pulse(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ProximityLight_Pulse_m285D8320ECEBFEF321C1809AE13CB4EF017A5CB6 (ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * __this, float ___pulseDuration0, float ___fadeBegin1, float ___fadeSpeed2, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource Microsoft.MixedReality.Toolkit.Input.BaseInputEventData::get_InputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method);
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.Input.PokePointer::get_CurrentTouchableObjectDown()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.PokePointer::get_PreviousPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::GetDistanceAlongPushDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positionWorldSpace0, const RuntimeMethod* method);
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_StartPushDistance()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData::get_Controller()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline (HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * __this, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::ContainsKey(!0)
inline bool Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0 (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, RuntimeObject* ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, RuntimeObject*, const RuntimeMethod*))Dictionary_2_ContainsKey_m6637097C2E4A7CFC401ACCAF627AB84F2D2D7B23_gshared)(__this, ___key0, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::HasPassedThroughStartPlane(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PressableButton_HasPassedThroughStartPlane_m0BA017A9988AD256A41D9E3088D99A2CFC26DD7E (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::Add(!0,!1)
inline void Dictionary_2_Add_m54469B6D64C15CF6B859A0A7DEFB39A0351B33F3 (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, RuntimeObject* ___key0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*))Dictionary_2_Add_mF48783DA7A410BABB5ADE3516B6DE5F87A0A0EC2_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::Remove(!0)
inline bool List_1_Remove_mC1DB35F985B1E0BF0158F3E5519E5C620654E0E7 (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * __this, RuntimeObject* ___item0, const RuntimeMethod* method)
{
	return ((  bool (*) (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *, RuntimeObject*, const RuntimeMethod*))List_1_Remove_m908B647BB9F807676DACE34E3E73475C3C3751D4_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::Add(!0)
inline void List_1_Add_mAC7F377FC00749E98D997CB913D6AF547F56F769 (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * __this, RuntimeObject* ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *, RuntimeObject*, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_IsTouching(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, bool ___value0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::set_Item(!0,!1)
inline void Dictionary_2_set_Item_m25245EC06ACEF489BBDD0EFE80B485AA39F8E78A (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, RuntimeObject* ___key0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value1, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, RuntimeObject*, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , const RuntimeMethod*))Dictionary_2_set_Item_mB185656B95426395501D626A8F4E662D7DB5FF9C_gshared)(__this, ___key0, ___value1, method);
}
// System.Boolean System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::Remove(!0)
inline bool Dictionary_2_Remove_mA2871E196E054502D7EBF852037B6619C3E4401E (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, RuntimeObject* ___key0, const RuntimeMethod* method)
{
	return ((  bool (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, RuntimeObject*, const RuntimeMethod*))Dictionary_2_Remove_m4A95130041BAC919F6E106FFDF79F5E9FF237376_gshared)(__this, ___key0, method);
}
// System.Int32 System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::get_Count()
inline int32_t Dictionary_2_get_Count_m78E2DE480413AF6EE8EB3006B4065AF38E0234C5 (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, const RuntimeMethod*))Dictionary_2_get_Count_m17A4E3895AEFAE5E9A619CFD2D5EE8BEE49C3854_gshared)(__this, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_InitialWorldPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_InitialLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_InitialLocalPosition_m8D225ECB8F5146925F94C5C587C8984DF38F9506 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_LocalSpacePressDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_LocalSpacePressDirection_mD89D464FE64A8BA09D8E41AF37A942CE14260E3F (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::GetLocalPositionAlongPushDirection(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_GetLocalPositionAlongPushDirection_mA98FE628589D4F47B28B71B4E929C15453B2D8F3 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___localDistance0, const RuntimeMethod* method);
// System.Collections.Generic.Dictionary`2/Enumerator<!0,!1> System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::GetEnumerator()
inline Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F  Dictionary_2_GetEnumerator_m70D9D6966D6841CC1781795FDACE68E79665518E (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F  (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, const RuntimeMethod*))Dictionary_2_GetEnumerator_m8131AF1E8427B8E2AECF6B6AC7F514DE98FECBC0_gshared)(__this, method);
}
// System.Collections.Generic.KeyValuePair`2<!0,!1> System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::get_Current()
inline KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C  Enumerator_get_Current_mC00EA5818B17D0255C1CDAFFF2BF2A5B49011A80_inline (Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F * __this, const RuntimeMethod* method)
{
	return ((  KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C  (*) (Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F *, const RuntimeMethod*))Enumerator_get_Current_m9DFAAD33679F4782E51C9414618305A9A38C5E0A_gshared_inline)(__this, method);
}
// !1 System.Collections.Generic.KeyValuePair`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::get_Value()
inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  KeyValuePair_2_get_Value_m7CE41DE5F70BD19965A75CC4AB1BF0F50B829D98_inline (KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C * __this, const RuntimeMethod* method)
{
	return ((  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  (*) (KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C *, const RuntimeMethod*))KeyValuePair_2_get_Value_mA14FAE0D9F17BE95224D4C6B4A717086A350C8C9_gshared_inline)(__this, method);
}
// System.Single UnityEngine.Mathf::Max(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65 (float ___a0, float ___b1, const RuntimeMethod* method);
// System.Boolean System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::MoveNext()
inline bool Enumerator_MoveNext_mB34B0E1E152876F8FC913C2BBF18CB5F9BA01217 (Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F * __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F *, const RuntimeMethod*))Enumerator_MoveNext_mCF115D686367685FAD3D9E16685DA8B1E0F87345_gshared)(__this, method);
}
// System.Void System.Collections.Generic.Dictionary`2/Enumerator<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::Dispose()
inline void Enumerator_Dispose_m6C2F8400E251DF11AE3893B9FF0DCB0A9C447ECC (Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F * __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F *, const RuntimeMethod*))Enumerator_Dispose_m0551029F6912C50A5349075541E1E65C3A55236F_gshared)(__this, method);
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::PulseProximityLight()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_PulseProximityLight_m1EBDFA4D807318B0B7A2CC516E68E0606A92F4E9 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method);
// System.Void UnityEngine.Events.UnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028 (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.Dictionary`2<Microsoft.MixedReality.Toolkit.Input.IMixedRealityController,UnityEngine.Vector3>::.ctor()
inline void Dictionary_2__ctor_m2219CC6B4DF5EDDC0C34EFC5A84893BFDCCB2041 (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * __this, const RuntimeMethod* method)
{
	((  void (*) (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *, const RuntimeMethod*))Dictionary_2__ctor_mD83FF40A510C9FA8DCC52CDA64FCBE5425AA32CE_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource>::.ctor()
inline void List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46 (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void System.ThrowHelper::ThrowArgumentOutOfRangeException()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550 (const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData
IL2CPP_EXTERN_C void PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshal_pinvoke(const PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B& unmarshaled, PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_pinvoke& marshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
IL2CPP_EXTERN_C void PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshal_pinvoke_back(const PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_pinvoke& marshaled, PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B& unmarshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData
IL2CPP_EXTERN_C void PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshal_pinvoke_cleanup(PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData
IL2CPP_EXTERN_C void PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshal_com(const PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B& unmarshaled, PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_com& marshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
IL2CPP_EXTERN_C void PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshal_com_back(const PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_com& marshaled, PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B& unmarshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData
IL2CPP_EXTERN_C void PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshal_com_cleanup(PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B_marshaled_com& marshaled)
{
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213 (PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * __this, RuntimeObject* ___pointer0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___initialGrabPointInPointer1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19984));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19985));
	{
		// public PointerData(IMixedRealityPointer pointer, Vector3 initialGrabPointInPointer) : this()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19986));
		il2cpp_codegen_initobj(__this, sizeof(PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B ));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19987));
		// this.pointer = pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19988));
		RuntimeObject* L_0 = ___pointer0;
		__this->set_pointer_0(L_0);
		// this.initialGrabPointInPointer = initialGrabPointInPointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19989));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___initialGrabPointInPointer1;
		__this->set_initialGrabPointInPointer_1(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19990));
		return;
	}
}
IL2CPP_EXTERN_C  void PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213_AdjustorThunk (RuntimeObject * __this, RuntimeObject* ___pointer0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___initialGrabPointInPointer1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * _thisAdjusted = reinterpret_cast<PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B *>(__this + _offset);
	PointerData__ctor_mAB18EC6248D34C8599620B04F4126593F91CE213(_thisAdjusted, ___pointer0, ___initialGrabPointInPointer1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::IsNearPointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58 (PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19991));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19992));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19993));
		// return (pointer is IMixedRealityNearPointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19994));
		RuntimeObject* L_0 = __this->get_pointer_0();
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_0, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0012;
	}

IL_0012:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19995));
		bool L_1 = V_0;
		return L_1;
	}
}
IL2CPP_EXTERN_C  bool PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * _thisAdjusted = reinterpret_cast<PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B *>(__this + _offset);
	return PointerData_IsNearPointer_m1A0256746775652E95E9CBF57C69D9E79D6E7C58(_thisAdjusted, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ManipulationHandler/PointerData::get_GrabPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0 (PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19996));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19997));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19998));
		// return (pointer.Rotation * initialGrabPointInPointer) + pointer.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 19999));
		RuntimeObject* L_0 = __this->get_pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20001));
		NullCheck(L_0);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20001));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = __this->get_initialGrabPointInPointer_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20002));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20002));
		RuntimeObject* L_4 = __this->get_pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20003));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20003));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20004));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20004));
		V_0 = L_6;
		goto IL_002a;
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20000));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_0;
		return L_7;
	}
}
IL2CPP_EXTERN_C  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B * _thisAdjusted = reinterpret_cast<PointerData_tA8B427F72F732B811341997E27BBA26A8B21CA0B *>(__this + _offset);
	return PointerData_get_GrabPoint_m13F6EF805E6FE50F993027062BD4F7A36B4A23F0(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Single Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::get_ScaleMinimum()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MinMaxScaleConstraint_get_ScaleMinimum_mC26392D3DDCB3E39CA474E5B6BF5CA1063088AED (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_get_ScaleMinimum_mC26392D3DDCB3E39CA474E5B6BF5CA1063088AED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_get_ScaleMinimum_mC26392D3DDCB3E39CA474E5B6BF5CA1063088AED_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18381));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18382));
	{
		// get => minimumScale.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18383));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_0 = __this->get_address_of_minimumScale_10();
		float L_1 = L_0->get_x_2();
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::set_ScaleMinimum(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint_set_ScaleMinimum_mCF4B4B808EB77CB3628F077B991A786AC3D17F9C (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_set_ScaleMinimum_mCF4B4B808EB77CB3628F077B991A786AC3D17F9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_set_ScaleMinimum_mCF4B4B808EB77CB3628F077B991A786AC3D17F9C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18384));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18385));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18386));
		// scaleMinimum = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18387));
		float L_0 = ___value0;
		__this->set_scaleMinimum_9(L_0);
		// SetScaleLimits();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18388));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18390));
		MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18390));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18389));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::get_ScaleMaximum()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float MinMaxScaleConstraint_get_ScaleMaximum_m13143A12C20422F0221A6A8617229F92C8A18FE9 (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_get_ScaleMaximum_m13143A12C20422F0221A6A8617229F92C8A18FE9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_get_ScaleMaximum_m13143A12C20422F0221A6A8617229F92C8A18FE9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18391));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18392));
	{
		// get => maximumScale.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18393));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_0 = __this->get_address_of_maximumScale_12();
		float L_1 = L_0->get_x_2();
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::set_ScaleMaximum(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint_set_ScaleMaximum_m63D0ED899DF9AAC2187B1991F7585F4925E4DFD6 (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_set_ScaleMaximum_m63D0ED899DF9AAC2187B1991F7585F4925E4DFD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_set_ScaleMaximum_m63D0ED899DF9AAC2187B1991F7585F4925E4DFD6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18394));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18395));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18396));
		// scaleMaximum = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18397));
		float L_0 = ___value0;
		__this->set_scaleMaximum_11(L_0);
		// SetScaleLimits();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18398));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18400));
		MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18400));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18399));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::get_RelativeToInitialState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MinMaxScaleConstraint_get_RelativeToInitialState_m91ADB98ECB02E4D7966032883F23F4DFD7878B37 (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_get_RelativeToInitialState_m91ADB98ECB02E4D7966032883F23F4DFD7878B37_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_get_RelativeToInitialState_m91ADB98ECB02E4D7966032883F23F4DFD7878B37_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18401));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18402));
	{
		// get => relativeToInitialState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18403));
		bool L_0 = __this->get_relativeToInitialState_13();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::set_RelativeToInitialState(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint_set_RelativeToInitialState_m9A2830E49B96C933799E82E23A1FF793F47A30C5 (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_set_RelativeToInitialState_m9A2830E49B96C933799E82E23A1FF793F47A30C5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_set_RelativeToInitialState_m9A2830E49B96C933799E82E23A1FF793F47A30C5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18404));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18405));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18406));
		// relativeToInitialState = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18407));
		bool L_0 = ___value0;
		__this->set_relativeToInitialState_13(L_0);
		// SetScaleLimits();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18408));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18410));
		MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18410));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18409));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::get_ConstraintType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MinMaxScaleConstraint_get_ConstraintType_m923651DF4A3C4FA6D9D52A4435FCED57E363BE7B (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_get_ConstraintType_m923651DF4A3C4FA6D9D52A4435FCED57E363BE7B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_get_ConstraintType_m923651DF4A3C4FA6D9D52A4435FCED57E363BE7B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18411));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18412));
	{
		// public override TransformFlags ConstraintType => TransformFlags.Scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18413));
		return (int32_t)(4);
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::Initialize(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint_Initialize_m3E99833609D66366129B9FBD128168AA2B7D2C8A (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___worldPose0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_Initialize_m3E99833609D66366129B9FBD128168AA2B7D2C8A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___worldPose0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_Initialize_m3E99833609D66366129B9FBD128168AA2B7D2C8A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18414));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18415));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18416));
		// base.Initialize(worldPose);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18417));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_0 = ___worldPose0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18420));
		TransformConstraint_Initialize_m244AB874230B8F3679070C065811C279E61B2152(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18420));
		// SetScaleLimits();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18418));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18421));
		MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18421));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18419));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::ApplyConstraint(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint_ApplyConstraint_m47DAC098B542AC947E7C414386EC4B70E807A10A (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_ApplyConstraint_m47DAC098B542AC947E7C414386EC4B70E807A10A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	bool V_4 = false;
	float V_5 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	float V_11 = 0.0f;
	int32_t V_12 = 0;
	int32_t V_13 = 0;
	bool V_14 = false;
	float V_15 = 0.0f;
	bool V_16 = false;
	bool V_17 = false;
	bool V_18 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___transform0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_3), (&V_5), (&V_11), (&V_12), (&V_13), (&V_15));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_ApplyConstraint_m47DAC098B542AC947E7C414386EC4B70E807A10A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18422));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18423));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18424));
		// if (Vector3.Min(maximumScale, transform.Scale) != transform.Scale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18425));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_maximumScale_12();
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_1 = ___transform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18484));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18484));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18485));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_Min_m0D0997E6CDFF77E5177C8D4E0A21C592C63F747E(L_0, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18485));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_4 = ___transform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18486));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18486));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18487));
		bool L_6 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18487));
		V_0 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18426));
		bool L_7 = V_0;
		if (!L_7)
		{
			goto IL_00b0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18427));
		// float maxRatio = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18428));
		V_1 = (0.0f);
		// int maxIdx = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18429));
		V_2 = (-1);
		// for (int i = 0; i < 3; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18430));
		V_3 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18431));
		goto IL_0083;
	}

IL_0031:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18432));
		// if (maximumScale[i] > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18433));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_8 = __this->get_address_of_maximumScale_12();
		int32_t L_9 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18488));
		float L_10 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18488));
		V_4 = (bool)((((float)L_10) > ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18434));
		bool L_11 = V_4;
		if (!L_11)
		{
			goto IL_007e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18435));
		// float ratio = transform.Scale[i] / maximumScale[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18436));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_12 = ___transform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18489));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18489));
		V_6 = L_13;
		int32_t L_14 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18490));
		float L_15 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18490));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_16 = __this->get_address_of_maximumScale_12();
		int32_t L_17 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18491));
		float L_18 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18491));
		V_5 = ((float)((float)L_15/(float)L_18));
		// if (ratio > maxRatio)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18437));
		float L_19 = V_5;
		float L_20 = V_1;
		V_7 = (bool)((((float)L_19) > ((float)L_20))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18438));
		bool L_21 = V_7;
		if (!L_21)
		{
			goto IL_007d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18439));
		// maxRatio = ratio;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18440));
		float L_22 = V_5;
		V_1 = L_22;
		// maxIdx = i;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18441));
		int32_t L_23 = V_3;
		V_2 = L_23;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18442));
	}

IL_007d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18443));
	}

IL_007e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18444));
		// for (int i = 0; i < 3; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18445));
		int32_t L_24 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add((int32_t)L_24, (int32_t)1));
	}

IL_0083:
	{
		// for (int i = 0; i < 3; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18446));
		int32_t L_25 = V_3;
		V_8 = (bool)((((int32_t)L_25) < ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18447));
		bool L_26 = V_8;
		if (L_26)
		{
			goto IL_0031;
		}
	}
	{
		// if (maxIdx != -1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18448));
		int32_t L_27 = V_2;
		V_9 = (bool)((((int32_t)((((int32_t)L_27) == ((int32_t)(-1)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18449));
		bool L_28 = V_9;
		if (!L_28)
		{
			goto IL_00af;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18450));
		// transform.Scale /= maxRatio;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18451));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_29 = ___transform0;
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_30 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18492));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18492));
		float L_32 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18493));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_31, L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18493));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18494));
		MixedRealityTransform_set_Scale_mB61F9517606A3C0865BB858E45F125AA48C8A437((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_30, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18494));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18452));
	}

IL_00af:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18453));
	}

IL_00b0:
	{
		// if (Vector3.Max(minimumScale, transform.Scale) != transform.Scale)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18454));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_34 = __this->get_minimumScale_10();
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_35 = ___transform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18495));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18495));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18496));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = Vector3_Max_m78495079CA1E29B0658699B856AFF22E23180F36(L_34, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18496));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_38 = ___transform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18497));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18497));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18498));
		bool L_40 = Vector3_op_Inequality_mFEEAA4C4BF743FB5B8A47FF4967A5E2C73273D6E(L_37, L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18498));
		V_10 = L_40;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18455));
		bool L_41 = V_10;
		if (!L_41)
		{
			goto IL_0170;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18456));
		// float minRatio = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18457));
		V_11 = (1.0f);
		// int minIdx = -1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18458));
		V_12 = (-1);
		// for (int i = 0; i < 3; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18459));
		V_13 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18460));
		goto IL_0140;
	}

IL_00e5:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18461));
		// if (minimumScale[i] > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18462));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_42 = __this->get_address_of_minimumScale_10();
		int32_t L_43 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18499));
		float L_44 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_42, L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18499));
		V_14 = (bool)((((float)L_44) > ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18463));
		bool L_45 = V_14;
		if (!L_45)
		{
			goto IL_0139;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18464));
		// float ratio = transform.Scale[i] / minimumScale[i];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18465));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_46 = ___transform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18500));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_47 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18500));
		V_6 = L_47;
		int32_t L_48 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18501));
		float L_49 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), L_48, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18501));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_50 = __this->get_address_of_minimumScale_10();
		int32_t L_51 = V_13;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18502));
		float L_52 = Vector3_get_Item_mC3B9D35C070A91D7CA5C5B47280BD0EA3E148AC6((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_50, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18502));
		V_15 = ((float)((float)L_49/(float)L_52));
		// if (ratio < minRatio)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18466));
		float L_53 = V_15;
		float L_54 = V_11;
		V_16 = (bool)((((float)L_53) < ((float)L_54))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18467));
		bool L_55 = V_16;
		if (!L_55)
		{
			goto IL_0138;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18468));
		// minRatio = ratio;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18469));
		float L_56 = V_15;
		V_11 = L_56;
		// minIdx = i;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18470));
		int32_t L_57 = V_13;
		V_12 = L_57;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18471));
	}

IL_0138:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18472));
	}

IL_0139:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18473));
		// for (int i = 0; i < 3; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18474));
		int32_t L_58 = V_13;
		V_13 = ((int32_t)il2cpp_codegen_add((int32_t)L_58, (int32_t)1));
	}

IL_0140:
	{
		// for (int i = 0; i < 3; ++i)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18475));
		int32_t L_59 = V_13;
		V_17 = (bool)((((int32_t)L_59) < ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18476));
		bool L_60 = V_17;
		if (L_60)
		{
			goto IL_00e5;
		}
	}
	{
		// if (minIdx != -1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18477));
		int32_t L_61 = V_12;
		V_18 = (bool)((((int32_t)((((int32_t)L_61) == ((int32_t)(-1)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18478));
		bool L_62 = V_18;
		if (!L_62)
		{
			goto IL_016f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18479));
		// transform.Scale /= minRatio;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18480));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_63 = ___transform0;
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_64 = L_63;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18503));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_65 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_64, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18503));
		float L_66 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18504));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_67 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_65, L_66, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18504));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18505));
		MixedRealityTransform_set_Scale_mB61F9517606A3C0865BB858E45F125AA48C8A437((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_64, L_67, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18505));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18481));
	}

IL_016f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18482));
	}

IL_0170:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18483));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::SetScaleLimits()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint_SetScaleLimits_m34BB332738F8DA7248C0044DBE10362D6AE3E72D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18506));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18507));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18508));
		// if (relativeToInitialState)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18509));
		bool L_0 = __this->get_relativeToInitialState_13();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18510));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0047;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18511));
		// minimumScale = worldPoseOnManipulationStart.Scale * scaleMinimum;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18512));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_2 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18520));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18520));
		float L_4 = __this->get_scaleMinimum_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18521));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18521));
		__this->set_minimumScale_10(L_5);
		// maximumScale = worldPoseOnManipulationStart.Scale * scaleMaximum;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18513));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_6 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18522));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18522));
		float L_8 = __this->get_scaleMaximum_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18523));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18523));
		__this->set_maximumScale_12(L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18514));
		goto IL_0083;
	}

IL_0047:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18515));
		// minimumScale = new Vector3(scaleMinimum, scaleMinimum, scaleMinimum);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18516));
		float L_10 = __this->get_scaleMinimum_9();
		float L_11 = __this->get_scaleMinimum_9();
		float L_12 = __this->get_scaleMinimum_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18524));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13;
		memset((&L_13), 0, sizeof(L_13));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_13), L_10, L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18524));
		__this->set_minimumScale_10(L_13);
		// maximumScale = new Vector3(scaleMaximum, scaleMaximum, scaleMaximum);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18517));
		float L_14 = __this->get_scaleMaximum_11();
		float L_15 = __this->get_scaleMaximum_11();
		float L_16 = __this->get_scaleMaximum_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18525));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17;
		memset((&L_17), 0, sizeof(L_17));
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((&L_17), L_14, L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18525));
		__this->set_maximumScale_12(L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18518));
	}

IL_0083:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18519));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MinMaxScaleConstraint::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MinMaxScaleConstraint__ctor_m3EA21AD79D566289683B9A14B9DCF2D3B1E721D8 (MinMaxScaleConstraint_t16720E0CF63AD7E9A22659AB2AF2F98DA4D11C5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MinMaxScaleConstraint__ctor_m3EA21AD79D566289683B9A14B9DCF2D3B1E721D8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MinMaxScaleConstraint__ctor_m3EA21AD79D566289683B9A14B9DCF2D3B1E721D8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18526));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18527));
	{
		// private float scaleMinimum = 0.2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18528));
		__this->set_scaleMinimum_9((0.2f));
		// private float scaleMaximum = 2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18529));
		__this->set_scaleMaximum_11((2.0f));
		// private bool relativeToInitialState = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18530));
		__this->set_relativeToInitialState_13((bool)1);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18531));
		TransformConstraint__ctor_m4E2D48A942754D5787ECB9D447E247C4CA6F0B6A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18531));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.Utilities.AxisFlags Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::get_ConstraintOnMovement()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveAxisConstraint_get_ConstraintOnMovement_m8A528FA62E51C0437E27285358F970CF176FD7C5 (MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveAxisConstraint_get_ConstraintOnMovement_m8A528FA62E51C0437E27285358F970CF176FD7C5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveAxisConstraint_get_ConstraintOnMovement_m8A528FA62E51C0437E27285358F970CF176FD7C5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18532));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18533));
	{
		// get => constraintOnMovement;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18534));
		int32_t L_0 = __this->get_constraintOnMovement_9();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::set_ConstraintOnMovement(Microsoft.MixedReality.Toolkit.Utilities.AxisFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveAxisConstraint_set_ConstraintOnMovement_m9142968D6F42BCB7A3EBE3301EF690BD7DC6C17B (MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveAxisConstraint_set_ConstraintOnMovement_m9142968D6F42BCB7A3EBE3301EF690BD7DC6C17B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveAxisConstraint_set_ConstraintOnMovement_m9142968D6F42BCB7A3EBE3301EF690BD7DC6C17B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18535));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18536));
	{
		// set => constraintOnMovement = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18537));
		int32_t L_0 = ___value0;
		__this->set_constraintOnMovement_9(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::get_UseLocalSpaceForConstraint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool MoveAxisConstraint_get_UseLocalSpaceForConstraint_m5C8E144F4FFFDAD3D2563361B65B1B4668C69B82 (MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveAxisConstraint_get_UseLocalSpaceForConstraint_m5C8E144F4FFFDAD3D2563361B65B1B4668C69B82_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveAxisConstraint_get_UseLocalSpaceForConstraint_m5C8E144F4FFFDAD3D2563361B65B1B4668C69B82_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18538));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18539));
	{
		// get => useLocalSpaceForConstraint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18540));
		bool L_0 = __this->get_useLocalSpaceForConstraint_10();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::set_UseLocalSpaceForConstraint(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveAxisConstraint_set_UseLocalSpaceForConstraint_m9E51F3E2CA67ED347400FCE4811C741240097E25 (MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveAxisConstraint_set_UseLocalSpaceForConstraint_m9E51F3E2CA67ED347400FCE4811C741240097E25_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveAxisConstraint_set_UseLocalSpaceForConstraint_m9E51F3E2CA67ED347400FCE4811C741240097E25_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18541));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18542));
	{
		// set => useLocalSpaceForConstraint = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18543));
		bool L_0 = ___value0;
		__this->set_useLocalSpaceForConstraint_10(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::get_ConstraintType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t MoveAxisConstraint_get_ConstraintType_mD484F36521D0609BDE3BD51F51B88BAFF3C1D74C (MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveAxisConstraint_get_ConstraintType_mD484F36521D0609BDE3BD51F51B88BAFF3C1D74C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveAxisConstraint_get_ConstraintType_mD484F36521D0609BDE3BD51F51B88BAFF3C1D74C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18544));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18545));
	{
		// public override TransformFlags ConstraintType => TransformFlags.Move;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18546));
		return (int32_t)(1);
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::ApplyConstraint(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveAxisConstraint_ApplyConstraint_m929D2B3AE794C9DB1E39720FC012426E7B571C35 (MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * ___transform0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveAxisConstraint_ApplyConstraint_m929D2B3AE794C9DB1E39720FC012426E7B571C35_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___transform0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveAxisConstraint_ApplyConstraint_m929D2B3AE794C9DB1E39720FC012426E7B571C35_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18547));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18548));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18549));
		// Quaternion inverseRotation = Quaternion.Inverse(worldPoseOnManipulationStart.Rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18550));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_0 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18596));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18596));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18597));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18597));
		V_0 = L_2;
		// Vector3 position = transform.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18551));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_3 = ___transform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18598));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18598));
		V_1 = L_4;
		// if (constraintOnMovement.IsMaskSet(AxisFlags.XAxis))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18552));
		int32_t L_5 = __this->get_constraintOnMovement_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18599));
		bool L_6 = AxisFlagsExtensions_IsMaskSet_m8EBA7A31AEC86DA4FD25AD8F559E467A1C48A66D(L_5, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18599));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18553));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_0089;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18554));
		// if (useLocalSpaceForConstraint)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18555));
		bool L_8 = __this->get_useLocalSpaceForConstraint_10();
		V_3 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18556));
		bool L_9 = V_3;
		if (!L_9)
		{
			goto IL_006f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18557));
		// position = inverseRotation * position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18558));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_10 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18600));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18600));
		V_1 = L_12;
		// position.x = (inverseRotation * worldPoseOnManipulationStart.Position).x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18559));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = V_0;
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_14 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18601));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18601));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18602));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_13, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18602));
		float L_17 = L_16.get_x_2();
		(&V_1)->set_x_2(L_17);
		// position = worldPoseOnManipulationStart.Rotation * position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18560));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_18 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18603));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_19 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18603));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18604));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_19, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18604));
		V_1 = L_21;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18561));
		goto IL_0088;
	}

IL_006f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18562));
		// position.x = worldPoseOnManipulationStart.Position.x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18563));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_22 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18605));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18605));
		float L_24 = L_23.get_x_2();
		(&V_1)->set_x_2(L_24);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18564));
	}

IL_0088:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18565));
	}

IL_0089:
	{
		// if (constraintOnMovement.IsMaskSet(AxisFlags.YAxis))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18566));
		int32_t L_25 = __this->get_constraintOnMovement_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18606));
		bool L_26 = AxisFlagsExtensions_IsMaskSet_m8EBA7A31AEC86DA4FD25AD8F559E467A1C48A66D(L_25, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18606));
		V_4 = L_26;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18567));
		bool L_27 = V_4;
		if (!L_27)
		{
			goto IL_00fd;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18568));
		// if (useLocalSpaceForConstraint)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18569));
		bool L_28 = __this->get_useLocalSpaceForConstraint_10();
		V_5 = L_28;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18570));
		bool L_29 = V_5;
		if (!L_29)
		{
			goto IL_00e3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18571));
		// position = inverseRotation * position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18572));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_30 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18607));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_32 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_30, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18607));
		V_1 = L_32;
		// position.y = (inverseRotation * worldPoseOnManipulationStart.Position).y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18573));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_33 = V_0;
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_34 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18608));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18608));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18609));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_33, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18609));
		float L_37 = L_36.get_y_3();
		(&V_1)->set_y_3(L_37);
		// position = worldPoseOnManipulationStart.Rotation * position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18574));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_38 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18610));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_39 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18610));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18611));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_41 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_39, L_40, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18611));
		V_1 = L_41;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18575));
		goto IL_00fc;
	}

IL_00e3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18576));
		// position.y = worldPoseOnManipulationStart.Position.y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18577));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_42 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18612));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_43 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18612));
		float L_44 = L_43.get_y_3();
		(&V_1)->set_y_3(L_44);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18578));
	}

IL_00fc:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18579));
	}

IL_00fd:
	{
		// if (constraintOnMovement.IsMaskSet(AxisFlags.ZAxis))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18580));
		int32_t L_45 = __this->get_constraintOnMovement_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18613));
		bool L_46 = AxisFlagsExtensions_IsMaskSet_m8EBA7A31AEC86DA4FD25AD8F559E467A1C48A66D(L_45, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18613));
		V_6 = L_46;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18581));
		bool L_47 = V_6;
		if (!L_47)
		{
			goto IL_0171;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18582));
		// if (useLocalSpaceForConstraint)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18583));
		bool L_48 = __this->get_useLocalSpaceForConstraint_10();
		V_7 = L_48;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18584));
		bool L_49 = V_7;
		if (!L_49)
		{
			goto IL_0157;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18585));
		// position = inverseRotation * position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18586));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_50 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_51 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18614));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_52 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_50, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18614));
		V_1 = L_52;
		// position.z = (inverseRotation * worldPoseOnManipulationStart.Position).z;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18587));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_53 = V_0;
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_54 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18615));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_54, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18615));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18616));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_56 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_53, L_55, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18616));
		float L_57 = L_56.get_z_4();
		(&V_1)->set_z_4(L_57);
		// position = worldPoseOnManipulationStart.Rotation * position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18588));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_58 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18617));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_59 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_58, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18617));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_60 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18618));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_61 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_59, L_60, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18618));
		V_1 = L_61;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18589));
		goto IL_0170;
	}

IL_0157:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18590));
		// position.z = worldPoseOnManipulationStart.Position.z;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18591));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_62 = ((TransformConstraint_tB0F7B5C713F34AB8F44C580652DBFA507C251D1C *)__this)->get_address_of_worldPoseOnManipulationStart_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18619));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_63 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_62, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18619));
		float L_64 = L_63.get_z_4();
		(&V_1)->set_z_4(L_64);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18592));
	}

IL_0170:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18593));
	}

IL_0171:
	{
		// transform.Position = position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18594));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 * L_65 = ___transform0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_66 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18620));
		MixedRealityTransform_set_Position_m132CCC9279F03B590B6FD8AA94C807A93BFC52AD((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)L_65, L_66, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18620));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18595));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.MoveAxisConstraint::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MoveAxisConstraint__ctor_m5E3DB1708D211D01BE356689DB83AC9EE5FA372E (MoveAxisConstraint_t8DE11675723733FC1C3FDB82AC482A5E71C5174B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MoveAxisConstraint__ctor_m5E3DB1708D211D01BE356689DB83AC9EE5FA372E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MoveAxisConstraint__ctor_m5E3DB1708D211D01BE356689DB83AC9EE5FA372E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18621));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18622));
	{
		// private AxisFlags constraintOnMovement = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18623));
		__this->set_constraintOnMovement_9(0);
		// private bool useLocalSpaceForConstraint = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18624));
		__this->set_useLocalSpaceForConstraint_10((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18625));
		TransformConstraint__ctor_m4E2D48A942754D5787ECB9D447E247C4CA6F0B6A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18625));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_HostTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20005));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20006));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20007));
		// if (hostTransform == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20008));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = __this->get_hostTransform_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20015));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20015));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20009));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20010));
		// hostTransform = gameObject.transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20011));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20016));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20016));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20017));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20017));
		__this->set_hostTransform_4(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20012));
	}

IL_0024:
	{
		// return hostTransform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20013));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = __this->get_hostTransform_4();
		V_1 = L_5;
		goto IL_002d;
	}

IL_002d:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20014));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = V_1;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_HostTransform(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_HostTransform_m63F5A9D0E7DD697F0C764204D58666815705F799 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_HostTransform_m63F5A9D0E7DD697F0C764204D58666815705F799_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_HostTransform_m63F5A9D0E7DD697F0C764204D58666815705F799_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20018));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20019));
	{
		// set => hostTransform = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20020));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___value0;
		__this->set_hostTransform_4(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_ManipulationType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ObjectManipulator_get_ManipulationType_mD8C0FC3EF3E9BCBC3D3539F9407B2CDC67582422 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_ManipulationType_mD8C0FC3EF3E9BCBC3D3539F9407B2CDC67582422_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_ManipulationType_mD8C0FC3EF3E9BCBC3D3539F9407B2CDC67582422_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20021));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20022));
	{
		// get => manipulationType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20023));
		int32_t L_0 = __this->get_manipulationType_5();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_ManipulationType(Microsoft.MixedReality.Toolkit.Utilities.ManipulationHandFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_ManipulationType_m9B97FE9C0B4EB4FD5658EE7F838BF7261AB991A7 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_ManipulationType_m9B97FE9C0B4EB4FD5658EE7F838BF7261AB991A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_ManipulationType_m9B97FE9C0B4EB4FD5658EE7F838BF7261AB991A7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20024));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20025));
	{
		// set => manipulationType = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20026));
		int32_t L_0 = ___value0;
		__this->set_manipulationType_5(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.TransformFlags Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_TwoHandedManipulationType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ObjectManipulator_get_TwoHandedManipulationType_m3955F80C07A7FA62C0F74D41BE6B6FBCF038D191 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_TwoHandedManipulationType_m3955F80C07A7FA62C0F74D41BE6B6FBCF038D191_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_TwoHandedManipulationType_m3955F80C07A7FA62C0F74D41BE6B6FBCF038D191_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20027));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20028));
	{
		// get => twoHandedManipulationType;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20029));
		int32_t L_0 = __this->get_twoHandedManipulationType_6();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_TwoHandedManipulationType(Microsoft.MixedReality.Toolkit.Utilities.TransformFlags)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_TwoHandedManipulationType_mA94FE3FE40A3D0B826C2847987F3C7DA5B24E90E (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_TwoHandedManipulationType_mA94FE3FE40A3D0B826C2847987F3C7DA5B24E90E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_TwoHandedManipulationType_mA94FE3FE40A3D0B826C2847987F3C7DA5B24E90E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20030));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20031));
	{
		// set => twoHandedManipulationType = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20032));
		int32_t L_0 = ___value0;
		__this->set_twoHandedManipulationType_6(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_AllowFarManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20034));
	{
		// get => allowFarManipulation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20035));
		bool L_0 = __this->get_allowFarManipulation_7();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_AllowFarManipulation(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_AllowFarManipulation_m20B813EE205B9AB354902D6E2CEC625BA35A9FB5 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_AllowFarManipulation_m20B813EE205B9AB354902D6E2CEC625BA35A9FB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_AllowFarManipulation_m20B813EE205B9AB354902D6E2CEC625BA35A9FB5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20036));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20037));
	{
		// set => allowFarManipulation = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20038));
		bool L_0 = ___value0;
		__this->set_allowFarManipulation_7(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_UseForcesForNearManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_UseForcesForNearManipulation_mE78F832EAB033C458DCAD51FAE38498B1D9F5D41 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_UseForcesForNearManipulation_mE78F832EAB033C458DCAD51FAE38498B1D9F5D41_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_UseForcesForNearManipulation_mE78F832EAB033C458DCAD51FAE38498B1D9F5D41_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20039));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20040));
	{
		// get => useForcesForNearManipulation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20041));
		bool L_0 = __this->get_useForcesForNearManipulation_8();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_UseForcesForNearManipulation(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_UseForcesForNearManipulation_mFDB5E40E3320C5E03C67D500AA3E5CF06F885A64 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_UseForcesForNearManipulation_mFDB5E40E3320C5E03C67D500AA3E5CF06F885A64_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_UseForcesForNearManipulation_mFDB5E40E3320C5E03C67D500AA3E5CF06F885A64_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20042));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20043));
	{
		// set => useForcesForNearManipulation = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20044));
		bool L_0 = ___value0;
		__this->set_useForcesForNearManipulation_8(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OneHandRotationModeNear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ObjectManipulator_get_OneHandRotationModeNear_m1418822D9BC857D4A005CB22FEA98CE187624F61 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OneHandRotationModeNear_m1418822D9BC857D4A005CB22FEA98CE187624F61_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OneHandRotationModeNear_m1418822D9BC857D4A005CB22FEA98CE187624F61_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20046));
	{
		// get => oneHandRotationModeNear;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20047));
		int32_t L_0 = __this->get_oneHandRotationModeNear_9();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_OneHandRotationModeNear(Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_OneHandRotationModeNear_mA12B01FBCBDCAE8FFF22EC43F5E930575D77F4D5 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_OneHandRotationModeNear_mA12B01FBCBDCAE8FFF22EC43F5E930575D77F4D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_OneHandRotationModeNear_mA12B01FBCBDCAE8FFF22EC43F5E930575D77F4D5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20048));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20049));
	{
		// set => oneHandRotationModeNear = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20050));
		int32_t L_0 = ___value0;
		__this->set_oneHandRotationModeNear_9(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OneHandRotationModeFar()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ObjectManipulator_get_OneHandRotationModeFar_m6C5084C932AEEE899816E1669DF6942CB5D9106D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OneHandRotationModeFar_m6C5084C932AEEE899816E1669DF6942CB5D9106D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OneHandRotationModeFar_m6C5084C932AEEE899816E1669DF6942CB5D9106D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20051));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20052));
	{
		// get => oneHandRotationModeFar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20053));
		int32_t L_0 = __this->get_oneHandRotationModeFar_10();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_OneHandRotationModeFar(Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/RotateInOneHandType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_OneHandRotationModeFar_mADD49886EEB00FDE995B8126E4DFB12445D87152 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_OneHandRotationModeFar_mADD49886EEB00FDE995B8126E4DFB12445D87152_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_OneHandRotationModeFar_mADD49886EEB00FDE995B8126E4DFB12445D87152_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20054));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20055));
	{
		// set => oneHandRotationModeFar = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20056));
		int32_t L_0 = ___value0;
		__this->set_oneHandRotationModeFar_10(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/ReleaseBehaviorType Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_ReleaseBehavior()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t ObjectManipulator_get_ReleaseBehavior_m805C9392CADAEAF75C487B3F087245E454156E70 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_ReleaseBehavior_m805C9392CADAEAF75C487B3F087245E454156E70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_ReleaseBehavior_m805C9392CADAEAF75C487B3F087245E454156E70_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20057));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20058));
	{
		// get => releaseBehavior;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20059));
		int32_t L_0 = __this->get_releaseBehavior_11();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_ReleaseBehavior(Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/ReleaseBehaviorType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_ReleaseBehavior_m3616DDDA5116EC83FD190AE08FDAE8C41D66F285 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_ReleaseBehavior_m3616DDDA5116EC83FD190AE08FDAE8C41D66F285_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_ReleaseBehavior_m3616DDDA5116EC83FD190AE08FDAE8C41D66F285_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20060));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20061));
	{
		// set => releaseBehavior = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20062));
		int32_t L_0 = ___value0;
		__this->set_releaseBehavior_11(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_SmoothingActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_SmoothingActive_mABEAA6012D2C1360A4A65E1A01BBEEFC12ED2CE9 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_SmoothingActive_mABEAA6012D2C1360A4A65E1A01BBEEFC12ED2CE9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_SmoothingActive_mABEAA6012D2C1360A4A65E1A01BBEEFC12ED2CE9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20063));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20064));
	{
		// get => smoothingFar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20065));
		bool L_0 = __this->get_smoothingFar_13();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_SmoothingActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_SmoothingActive_m89F89601F20B6848D40DD47A91A6A49BA42BA87C (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_SmoothingActive_m89F89601F20B6848D40DD47A91A6A49BA42BA87C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_SmoothingActive_m89F89601F20B6848D40DD47A91A6A49BA42BA87C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20066));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20067));
	{
		// set => smoothingFar = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20068));
		bool L_0 = ___value0;
		__this->set_smoothingFar_13(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_SmoothingFar()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_SmoothingFar_m38F8C0E1A37028F129983179D70240374F54BBB9 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_SmoothingFar_m38F8C0E1A37028F129983179D70240374F54BBB9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_SmoothingFar_m38F8C0E1A37028F129983179D70240374F54BBB9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20069));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20070));
	{
		// get => smoothingFar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20071));
		bool L_0 = __this->get_smoothingFar_13();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_SmoothingFar(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_SmoothingFar_mC8AA424DACFDD1D09A565B2A1FB90A9F17A5295D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_SmoothingFar_mC8AA424DACFDD1D09A565B2A1FB90A9F17A5295D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_SmoothingFar_mC8AA424DACFDD1D09A565B2A1FB90A9F17A5295D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20072));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20073));
	{
		// set => smoothingFar = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20074));
		bool L_0 = ___value0;
		__this->set_smoothingFar_13(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_SmoothingNear()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_SmoothingNear_m4E6D5E3AA489FD2B348D3021161E0C3336FE5AE5 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_SmoothingNear_m4E6D5E3AA489FD2B348D3021161E0C3336FE5AE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_SmoothingNear_m4E6D5E3AA489FD2B348D3021161E0C3336FE5AE5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20075));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20076));
	{
		// get => smoothingNear;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20077));
		bool L_0 = __this->get_smoothingNear_14();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_SmoothingNear(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_SmoothingNear_m1BB112F51B58ACDDB0FBF973D65D5E4D1E674BF9 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_SmoothingNear_m1BB112F51B58ACDDB0FBF973D65D5E4D1E674BF9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_SmoothingNear_m1BB112F51B58ACDDB0FBF973D65D5E4D1E674BF9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20078));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20079));
	{
		// set => smoothingNear = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20080));
		bool L_0 = ___value0;
		__this->set_smoothingNear_14(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_MoveLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ObjectManipulator_get_MoveLerpTime_mD8F5C86BBEBE4E4E8472D8AB50765962DC11F0AA (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_MoveLerpTime_mD8F5C86BBEBE4E4E8472D8AB50765962DC11F0AA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_MoveLerpTime_mD8F5C86BBEBE4E4E8472D8AB50765962DC11F0AA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20081));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20082));
	{
		// get => moveLerpTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20083));
		float L_0 = __this->get_moveLerpTime_15();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_MoveLerpTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_MoveLerpTime_mBC0C783E5FE7B00528ED75D50DD5194EAF263378 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_MoveLerpTime_mBC0C783E5FE7B00528ED75D50DD5194EAF263378_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_MoveLerpTime_mBC0C783E5FE7B00528ED75D50DD5194EAF263378_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20084));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20085));
	{
		// set => moveLerpTime = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20086));
		float L_0 = ___value0;
		__this->set_moveLerpTime_15(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_RotateLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ObjectManipulator_get_RotateLerpTime_mFA1A7E3D84B241F9058317D6AE2C2F2466341381 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_RotateLerpTime_mFA1A7E3D84B241F9058317D6AE2C2F2466341381_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_RotateLerpTime_mFA1A7E3D84B241F9058317D6AE2C2F2466341381_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20087));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20088));
	{
		// get => rotateLerpTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20089));
		float L_0 = __this->get_rotateLerpTime_16();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_RotateLerpTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_RotateLerpTime_m1A34D54E32F830524DE795D8AE0D2DFEAF357429 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_RotateLerpTime_m1A34D54E32F830524DE795D8AE0D2DFEAF357429_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_RotateLerpTime_m1A34D54E32F830524DE795D8AE0D2DFEAF357429_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20090));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20091));
	{
		// set => rotateLerpTime = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20092));
		float L_0 = ___value0;
		__this->set_rotateLerpTime_16(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_ScaleLerpTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ObjectManipulator_get_ScaleLerpTime_m11FC32B43850A00156B9C5F737C63FED864BDE16 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_ScaleLerpTime_m11FC32B43850A00156B9C5F737C63FED864BDE16_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_ScaleLerpTime_m11FC32B43850A00156B9C5F737C63FED864BDE16_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20093));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20094));
	{
		// get => scaleLerpTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20095));
		float L_0 = __this->get_scaleLerpTime_17();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_ScaleLerpTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_ScaleLerpTime_mCA6323F12CF357C1B89EBF9200545F5D4FA917D3 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_ScaleLerpTime_mCA6323F12CF357C1B89EBF9200545F5D4FA917D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_ScaleLerpTime_mCA6323F12CF357C1B89EBF9200545F5D4FA917D3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20096));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20097));
	{
		// set => scaleLerpTime = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20098));
		float L_0 = ___value0;
		__this->set_scaleLerpTime_17(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_EnableConstraints()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20099));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20100));
	{
		// get => enableConstraints;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20101));
		bool L_0 = __this->get_enableConstraints_18();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_EnableConstraints(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_EnableConstraints_mD1E67FCF924CCAE462E4C229E33CECC90475E4BF (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_EnableConstraints_mD1E67FCF924CCAE462E4C229E33CECC90475E4BF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_EnableConstraints_mD1E67FCF924CCAE462E4C229E33CECC90475E4BF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20102));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20103));
	{
		// set => enableConstraints = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20104));
		bool L_0 = ___value0;
		__this->set_enableConstraints_18(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ConstraintManager Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_ConstraintsManager()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * ObjectManipulator_get_ConstraintsManager_mDC372CBEF83D7E502344C8E3F829B57DE4568B06 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_ConstraintsManager_mDC372CBEF83D7E502344C8E3F829B57DE4568B06_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_ConstraintsManager_mDC372CBEF83D7E502344C8E3F829B57DE4568B06_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20106));
	{
		// get => constraintsManager;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20107));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_0 = __this->get_constraintsManager_19();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_ConstraintsManager(Microsoft.MixedReality.Toolkit.UI.ConstraintManager)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_ConstraintsManager_m7AAE84B7D2F3BE5560B516E71854525E2C76E9B7 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_ConstraintsManager_m7AAE84B7D2F3BE5560B516E71854525E2C76E9B7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_ConstraintsManager_m7AAE84B7D2F3BE5560B516E71854525E2C76E9B7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20108));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20109));
	{
		// set => constraintsManager = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20110));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_0 = ___value0;
		__this->set_constraintsManager_19(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_ElasticsManager()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * ObjectManipulator_get_ElasticsManager_m09D0545BC27590E5AC9C681DA742EBB170BCF56E (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_ElasticsManager_m09D0545BC27590E5AC9C681DA742EBB170BCF56E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_ElasticsManager_m09D0545BC27590E5AC9C681DA742EBB170BCF56E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20111));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20112));
	{
		// get => elasticsManager;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20113));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_0 = __this->get_elasticsManager_20();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_ElasticsManager(Microsoft.MixedReality.Toolkit.Experimental.Physics.ElasticsManager)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_ElasticsManager_m90622E038419A1EE98ADCCDA05B11D6478140759 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_ElasticsManager_m90622E038419A1EE98ADCCDA05B11D6478140759_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_ElasticsManager_m90622E038419A1EE98ADCCDA05B11D6478140759_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20114));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20115));
	{
		// set => elasticsManager = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20116));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_0 = ___value0;
		__this->set_elasticsManager_20(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnManipulationStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20117));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20118));
	{
		// get => onManipulationStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20119));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onManipulationStarted_21();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_OnManipulationStarted(Microsoft.MixedReality.Toolkit.UI.ManipulationEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_OnManipulationStarted_m50EA36717BC1A209704F6463DE18CB5C0BAAE137 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_OnManipulationStarted_m50EA36717BC1A209704F6463DE18CB5C0BAAE137_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_OnManipulationStarted_m50EA36717BC1A209704F6463DE18CB5C0BAAE137_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20120));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20121));
	{
		// set => onManipulationStarted = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20122));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = ___value0;
		__this->set_onManipulationStarted_21(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnManipulationEnded()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20123));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20124));
	{
		// get => onManipulationEnded;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20125));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onManipulationEnded_22();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_OnManipulationEnded(Microsoft.MixedReality.Toolkit.UI.ManipulationEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_OnManipulationEnded_m8D045F48764772F64959369F128C82BD723978C8 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_OnManipulationEnded_m8D045F48764772F64959369F128C82BD723978C8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_OnManipulationEnded_m8D045F48764772F64959369F128C82BD723978C8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20126));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20127));
	{
		// set => onManipulationEnded = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20128));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = ___value0;
		__this->set_onManipulationEnded_22(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnHoverEntered()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20129));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20130));
	{
		// get => onHoverEntered;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20131));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onHoverEntered_23();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_OnHoverEntered(Microsoft.MixedReality.Toolkit.UI.ManipulationEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_OnHoverEntered_m8ED10E6AC40F39A07AEC3BFAFD1538BDE12B8E10 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_OnHoverEntered_m8ED10E6AC40F39A07AEC3BFAFD1538BDE12B8E10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_OnHoverEntered_m8ED10E6AC40F39A07AEC3BFAFD1538BDE12B8E10_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20132));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20133));
	{
		// set => onHoverEntered = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20134));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = ___value0;
		__this->set_onHoverEntered_23(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ManipulationEvent Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_OnHoverExited()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20136));
	{
		// get => onHoverExited;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20137));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onHoverExited_24();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::set_OnHoverExited(Microsoft.MixedReality.Toolkit.UI.ManipulationEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_set_OnHoverExited_m6D6B07D204D67A910988E54E8507DDFC4A193EFD (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_set_OnHoverExited_m6D6B07D204D67A910988E54E8507DDFC4A193EFD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_set_OnHoverExited_m6D6B07D204D67A910988E54E8507DDFC4A193EFD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20139));
	{
		// set => onHoverExited = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20140));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = ___value0;
		__this->set_onHoverExited_24(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_IsOneHandedManipulationEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20141));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20142));
	int32_t G_B3_0 = 0;
	{
		// private bool IsOneHandedManipulationEnabled => manipulationType.IsMaskSet(ManipulationHandFlags.OneHanded) && pointerIdToPointerMap.Count == 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20143));
		int32_t L_0 = __this->get_manipulationType_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20144));
		bool L_1 = ManipulationHandFlagsExtensions_IsMaskSet_m8ECD5477BBB998BAE072400889C29BAB78469306(L_0, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20144));
		if (!L_1)
		{
			goto IL_001e;
		}
	}
	{
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_2 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20145));
		NullCheck(L_2);
		int32_t L_3 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_2, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20145));
		G_B3_0 = ((((int32_t)L_3) == ((int32_t)1))? 1 : 0);
		goto IL_001f;
	}

IL_001e:
	{
		G_B3_0 = 0;
	}

IL_001f:
	{
		return (bool)G_B3_0;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::get_IsTwoHandedManipulationEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20146));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20147));
	int32_t G_B3_0 = 0;
	{
		// private bool IsTwoHandedManipulationEnabled => manipulationType.IsMaskSet(ManipulationHandFlags.TwoHanded) && pointerIdToPointerMap.Count > 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20148));
		int32_t L_0 = __this->get_manipulationType_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20149));
		bool L_1 = ManipulationHandFlagsExtensions_IsMaskSet_m8ECD5477BBB998BAE072400889C29BAB78469306(L_0, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20149));
		if (!L_1)
		{
			goto IL_001e;
		}
	}
	{
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_2 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20150));
		NullCheck(L_2);
		int32_t L_3 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_2, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20150));
		G_B3_0 = ((((int32_t)L_3) > ((int32_t)1))? 1 : 0);
		goto IL_001f;
	}

IL_001e:
	{
		G_B3_0 = 0;
	}

IL_001f:
	{
		return (bool)G_B3_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_Awake_m4717ED74FB7D3169EFE48F8E1B21345719C4B67E (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_Awake_m4717ED74FB7D3169EFE48F8E1B21345719C4B67E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_Awake_m4717ED74FB7D3169EFE48F8E1B21345719C4B67E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20151));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20152));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20153));
		// moveLogic = new ManipulationMoveLogic();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20154));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20164));
		ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * L_0 = (ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 *)il2cpp_codegen_object_new(ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50_il2cpp_TypeInfo_var);
		ManipulationMoveLogic__ctor_m11DEDD9E5340C854B6C6E6E6499117A76AA74A4F(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20164));
		__this->set_moveLogic_25(L_0);
		// rotateLogic = new TwoHandRotateLogic();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20155));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20165));
		TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * L_1 = (TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 *)il2cpp_codegen_object_new(TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2_il2cpp_TypeInfo_var);
		TwoHandRotateLogic__ctor_mD20B8CD7693D8D01A2F7B98B7469404512820FA7(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20165));
		__this->set_rotateLogic_27(L_1);
		// scaleLogic = new TwoHandScaleLogic();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20156));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20166));
		TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 * L_2 = (TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 *)il2cpp_codegen_object_new(TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172_il2cpp_TypeInfo_var);
		TwoHandScaleLogic__ctor_mB3367E12C97D0E467AE02390DFC1B6CBB5AE10EB(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20166));
		__this->set_scaleLogic_26(L_2);
		// smoothingLogic = Activator.CreateInstance(transformSmoothingLogicType) as ITransformSmoothingLogic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20157));
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_3 = __this->get_transformSmoothingLogicType_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20167));
		IL2CPP_RUNTIME_CLASS_INIT(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_il2cpp_TypeInfo_var);
		Type_t * L_4 = SystemType_op_Implicit_m54F88648AF2FAE9B25347D1C7F1CE06DFF7E466F(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20167));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20168));
		RuntimeObject * L_5 = Activator_CreateInstance_mD06EE47879F606317C6DA91FB63E678CABAC6A16(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20168));
		__this->set_smoothingLogic_28(((RuntimeObject*)IsInst((RuntimeObject*)L_5, ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var)));
		// if (elasticsManager)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20158));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_6 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20169));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20169));
		V_0 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20159));
		bool L_8 = V_0;
		if (!L_8)
		{
			goto IL_0060;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20160));
		// elasticsManager.InitializeElastics(HostTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20161));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_9 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20170));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20170));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20171));
		NullCheck(L_9);
		ElasticsManager_InitializeElastics_m1F2102BE2AF0AEEDD08ED0FAD49468C26D04E8A8(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20171));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20162));
	}

IL_0060:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20163));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_Start_mDC2A0E0BB6A694344090CEB22B506B7B8723EFB2 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_Start_mDC2A0E0BB6A694344090CEB22B506B7B8723EFB2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_Start_mDC2A0E0BB6A694344090CEB22B506B7B8723EFB2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20172));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20173));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20174));
		// rigidBody = HostTransform.GetComponent<Rigidbody>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20175));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20188));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20188));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20189));
		NullCheck(L_0);
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_1 = Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C(L_0, /*hidden argument*/Component_GetComponent_TisRigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5_m3F58A77E3F62D9C80D7B49BA04E3D4809264FD5C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20189));
		__this->set_rigidBody_34(L_1);
		// if (constraintsManager == null && EnableConstraints)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20176));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_2 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20190));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20190));
		if (!L_3)
		{
			goto IL_0028;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20191));
		bool L_4 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20191));
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0029;
	}

IL_0028:
	{
		G_B3_0 = 0;
	}

IL_0029:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20177));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0040;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20178));
		// constraintsManager = gameObject.EnsureComponent<ConstraintManager>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20179));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20192));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20192));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20193));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_7 = ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF(L_6, /*hidden argument*/ComponentExtensions_EnsureComponent_TisConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781_m1285D70E9BB2237A10136FB37B467240676E8BFF_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20193));
		__this->set_constraintsManager_19(L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20180));
	}

IL_0040:
	{
		// var children = GetComponentsInChildren<NearInteractionGrabbable>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20181));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20194));
		NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD* L_8 = Component_GetComponentsInChildren_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m0EAEDF94A7ED1678BDEAECC06B498FB9FBA280E6(__this, /*hidden argument*/Component_GetComponentsInChildren_TisNearInteractionGrabbable_tE169D0ACE8CEE8FEAA69FE498B7C3D8C6160E47E_m0EAEDF94A7ED1678BDEAECC06B498FB9FBA280E6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20194));
		V_0 = L_8;
		// if (children.Length == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20182));
		NearInteractionGrabbableU5BU5D_t313A22056ABC5295DDF320F603C4BDF113901FCD* L_9 = V_0;
		NullCheck(L_9);
		V_2 = (bool)((((int32_t)(((RuntimeArray*)L_9)->max_length)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20183));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_00ad;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20184));
		// Debug.Log($"Near interactions are not enabled for {gameObject.name}. To enable near interactions, add a " +
		//     $"{nameof(NearInteractionGrabbable)} component to {gameObject.name} or to a child object of {gameObject.name} that contains a collider.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20185));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)7);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral53FAF79EF2441A5938D371142211A4FEFEC53CD9);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral53FAF79EF2441A5938D371142211A4FEFEC53CD9);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20195));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20195));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20196));
		NullCheck(L_14);
		String_t* L_15 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20196));
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_13;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteral6B7DF468D376A96FE4F69E74ABBCB655A1118A80);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral6B7DF468D376A96FE4F69E74ABBCB655A1118A80);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20197));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_18 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20197));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20198));
		NullCheck(L_18);
		String_t* L_19 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20198));
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral9F559FF9A8E13289187429C6E3C8AB4172A71128);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral9F559FF9A8E13289187429C6E3C8AB4172A71128);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20199));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_22 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20199));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20200));
		NullCheck(L_22);
		String_t* L_23 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20200));
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_23);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_23);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_24 = L_21;
		NullCheck(L_24);
		ArrayElementTypeCheck (L_24, _stringLiteral9D76A407F560F0C80A487533F9E7C07AC5AFCCCB);
		(L_24)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral9D76A407F560F0C80A487533F9E7C07AC5AFCCCB);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20201));
		String_t* L_25 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20201));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20202));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Log_m4B7C70BAFD477C6BDB59C88A0934F0B018D03708(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20202));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20186));
	}

IL_00ad:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20187));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersGrabPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  V_2;
	memset((&V_2), 0, sizeof(V_2));
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20203));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20204));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20205));
		// Vector3 sum = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20206));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20220));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20220));
		V_0 = L_0;
		// int count = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20207));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20208));
		// foreach (var p in pointerIdToPointerMap.Values)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20209));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_1 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20221));
		NullCheck(L_1);
		ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * L_2 = Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6(L_1, /*hidden argument*/Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20221));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20222));
		NullCheck(L_2);
		Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  L_3 = ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7(L_2, /*hidden argument*/ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20222));
		V_2 = L_3;
	}

IL_001b:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20210));
			goto IL_0039;
		}

IL_001d:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20211));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20223));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_4 = Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_inline((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20223));
			V_3 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20212));
			// sum += p.GrabPoint;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20213));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = V_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20224));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E((PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20224));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20225));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_5, L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20225));
			V_0 = L_7;
			// count++;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20214));
			int32_t L_8 = V_1;
			V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_8, (int32_t)1));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20215));
		}

IL_0039:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20216));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20226));
			bool L_9 = Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20226));
			if (L_9)
			{
				goto IL_001d;
			}
		}

IL_0042:
		{
			IL2CPP_LEAVE(0x53, FINALLY_0044);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0044;
	}

FINALLY_0044:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20217));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20227));
		Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20227));
		IL2CPP_END_FINALLY(68)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(68)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x53, IL_0053)
	}

IL_0053:
	{
		// return sum / Math.Max(1, count);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20218));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_0;
		int32_t L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20228));
		IL2CPP_RUNTIME_CLASS_INIT(Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var);
		int32_t L_12 = Math_Max_mA99E48BB021F2E4B62D4EA9F52EA6928EED618A2(1, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20228));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20229));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_10, (((float)((float)L_12))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20229));
		V_4 = L_13;
		goto IL_0065;
	}

IL_0065:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20219));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = V_4;
		return L_14;
	}
}
// Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersPose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	int32_t V_2 = 0;
	Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  V_3;
	memset((&V_3), 0, sizeof(V_3));
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_4;
	memset((&V_4), 0, sizeof(V_4));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_5;
	memset((&V_5), 0, sizeof(V_5));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_6;
	memset((&V_6), 0, sizeof(V_6));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20230));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20231));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20232));
		// Vector3 sumPos = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20233));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20249));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20249));
		V_0 = L_0;
		// Vector3 sumDir = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20234));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20250));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20250));
		V_1 = L_1;
		// int count = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20235));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20236));
		// foreach (var p in pointerIdToPointerMap.Values)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20237));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_2 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20251));
		NullCheck(L_2);
		ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * L_3 = Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6(L_2, /*hidden argument*/Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20251));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20252));
		NullCheck(L_3);
		Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  L_4 = ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7(L_3, /*hidden argument*/ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20252));
		V_3 = L_4;
	}

IL_0021:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20238));
			goto IL_0062;
		}

IL_0023:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20239));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20253));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_5 = Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_inline((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_3), /*hidden argument*/Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20253));
			V_4 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20240));
			// sumPos += p.pointer.Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20241));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_0;
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_7 = V_4;
			RuntimeObject* L_8 = L_7.get_pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20254));
			NullCheck(L_8);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_8);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20254));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20255));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_6, L_9, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20255));
			V_0 = L_10;
			// sumDir += p.pointer.Rotation * Vector3.forward;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20242));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_1;
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_12 = V_4;
			RuntimeObject* L_13 = L_12.get_pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20256));
			NullCheck(L_13);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_14 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_13);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20256));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20257));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20257));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20258));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_14, L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20258));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20259));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_11, L_16, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20259));
			V_1 = L_17;
			// count++;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20243));
			int32_t L_18 = V_2;
			V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_18, (int32_t)1));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20244));
		}

IL_0062:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20245));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20260));
			bool L_19 = Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_3), /*hidden argument*/Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20260));
			if (L_19)
			{
				goto IL_0023;
			}
		}

IL_006b:
		{
			IL2CPP_LEAVE(0x7C, FINALLY_006d);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_006d;
	}

FINALLY_006d:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20246));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20261));
		Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_3), /*hidden argument*/Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20261));
		IL2CPP_END_FINALLY(109)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(109)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x7C, IL_007c)
	}

IL_007c:
	{
		// return new MixedRealityPose
		// {
		//     Position = sumPos / Math.Max(1, count),
		//     Rotation = Quaternion.LookRotation(sumDir / Math.Max(1, count))
		// };
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20247));
		il2cpp_codegen_initobj((&V_5), sizeof(MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 ));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = V_0;
		int32_t L_21 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20262));
		IL2CPP_RUNTIME_CLASS_INIT(Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var);
		int32_t L_22 = Math_Max_mA99E48BB021F2E4B62D4EA9F52EA6928EED618A2(1, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20262));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20263));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_20, (((float)((float)L_22))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20263));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20264));
		MixedRealityPose_set_Position_m28EBD523337BC95684EFC016980F3862DE763759((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_5), L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20264));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = V_1;
		int32_t L_25 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20265));
		int32_t L_26 = Math_Max_mA99E48BB021F2E4B62D4EA9F52EA6928EED618A2(1, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20265));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20266));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_24, (((float)((float)L_26))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20266));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20267));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_28 = Quaternion_LookRotation_m465C08262650385D02ADDE78C9791AED47D2155F(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20267));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20268));
		MixedRealityPose_set_Rotation_m1AC620BE37B8F415170D725902EE1C3A92ECC19B((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_5), L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20268));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_29 = V_5;
		V_6 = L_29;
		goto IL_00bb;
	}

IL_00bb:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20248));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_30 = V_6;
		return L_30;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  V_2;
	memset((&V_2), 0, sizeof(V_2));
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20269));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20270));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20271));
		// Vector3 sum = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20272));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20290));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20290));
		V_0 = L_0;
		// int numControllers = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20273));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20274));
		// foreach (var p in pointerIdToPointerMap.Values)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20275));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_1 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20291));
		NullCheck(L_1);
		ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * L_2 = Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6(L_1, /*hidden argument*/Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20291));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20292));
		NullCheck(L_2);
		Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  L_3 = ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7(L_2, /*hidden argument*/ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20292));
		V_2 = L_3;
	}

IL_001b:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20276));
			goto IL_0058;
		}

IL_001d:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20277));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20293));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_4 = Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_inline((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20293));
			V_3 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20278));
			// if (p.pointer.Controller != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20279));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_5 = V_3;
			RuntimeObject* L_6 = L_5.get_pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20294));
			NullCheck(L_6);
			RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20294));
			V_4 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_7) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20280));
			bool L_8 = V_4;
			if (!L_8)
			{
				goto IL_0057;
			}
		}

IL_003a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20281));
			// numControllers++;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20282));
			int32_t L_9 = V_1;
			V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_9, (int32_t)1));
			// sum += p.pointer.Controller.Velocity;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20283));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_0;
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_11 = V_3;
			RuntimeObject* L_12 = L_11.get_pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20295));
			NullCheck(L_12);
			RuntimeObject* L_13 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_12);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20295));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20296));
			NullCheck(L_13);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(11 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_Velocity() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_13);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20296));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20297));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_10, L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20297));
			V_0 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20284));
		}

IL_0057:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20285));
		}

IL_0058:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20286));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20298));
			bool L_16 = Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20298));
			if (L_16)
			{
				goto IL_001d;
			}
		}

IL_0061:
		{
			IL2CPP_LEAVE(0x72, FINALLY_0063);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0063;
	}

FINALLY_0063:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20287));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20299));
		Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20299));
		IL2CPP_END_FINALLY(99)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(99)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x72, IL_0072)
	}

IL_0072:
	{
		// return sum / Math.Max(1, numControllers);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20288));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_0;
		int32_t L_18 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20300));
		IL2CPP_RUNTIME_CLASS_INIT(Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var);
		int32_t L_19 = Math_Max_mA99E48BB021F2E4B62D4EA9F52EA6928EED618A2(1, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20300));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20301));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_17, (((float)((float)L_19))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20301));
		V_5 = L_20;
		goto IL_0084;
	}

IL_0084:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20289));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_5;
		return L_21;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointersAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	int32_t V_1 = 0;
	Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  V_2;
	memset((&V_2), 0, sizeof(V_2));
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_5;
	memset((&V_5), 0, sizeof(V_5));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20302));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20303));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20304));
		// Vector3 sum = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20305));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20323));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20323));
		V_0 = L_0;
		// int numControllers = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20306));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20307));
		// foreach (var p in pointerIdToPointerMap.Values)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20308));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_1 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20324));
		NullCheck(L_1);
		ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * L_2 = Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6(L_1, /*hidden argument*/Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20324));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20325));
		NullCheck(L_2);
		Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7  L_3 = ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7(L_2, /*hidden argument*/ValueCollection_GetEnumerator_mF193DA1EAD2754BDAC541D1E0CAF7FC65921E5F7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20325));
		V_2 = L_3;
	}

IL_001b:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20309));
			goto IL_0058;
		}

IL_001d:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20310));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20326));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_4 = Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_inline((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20326));
			V_3 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20311));
			// if (p.pointer.Controller != null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20312));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_5 = V_3;
			RuntimeObject* L_6 = L_5.get_pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20327));
			NullCheck(L_6);
			RuntimeObject* L_7 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20327));
			V_4 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_7) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20313));
			bool L_8 = V_4;
			if (!L_8)
			{
				goto IL_0057;
			}
		}

IL_003a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20314));
			// numControllers++;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20315));
			int32_t L_9 = V_1;
			V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_9, (int32_t)1));
			// sum += p.pointer.Controller.AngularVelocity;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20316));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_0;
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_11 = V_3;
			RuntimeObject* L_12 = L_11.get_pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20328));
			NullCheck(L_12);
			RuntimeObject* L_13 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_12);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20328));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20329));
			NullCheck(L_13);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(10 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_AngularVelocity() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, L_13);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20329));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20330));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_10, L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20330));
			V_0 = L_15;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20317));
		}

IL_0057:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20318));
		}

IL_0058:
		{
			// foreach (var p in pointerIdToPointerMap.Values)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20319));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20331));
			bool L_16 = Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_MoveNext_m530E81B213B59D07589463899A12282FB05BDB69_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20331));
			if (L_16)
			{
				goto IL_001d;
			}
		}

IL_0061:
		{
			IL2CPP_LEAVE(0x72, FINALLY_0063);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0063;
	}

FINALLY_0063:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20320));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20332));
		Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9((Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 *)(&V_2), /*hidden argument*/Enumerator_Dispose_m8015834E8F32D9F46ECFBC7A14264D2190A342B9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20332));
		IL2CPP_END_FINALLY(99)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(99)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x72, IL_0072)
	}

IL_0072:
	{
		// return sum / Math.Max(1, numControllers);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20321));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_0;
		int32_t L_18 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20333));
		IL2CPP_RUNTIME_CLASS_INIT(Math_tFB388E53C7FDC6FCCF9A19ABF5A4E521FBD52E19_il2cpp_TypeInfo_var);
		int32_t L_19 = Math_Max_mA99E48BB021F2E4B62D4EA9F52EA6928EED618A2(1, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20333));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20334));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = Vector3_op_Division_mDF34F1CC445981B4D1137765BC6277419E561624(L_17, (((float)((float)L_19))), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20334));
		V_5 = L_20;
		goto IL_0084;
	}

IL_0084:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20322));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_5;
		return L_21;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::IsNearManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1  V_0;
	memset((&V_0), 0, sizeof(V_0));
	KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  V_1;
	memset((&V_1), 0, sizeof(V_1));
	bool V_2 = false;
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20335));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20336));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 2);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20337));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20338));
		// foreach (var item in pointerIdToPointerMap)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20339));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_0 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20352));
		NullCheck(L_0);
		Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1  L_1 = Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8(L_0, /*hidden argument*/Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20352));
		V_0 = L_1;
	}

IL_000e:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20340));
			goto IL_0033;
		}

IL_0010:
		{
			// foreach (var item in pointerIdToPointerMap)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20341));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20353));
			KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  L_2 = Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_inline((Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *)(&V_0), /*hidden argument*/Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20353));
			V_1 = L_2;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20342));
			// if (item.Value.IsNearPointer)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20343));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20354));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_3 = KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_inline((KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 *)(&V_1), /*hidden argument*/KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20354));
			V_3 = L_3;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20355));
			bool L_4 = PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA((PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F *)(&V_3), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20355));
			V_2 = L_4;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20344));
			bool L_5 = V_2;
			if (!L_5)
			{
				goto IL_0032;
			}
		}

IL_002c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20345));
			// return true;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20346));
			V_4 = (bool)1;
			IL2CPP_LEAVE(0x52, FINALLY_003e);
		}

IL_0032:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20347));
		}

IL_0033:
		{
			// foreach (var item in pointerIdToPointerMap)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20348));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20356));
			bool L_6 = Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18((Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *)(&V_0), /*hidden argument*/Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20356));
			if (L_6)
			{
				goto IL_0010;
			}
		}

IL_003c:
		{
			IL2CPP_LEAVE(0x4D, FINALLY_003e);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_003e;
	}

FINALLY_003e:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20349));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20357));
		Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316((Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *)(&V_0), /*hidden argument*/Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20357));
		IL2CPP_END_FINALLY(62)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(62)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x52, IL_0052)
		IL2CPP_JUMP_TBL(0x4D, IL_004d)
	}

IL_004d:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20350));
		V_4 = (bool)0;
		goto IL_0052;
	}

IL_0052:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20351));
		bool L_7 = V_4;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::ForceEndManipulation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_ForceEndManipulation_mB0E5E3E064F57364D7A3BD878DE5D3F437BC9974 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_ForceEndManipulation_mB0E5E3E064F57364D7A3BD878DE5D3F437BC9974_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_ForceEndManipulation_mB0E5E3E064F57364D7A3BD878DE5D3F437BC9974_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20358));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20359));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20360));
		// if (isManipulationStarted)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20361));
		bool L_0 = __this->get_isManipulationStarted_32();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20362));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0026;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20363));
		// HandleManipulationEnded(GetPointersGrabPoint(), GetPointersVelocity(), GetPointersAngularVelocity());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20364));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20368));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20368));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20369));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20369));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20370));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20370));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20371));
		ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D(__this, L_2, L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20371));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20365));
	}

IL_0026:
	{
		// pointerIdToPointerMap.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20366));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_5 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20372));
		NullCheck(L_5);
		Dictionary_2_Clear_m84CB183AE77233CC31FF3B7B79C667B2BF6F302A(L_5, /*hidden argument*/Dictionary_2_Clear_m84CB183AE77233CC31FF3B7B79C667B2BF6F302A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20372));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20367));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetPointerGrabPoint(System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ObjectManipulator_GetPointerGrabPoint_mF9D06F61012B20CC8A61DC9FB9CC025E5836A1BA (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, uint32_t ___pointerId0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_GetPointerGrabPoint_mF9D06F61012B20CC8A61DC9FB9CC025E5836A1BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerId0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_GetPointerGrabPoint_mF9D06F61012B20CC8A61DC9FB9CC025E5836A1BA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20373));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20374));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20375));
		// Assert.IsTrue(pointerIdToPointerMap.ContainsKey(pointerId));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20376));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_0 = __this->get_pointerIdToPointerMap_29();
		uint32_t L_1 = ___pointerId0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20379));
		NullCheck(L_0);
		bool L_2 = Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D(L_0, L_1, /*hidden argument*/Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20379));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20380));
		IL2CPP_RUNTIME_CLASS_INIT(Assert_t124AD7D2277A352FA54D1E6AAF8AFD5992FD39EC_il2cpp_TypeInfo_var);
		Assert_IsTrue_mCD75233AD54148E7E430C58D180145ACEF22E9E7(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20380));
		// return pointerIdToPointerMap[pointerId].GrabPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20377));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_3 = __this->get_pointerIdToPointerMap_29();
		uint32_t L_4 = ___pointerId0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20381));
		NullCheck(L_3);
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_5 = Dictionary_2_get_Item_mFBE56D7101B648C2AD5C76E33DBE4E1DF9D97875(L_3, L_4, /*hidden argument*/Dictionary_2_get_Item_mFBE56D7101B648C2AD5C76E33DBE4E1DF9D97875_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20381));
		V_0 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20382));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E((PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20382));
		V_1 = L_6;
		goto IL_002a;
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20378));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_1;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnPointerDown_m622518952E73070FC22E3B71AED84931B4EF4AB7 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnPointerDown_m622518952E73070FC22E3B71AED84931B4EF4AB7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	uint32_t V_2 = 0;
	bool V_3 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnPointerDown_m622518952E73070FC22E3B71AED84931B4EF4AB7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20383));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20384));
	int32_t G_B4_0 = 0;
	int32_t G_B6_0 = 0;
	int32_t G_B11_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20385));
		// if (eventData.used ||
		//         (!allowFarManipulation && eventData.Pointer as IMixedRealityNearPointer == null))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20386));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20431));
		NullCheck(L_0);
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20431));
		if (L_1)
		{
			goto IL_0024;
		}
	}
	{
		bool L_2 = __this->get_allowFarManipulation_7();
		if (L_2)
		{
			goto IL_0021;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_3 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20432));
		NullCheck(L_3);
		RuntimeObject* L_4 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20432));
		G_B4_0 = ((((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_4, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var))) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		goto IL_0022;
	}

IL_0021:
	{
		G_B4_0 = 0;
	}

IL_0022:
	{
		G_B6_0 = G_B4_0;
		goto IL_0025;
	}

IL_0024:
	{
		G_B6_0 = 1;
	}

IL_0025:
	{
		V_0 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20387));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20388));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20389));
		goto IL_0145;
	}

IL_002f:
	{
		// if (manipulationType != ManipulationHandFlags.OneHanded || pointerIdToPointerMap.Count == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20390));
		int32_t L_6 = __this->get_manipulationType_5();
		if ((!(((uint32_t)L_6) == ((uint32_t)1))))
		{
			goto IL_0048;
		}
	}
	{
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_7 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20433));
		NullCheck(L_7);
		int32_t L_8 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_7, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20433));
		G_B11_0 = ((((int32_t)L_8) == ((int32_t)0))? 1 : 0);
		goto IL_0049;
	}

IL_0048:
	{
		G_B11_0 = 1;
	}

IL_0049:
	{
		V_1 = (bool)G_B11_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20391));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_0128;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20392));
		// uint id = eventData.Pointer.PointerId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20393));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_10 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20434));
		NullCheck(L_10);
		RuntimeObject* L_11 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20434));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20435));
		NullCheck(L_11);
		uint32_t L_12 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20435));
		V_2 = L_12;
		// if (!pointerIdToPointerMap.ContainsKey(id))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20394));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_13 = __this->get_pointerIdToPointerMap_29();
		uint32_t L_14 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20436));
		NullCheck(L_13);
		bool L_15 = Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D(L_13, L_14, /*hidden argument*/Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20436));
		V_3 = (bool)((((int32_t)L_15) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20395));
		bool L_16 = V_3;
		if (!L_16)
		{
			goto IL_0127;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20396));
		// pointerIdToPointerMap.Add(id, new PointerData(eventData.Pointer, eventData.Pointer.Result.Details.Point));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20397));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_17 = __this->get_pointerIdToPointerMap_29();
		uint32_t L_18 = V_2;
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_19 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20437));
		NullCheck(L_19);
		RuntimeObject* L_20 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20437));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_21 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20438));
		NullCheck(L_21);
		RuntimeObject* L_22 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20438));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20439));
		NullCheck(L_22);
		RuntimeObject* L_23 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Result() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20439));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20440));
		NullCheck(L_23);
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_24 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_23);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20440));
		V_4 = L_24;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20441));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20441));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20442));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_26;
		memset((&L_26), 0, sizeof(L_26));
		PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009((&L_26), L_20, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20442));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20443));
		NullCheck(L_17);
		Dictionary_2_Add_m480AE7AA5182821F55308BC4A8D1E80C674D0434(L_17, L_18, L_26, /*hidden argument*/Dictionary_2_Add_m480AE7AA5182821F55308BC4A8D1E80C674D0434_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20443));
		// if (elasticsManager)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20398));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_27 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20444));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_28 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20444));
		V_5 = L_28;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20399));
		bool L_29 = V_5;
		if (!L_29)
		{
			goto IL_00ca;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20400));
		// elasticsManager.InitializeElastics(HostTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20401));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_30 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20445));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20445));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20446));
		NullCheck(L_30);
		ElasticsManager_InitializeElastics_m1F2102BE2AF0AEEDD08ED0FAD49468C26D04E8A8(L_30, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20446));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20402));
	}

IL_00ca:
	{
		// if (IsTwoHandedManipulationEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20403));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20447));
		bool L_32 = ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20447));
		V_6 = L_32;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20404));
		bool L_33 = V_6;
		if (!L_33)
		{
			goto IL_00f9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20405));
		// if (!isManipulationStarted)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20406));
		bool L_34 = __this->get_isManipulationStarted_32();
		V_7 = (bool)((((int32_t)L_34) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20407));
		bool L_35 = V_7;
		if (!L_35)
		{
			goto IL_00ef;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20408));
		// HandleManipulationStarted();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20409));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20448));
		ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20448));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20410));
	}

IL_00ef:
	{
		// HandleTwoHandManipulationStarted();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20411));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20449));
		ObjectManipulator_HandleTwoHandManipulationStarted_mA35767E1B86018C080646E74E48E314D8FF142C2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20449));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20412));
		goto IL_0126;
	}

IL_00f9:
	{
		// else if (IsOneHandedManipulationEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20413));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20450));
		bool L_36 = ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20450));
		V_8 = L_36;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20414));
		bool L_37 = V_8;
		if (!L_37)
		{
			goto IL_0126;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20415));
		// if (!isManipulationStarted)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20416));
		bool L_38 = __this->get_isManipulationStarted_32();
		V_9 = (bool)((((int32_t)L_38) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20417));
		bool L_39 = V_9;
		if (!L_39)
		{
			goto IL_011e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20418));
		// HandleManipulationStarted();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20419));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20451));
		ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20451));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20420));
	}

IL_011e:
	{
		// HandleOneHandMoveStarted();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20421));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20452));
		ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20452));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20422));
	}

IL_0126:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20423));
	}

IL_0127:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20424));
	}

IL_0128:
	{
		// if (pointerIdToPointerMap.Count > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20425));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_40 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20453));
		NullCheck(L_40);
		int32_t L_41 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_40, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20453));
		V_10 = (bool)((((int32_t)L_41) > ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20426));
		bool L_42 = V_10;
		if (!L_42)
		{
			goto IL_0145;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20427));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20428));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_43 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20454));
		NullCheck(L_43);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_43);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20454));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20429));
	}

IL_0145:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20430));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnPointerDragged_m6FDD81888D79E78046EDA3FB19FB27A4A5356B79 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnPointerDragged_m6FDD81888D79E78046EDA3FB19FB27A4A5356B79_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnPointerDragged_m6FDD81888D79E78046EDA3FB19FB27A4A5356B79_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20455));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20456));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20457));
		// if (IsOneHandedManipulationEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20458));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20469));
		bool L_0 = ObjectManipulator_get_IsOneHandedManipulationEnabled_mC86E191681005C0E78C7102246E801CE9DD783AF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20469));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20459));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20460));
		// HandleOneHandMoveUpdated();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20461));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20470));
		ObjectManipulator_HandleOneHandMoveUpdated_m453177B65388DD02BDBE00161EE5CA3C50A4B68B(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20470));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20462));
		goto IL_0029;
	}

IL_0016:
	{
		// else if (IsTwoHandedManipulationEnabled)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20463));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20471));
		bool L_2 = ObjectManipulator_get_IsTwoHandedManipulationEnabled_m2C9DEFFB4D3ACE3A18E7916A117476393FE114AB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20471));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20464));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20465));
		// HandleTwoHandManipulationUpdated();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20466));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20472));
		ObjectManipulator_HandleTwoHandManipulationUpdated_m0E67F096C31B8526903359F6C61B66AEA70CE960(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20472));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20467));
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20468));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnPointerUp_m502682BA04082F1FF6FF7F6D7C6E48808294CCFE (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnPointerUp_m502682BA04082F1FF6FF7F6D7C6E48808294CCFE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	uint32_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnPointerUp_m502682BA04082F1FF6FF7F6D7C6E48808294CCFE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20473));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20474));
	int32_t G_B5_0 = 0;
	int32_t G_B13_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20475));
		// Vector3 grabPoint = GetPointersGrabPoint();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20476));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20505));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20505));
		V_0 = L_0;
		// Vector3 velocity = GetPointersVelocity();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20477));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20506));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20506));
		V_1 = L_1;
		// Vector3 angularVelocity = GetPointersAngularVelocity();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20478));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20507));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20507));
		V_2 = L_2;
		// uint id = eventData.Pointer.PointerId;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20479));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_3 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20508));
		NullCheck(L_3);
		RuntimeObject* L_4 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20508));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20509));
		NullCheck(L_4);
		uint32_t L_5 = InterfaceFuncInvoker0< uint32_t >::Invoke(2 /* System.UInt32 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_PointerId() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20509));
		V_3 = L_5;
		// if (pointerIdToPointerMap.ContainsKey(id))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20480));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_6 = __this->get_pointerIdToPointerMap_29();
		uint32_t L_7 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20510));
		NullCheck(L_6);
		bool L_8 = Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D(L_6, L_7, /*hidden argument*/Dictionary_2_ContainsKey_m292E365FE11553BA4F385DD2D2B5C44030F2E30D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20510));
		V_5 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20481));
		bool L_9 = V_5;
		if (!L_9)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20482));
		// pointerIdToPointerMap.Remove(id);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20483));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_10 = __this->get_pointerIdToPointerMap_29();
		uint32_t L_11 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20511));
		NullCheck(L_10);
		Dictionary_2_Remove_mA9A238AFB8FB365E35C5B8F80D49CBE7B157A26C(L_10, L_11, /*hidden argument*/Dictionary_2_Remove_mA9A238AFB8FB365E35C5B8F80D49CBE7B157A26C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20511));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20484));
	}

IL_0043:
	{
		// var handsPressedCount = pointerIdToPointerMap.Count;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20485));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_12 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20512));
		NullCheck(L_12);
		int32_t L_13 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_12, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20512));
		V_4 = L_13;
		// if (manipulationType.IsMaskSet(ManipulationHandFlags.TwoHanded) && handsPressedCount == 1)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20486));
		int32_t L_14 = __this->get_manipulationType_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20513));
		bool L_15 = ManipulationHandFlagsExtensions_IsMaskSet_m8ECD5477BBB998BAE072400889C29BAB78469306(L_14, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20513));
		if (!L_15)
		{
			goto IL_0065;
		}
	}
	{
		int32_t L_16 = V_4;
		G_B5_0 = ((((int32_t)L_16) == ((int32_t)1))? 1 : 0);
		goto IL_0066;
	}

IL_0065:
	{
		G_B5_0 = 0;
	}

IL_0066:
	{
		V_6 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20487));
		bool L_17 = V_6;
		if (!L_17)
		{
			goto IL_0099;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20488));
		// if (manipulationType.IsMaskSet(ManipulationHandFlags.OneHanded))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20489));
		int32_t L_18 = __this->get_manipulationType_5();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20514));
		bool L_19 = ManipulationHandFlagsExtensions_IsMaskSet_m8ECD5477BBB998BAE072400889C29BAB78469306(L_18, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20514));
		V_7 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20490));
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_008a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20491));
		// HandleOneHandMoveStarted();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20492));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20515));
		ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20515));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20493));
		goto IL_0096;
	}

IL_008a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20494));
		// HandleManipulationEnded(grabPoint, velocity, angularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20495));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_21 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = V_1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20516));
		ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D(__this, L_21, L_22, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20516));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20496));
	}

IL_0096:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20497));
		goto IL_00bb;
	}

IL_0099:
	{
		// else if (isManipulationStarted && handsPressedCount == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20498));
		bool L_24 = __this->get_isManipulationStarted_32();
		if (!L_24)
		{
			goto IL_00a8;
		}
	}
	{
		int32_t L_25 = V_4;
		G_B13_0 = ((((int32_t)L_25) == ((int32_t)0))? 1 : 0);
		goto IL_00a9;
	}

IL_00a8:
	{
		G_B13_0 = 0;
	}

IL_00a9:
	{
		V_8 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20499));
		bool L_26 = V_8;
		if (!L_26)
		{
			goto IL_00bb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20500));
		// HandleManipulationEnded(grabPoint, velocity, angularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20501));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_27 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = V_1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_29 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20517));
		ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D(__this, L_27, L_28, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20517));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20502));
	}

IL_00bb:
	{
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20503));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_30 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20518));
		NullCheck(L_30);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20518));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20504));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleTwoHandManipulationStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleTwoHandManipulationStarted_mA35767E1B86018C080646E74E48E314D8FF142C2 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_HandleTwoHandManipulationStarted_mA35767E1B86018C080646E74E48E314D8FF142C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_3;
	memset((&V_3), 0, sizeof(V_3));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_4;
	memset((&V_4), 0, sizeof(V_4));
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_HandleTwoHandManipulationStarted_mA35767E1B86018C080646E74E48E314D8FF142C2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20519));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20520));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  G_B6_0;
	memset((&G_B6_0), 0, sizeof(G_B6_0));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20521));
		// var handPositionArray = GetHandPositionArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20522));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20541));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20541));
		V_0 = L_0;
		// if (twoHandedManipulationType.IsMaskSet(TransformFlags.Rotate))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20523));
		int32_t L_1 = __this->get_twoHandedManipulationType_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20542));
		bool L_2 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_1, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20542));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20524));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_002d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20525));
		// rotateLogic.Setup(handPositionArray, HostTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20526));
		TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * L_4 = __this->get_rotateLogic_27();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_5 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20543));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20543));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20544));
		NullCheck(L_4);
		TwoHandRotateLogic_Setup_m29B7966E449713FC6279A588174F57917B06C944(L_4, L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20544));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20527));
	}

IL_002d:
	{
		// if (twoHandedManipulationType.IsMaskSet(TransformFlags.Move))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20528));
		int32_t L_7 = __this->get_twoHandedManipulationType_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20545));
		bool L_8 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_7, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20545));
		V_2 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20529));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_0098;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20530));
		// MixedRealityPose pointerPose = IsNearManipulation() ? new MixedRealityPose(GetPointersGrabPoint()) : GetPointersPose();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20531));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20546));
		bool L_10 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20546));
		if (L_10)
		{
			goto IL_004e;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20547));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_11 = ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20547));
		G_B6_0 = L_11;
		goto IL_0059;
	}

IL_004e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20548));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20548));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20549));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_13;
		memset((&L_13), 0, sizeof(L_13));
		MixedRealityPose__ctor_m10B17074E6638D44CA824E8942AF3CF9564CA51E((&L_13), L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20549));
		G_B6_0 = L_13;
	}

IL_0059:
	{
		V_3 = G_B6_0;
		// MixedRealityPose hostPose = new MixedRealityPose(HostTransform.position, HostTransform.rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20532));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20550));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20550));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20551));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20551));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20552));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_16 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20552));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20553));
		NullCheck(L_16);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_17 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20553));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20554));
		MixedRealityPose__ctor_m139F7F8104CAB889E5AE6A14090A9764E39DFCAC((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_4), L_15, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20554));
		// moveLogic.Setup(pointerPose, GetPointersGrabPoint(), hostPose, HostTransform.localScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20533));
		ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * L_18 = __this->get_moveLogic_25();
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_19 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20555));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20555));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_21 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20556));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_22 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20556));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20557));
		NullCheck(L_22);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20557));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20558));
		NullCheck(L_18);
		ManipulationMoveLogic_Setup_m2537AE07CEA78C23AAD50CC1266A6D6FA4D1D96A(L_18, L_19, L_20, L_21, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20558));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20534));
	}

IL_0098:
	{
		// if (twoHandedManipulationType.IsMaskSet(TransformFlags.Scale))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20535));
		int32_t L_24 = __this->get_twoHandedManipulationType_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20559));
		bool L_25 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_24, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20559));
		V_5 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20536));
		bool L_26 = V_5;
		if (!L_26)
		{
			goto IL_00bf;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20537));
		// scaleLogic.Setup(handPositionArray, HostTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20538));
		TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 * L_27 = __this->get_scaleLogic_26();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_28 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20560));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_29 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20560));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20561));
		NullCheck(L_27);
		VirtActionInvoker2< Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * >::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic::Setup(UnityEngine.Vector3[],UnityEngine.Transform) */, L_27, L_28, L_29);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20561));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20539));
	}

IL_00bf:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20540));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleTwoHandManipulationUpdated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleTwoHandManipulationUpdated_m0E67F096C31B8526903359F6C61B66AEA70CE960 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_HandleTwoHandManipulationUpdated_m0E67F096C31B8526903359F6C61B66AEA70CE960_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_1 = NULL;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_7));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_HandleTwoHandManipulationUpdated_m0E67F096C31B8526903359F6C61B66AEA70CE960_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20562));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20563));
	int32_t G_B4_0 = 0;
	int32_t G_B11_0 = 0;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  G_B18_0;
	memset((&G_B18_0), 0, sizeof(G_B18_0));
	int32_t G_B21_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20564));
		// var targetTransform = new MixedRealityTransform(HostTransform.position, HostTransform.rotation, HostTransform.localScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20565));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20600));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20600));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20601));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20601));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20602));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20602));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20603));
		NullCheck(L_2);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20603));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20604));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20604));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20605));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20605));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20606));
		MixedRealityTransform__ctor_mF2050C567E426461B08F3836E0C02766F0143C9C((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), L_1, L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20606));
		// var handPositionArray = GetHandPositionArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20566));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20607));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20607));
		V_1 = L_6;
		// if (twoHandedManipulationType.IsMaskSet(TransformFlags.Scale))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20567));
		int32_t L_7 = __this->get_twoHandedManipulationType_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20608));
		bool L_8 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_7, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20608));
		V_2 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20568));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_0088;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20569));
		// targetTransform.Scale = scaleLogic.UpdateMap(handPositionArray);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20570));
		TwoHandScaleLogic_t6000F159F27338C26C2BB561D5F942CB4829E172 * L_10 = __this->get_scaleLogic_26();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20609));
		NullCheck(L_10);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = VirtFuncInvoker1< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* >::Invoke(5 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Physics.TwoHandScaleLogic::UpdateMap(UnityEngine.Vector3[]) */, L_10, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20609));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20610));
		MixedRealityTransform_set_Scale_mB61F9517606A3C0865BB858E45F125AA48C8A437((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20610));
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20571));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20611));
		bool L_13 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20611));
		if (!L_13)
		{
			goto IL_006b;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_14 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20612));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_15 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_14, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20612));
		G_B4_0 = ((int32_t)(L_15));
		goto IL_006c;
	}

IL_006b:
	{
		G_B4_0 = 0;
	}

IL_006c:
	{
		V_3 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20572));
		bool L_16 = V_3;
		if (!L_16)
		{
			goto IL_0087;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20573));
		// constraintsManager.ApplyScaleConstraints(ref targetTransform, false, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20574));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_17 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20613));
		bool L_18 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20613));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20614));
		NullCheck(L_17);
		ConstraintManager_ApplyScaleConstraints_m55C4DE269179C5500CC4C8AC95E06066749BFD6F(L_17, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), (bool)0, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20614));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20575));
	}

IL_0087:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20576));
	}

IL_0088:
	{
		// if (twoHandedManipulationType.IsMaskSet(TransformFlags.Rotate))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20577));
		int32_t L_19 = __this->get_twoHandedManipulationType_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20615));
		bool L_20 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_19, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20615));
		V_4 = L_20;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20578));
		bool L_21 = V_4;
		if (!L_21)
		{
			goto IL_00eb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20579));
		// targetTransform.Rotation = rotateLogic.Update(handPositionArray, targetTransform.Rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20580));
		TwoHandRotateLogic_t18A44EA1FE5CBFB140FD38C5C786B71D651397E2 * L_22 = __this->get_rotateLogic_27();
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_23 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20616));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_24 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20616));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20617));
		NullCheck(L_22);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_25 = TwoHandRotateLogic_Update_mDB5CF8A924BFA05466C6A3D0C6850C414B69CDAF(L_22, L_23, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20617));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20618));
		MixedRealityTransform_set_Rotation_mAA5BE9EB4534021266162D5E5BDA9A88722E58A7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20618));
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20581));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20619));
		bool L_26 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20619));
		if (!L_26)
		{
			goto IL_00cc;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_27 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20620));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_28 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_27, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20620));
		G_B11_0 = ((int32_t)(L_28));
		goto IL_00cd;
	}

IL_00cc:
	{
		G_B11_0 = 0;
	}

IL_00cd:
	{
		V_5 = (bool)G_B11_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20582));
		bool L_29 = V_5;
		if (!L_29)
		{
			goto IL_00ea;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20583));
		// constraintsManager.ApplyRotationConstraints(ref targetTransform, false, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20584));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_30 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20621));
		bool L_31 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20621));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20622));
		NullCheck(L_30);
		ConstraintManager_ApplyRotationConstraints_mF00DF9ADCBCA35FFEC4317E59D3346BD1C7646BE(L_30, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), (bool)0, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20622));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20585));
	}

IL_00ea:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20586));
	}

IL_00eb:
	{
		// if (twoHandedManipulationType.IsMaskSet(TransformFlags.Move))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20587));
		int32_t L_32 = __this->get_twoHandedManipulationType_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20623));
		bool L_33 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_32, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20623));
		V_6 = L_33;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20588));
		bool L_34 = V_6;
		if (!L_34)
		{
			goto IL_016d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20589));
		// MixedRealityPose pose = IsNearManipulation() ? new MixedRealityPose(GetPointersGrabPoint()) : GetPointersPose();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20590));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20624));
		bool L_35 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20624));
		if (L_35)
		{
			goto IL_010e;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20625));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_36 = ObjectManipulator_GetPointersPose_mC6B09F1E5A89CFF95017FF628F00AEA8FEEED4E5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20625));
		G_B18_0 = L_36;
		goto IL_0119;
	}

IL_010e:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20626));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_37 = ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20626));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20627));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_38;
		memset((&L_38), 0, sizeof(L_38));
		MixedRealityPose__ctor_m10B17074E6638D44CA824E8942AF3CF9564CA51E((&L_38), L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20627));
		G_B18_0 = L_38;
	}

IL_0119:
	{
		V_7 = G_B18_0;
		// targetTransform.Position = moveLogic.UpdateTransform(pose, targetTransform, true, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20591));
		ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * L_39 = __this->get_moveLogic_25();
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_40 = V_7;
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_41 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20628));
		bool L_42 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20628));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20629));
		NullCheck(L_39);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_43 = ManipulationMoveLogic_UpdateTransform_m11437EA43CDFF58C221916A86F70D8D1868AFABF(L_39, L_40, L_41, (bool)1, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20629));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20630));
		MixedRealityTransform_set_Position_m132CCC9279F03B590B6FD8AA94C807A93BFC52AD((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20630));
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20592));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20631));
		bool L_44 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20631));
		if (!L_44)
		{
			goto IL_014e;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_45 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20632));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_46 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_45, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20632));
		G_B21_0 = ((int32_t)(L_46));
		goto IL_014f;
	}

IL_014e:
	{
		G_B21_0 = 0;
	}

IL_014f:
	{
		V_8 = (bool)G_B21_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20593));
		bool L_47 = V_8;
		if (!L_47)
		{
			goto IL_016c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20594));
		// constraintsManager.ApplyTranslationConstraints(ref targetTransform, false, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20595));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_48 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20633));
		bool L_49 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20633));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20634));
		NullCheck(L_48);
		ConstraintManager_ApplyTranslationConstraints_mE33C3FEFE7E6C67D1F451EB9208E118328F8EB69(L_48, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_0), (bool)0, L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20634));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20596));
	}

IL_016c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20597));
	}

IL_016d:
	{
		// ApplyTargetTransform(targetTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20598));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_50 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20635));
		ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093(__this, L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20635));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20599));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleOneHandMoveStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	RuntimeObject* V_1 = NULL;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_3;
	memset((&V_3), 0, sizeof(V_3));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_4;
	memset((&V_4), 0, sizeof(V_4));
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_5;
	memset((&V_5), 0, sizeof(V_5));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_HandleOneHandMoveStarted_m5820BA9D3249B05031BF0F10A53DD7DB00EED146_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20636));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20637));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20638));
		// Assert.IsTrue(pointerIdToPointerMap.Count == 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20639));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_0 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20649));
		NullCheck(L_0);
		int32_t L_1 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_0, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20649));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20650));
		IL2CPP_RUNTIME_CLASS_INIT(Assert_t124AD7D2277A352FA54D1E6AAF8AFD5992FD39EC_il2cpp_TypeInfo_var);
		Assert_IsTrue_mCD75233AD54148E7E430C58D180145ACEF22E9E7((bool)((((int32_t)L_1) == ((int32_t)1))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20650));
		// PointerData pointerData = GetFirstPointer();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20640));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20651));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_2 = ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20651));
		V_0 = L_2;
		// IMixedRealityPointer pointer = pointerData.pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20641));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_3 = V_0;
		RuntimeObject* L_4 = L_3.get_pointer_0();
		V_1 = L_4;
		// TryGetGripRotation(pointer, out Quaternion gripRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20642));
		RuntimeObject* L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20652));
		ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA(__this, L_5, (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20652));
		// Quaternion worldToGripRotation = Quaternion.Inverse(gripRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20643));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20653));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_7 = Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20653));
		V_3 = L_7;
		// objectToGripRotation = worldToGripRotation * HostTransform.rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20644));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_8 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20654));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20654));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20655));
		NullCheck(L_9);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_10 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20655));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20656));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_11 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_8, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20656));
		__this->set_objectToGripRotation_30(L_11);
		// MixedRealityPose pointerPose = new MixedRealityPose(pointer.Position, pointer.Rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20645));
		RuntimeObject* L_12 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20657));
		NullCheck(L_12);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20657));
		RuntimeObject* L_14 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20658));
		NullCheck(L_14);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_15 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20658));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20659));
		MixedRealityPose__ctor_m139F7F8104CAB889E5AE6A14090A9764E39DFCAC((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_4), L_13, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20659));
		// MixedRealityPose hostPose = new MixedRealityPose(HostTransform.position, HostTransform.rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20646));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20660));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_16 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20660));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20661));
		NullCheck(L_16);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20661));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20662));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20662));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20663));
		NullCheck(L_18);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_19 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20663));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20664));
		MixedRealityPose__ctor_m139F7F8104CAB889E5AE6A14090A9764E39DFCAC((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_5), L_17, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20664));
		// moveLogic.Setup(pointerPose, pointerData.GrabPoint, hostPose, HostTransform.localScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20647));
		ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * L_20 = __this->get_moveLogic_25();
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_21 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20665));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E((PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20665));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_23 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20666));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_24 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20666));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20667));
		NullCheck(L_24);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_25 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20668));
		NullCheck(L_20);
		ManipulationMoveLogic_Setup_m2537AE07CEA78C23AAD50CC1266A6D6FA4D1D96A(L_20, L_21, L_22, L_23, L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20668));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20648));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleOneHandMoveUpdated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleOneHandMoveUpdated_m453177B65388DD02BDBE00161EE5CA3C50A4B68B (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_HandleOneHandMoveUpdated_m453177B65388DD02BDBE00161EE5CA3C50A4B68B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	RuntimeObject* V_1 = NULL;
	MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_3;
	memset((&V_3), 0, sizeof(V_3));
	int32_t V_4 = 0;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_HandleOneHandMoveUpdated_m453177B65388DD02BDBE00161EE5CA3C50A4B68B_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20669));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20670));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B16_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20671));
		// Debug.Assert(pointerIdToPointerMap.Count == 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20672));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_0 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20698));
		NullCheck(L_0);
		int32_t L_1 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_0, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20698));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20699));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_Assert_m0283DD85C5E5F5029793C17A335DB16BC307E62E((bool)((((int32_t)L_1) == ((int32_t)1))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20699));
		// PointerData pointerData = GetFirstPointer();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20673));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20700));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_2 = ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20700));
		V_0 = L_2;
		// IMixedRealityPointer pointer = pointerData.pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20674));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_3 = V_0;
		RuntimeObject* L_4 = L_3.get_pointer_0();
		V_1 = L_4;
		// var targetTransform = new MixedRealityTransform(HostTransform.position, HostTransform.rotation, HostTransform.localScale);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20675));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20701));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20701));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20702));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20702));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20703));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20703));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20704));
		NullCheck(L_7);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_8 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20704));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20705));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20705));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20706));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20706));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20707));
		MixedRealityTransform__ctor_mF2050C567E426461B08F3836E0C02766F0143C9C((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_2), L_6, L_8, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20707));
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20676));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20708));
		bool L_11 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20708));
		if (!L_11)
		{
			goto IL_0061;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_12 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20709));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_13 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_12, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20709));
		G_B3_0 = ((int32_t)(L_13));
		goto IL_0062;
	}

IL_0061:
	{
		G_B3_0 = 0;
	}

IL_0062:
	{
		V_6 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20677));
		bool L_14 = V_6;
		if (!L_14)
		{
			goto IL_007f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20678));
		// constraintsManager.ApplyScaleConstraints(ref targetTransform, true, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20679));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_15 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20710));
		bool L_16 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20710));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20711));
		NullCheck(L_15);
		ConstraintManager_ApplyScaleConstraints_m55C4DE269179C5500CC4C8AC95E06066749BFD6F(L_15, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_2), (bool)1, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20711));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20680));
	}

IL_007f:
	{
		// TryGetGripRotation(pointer, out gripRotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20681));
		RuntimeObject* L_17 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20712));
		ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA(__this, L_17, (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20712));
		// targetTransform.Rotation = gripRotation * objectToGripRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20682));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_18 = V_3;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_19 = __this->get_objectToGripRotation_30();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20713));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_20 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20713));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20714));
		MixedRealityTransform_set_Rotation_mAA5BE9EB4534021266162D5E5BDA9A88722E58A7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_2), L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20714));
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20683));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20715));
		bool L_21 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20715));
		if (!L_21)
		{
			goto IL_00b3;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_22 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20716));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_23 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_22, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20716));
		G_B8_0 = ((int32_t)(L_23));
		goto IL_00b4;
	}

IL_00b3:
	{
		G_B8_0 = 0;
	}

IL_00b4:
	{
		V_7 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20684));
		bool L_24 = V_7;
		if (!L_24)
		{
			goto IL_00d1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20685));
		// constraintsManager.ApplyRotationConstraints(ref targetTransform, true, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20686));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_25 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20717));
		bool L_26 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20717));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20718));
		NullCheck(L_25);
		ConstraintManager_ApplyRotationConstraints_mF00DF9ADCBCA35FFEC4317E59D3346BD1C7646BE(L_25, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_2), (bool)1, L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20718));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20687));
	}

IL_00d1:
	{
		// RotateInOneHandType rotateInOneHandType = isNearManipulation ? oneHandRotationModeNear : oneHandRotationModeFar;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20688));
		bool L_27 = __this->get_isNearManipulation_31();
		if (L_27)
		{
			goto IL_00e1;
		}
	}
	{
		int32_t L_28 = __this->get_oneHandRotationModeFar_10();
		G_B13_0 = L_28;
		goto IL_00e7;
	}

IL_00e1:
	{
		int32_t L_29 = __this->get_oneHandRotationModeNear_9();
		G_B13_0 = L_29;
	}

IL_00e7:
	{
		V_4 = G_B13_0;
		// MixedRealityPose pointerPose = new MixedRealityPose(pointer.Position, pointer.Rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20689));
		RuntimeObject* L_30 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20719));
		NullCheck(L_30);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_30);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20719));
		RuntimeObject* L_32 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20720));
		NullCheck(L_32);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_33 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_32);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20720));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20721));
		MixedRealityPose__ctor_m139F7F8104CAB889E5AE6A14090A9764E39DFCAC((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_5), L_31, L_33, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20721));
		// targetTransform.Position = moveLogic.UpdateTransform(pointerPose, targetTransform, rotateInOneHandType != RotateInOneHandType.RotateAboutObjectCenter, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20690));
		ManipulationMoveLogic_t624D71F3571A3AF610831036872780FB5608BF50 * L_34 = __this->get_moveLogic_25();
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_35 = V_5;
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_36 = V_2;
		int32_t L_37 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20722));
		bool L_38 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20722));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20723));
		NullCheck(L_34);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_39 = ManipulationMoveLogic_UpdateTransform_m11437EA43CDFF58C221916A86F70D8D1868AFABF(L_34, L_35, L_36, (bool)((!(((uint32_t)L_37) <= ((uint32_t)0)))? 1 : 0), L_38, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20723));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20724));
		MixedRealityTransform_set_Position_m132CCC9279F03B590B6FD8AA94C807A93BFC52AD((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_2), L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20724));
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20691));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20725));
		bool L_40 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20725));
		if (!L_40)
		{
			goto IL_0133;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_41 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20726));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_42 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_41, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20726));
		G_B16_0 = ((int32_t)(L_42));
		goto IL_0134;
	}

IL_0133:
	{
		G_B16_0 = 0;
	}

IL_0134:
	{
		V_8 = (bool)G_B16_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20692));
		bool L_43 = V_8;
		if (!L_43)
		{
			goto IL_0151;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20693));
		// constraintsManager.ApplyTranslationConstraints(ref targetTransform, true, IsNearManipulation());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20694));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_44 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20727));
		bool L_45 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20727));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20728));
		NullCheck(L_44);
		ConstraintManager_ApplyTranslationConstraints_mE33C3FEFE7E6C67D1F451EB9208E118328F8EB69(L_44, (MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&V_2), (bool)1, L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20728));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20695));
	}

IL_0151:
	{
		// ApplyTargetTransform(targetTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20696));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_46 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20729));
		ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093(__this, L_46, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20729));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20697));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleManipulationStarted()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_HandleManipulationStarted_m828D27FF5409D6A00FE24C17037DF116BA3C8530_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20730));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20731));
	ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * G_B2_0 = NULL;
	ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * G_B1_0 = NULL;
	bool G_B3_0 = false;
	ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * G_B3_1 = NULL;
	int32_t G_B10_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20732));
		// isManipulationStarted = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20733));
		__this->set_isManipulationStarted_32((bool)1);
		// isNearManipulation = IsNearManipulation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20734));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20760));
		bool L_0 = ObjectManipulator_IsNearManipulation_m8BDC955A65E941C0258B02CF5C2ABFEFBE6BBB3D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20760));
		__this->set_isNearManipulation_31(L_0);
		// isSmoothing = (isNearManipulation ? smoothingNear : smoothingFar);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20735));
		bool L_1 = __this->get_isNearManipulation_31();
		G_B1_0 = __this;
		if (L_1)
		{
			G_B2_0 = __this;
			goto IL_0025;
		}
	}
	{
		bool L_2 = __this->get_smoothingFar_13();
		G_B3_0 = L_2;
		G_B3_1 = G_B1_0;
		goto IL_002b;
	}

IL_0025:
	{
		bool L_3 = __this->get_smoothingNear_14();
		G_B3_0 = L_3;
		G_B3_1 = G_B2_0;
	}

IL_002b:
	{
		NullCheck(G_B3_1);
		G_B3_1->set_isSmoothing_33(G_B3_0);
		// if (OnManipulationStarted != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20736));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20761));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_4 = ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20761));
		V_0 = (bool)((!(((RuntimeObject*)(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20737));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_00a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20738));
		// OnManipulationStarted.Invoke(new ManipulationEventData
		// {
		//     ManipulationSource = gameObject,
		//     IsNearInteraction = isNearManipulation,
		//     Pointer = GetFirstPointer().pointer,
		//     PointerCentroid = GetPointersGrabPoint(),
		//     PointerVelocity = GetPointersVelocity(),
		//     PointerAngularVelocity = GetPointersAngularVelocity()
		// });
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20739));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20762));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_6 = ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20762));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20763));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_7 = (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 *)il2cpp_codegen_object_new(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29_il2cpp_TypeInfo_var);
		ManipulationEventData__ctor_m6EEA7E66A0678134939E23D3B172D26AF5A82392(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20763));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_8 = L_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20764));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20764));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20765));
		NullCheck(L_8);
		ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_inline(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20765));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_10 = L_8;
		bool L_11 = __this->get_isNearManipulation_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20766));
		NullCheck(L_10);
		ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_inline(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20766));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_12 = L_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20767));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_13 = ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20767));
		RuntimeObject* L_14 = L_13.get_pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20768));
		NullCheck(L_12);
		ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872_inline(L_12, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20768));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_15 = L_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20769));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = ObjectManipulator_GetPointersGrabPoint_m9E5022409B98C3C1E4B83EDFF7E6E3C0BEA7D663(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20769));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20770));
		NullCheck(L_15);
		ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3_inline(L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20770));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_17 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20771));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = ObjectManipulator_GetPointersVelocity_mB8799C6138C9A03BC140E1D964C27F11C0A847D5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20771));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20772));
		NullCheck(L_17);
		ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054_inline(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20772));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_19 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20773));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = ObjectManipulator_GetPointersAngularVelocity_mC486090ECC3F8D99F42CF4E0288F6C18BD0E1CE6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20773));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20774));
		NullCheck(L_19);
		ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033_inline(L_19, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20774));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20775));
		NullCheck(L_6);
		UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35(L_6, L_19, /*hidden argument*/UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20775));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20740));
	}

IL_00a3:
	{
		// if (rigidBody != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20741));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_21 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20776));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_22 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_21, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20776));
		V_1 = L_22;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20742));
		bool L_23 = V_1;
		if (!L_23)
		{
			goto IL_00f1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20743));
		// wasGravity = rigidBody.useGravity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20744));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_24 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20777));
		NullCheck(L_24);
		bool L_25 = Rigidbody_get_useGravity_m802E0C0B4F2C2B521D5369EA027325157A53FCAA(L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20777));
		__this->set_wasGravity_35(L_25);
		// wasKinematic = rigidBody.isKinematic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20745));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_26 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20778));
		NullCheck(L_26);
		bool L_27 = Rigidbody_get_isKinematic_mCF624F7C1C78267224EFBEAF9B4FD72CDE56CEB2(L_26, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20778));
		__this->set_wasKinematic_36(L_27);
		// rigidBody.useGravity = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20746));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_28 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20779));
		NullCheck(L_28);
		Rigidbody_set_useGravity_mB0D957A9D8A9819E18D2E81F465C5C0B60CBC6DA(L_28, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20779));
		// rigidBody.isKinematic = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20747));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_29 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20780));
		NullCheck(L_29);
		Rigidbody_set_isKinematic_m856AB59E5A6207892C439AFC8DDF5620B941E71B(L_29, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20780));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20748));
	}

IL_00f1:
	{
		// if (EnableConstraints && constraintsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20749));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20781));
		bool L_30 = ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20781));
		if (!L_30)
		{
			goto IL_0107;
		}
	}
	{
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_31 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20782));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_32 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_31, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20782));
		G_B10_0 = ((int32_t)(L_32));
		goto IL_0108;
	}

IL_0107:
	{
		G_B10_0 = 0;
	}

IL_0108:
	{
		V_2 = (bool)G_B10_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20750));
		bool L_33 = V_2;
		if (!L_33)
		{
			goto IL_0125;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20751));
		// constraintsManager.Initialize(new MixedRealityTransform(HostTransform));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20752));
		ConstraintManager_t8D4B1D1D6886728A245EEE0BDE5AA1977B1A3781 * L_34 = __this->get_constraintsManager_19();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20783));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_35 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20783));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20784));
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_36;
		memset((&L_36), 0, sizeof(L_36));
		MixedRealityTransform__ctor_m9C17849F9137B911288BF804F27B607389C406F6((&L_36), L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20784));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20785));
		NullCheck(L_34);
		ConstraintManager_Initialize_mE5A32824EE2B7EB7BA63CCA8AC2EA028D83DA93F(L_34, L_36, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20785));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20753));
	}

IL_0125:
	{
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20754));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_37 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20786));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_38 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_37, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20786));
		V_3 = L_38;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20755));
		bool L_39 = V_3;
		if (!L_39)
		{
			goto IL_0144;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20756));
		// elasticsManager.EnableElasticsUpdate = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20757));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_40 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20787));
		NullCheck(L_40);
		ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline(L_40, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20787));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20758));
	}

IL_0144:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20759));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::HandleManipulationEnded(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerGrabPoint0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerVelocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pointerAnglularVelocity2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointerGrabPoint0), (&___pointerVelocity1), (&___pointerAnglularVelocity2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_HandleManipulationEnded_m10159331E8CB6243B6F51994022E9D81D5F8D27D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20788));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20789));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20790));
		// isManipulationStarted = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20791));
		__this->set_isManipulationStarted_32((bool)0);
		// if (OnManipulationEnded != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20792));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20804));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20804));
		V_0 = (bool)((!(((RuntimeObject*)(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20793));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20794));
		// OnManipulationEnded.Invoke(new ManipulationEventData
		// {
		//     ManipulationSource = gameObject,
		//     IsNearInteraction = isNearManipulation,
		//     PointerCentroid = pointerGrabPoint,
		//     PointerVelocity = pointerVelocity,
		//     PointerAngularVelocity = pointerAnglularVelocity
		// });
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20795));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20805));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_2 = ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20805));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20806));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_3 = (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 *)il2cpp_codegen_object_new(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29_il2cpp_TypeInfo_var);
		ManipulationEventData__ctor_m6EEA7E66A0678134939E23D3B172D26AF5A82392(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20806));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_4 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20807));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20807));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20808));
		NullCheck(L_4);
		ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_inline(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20808));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_6 = L_4;
		bool L_7 = __this->get_isNearManipulation_31();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20809));
		NullCheck(L_6);
		ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_inline(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20809));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_8 = L_6;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = ___pointerGrabPoint0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20810));
		NullCheck(L_8);
		ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3_inline(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20810));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_10 = L_8;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = ___pointerVelocity1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20811));
		NullCheck(L_10);
		ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054_inline(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20811));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_12 = L_10;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = ___pointerAnglularVelocity2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20812));
		NullCheck(L_12);
		ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033_inline(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20812));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20813));
		NullCheck(L_2);
		UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35(L_2, L_12, /*hidden argument*/UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20813));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20796));
	}

IL_005a:
	{
		// ReleaseRigidBody(pointerVelocity, pointerAnglularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20797));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = ___pointerVelocity1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = ___pointerAnglularVelocity2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20814));
		ObjectManipulator_ReleaseRigidBody_m6C4C5F0BF5F3236D22F4B25C933B8FA97F56232D(__this, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20814));
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20798));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_16 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20815));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_17 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_16, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20815));
		V_1 = L_17;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20799));
		bool L_18 = V_1;
		if (!L_18)
		{
			goto IL_0082;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20800));
		// elasticsManager.EnableElasticsUpdate = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20801));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_19 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20816));
		NullCheck(L_19);
		ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline(L_19, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20816));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20802));
	}

IL_0082:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20803));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnPointerClicked_m72DBDCD293671904E997AA2A891AE9C555839F1C (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnPointerClicked_m72DBDCD293671904E997AA2A891AE9C555839F1C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnPointerClicked_m72DBDCD293671904E997AA2A891AE9C555839F1C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20817));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20818));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20819));
		// public virtual void OnPointerClicked(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20820));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnBeforeFocusChange(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnBeforeFocusChange_m560D9AE6999B37AB59565178816E07890742E723 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnBeforeFocusChange_m560D9AE6999B37AB59565178816E07890742E723_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnBeforeFocusChange_m560D9AE6999B37AB59565178816E07890742E723_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20821));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20822));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20823));
		// public void OnBeforeFocusChange(FocusEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20824));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::ApplyTargetTransform(Microsoft.MixedReality.Toolkit.Utilities.MixedRealityTransform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  ___targetTransform0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_9;
	memset((&V_9), 0, sizeof(V_9));
	float V_10 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_11;
	memset((&V_11), 0, sizeof(V_11));
	bool V_12 = false;
	bool V_13 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___targetTransform0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_9), (&V_10), (&V_11));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_ApplyTargetTransform_mA42CBB22062A6FC53DD58A7438581519D4EA8093_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20825));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20826));
	int32_t G_B3_0 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B9_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B8_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B10_0;
	memset((&G_B10_0), 0, sizeof(G_B10_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B10_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B14_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B13_0 = NULL;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  G_B15_0;
	memset((&G_B15_0), 0, sizeof(G_B15_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B15_1 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B19_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B18_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B20_0;
	memset((&G_B20_0), 0, sizeof(G_B20_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B20_1 = NULL;
	int32_t G_B25_0 = 0;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B37_0 = NULL;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B36_0 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B38_0;
	memset((&G_B38_0), 0, sizeof(G_B38_0));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B38_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20827));
		// bool applySmoothing = isSmoothing && smoothingLogic != null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20828));
		bool L_0 = __this->get_isSmoothing_33();
		if (!L_0)
		{
			goto IL_0014;
		}
	}
	{
		RuntimeObject* L_1 = __this->get_smoothingLogic_28();
		G_B3_0 = ((!(((RuntimeObject*)(RuntimeObject*)L_1) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0015;
	}

IL_0014:
	{
		G_B3_0 = 0;
	}

IL_0015:
	{
		V_0 = (bool)G_B3_0;
		// if (rigidBody == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20829));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_2 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20887));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20887));
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20830));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0148;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20831));
		// TransformFlags transformUpdated = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20832));
		V_2 = 0;
		// if (elasticsManager != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20833));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_5 = __this->get_elasticsManager_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20888));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_6 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_5, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20888));
		V_3 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20834));
		bool L_7 = V_3;
		if (!L_7)
		{
			goto IL_004c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20835));
		// transformUpdated = elasticsManager.ApplyTargetTransform(targetTransform);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20836));
		ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * L_8 = __this->get_elasticsManager_20();
		MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14  L_9 = ___targetTransform0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20889));
		NullCheck(L_8);
		int32_t L_10 = ElasticsManager_ApplyTargetTransform_m5A261D4771CE5BFF70831B3BF5595EA47F7B886C(L_8, L_9, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20889));
		V_2 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20837));
	}

IL_004c:
	{
		// if (!transformUpdated.IsMaskSet(TransformFlags.Move))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20838));
		int32_t L_11 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20890));
		bool L_12 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_11, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20890));
		V_4 = (bool)((((int32_t)L_12) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20839));
		bool L_13 = V_4;
		if (!L_13)
		{
			goto IL_009e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20840));
		// HostTransform.position = applySmoothing ? smoothingLogic.SmoothPosition(HostTransform.position, targetTransform.Position, moveLerpTime, Time.deltaTime) : targetTransform.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20841));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20891));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_14 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20891));
		bool L_15 = V_0;
		G_B8_0 = L_14;
		if (L_15)
		{
			G_B9_0 = L_14;
			goto IL_006f;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20892));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20892));
		G_B10_0 = L_16;
		G_B10_1 = G_B8_0;
		goto IL_0097;
	}

IL_006f:
	{
		RuntimeObject* L_17 = __this->get_smoothingLogic_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20893));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20893));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20894));
		NullCheck(L_18);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20894));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20895));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_20 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20895));
		float L_21 = __this->get_moveLerpTime_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20896));
		float L_22 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20896));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20897));
		NullCheck(L_17);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_23 = InterfaceFuncInvoker4< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , float, float >::Invoke(0 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic::SmoothPosition(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single) */, ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var, L_17, L_19, L_20, L_21, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20897));
		G_B10_0 = L_23;
		G_B10_1 = G_B9_0;
	}

IL_0097:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20898));
		NullCheck(G_B10_1);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(G_B10_1, G_B10_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20898));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20842));
	}

IL_009e:
	{
		// if (!transformUpdated.IsMaskSet(TransformFlags.Rotate))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20843));
		int32_t L_24 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20899));
		bool L_25 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_24, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20899));
		V_5 = (bool)((((int32_t)L_25) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20844));
		bool L_26 = V_5;
		if (!L_26)
		{
			goto IL_00f0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20845));
		// HostTransform.rotation = applySmoothing ? smoothingLogic.SmoothRotation(HostTransform.rotation, targetTransform.Rotation, rotateLerpTime, Time.deltaTime) : targetTransform.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20846));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20900));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_27 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20900));
		bool L_28 = V_0;
		G_B13_0 = L_27;
		if (L_28)
		{
			G_B14_0 = L_27;
			goto IL_00c1;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20901));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_29 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20901));
		G_B15_0 = L_29;
		G_B15_1 = G_B13_0;
		goto IL_00e9;
	}

IL_00c1:
	{
		RuntimeObject* L_30 = __this->get_smoothingLogic_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20902));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20902));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20903));
		NullCheck(L_31);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_32 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20903));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20904));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_33 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20904));
		float L_34 = __this->get_rotateLerpTime_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20905));
		float L_35 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20905));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20906));
		NullCheck(L_30);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_36 = InterfaceFuncInvoker4< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , float, float >::Invoke(1 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic::SmoothRotation(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single,System.Single) */, ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var, L_30, L_32, L_33, L_34, L_35);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20906));
		G_B15_0 = L_36;
		G_B15_1 = G_B14_0;
	}

IL_00e9:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20907));
		NullCheck(G_B15_1);
		Transform_set_rotation_m429694E264117C6DC682EC6AF45C7864E5155935(G_B15_1, G_B15_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20907));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20847));
	}

IL_00f0:
	{
		// if (!transformUpdated.IsMaskSet(TransformFlags.Scale))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20848));
		int32_t L_37 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20908));
		bool L_38 = TransformFlagsExtensions_IsMaskSet_m0B2C46275ADCA926627422AAE25C0176873E1D1B(L_37, 4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20908));
		V_6 = (bool)((((int32_t)L_38) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20849));
		bool L_39 = V_6;
		if (!L_39)
		{
			goto IL_0142;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20850));
		// HostTransform.localScale = applySmoothing ? smoothingLogic.SmoothScale(HostTransform.localScale, targetTransform.Scale, scaleLerpTime, Time.deltaTime) : targetTransform.Scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20851));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20909));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_40 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20909));
		bool L_41 = V_0;
		G_B18_0 = L_40;
		if (L_41)
		{
			G_B19_0 = L_40;
			goto IL_0113;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20910));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_42 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20910));
		G_B20_0 = L_42;
		G_B20_1 = G_B18_0;
		goto IL_013b;
	}

IL_0113:
	{
		RuntimeObject* L_43 = __this->get_smoothingLogic_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20911));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_44 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20911));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20912));
		NullCheck(L_44);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20912));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20913));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_46 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20913));
		float L_47 = __this->get_scaleLerpTime_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20914));
		float L_48 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20914));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20915));
		NullCheck(L_43);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_49 = InterfaceFuncInvoker4< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , float, float >::Invoke(2 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic::SmoothScale(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single) */, ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var, L_43, L_45, L_46, L_47, L_48);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20915));
		G_B20_0 = L_49;
		G_B20_1 = G_B19_0;
	}

IL_013b:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20916));
		NullCheck(G_B20_1);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(G_B20_1, G_B20_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20916));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20852));
	}

IL_0142:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20853));
		goto IL_0328;
	}

IL_0148:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20854));
		// if (isNearManipulation && !useForcesForNearManipulation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20855));
		bool L_50 = __this->get_isNearManipulation_31();
		if (!L_50)
		{
			goto IL_015c;
		}
	}
	{
		bool L_51 = __this->get_useForcesForNearManipulation_8();
		G_B25_0 = ((((int32_t)L_51) == ((int32_t)0))? 1 : 0);
		goto IL_015d;
	}

IL_015c:
	{
		G_B25_0 = 0;
	}

IL_015d:
	{
		V_7 = (bool)G_B25_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20856));
		bool L_52 = V_7;
		if (!L_52)
		{
			goto IL_0208;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20857));
		// if (applySmoothing)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20858));
		bool L_53 = V_0;
		V_8 = L_53;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20859));
		bool L_54 = V_8;
		if (!L_54)
		{
			goto IL_01da;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20860));
		// rigidBody.MovePosition(smoothingLogic.SmoothPosition(rigidBody.position, targetTransform.Position, moveLerpTime, Time.deltaTime));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20861));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_55 = __this->get_rigidBody_34();
		RuntimeObject* L_56 = __this->get_smoothingLogic_28();
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_57 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20917));
		NullCheck(L_57);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_58 = Rigidbody_get_position_m478D060638E43DE3AE9C931A42593484B8310113(L_57, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20917));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20918));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_59 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20918));
		float L_60 = __this->get_moveLerpTime_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20919));
		float L_61 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20919));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20920));
		NullCheck(L_56);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_62 = InterfaceFuncInvoker4< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , float, float >::Invoke(0 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic::SmoothPosition(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single) */, ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var, L_56, L_58, L_59, L_60, L_61);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20920));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20921));
		NullCheck(L_55);
		Rigidbody_MovePosition_m5807AA5CDEC1B8350618166B2DF56FCAAAFFF7C1(L_55, L_62, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20921));
		// rigidBody.MoveRotation(smoothingLogic.SmoothRotation(rigidBody.rotation, targetTransform.Rotation, rotateLerpTime, Time.deltaTime));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20862));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_63 = __this->get_rigidBody_34();
		RuntimeObject* L_64 = __this->get_smoothingLogic_28();
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_65 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20922));
		NullCheck(L_65);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_66 = Rigidbody_get_rotation_mD967DD98F16F80C0D74F8F1C25953D0609906BE5(L_65, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20922));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20923));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_67 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20923));
		float L_68 = __this->get_rotateLerpTime_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20924));
		float L_69 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20924));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20925));
		NullCheck(L_64);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_70 = InterfaceFuncInvoker4< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 , float, float >::Invoke(1 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic::SmoothRotation(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single,System.Single) */, ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var, L_64, L_66, L_67, L_68, L_69);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20925));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20926));
		NullCheck(L_63);
		Rigidbody_MoveRotation_mCBE2CF9F1B4A86C4BCB899AAB4C4EE8BBAD21C84(L_63, L_70, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20926));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20863));
		goto IL_0202;
	}

IL_01da:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20864));
		// rigidBody.MovePosition(targetTransform.Position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20865));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_71 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20927));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_72 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20927));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20928));
		NullCheck(L_71);
		Rigidbody_MovePosition_m5807AA5CDEC1B8350618166B2DF56FCAAAFFF7C1(L_71, L_72, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20928));
		// rigidBody.MoveRotation(targetTransform.Rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20866));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_73 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20929));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_74 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20929));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20930));
		NullCheck(L_73);
		Rigidbody_MoveRotation_mCBE2CF9F1B4A86C4BCB899AAB4C4EE8BBAD21C84(L_73, L_74, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20930));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20867));
	}

IL_0202:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20868));
		goto IL_02e7;
	}

IL_0208:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20869));
		// rigidBody.velocity = ((1f - Mathf.Pow(moveLerpTime, Time.deltaTime)) / Time.deltaTime) * (targetTransform.Position - HostTransform.position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20870));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_75 = __this->get_rigidBody_34();
		float L_76 = __this->get_moveLerpTime_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20931));
		float L_77 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20931));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20932));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_78 = powf(L_76, L_77);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20932));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20933));
		float L_79 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20933));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20934));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_80 = MixedRealityTransform_get_Position_m866B47949BD081852CB305BE7C406CD95D788E7D((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20934));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20935));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_81 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20935));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20936));
		NullCheck(L_81);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_82 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_81, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20936));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20937));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_83 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_80, L_82, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20937));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20938));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_84 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(((float)((float)((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_78))/(float)L_79)), L_83, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20938));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20939));
		NullCheck(L_75);
		Rigidbody_set_velocity_m8D129E88E62AD02AB81CFC8BE694C4A5A2B2B380(L_75, L_84, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20939));
		// var relativeRotation = targetTransform.Rotation * Quaternion.Inverse(HostTransform.rotation);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20871));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20940));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_85 = MixedRealityTransform_get_Rotation_m636813225AF670BCE997D36BA2856EE67B50F3E7((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20940));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20941));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_86 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20941));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20942));
		NullCheck(L_86);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_87 = Transform_get_rotation_m3AB90A67403249AECCA5E02BC70FCE8C90FE9FB9(L_86, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20942));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20943));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_88 = Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C(L_87, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20943));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20944));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_89 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_85, L_88, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20944));
		V_9 = L_89;
		// relativeRotation.ToAngleAxis(out float angle, out Vector3 axis);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20872));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20945));
		Quaternion_ToAngleAxis_m36E8C06D2D508B5BA5DE9CFBAD252989918D8813((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_9), (float*)(&V_10), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20945));
		// if (axis.IsValidVector())
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20873));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_90 = V_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20946));
		bool L_91 = VectorExtensions_IsValidVector_mBFC785DA490369E01691E2DB71BC77571DDFBD09(L_90, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20946));
		V_12 = L_91;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20874));
		bool L_92 = V_12;
		if (!L_92)
		{
			goto IL_02e6;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20875));
		// if (angle > 180f)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20876));
		float L_93 = V_10;
		V_13 = (bool)((((float)L_93) > ((float)(180.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20877));
		bool L_94 = V_13;
		if (!L_94)
		{
			goto IL_02a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20878));
		// angle -= 360f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20879));
		float L_95 = V_10;
		V_10 = ((float)il2cpp_codegen_subtract((float)L_95, (float)(360.0f)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20880));
	}

IL_02a0:
	{
		// rigidBody.angularVelocity = ((1f - Mathf.Pow(rotateLerpTime, Time.deltaTime)) / Time.deltaTime) * (axis.normalized * angle * Mathf.Deg2Rad);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20881));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_96 = __this->get_rigidBody_34();
		float L_97 = __this->get_rotateLerpTime_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20947));
		float L_98 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20947));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20948));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_99 = powf(L_97, L_98);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20948));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20949));
		float L_100 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20949));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20950));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_101 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_11), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20950));
		float L_102 = V_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20951));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_103 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_101, L_102, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20951));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20952));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_104 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_103, (0.0174532924f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20952));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20953));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_105 = Vector3_op_Multiply_mC7A8D6FD19E58DBF98E30D454F59F142F7BF8839(((float)((float)((float)il2cpp_codegen_subtract((float)(1.0f), (float)L_99))/(float)L_100)), L_104, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20953));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20954));
		NullCheck(L_96);
		Rigidbody_set_angularVelocity_m1839DCBC87B01EFD0B4936E84E503E38774B962C(L_96, L_105, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20954));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20882));
	}

IL_02e6:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20883));
	}

IL_02e7:
	{
		// HostTransform.localScale = applySmoothing ? smoothingLogic.SmoothScale(HostTransform.localScale, targetTransform.Scale, scaleLerpTime, Time.deltaTime) : targetTransform.Scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20884));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20955));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_106 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20955));
		bool L_107 = V_0;
		G_B36_0 = L_106;
		if (L_107)
		{
			G_B37_0 = L_106;
			goto IL_02f9;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20956));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_108 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20956));
		G_B38_0 = L_108;
		G_B38_1 = G_B36_0;
		goto IL_0321;
	}

IL_02f9:
	{
		RuntimeObject* L_109 = __this->get_smoothingLogic_28();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20957));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_110 = ObjectManipulator_get_HostTransform_m540089828F30EDDBE4609D6CAC987957D3BFE0E6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20957));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20958));
		NullCheck(L_110);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_111 = Transform_get_localScale_mD8F631021C2D62B7C341B1A17FA75491F64E13DA(L_110, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20958));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20959));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_112 = MixedRealityTransform_get_Scale_m6CADB6F9B3DBC49C10A7C2E5F80B6D9A0B87A037((MixedRealityTransform_tEA2C1D12AB8A241F1C8D9CEFED28EC0FABE60E14 *)(&___targetTransform0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20959));
		float L_113 = __this->get_scaleLerpTime_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20960));
		float L_114 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20960));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20961));
		NullCheck(L_109);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_115 = InterfaceFuncInvoker4< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 , float, float >::Invoke(2 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Utilities.ITransformSmoothingLogic::SmoothScale(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single) */, ITransformSmoothingLogic_t9438E510342649B1DB04B04DE1C169A205F0B299_il2cpp_TypeInfo_var, L_109, L_111, L_112, L_113, L_114);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20961));
		G_B38_0 = L_115;
		G_B38_1 = G_B37_0;
	}

IL_0321:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20962));
		NullCheck(G_B38_1);
		Transform_set_localScale_m7ED1A6E5A87CD1D483515B99D6D3121FB92B0556(G_B38_1, G_B38_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20962));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20885));
	}

IL_0328:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20886));
		return;
	}
}
// UnityEngine.Vector3[] Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetHandPositionArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	int32_t V_1 = 0;
	Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1  V_2;
	memset((&V_2), 0, sizeof(V_2));
	KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  V_3;
	memset((&V_3), 0, sizeof(V_3));
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_4 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_GetHandPositionArray_m02D825CC5342D572121AD08DC92836190B1D39BE_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20963));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20964));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20965));
		// var handPositionMap = new Vector3[pointerIdToPointerMap.Count];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20966));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_0 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20979));
		NullCheck(L_0);
		int32_t L_1 = Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324(L_0, /*hidden argument*/Dictionary_2_get_Count_m157032B6F811C35EA7B7691285333B8ED3605324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20979));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)L_1);
		V_0 = L_2;
		// int index = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20967));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20968));
		// foreach (var item in pointerIdToPointerMap)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20969));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_3 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20980));
		NullCheck(L_3);
		Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1  L_4 = Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8(L_3, /*hidden argument*/Dictionary_2_GetEnumerator_m7EE4403784E175972409AB7D7291235F87B036E8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20980));
		V_2 = L_4;
	}

IL_0021:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20970));
			goto IL_0049;
		}

IL_0023:
		{
			// foreach (var item in pointerIdToPointerMap)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20971));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20981));
			KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  L_5 = Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_inline((Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *)(&V_2), /*hidden argument*/Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20981));
			V_3 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20972));
			// handPositionMap[index++] = item.Value.pointer.Position;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20973));
			Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_6 = V_0;
			int32_t L_7 = V_1;
			int32_t L_8 = L_7;
			V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_8, (int32_t)1));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20982));
			PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_9 = KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_inline((KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 *)(&V_3), /*hidden argument*/KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20982));
			RuntimeObject* L_10 = L_9.get_pointer_0();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20983));
			NullCheck(L_10);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_10);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20983));
			NullCheck(L_6);
			(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_8), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_11);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20974));
		}

IL_0049:
		{
			// foreach (var item in pointerIdToPointerMap)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20975));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20984));
			bool L_12 = Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18((Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *)(&V_2), /*hidden argument*/Enumerator_MoveNext_mEDAE3E7DCF35A09565AC875469B76985F673CE18_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20984));
			if (L_12)
			{
				goto IL_0023;
			}
		}

IL_0052:
		{
			IL2CPP_LEAVE(0x63, FINALLY_0054);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0054;
	}

FINALLY_0054:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20976));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20985));
		Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316((Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 *)(&V_2), /*hidden argument*/Enumerator_Dispose_m132980CBD41B8E6D98274FE18D7F226713663316_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20985));
		IL2CPP_END_FINALLY(84)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(84)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x63, IL_0063)
	}

IL_0063:
	{
		// return handPositionMap;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20977));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_13 = V_0;
		V_4 = L_13;
		goto IL_0068;
	}

IL_0068:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20978));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_14 = V_4;
		return L_14;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnFocusChanged(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnFocusChanged_m327A6ED1273C31321D50D2F6AB5B4022106D6265 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnFocusChanged_m327A6ED1273C31321D50D2F6AB5B4022106D6265_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnFocusChanged_m327A6ED1273C31321D50D2F6AB5B4022106D6265_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20986));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20987));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B15_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20988));
		// bool isFar = !(eventData.Pointer is IMixedRealityNearPointer);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20989));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21013));
		NullCheck(L_0);
		RuntimeObject* L_1 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21013));
		V_0 = (bool)((((int32_t)((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_1, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		// if (isFar && !AllowFarManipulation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20990));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0021;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21014));
		bool L_3 = ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21014));
		G_B3_0 = ((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_1 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20991));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_002c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20992));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20993));
		goto IL_011c;
	}

IL_002c:
	{
		// if (eventData.OldFocusedObject == null ||
		//         !eventData.OldFocusedObject.transform.IsChildOf(transform))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20994));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_5 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21015));
		NullCheck(L_5);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974_inline(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21015));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21016));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21016));
		if (L_7)
		{
			goto IL_0055;
		}
	}
	{
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21017));
		NullCheck(L_8);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974_inline(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21017));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21018));
		NullCheck(L_9);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_10 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21018));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21019));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21019));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21020));
		NullCheck(L_10);
		bool L_12 = Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21020));
		G_B8_0 = ((((int32_t)L_12) == ((int32_t)0))? 1 : 0);
		goto IL_0056;
	}

IL_0055:
	{
		G_B8_0 = 1;
	}

IL_0056:
	{
		V_2 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20995));
		bool L_13 = V_2;
		if (!L_13)
		{
			goto IL_00a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20996));
		// if (OnHoverEntered != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20997));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21021));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_14 = ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21021));
		V_3 = (bool)((!(((RuntimeObject*)(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)L_14) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20998));
		bool L_15 = V_3;
		if (!L_15)
		{
			goto IL_00a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20999));
		// OnHoverEntered.Invoke(new ManipulationEventData
		// {
		//     ManipulationSource = gameObject,
		//     Pointer = eventData.Pointer,
		//     IsNearInteraction = !isFar
		// });
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21000));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21022));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_16 = ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21022));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21023));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_17 = (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 *)il2cpp_codegen_object_new(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29_il2cpp_TypeInfo_var);
		ManipulationEventData__ctor_m6EEA7E66A0678134939E23D3B172D26AF5A82392(L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21023));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_18 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21024));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_19 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21024));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21025));
		NullCheck(L_18);
		ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_inline(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21025));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_20 = L_18;
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_21 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21026));
		NullCheck(L_21);
		RuntimeObject* L_22 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21026));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21027));
		NullCheck(L_20);
		ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872_inline(L_20, L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21027));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_23 = L_20;
		bool L_24 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21028));
		NullCheck(L_23);
		ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_inline(L_23, (bool)((((int32_t)L_24) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21028));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21029));
		NullCheck(L_16);
		UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35(L_16, L_23, /*hidden argument*/UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21029));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21001));
	}

IL_00a0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21002));
		goto IL_011c;
	}

IL_00a3:
	{
		// else if (eventData.NewFocusedObject == null ||
		//          !eventData.NewFocusedObject.transform.IsChildOf(transform))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21003));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_25 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21030));
		NullCheck(L_25);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_26 = FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21030));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21031));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_27 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_26, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21031));
		if (L_27)
		{
			goto IL_00cc;
		}
	}
	{
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_28 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21032));
		NullCheck(L_28);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_29 = FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline(L_28, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21032));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21033));
		NullCheck(L_29);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21033));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21034));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_31 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21034));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21035));
		NullCheck(L_30);
		bool L_32 = Transform_IsChildOf_mCB98BA14F7FB82B6AF6AE961E84C47AE1D99AA80(L_30, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21035));
		G_B15_0 = ((((int32_t)L_32) == ((int32_t)0))? 1 : 0);
		goto IL_00cd;
	}

IL_00cc:
	{
		G_B15_0 = 1;
	}

IL_00cd:
	{
		V_4 = (bool)G_B15_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21004));
		bool L_33 = V_4;
		if (!L_33)
		{
			goto IL_011c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21005));
		// if (OnHoverExited != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21006));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21036));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_34 = ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21036));
		V_5 = (bool)((!(((RuntimeObject*)(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)L_34) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21007));
		bool L_35 = V_5;
		if (!L_35)
		{
			goto IL_011b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21008));
		// OnHoverExited.Invoke(new ManipulationEventData
		// {
		//     ManipulationSource = gameObject,
		//     Pointer = eventData.Pointer,
		//     IsNearInteraction = !isFar
		// });
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21009));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21037));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_36 = ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21037));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21038));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_37 = (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 *)il2cpp_codegen_object_new(ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29_il2cpp_TypeInfo_var);
		ManipulationEventData__ctor_m6EEA7E66A0678134939E23D3B172D26AF5A82392(L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21038));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_38 = L_37;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21039));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_39 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21039));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21040));
		NullCheck(L_38);
		ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_inline(L_38, L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21040));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_40 = L_38;
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_41 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21041));
		NullCheck(L_41);
		RuntimeObject* L_42 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21041));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21042));
		NullCheck(L_40);
		ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872_inline(L_40, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21042));
		ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * L_43 = L_40;
		bool L_44 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21043));
		NullCheck(L_43);
		ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_inline(L_43, (bool)((((int32_t)L_44) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21043));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21044));
		NullCheck(L_36);
		UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35(L_36, L_43, /*hidden argument*/UnityEvent_1_Invoke_mC378CB1063F82457605EAF03A432044E50B0EC35_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21044));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21010));
	}

IL_011b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21011));
	}

IL_011c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21012));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::ReleaseRigidBody(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_ReleaseRigidBody_m6C4C5F0BF5F3236D22F4B25C933B8FA97F56232D (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___velocity0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___angularVelocity1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_ReleaseRigidBody_m6C4C5F0BF5F3236D22F4B25C933B8FA97F56232D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___velocity0), (&___angularVelocity1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_ReleaseRigidBody_m6C4C5F0BF5F3236D22F4B25C933B8FA97F56232D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21046));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21047));
		// if (rigidBody != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21048));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_0 = __this->get_rigidBody_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21069));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21069));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21049));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0081;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21050));
		// rigidBody.useGravity = wasGravity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21051));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_3 = __this->get_rigidBody_34();
		bool L_4 = __this->get_wasGravity_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21070));
		NullCheck(L_3);
		Rigidbody_set_useGravity_mB0D957A9D8A9819E18D2E81F465C5C0B60CBC6DA(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21070));
		// rigidBody.isKinematic = wasKinematic;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21052));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_5 = __this->get_rigidBody_34();
		bool L_6 = __this->get_wasKinematic_36();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21071));
		NullCheck(L_5);
		Rigidbody_set_isKinematic_m856AB59E5A6207892C439AFC8DDF5620B941E71B(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21071));
		// if (isNearManipulation)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21053));
		bool L_7 = __this->get_isNearManipulation_31();
		V_1 = L_7;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21054));
		bool L_8 = V_1;
		if (!L_8)
		{
			goto IL_0080;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21055));
		// if (releaseBehavior.IsMaskSet(ReleaseBehaviorType.KeepVelocity))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21056));
		int32_t L_9 = __this->get_releaseBehavior_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21072));
		bool L_10 = ReleaseBehaviorTypeExtensions_IsMaskSet_mF5264E1905682A40E0679D97746BA318163E6EF0(L_9, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21072));
		V_2 = L_10;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21057));
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_0060;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21058));
		// rigidBody.velocity = velocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21059));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_12 = __this->get_rigidBody_34();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = ___velocity0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21073));
		NullCheck(L_12);
		Rigidbody_set_velocity_m8D129E88E62AD02AB81CFC8BE694C4A5A2B2B380(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21073));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21060));
	}

IL_0060:
	{
		// if (releaseBehavior.IsMaskSet(ReleaseBehaviorType.KeepAngularVelocity))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21061));
		int32_t L_14 = __this->get_releaseBehavior_11();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21074));
		bool L_15 = ReleaseBehaviorTypeExtensions_IsMaskSet_mF5264E1905682A40E0679D97746BA318163E6EF0(L_14, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21074));
		V_3 = L_15;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21062));
		bool L_16 = V_3;
		if (!L_16)
		{
			goto IL_007f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21063));
		// rigidBody.angularVelocity = angularVelocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21064));
		Rigidbody_tE0A58EE5A1F7DC908EFFB4F0D795AC9552A750A5 * L_17 = __this->get_rigidBody_34();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_18 = ___angularVelocity1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21075));
		NullCheck(L_17);
		Rigidbody_set_angularVelocity_m1839DCBC87B01EFD0B4936E84E503E38774B962C(L_17, L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21075));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21065));
	}

IL_007f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21066));
	}

IL_0080:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21067));
	}

IL_0081:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21068));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::GetFirstPointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_GetFirstPointer_m60BDD04D91CA7EFE7E6ACEE7F0FF825877A0956C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21076));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21077));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21078));
		// return pointerIdToPointerMap.Values.First();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21079));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_0 = __this->get_pointerIdToPointerMap_29();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21081));
		NullCheck(L_0);
		ValueCollection_t88A4EC79DC83A399F1719A4FC74FCE9340783BA9 * L_1 = Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6(L_0, /*hidden argument*/Dictionary_2_get_Values_m82EECB9D78570AAB1FE6373BF002E68CA9308AA6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21081));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21082));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_2 = Enumerable_First_TisPointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_m89A13A7E828690671B7F9464D7F0B56218391FC7(L_1, /*hidden argument*/Enumerable_First_TisPointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_m89A13A7E828690671B7F9464D7F0B56218391FC7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21082));
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21080));
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::TryGetGripRotation(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.Quaternion&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, RuntimeObject* ___pointer0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotation1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_2;
	memset((&V_2), 0, sizeof(V_2));
	uint8_t V_3 = 0;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___rotation1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_TryGetGripRotation_m79D353995C9067C9D9ED33D3975A8CB3E0E811AA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21083));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21084));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21085));
		// rotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21086));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_0 = ___rotation1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21096));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21096));
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_0 = L_1;
		// switch (pointer.Controller?.ControllerHandedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21087));
		RuntimeObject* L_2 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21097));
		NullCheck(L_2);
		RuntimeObject* L_3 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityController Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Controller() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21097));
		RuntimeObject* L_4 = L_3;
		G_B1_0 = L_4;
		if (L_4)
		{
			G_B2_0 = L_4;
			goto IL_0021;
		}
	}
	{
		il2cpp_codegen_initobj((&V_2), sizeof(Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 ));
		Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_5 = V_2;
		G_B3_0 = L_5;
		goto IL_002b;
	}

IL_0021:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21098));
		NullCheck(G_B2_0);
		uint8_t L_6 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21098));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21099));
		Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_7;
		memset((&L_7), 0, sizeof(L_7));
		Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B((&L_7), L_6, /*hidden argument*/Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21099));
		G_B3_0 = L_7;
	}

IL_002b:
	{
		V_1 = G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21088));
		Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_8 = V_1;
		V_0 = L_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21100));
		bool L_9 = Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_inline((Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *)(&V_0), /*hidden argument*/Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21100));
		if (!L_9)
		{
			goto IL_0067;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21101));
		uint8_t L_10 = Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_inline((Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *)(&V_0), /*hidden argument*/Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21101));
		V_3 = L_10;
		uint8_t L_11 = V_3;
		if ((((int32_t)L_11) == ((int32_t)1)))
		{
			goto IL_004b;
		}
	}
	{
		goto IL_0045;
	}

IL_0045:
	{
		uint8_t L_12 = V_3;
		if ((((int32_t)L_12) == ((int32_t)2)))
		{
			goto IL_0059;
		}
	}
	{
		goto IL_0067;
	}

IL_004b:
	{
		// rotation = leftHandRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21089));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_13 = ___rotation1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_14 = __this->get_leftHandRotation_37();
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_13 = L_14;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21090));
		goto IL_006c;
	}

IL_0059:
	{
		// rotation = rightHandRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21091));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_15 = ___rotation1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = __this->get_rightHandRotation_38();
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_15 = L_16;
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21092));
		goto IL_006c;
	}

IL_0067:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21093));
		V_4 = (bool)0;
		goto IL_0071;
	}

IL_006c:
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21094));
		V_4 = (bool)1;
		goto IL_0071;
	}

IL_0071:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21095));
		bool L_17 = V_4;
		return L_17;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.TrackingState>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnSourcePoseChanged_m4EBA76A8516B9D3FF4AD275EFDAADCEA5B677ECE (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, SourcePoseEventData_1_tB0375F43F33B46CEA5D6000C5D4568E11AE9F590 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnSourcePoseChanged_m4EBA76A8516B9D3FF4AD275EFDAADCEA5B677ECE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnSourcePoseChanged_m4EBA76A8516B9D3FF4AD275EFDAADCEA5B677ECE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21102));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21103));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21104));
		// public void OnSourcePoseChanged(SourcePoseEventData<TrackingState> eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21105));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Vector2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnSourcePoseChanged_m364320D37454D39AC37C151096142FA9AFA611C7 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, SourcePoseEventData_1_t430F7C5A3C56DD25E51A5E6F637258FD7EE65A33 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnSourcePoseChanged_m364320D37454D39AC37C151096142FA9AFA611C7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnSourcePoseChanged_m364320D37454D39AC37C151096142FA9AFA611C7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21106));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21107));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21108));
		// public void OnSourcePoseChanged(SourcePoseEventData<Vector2> eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21109));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnSourcePoseChanged_m671EB060D1196BDC62597A9F7E00A473FC6CDB69 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, SourcePoseEventData_1_t4E368D6217C6DB36C64907D93C386DBD7181E438 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnSourcePoseChanged_m671EB060D1196BDC62597A9F7E00A473FC6CDB69_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnSourcePoseChanged_m671EB060D1196BDC62597A9F7E00A473FC6CDB69_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21110));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21111));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21112));
		// public void OnSourcePoseChanged(SourcePoseEventData<Vector3> eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21113));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<UnityEngine.Quaternion>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnSourcePoseChanged_m8132B2B3BBD8E936B0202F236615A9CFD2233F29 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, SourcePoseEventData_1_tD410360A48B6B0AE8038633AA1162438C43932B8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnSourcePoseChanged_m8132B2B3BBD8E936B0202F236615A9CFD2233F29_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnSourcePoseChanged_m8132B2B3BBD8E936B0202F236615A9CFD2233F29_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21114));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21115));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21116));
		// public void OnSourcePoseChanged(SourcePoseEventData<Quaternion> eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21117));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnSourcePoseChanged(Microsoft.MixedReality.Toolkit.Input.SourcePoseEventData`1<Microsoft.MixedReality.Toolkit.Utilities.MixedRealityPose>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnSourcePoseChanged_m3C599D93502F9BBF0525DEEDB2B35C5198A0371C (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnSourcePoseChanged_m3C599D93502F9BBF0525DEEDB2B35C5198A0371C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  V_2;
	memset((&V_2), 0, sizeof(V_2));
	uint8_t V_3 = 0;
	MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  V_4;
	memset((&V_4), 0, sizeof(V_4));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnSourcePoseChanged_m3C599D93502F9BBF0525DEEDB2B35C5198A0371C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21118));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21119));
	RuntimeObject* G_B2_0 = NULL;
	RuntimeObject* G_B1_0 = NULL;
	Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21120));
		// switch (eventData.Controller?.ControllerHandedness)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21121));
		SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21129));
		NullCheck(L_0);
		RuntimeObject* L_1 = SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21129));
		RuntimeObject* L_2 = L_1;
		G_B1_0 = L_2;
		if (L_2)
		{
			G_B2_0 = L_2;
			goto IL_0016;
		}
	}
	{
		il2cpp_codegen_initobj((&V_2), sizeof(Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 ));
		Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_3 = V_2;
		G_B3_0 = L_3;
		goto IL_0020;
	}

IL_0016:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21130));
		NullCheck(G_B2_0);
		uint8_t L_4 = InterfaceFuncInvoker0< uint8_t >::Invoke(3 /* Microsoft.MixedReality.Toolkit.Utilities.Handedness Microsoft.MixedReality.Toolkit.Input.IMixedRealityController::get_ControllerHandedness() */, IMixedRealityController_tA6E280BFC4D9FE24AADF2C8FC2150A7872D3E671_il2cpp_TypeInfo_var, G_B2_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21130));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21131));
		Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_5;
		memset((&L_5), 0, sizeof(L_5));
		Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B((&L_5), L_4, /*hidden argument*/Nullable_1__ctor_m823E766F59AF39F4E4F1DB87695B73FA8D181D4B_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21131));
		G_B3_0 = L_5;
	}

IL_0020:
	{
		V_1 = G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21122));
		Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231  L_6 = V_1;
		V_0 = L_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21132));
		bool L_7 = Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_inline((Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *)(&V_0), /*hidden argument*/Nullable_1_get_HasValue_mA695C4BF91D8A19331B9DCF66796F34A2409FADA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21132));
		if (!L_7)
		{
			goto IL_006e;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21133));
		uint8_t L_8 = Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_inline((Nullable_1_tBD5BCA98767B0035CE68E24069088BC9242CB231 *)(&V_0), /*hidden argument*/Nullable_1_GetValueOrDefault_m0732BB3E14200FEF0204CD4062878683EE759DBD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21133));
		V_3 = L_8;
		uint8_t L_9 = V_3;
		if ((((int32_t)L_9) == ((int32_t)1)))
		{
			goto IL_0040;
		}
	}
	{
		goto IL_003a;
	}

IL_003a:
	{
		uint8_t L_10 = V_3;
		if ((((int32_t)L_10) == ((int32_t)2)))
		{
			goto IL_0057;
		}
	}
	{
		goto IL_006e;
	}

IL_0040:
	{
		// leftHandRotation = eventData.SourceData.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21123));
		SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21134));
		NullCheck(L_11);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_12 = SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_inline(L_11, /*hidden argument*/SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21134));
		V_4 = L_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21135));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21135));
		__this->set_leftHandRotation_37(L_13);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21124));
		goto IL_0070;
	}

IL_0057:
	{
		// rightHandRotation = eventData.SourceData.Rotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21125));
		SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * L_14 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21136));
		NullCheck(L_14);
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_15 = SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_inline(L_14, /*hidden argument*/SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21136));
		V_4 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21137));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = MixedRealityPose_get_Rotation_m6A888CC2D81BE74348C5C556880E83DA4418C846((MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 *)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21137));
		__this->set_rightHandRotation_38(L_16);
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21126));
		goto IL_0070;
	}

IL_006e:
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21127));
		goto IL_0070;
	}

IL_0070:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21128));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnSourceDetected(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnSourceDetected_m875E8F5675F532FE39C229B67E2A8CBE87C9D3A9 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnSourceDetected_m875E8F5675F532FE39C229B67E2A8CBE87C9D3A9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnSourceDetected_m875E8F5675F532FE39C229B67E2A8CBE87C9D3A9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21138));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21139));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21140));
		// public void OnSourceDetected(SourceStateEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21141));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::OnSourceLost(Microsoft.MixedReality.Toolkit.Input.SourceStateEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator_OnSourceLost_m6F771F2B5B07B15396CD19A799408C99EABDD51F (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_OnSourceLost_m6F771F2B5B07B15396CD19A799408C99EABDD51F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_OnSourceLost_m6F771F2B5B07B15396CD19A799408C99EABDD51F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21142));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21143));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21144));
		// public void OnSourceLost(SourceStateEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21145));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectManipulator__ctor_mA91A753105F66C64765FEA3A353A764748D9DEC0 (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator__ctor_mA91A753105F66C64765FEA3A353A764748D9DEC0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator__ctor_mA91A753105F66C64765FEA3A353A764748D9DEC0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21146));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21147));
	{
		// private Transform hostTransform = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21148));
		__this->set_hostTransform_4((Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *)NULL);
		// private ManipulationHandFlags manipulationType = ManipulationHandFlags.OneHanded | ManipulationHandFlags.TwoHanded;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21149));
		__this->set_manipulationType_5(3);
		// private TransformFlags twoHandedManipulationType = TransformFlags.Move | TransformFlags.Rotate | TransformFlags.Scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21150));
		__this->set_twoHandedManipulationType_6(7);
		// private bool allowFarManipulation = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21151));
		__this->set_allowFarManipulation_7((bool)1);
		// private bool useForcesForNearManipulation = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21152));
		__this->set_useForcesForNearManipulation_8((bool)0);
		// private RotateInOneHandType oneHandRotationModeNear = RotateInOneHandType.RotateAboutGrabPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21153));
		__this->set_oneHandRotationModeNear_9(1);
		// private RotateInOneHandType oneHandRotationModeFar = RotateInOneHandType.RotateAboutGrabPoint;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21154));
		__this->set_oneHandRotationModeFar_10(1);
		// private ReleaseBehaviorType releaseBehavior = ReleaseBehaviorType.KeepVelocity | ReleaseBehaviorType.KeepAngularVelocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21155));
		__this->set_releaseBehavior_11(3);
		// private SystemType transformSmoothingLogicType = typeof(DefaultTransformSmoothingLogic);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21156));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_0 = { reinterpret_cast<intptr_t> (DefaultTransformSmoothingLogic_t9242FF33F5EDB13226C032ADED70BC6E64EED2E0_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21170));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_1 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21170));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21171));
		IL2CPP_RUNTIME_CLASS_INIT(SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432_il2cpp_TypeInfo_var);
		SystemType_t9696BD865921F75894EBD4D6EF913158A8BF3432 * L_2 = SystemType_op_Implicit_m4937EE683C2F906FD8ED561885D357030CCE3C92(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21171));
		__this->set_transformSmoothingLogicType_12(L_2);
		// private bool smoothingFar = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21157));
		__this->set_smoothingFar_13((bool)1);
		// private bool smoothingNear = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21158));
		__this->set_smoothingNear_14((bool)1);
		// private float moveLerpTime = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21159));
		__this->set_moveLerpTime_15((0.001f));
		// private float rotateLerpTime = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21160));
		__this->set_rotateLerpTime_16((0.001f));
		// private float scaleLerpTime = 0.001f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21161));
		__this->set_scaleLerpTime_17((0.001f));
		// private bool enableConstraints = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21162));
		__this->set_enableConstraints_18((bool)1);
		// private ManipulationEvent onManipulationStarted = new ManipulationEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21172));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_3 = (ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)il2cpp_codegen_object_new(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26_il2cpp_TypeInfo_var);
		ManipulationEvent__ctor_m83A05FF4AD237C7C34AC8B564AA492B7EB0C48FD(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21172));
		__this->set_onManipulationStarted_21(L_3);
		// private ManipulationEvent onManipulationEnded = new ManipulationEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21164));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21173));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_4 = (ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)il2cpp_codegen_object_new(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26_il2cpp_TypeInfo_var);
		ManipulationEvent__ctor_m83A05FF4AD237C7C34AC8B564AA492B7EB0C48FD(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21173));
		__this->set_onManipulationEnded_22(L_4);
		// private ManipulationEvent onHoverEntered = new ManipulationEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21165));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21174));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_5 = (ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)il2cpp_codegen_object_new(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26_il2cpp_TypeInfo_var);
		ManipulationEvent__ctor_m83A05FF4AD237C7C34AC8B564AA492B7EB0C48FD(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21174));
		__this->set_onHoverEntered_23(L_5);
		// private ManipulationEvent onHoverExited = new ManipulationEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21166));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21175));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_6 = (ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 *)il2cpp_codegen_object_new(ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26_il2cpp_TypeInfo_var);
		ManipulationEvent__ctor_m83A05FF4AD237C7C34AC8B564AA492B7EB0C48FD(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21175));
		__this->set_onHoverExited_24(L_6);
		// private Dictionary<uint, PointerData> pointerIdToPointerMap = new Dictionary<uint, PointerData>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21167));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21176));
		Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F * L_7 = (Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F *)il2cpp_codegen_object_new(Dictionary_2_t76DA4983BE82E54FB3230F5083B9C8340D44780F_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m76FCE8DD849EAC0BC38426280427DE68F860E51C(L_7, /*hidden argument*/Dictionary_2__ctor_m76FCE8DD849EAC0BC38426280427DE68F860E51C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21176));
		__this->set_pointerIdToPointerMap_29(L_7);
		// private bool wasGravity = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21168));
		__this->set_wasGravity_35((bool)0);
		// private bool wasKinematic = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21169));
		__this->set_wasKinematic_36((bool)0);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21177));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21177));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData
IL2CPP_EXTERN_C void PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshal_pinvoke(const PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F& unmarshaled, PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_pinvoke& marshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
IL2CPP_EXTERN_C void PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshal_pinvoke_back(const PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_pinvoke& marshaled, PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F& unmarshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData
IL2CPP_EXTERN_C void PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshal_pinvoke_cleanup(PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData
IL2CPP_EXTERN_C void PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshal_com(const PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F& unmarshaled, PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_com& marshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
IL2CPP_EXTERN_C void PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshal_com_back(const PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_com& marshaled, PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F& unmarshaled)
{
	Exception_t* ___pointer_0Exception = il2cpp_codegen_get_marshal_directive_exception("Cannot marshal field 'pointer' of type 'PointerData': Reference type field marshaling is not supported.");
	IL2CPP_RAISE_MANAGED_EXCEPTION(___pointer_0Exception, NULL);
}
// Conversion method for clean up from marshalling of: Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData
IL2CPP_EXTERN_C void PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshal_com_cleanup(PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F_marshaled_com& marshaled)
{
}
// System.Void Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::.ctor(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009 (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * __this, RuntimeObject* ___pointer0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldGrabPoint1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pointer0), (&___worldGrabPoint1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21178));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21179));
	{
		// public PointerData(IMixedRealityPointer pointer, Vector3 worldGrabPoint) : this()
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21180));
		il2cpp_codegen_initobj(__this, sizeof(PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F ));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21181));
		// this.pointer = pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21182));
		RuntimeObject* L_0 = ___pointer0;
		__this->set_pointer_0(L_0);
		// this.initialGrabPointInPointer = Quaternion.Inverse(pointer.Rotation) * (worldGrabPoint - pointer.Position);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21183));
		RuntimeObject* L_1 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21185));
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21185));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21186));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = Quaternion_Inverse_mC3A78571A826F05CE179637E675BD25F8B203E0C(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21186));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = ___worldGrabPoint1;
		RuntimeObject* L_5 = ___pointer0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21187));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21187));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21188));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_4, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21188));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21189));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_3, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21189));
		__this->set_initialGrabPointInPointer_1(L_8);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21184));
		return;
	}
}
IL2CPP_EXTERN_C  void PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009_AdjustorThunk (RuntimeObject * __this, RuntimeObject* ___pointer0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___worldGrabPoint1, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * _thisAdjusted = reinterpret_cast<PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F *>(__this + _offset);
	PointerData__ctor_m8A229DBA7B14923A7CB2DA531A4FF2DBD2842009(_thisAdjusted, ___pointer0, ___worldGrabPoint1, method);
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::get_IsNearPointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21190));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21191));
	{
		// public bool IsNearPointer => pointer is IMixedRealityNearPointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21192));
		RuntimeObject* L_0 = __this->get_pointer_0();
		return (bool)((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_0, IMixedRealityNearPointer_tBBC522C7A9202A4FABA0506A7DFADE31AB47F754_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
	}
}
IL2CPP_EXTERN_C  bool PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * _thisAdjusted = reinterpret_cast<PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F *>(__this + _offset);
	return PointerData_get_IsNearPointer_m21CE988B713BA32B0CC5257289929F37159707BA(_thisAdjusted, method);
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.ObjectManipulator/PointerData::get_GrabPoint()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21193));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21194));
	{
		// public Vector3 GrabPoint => (pointer.Rotation * initialGrabPointInPointer) + pointer.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21195));
		RuntimeObject* L_0 = __this->get_pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21196));
		NullCheck(L_0);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = InterfaceFuncInvoker0< Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  >::Invoke(29 /* UnityEngine.Quaternion Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Rotation() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21196));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = __this->get_initialGrabPointInPointer_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21197));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Quaternion_op_Multiply_mD5999DE317D808808B72E58E7A978C4C0995879C(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21197));
		RuntimeObject* L_4 = __this->get_pointer_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21198));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21198));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21199));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 21199));
		return L_6;
	}
}
IL2CPP_EXTERN_C  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E_AdjustorThunk (RuntimeObject * __this, const RuntimeMethod* method)
{
	int32_t _offset = 1;
	PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F * _thisAdjusted = reinterpret_cast<PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F *>(__this + _offset);
	return PointerData_get_GrabPoint_m799B00262601B498C3D5A8497D5733645108884E(_thisAdjusted, method);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.PanUnityEvent::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PanUnityEvent__ctor_m59D10679D1C26FD4DC6F7C1C37804F04A942F463 (PanUnityEvent_t576F4F1E310A2B14DA15D75B9277BB98A6E81AF6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PanUnityEvent__ctor_m59D10679D1C26FD4DC6F7C1C37804F04A942F463_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PanUnityEvent__ctor_m59D10679D1C26FD4DC6F7C1C37804F04A942F463_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UnityEvent_1__ctor_m0F9361EECA2A2045CBB750F03F51F25EAF1481E0(__this, /*hidden argument*/UnityEvent_1__ctor_m0F9361EECA2A2045CBB750F03F51F25EAF1481E0_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_ThumbRoot()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PinchSlider_get_ThumbRoot_m62AEDD6354A9A3BF5AE45574B3B730C4C17E895B (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_ThumbRoot_m62AEDD6354A9A3BF5AE45574B3B730C4C17E895B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_ThumbRoot_m62AEDD6354A9A3BF5AE45574B3B730C4C17E895B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35041));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35042));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35043));
		// return thumbRoot;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35044));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_thumbRoot_4();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35045));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_ThumbRoot(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_ThumbRoot_mAD9C82F544DABB6C317071BBC3B4A2F79662C72D (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_ThumbRoot_mAD9C82F544DABB6C317071BBC3B4A2F79662C72D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_ThumbRoot_mAD9C82F544DABB6C317071BBC3B4A2F79662C72D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35046));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35047));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35048));
		// thumbRoot = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35049));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_thumbRoot_4(L_0);
		// InitializeSliderThumb();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35050));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35052));
		PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35052));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35051));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_IsTouchable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PinchSlider_get_IsTouchable_mD56C75437B7175DCD19A4143699DBD5F9CD38562 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_IsTouchable_mD56C75437B7175DCD19A4143699DBD5F9CD38562_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_IsTouchable_mD56C75437B7175DCD19A4143699DBD5F9CD38562_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35053));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35054));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35055));
		// get { return isTouchable; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35056));
		bool L_0 = __this->get_isTouchable_5();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return isTouchable; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35057));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_IsTouchable(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_IsTouchable_m4E1DAEECD1D523541F4DD0B26C1246211F29F237 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_IsTouchable_m4E1DAEECD1D523541F4DD0B26C1246211F29F237_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_IsTouchable_m4E1DAEECD1D523541F4DD0B26C1246211F29F237_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35058));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35059));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35060));
		// set { isTouchable = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35061));
		bool L_0 = ___value0;
		__this->set_isTouchable_5(L_0);
		// set { isTouchable = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35062));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SnapToPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PinchSlider_get_SnapToPosition_m84E85515252482BA2C0CB0D6C7045041735DB27A (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SnapToPosition_m84E85515252482BA2C0CB0D6C7045041735DB27A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SnapToPosition_m84E85515252482BA2C0CB0D6C7045041735DB27A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35063));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35064));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35065));
		// get { return snapToPosition; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35066));
		bool L_0 = __this->get_snapToPosition_6();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return snapToPosition; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35067));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SnapToPosition(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SnapToPosition_m88095ABBB4A5E21BF64EDBF97058EE642F9DBE9E (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_SnapToPosition_m88095ABBB4A5E21BF64EDBF97058EE642F9DBE9E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_SnapToPosition_m88095ABBB4A5E21BF64EDBF97058EE642F9DBE9E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35068));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35069));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35070));
		// set { snapToPosition = value; touchCollider.enabled = value; thumbCollider.enabled = !value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35071));
		bool L_0 = ___value0;
		__this->set_snapToPosition_6(L_0);
		// set { snapToPosition = value; touchCollider.enabled = value; thumbCollider.enabled = !value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35072));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_1 = __this->get_touchCollider_8();
		bool L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35075));
		NullCheck(L_1);
		Collider_set_enabled_mF84DE8B0C8CAF33ACDB7F29BC055D9C8CFACB57B(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35075));
		// set { snapToPosition = value; touchCollider.enabled = value; thumbCollider.enabled = !value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35073));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_3 = __this->get_thumbCollider_7();
		bool L_4 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35076));
		NullCheck(L_3);
		Collider_set_enabled_mF84DE8B0C8CAF33ACDB7F29BC055D9C8CFACB57B(L_3, (bool)((((int32_t)L_4) == ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35076));
		// set { snapToPosition = value; touchCollider.enabled = value; thumbCollider.enabled = !value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35074));
		return;
	}
}
// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_ThumbCollider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * PinchSlider_get_ThumbCollider_m6F9A1DF39053663A8DB2E231D48510536C4992C4 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_ThumbCollider_m6F9A1DF39053663A8DB2E231D48510536C4992C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_ThumbCollider_m6F9A1DF39053663A8DB2E231D48510536C4992C4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35077));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35078));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35079));
		// get { return thumbCollider; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35080));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = __this->get_thumbCollider_7();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return thumbCollider; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35081));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_ThumbCollider(UnityEngine.Collider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_ThumbCollider_m7FC75EE0744ACA28DE5043FADF44BE168124D8C6 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_ThumbCollider_m7FC75EE0744ACA28DE5043FADF44BE168124D8C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_ThumbCollider_m7FC75EE0744ACA28DE5043FADF44BE168124D8C6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35082));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35083));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35084));
		// set { thumbCollider = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35085));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = ___value0;
		__this->set_thumbCollider_7(L_0);
		// set { thumbCollider = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35086));
		return;
	}
}
// UnityEngine.Collider Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_TouchCollider()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * PinchSlider_get_TouchCollider_m937DE891453111FEE84B558254E22C3BC33D7C35 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_TouchCollider_m937DE891453111FEE84B558254E22C3BC33D7C35_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_TouchCollider_m937DE891453111FEE84B558254E22C3BC33D7C35_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35087));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35088));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35089));
		// get { return touchCollider; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35090));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = __this->get_touchCollider_8();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return touchCollider; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35091));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_TouchCollider(UnityEngine.Collider)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_TouchCollider_mF638A10669CF7AE7C3DDF670DF25EDBCEAF19961 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_TouchCollider_mF638A10669CF7AE7C3DDF670DF25EDBCEAF19961_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_TouchCollider_mF638A10669CF7AE7C3DDF670DF25EDBCEAF19961_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35092));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35093));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35094));
		// set { touchCollider = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35095));
		Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF * L_0 = ___value0;
		__this->set_touchCollider_8(L_0);
		// set { touchCollider = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35096));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_get_SliderValue_mBBD36F5E24DCE7F6FE869F0F60BA4594983E0E17 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SliderValue_mBBD36F5E24DCE7F6FE869F0F60BA4594983E0E17_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SliderValue_mBBD36F5E24DCE7F6FE869F0F60BA4594983E0E17_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35097));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35098));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35099));
		// get { return sliderValue; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35100));
		float L_0 = __this->get_sliderValue_9();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return sliderValue; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35101));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SliderValue(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35102));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35103));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35104));
		// var oldSliderValue = sliderValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35105));
		float L_0 = __this->get_sliderValue_9();
		V_0 = L_0;
		// sliderValue = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35106));
		float L_1 = ___value0;
		__this->set_sliderValue_9(L_1);
		// UpdateUI();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35107));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35110));
		PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35110));
		// OnValueUpdated.Invoke(new SliderEventData(oldSliderValue, value, ActivePointer, this));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35108));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_2 = __this->get_OnValueUpdated_19();
		float L_3 = V_0;
		float L_4 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35111));
		RuntimeObject* L_5 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35111));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35112));
		SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * L_6 = (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *)il2cpp_codegen_object_new(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var);
		SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D(L_6, L_3, L_4, L_5, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35112));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35113));
		NullCheck(L_2);
		UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC(L_2, L_6, /*hidden argument*/UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35113));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35109));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_UseSliderStepDivisions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PinchSlider_get_UseSliderStepDivisions_mEDD7A104041FF32573C3E97B5DA1621EE7A97722 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_UseSliderStepDivisions_mEDD7A104041FF32573C3E97B5DA1621EE7A97722_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_UseSliderStepDivisions_mEDD7A104041FF32573C3E97B5DA1621EE7A97722_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35114));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35115));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35116));
		// get { return useSliderStepDivisions; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35117));
		bool L_0 = __this->get_useSliderStepDivisions_10();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return useSliderStepDivisions; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35118));
		bool L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_UseSliderStepDivisions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_UseSliderStepDivisions_m32B42A580DA2452CFE04E410B47070BAE18186EA (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_UseSliderStepDivisions_m32B42A580DA2452CFE04E410B47070BAE18186EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_UseSliderStepDivisions_m32B42A580DA2452CFE04E410B47070BAE18186EA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35119));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35120));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35121));
		// set { useSliderStepDivisions = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35122));
		bool L_0 = ___value0;
		__this->set_useSliderStepDivisions_10(L_0);
		// set { useSliderStepDivisions = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35123));
		return;
	}
}
// System.Int32 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderStepDivisions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PinchSlider_get_SliderStepDivisions_mF26274B324DE21B57B34ADFD6EA71A9610DA146B (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SliderStepDivisions_mF26274B324DE21B57B34ADFD6EA71A9610DA146B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SliderStepDivisions_mF26274B324DE21B57B34ADFD6EA71A9610DA146B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35124));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35125));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35126));
		// get { return sliderStepDivisions; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35127));
		int32_t L_0 = __this->get_sliderStepDivisions_11();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return sliderStepDivisions; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35128));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SliderStepDivisions(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SliderStepDivisions_m56A3BF0C2B3ACF36C406FB5B682EDE3F735D9DA7 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_SliderStepDivisions_m56A3BF0C2B3ACF36C406FB5B682EDE3F735D9DA7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_SliderStepDivisions_m56A3BF0C2B3ACF36C406FB5B682EDE3F735D9DA7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35129));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35130));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35131));
		// set { sliderStepDivisions = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35132));
		int32_t L_0 = ___value0;
		__this->set_sliderStepDivisions_11(L_0);
		// set { sliderStepDivisions = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35133));
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_TrackVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35134));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35135));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35136));
		// return trackVisuals;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35137));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_trackVisuals_12();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35138));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_TrackVisuals(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_TrackVisuals_m359351F1BD6DD0D4BA927B8FB4332A69EAE53ECE (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_TrackVisuals_m359351F1BD6DD0D4BA927B8FB4332A69EAE53ECE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_TrackVisuals_m359351F1BD6DD0D4BA927B8FB4332A69EAE53ECE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35139));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35140));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35141));
		// if (trackVisuals != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35142));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_trackVisuals_12();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35149));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35149));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35143));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35144));
		// trackVisuals = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35145));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = ___value0;
		__this->set_trackVisuals_12(L_4);
		// UpdateTrackVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35150));
		PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35150));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35147));
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35148));
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_TickMarks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35151));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35152));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35153));
		// return tickMarks;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35154));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_tickMarks_13();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35155));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_TickMarks(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_TickMarks_m154A6CD1D851AE3277E2C95D0E83E789A438FBA4 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_TickMarks_m154A6CD1D851AE3277E2C95D0E83E789A438FBA4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_TickMarks_m154A6CD1D851AE3277E2C95D0E83E789A438FBA4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35156));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35157));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35158));
		// if (tickMarks != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35159));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_tickMarks_13();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35166));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35166));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35160));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35161));
		// tickMarks = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35162));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = ___value0;
		__this->set_tickMarks_13(L_4);
		// UpdateTickMarks();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35163));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35167));
		PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35167));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35164));
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35165));
		return;
	}
}
// UnityEngine.GameObject Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_ThumbVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35168));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35169));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35170));
		// return thumbVisuals;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35171));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_thumbVisuals_14();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35172));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_ThumbVisuals(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_ThumbVisuals_mD379D3ED7020818D69420ADC3F13249F2585CE58 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_ThumbVisuals_mD379D3ED7020818D69420ADC3F13249F2585CE58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_ThumbVisuals_mD379D3ED7020818D69420ADC3F13249F2585CE58_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35173));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35174));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35175));
		// if (thumbVisuals != value)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35176));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_thumbVisuals_14();
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35183));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35183));
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35177));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35178));
		// thumbVisuals = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35179));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = ___value0;
		__this->set_thumbVisuals_14(L_4);
		// UpdateThumbVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35180));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35184));
		PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35184));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35181));
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35182));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.SliderAxis Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_CurrentSliderAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PinchSlider_get_CurrentSliderAxis_mD079B37B6BAD3AA9000538A23A5240B4A1EDB524 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_CurrentSliderAxis_mD079B37B6BAD3AA9000538A23A5240B4A1EDB524_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_CurrentSliderAxis_mD079B37B6BAD3AA9000538A23A5240B4A1EDB524_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35185));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35186));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35187));
		// get { return sliderAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35188));
		int32_t L_0 = __this->get_sliderAxis_15();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return sliderAxis; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35189));
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_CurrentSliderAxis(Microsoft.MixedReality.Toolkit.UI.SliderAxis)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_CurrentSliderAxis_m2BFE9ED9C96A107D321C96A3F5C2599FC606B2CB (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_CurrentSliderAxis_m2BFE9ED9C96A107D321C96A3F5C2599FC606B2CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_CurrentSliderAxis_m2BFE9ED9C96A107D321C96A3F5C2599FC606B2CB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35190));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35191));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35192));
		// sliderAxis = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35193));
		int32_t L_0 = ___value0;
		__this->set_sliderAxis_15(L_0);
		// UpdateVisualsOrientation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35194));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35196));
		PinchSlider_UpdateVisualsOrientation_m1EEE9683EC7443D7FF8FB21903345462D85F89F3(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35196));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35195));
		return;
	}
}
// Microsoft.MixedReality.Toolkit.UI.SliderAxis Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_PreviousSliderAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PinchSlider_get_PreviousSliderAxis_m10CE18867811ADE200F346104C30FB8E89C1C6E5 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_PreviousSliderAxis_m10CE18867811ADE200F346104C30FB8E89C1C6E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_PreviousSliderAxis_m10CE18867811ADE200F346104C30FB8E89C1C6E5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35197));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35198));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35199));
		// if (previousSliderAxis == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35200));
		Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 * L_0 = __this->get_address_of_previousSliderAxis_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35207));
		bool L_1 = Nullable_1_get_HasValue_mC29B4C7196AADFA83B949CC2581AA1CBC5B29865_inline((Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 *)L_0, /*hidden argument*/Nullable_1_get_HasValue_mC29B4C7196AADFA83B949CC2581AA1CBC5B29865_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35207));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35201));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0026;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35202));
		// previousSliderAxis = CurrentSliderAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35203));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35208));
		int32_t L_3 = PinchSlider_get_CurrentSliderAxis_mD079B37B6BAD3AA9000538A23A5240B4A1EDB524(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35208));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35209));
		Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610  L_4;
		memset((&L_4), 0, sizeof(L_4));
		Nullable_1__ctor_m89465509FD2DFCB2D3544A0595BB690F1404AB66((&L_4), L_3, /*hidden argument*/Nullable_1__ctor_m89465509FD2DFCB2D3544A0595BB690F1404AB66_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35209));
		__this->set_previousSliderAxis_16(L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35204));
	}

IL_0026:
	{
		// return previousSliderAxis.Value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35205));
		Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 * L_5 = __this->get_address_of_previousSliderAxis_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35210));
		int32_t L_6 = Nullable_1_get_Value_m5BAA188D62913A4DECBEFF69D3237AF278432752((Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 *)L_5, /*hidden argument*/Nullable_1_get_Value_m5BAA188D62913A4DECBEFF69D3237AF278432752_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35210));
		V_1 = L_6;
		goto IL_0034;
	}

IL_0034:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35206));
		int32_t L_7 = V_1;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_PreviousSliderAxis(Microsoft.MixedReality.Toolkit.UI.SliderAxis)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_PreviousSliderAxis_m27919E84E9D56615BFCBBADCD64BEA01AF63A82E (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_PreviousSliderAxis_m27919E84E9D56615BFCBBADCD64BEA01AF63A82E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_PreviousSliderAxis_m27919E84E9D56615BFCBBADCD64BEA01AF63A82E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35211));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35212));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35213));
		// previousSliderAxis = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35214));
		int32_t L_0 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35216));
		Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610  L_1;
		memset((&L_1), 0, sizeof(L_1));
		Nullable_1__ctor_m89465509FD2DFCB2D3544A0595BB690F1404AB66((&L_1), L_0, /*hidden argument*/Nullable_1__ctor_m89465509FD2DFCB2D3544A0595BB690F1404AB66_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35216));
		__this->set_previousSliderAxis_16(L_1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35215));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderStartDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_get_SliderStartDistance_mF613AFDA142D3D34FFD8902E8C0708C879A656FB (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SliderStartDistance_mF613AFDA142D3D34FFD8902E8C0708C879A656FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SliderStartDistance_mF613AFDA142D3D34FFD8902E8C0708C879A656FB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35217));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35218));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35219));
		// get { return sliderStartDistance; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35220));
		float L_0 = __this->get_sliderStartDistance_17();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return sliderStartDistance; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35221));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SliderStartDistance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SliderStartDistance_mFC430215869889F726D4ED957FBED4840EE54321 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_SliderStartDistance_mFC430215869889F726D4ED957FBED4840EE54321_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_SliderStartDistance_mFC430215869889F726D4ED957FBED4840EE54321_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35222));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35223));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35224));
		// set { sliderStartDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35225));
		float L_0 = ___value0;
		__this->set_sliderStartDistance_17(L_0);
		// set { sliderStartDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35226));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderEndDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_get_SliderEndDistance_m2C65BC89B90F58F00BC463C7812CF06C60A4FE09 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SliderEndDistance_m2C65BC89B90F58F00BC463C7812CF06C60A4FE09_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SliderEndDistance_m2C65BC89B90F58F00BC463C7812CF06C60A4FE09_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35227));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35228));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35229));
		// get { return sliderEndDistance; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35230));
		float L_0 = __this->get_sliderEndDistance_18();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// get { return sliderEndDistance; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35231));
		float L_1 = V_0;
		return L_1;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SliderEndDistance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SliderEndDistance_m6E5898EFEA5CD39E528CE47061BB5484904722D6 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_SliderEndDistance_m6E5898EFEA5CD39E528CE47061BB5484904722D6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_SliderEndDistance_m6E5898EFEA5CD39E528CE47061BB5484904722D6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35232));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35233));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35234));
		// set { sliderEndDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35235));
		float L_0 = ___value0;
		__this->set_sliderEndDistance_18(L_0);
		// set { sliderEndDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35236));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderStartPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35237));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35238));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35239));
		// get { return transform.TransformPoint(GetSliderAxis() * sliderStartDistance); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35240));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35242));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35242));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35243));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35243));
		float L_2 = __this->get_sliderStartDistance_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35244));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35244));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35245));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35245));
		V_0 = L_4;
		goto IL_0020;
	}

IL_0020:
	{
		// get { return transform.TransformPoint(GetSliderAxis() * sliderStartDistance); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35241));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = V_0;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SliderStartPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SliderStartPosition_m56EC29C72154ACDCAC465101CD2A63D42F350841 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_SliderStartPosition_m56EC29C72154ACDCAC465101CD2A63D42F350841_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_SliderStartPosition_m56EC29C72154ACDCAC465101CD2A63D42F350841_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35246));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35247));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35248));
		// set { sliderStartDistance = Vector3.Dot(transform.InverseTransformPoint(value), GetSliderAxis()); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35249));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35251));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35251));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35252));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35252));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35253));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35253));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35254));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_4 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35254));
		__this->set_sliderStartDistance_17(L_4);
		// set { sliderStartDistance = Vector3.Dot(transform.InverseTransformPoint(value), GetSliderAxis()); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35250));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderEndPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35255));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35256));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35257));
		// get { return transform.TransformPoint(GetSliderAxis() * sliderEndDistance); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35258));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35260));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35260));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35261));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35261));
		float L_2 = __this->get_sliderEndDistance_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35262));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35262));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35263));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Transform_TransformPoint_mA96DC2A20EE7F4F915F7509863A18D99F5DD76CB(L_0, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35263));
		V_0 = L_4;
		goto IL_0020;
	}

IL_0020:
	{
		// get { return transform.TransformPoint(GetSliderAxis() * sliderEndDistance); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35259));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = V_0;
		return L_5;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_SliderEndPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_SliderEndPosition_mE1D6A37FE94B16C890D7833CC2CEB70881507DB5 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_SliderEndPosition_mE1D6A37FE94B16C890D7833CC2CEB70881507DB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_SliderEndPosition_mE1D6A37FE94B16C890D7833CC2CEB70881507DB5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35264));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35265));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35266));
		// set { sliderEndDistance = Vector3.Dot(transform.InverseTransformPoint(value), GetSliderAxis()); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35267));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35269));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35269));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35270));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_InverseTransformPoint_mB6E3145F20B531B4A781C194BAC43A8255C96C47(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35270));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35271));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35271));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35272));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_4 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35272));
		__this->set_sliderEndDistance_18(L_4);
		// set { sliderEndDistance = Vector3.Dot(transform.InverseTransformPoint(value), GetSliderAxis()); }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35268));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_SliderTrackDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35273));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35274));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35275));
		// get { return SliderEndPosition - SliderStartPosition; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35276));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35278));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35278));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35279));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35279));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35280));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35280));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// get { return SliderEndPosition - SliderStartPosition; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35277));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		return L_3;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_sliderStepVal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35281));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35282));
	{
		// private float sliderStepVal => (maxVal - minVal) / sliderStepDivisions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35283));
		int32_t L_0 = __this->get_sliderStepDivisions_11();
		return ((float)((float)(1.0f)/(float)(((float)((float)L_0)))));
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_StartSliderValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35284));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35285));
	{
		// protected float StartSliderValue { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35286));
		float L_0 = __this->get_U3CStartSliderValueU3Ek__BackingField_25();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_StartSliderValue(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35287));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35288));
	{
		// protected float StartSliderValue { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35289));
		float L_0 = ___value0;
		__this->set_U3CStartSliderValueU3Ek__BackingField_25(L_0);
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_StartPointerPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35290));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35291));
	{
		// protected Vector3 StartPointerPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35292));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CStartPointerPositionU3Ek__BackingField_26();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_StartPointerPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35293));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35294));
	{
		// protected Vector3 StartPointerPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35295));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CStartPointerPositionU3Ek__BackingField_26(L_0);
		return;
	}
}
// Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer Microsoft.MixedReality.Toolkit.UI.PinchSlider::get_ActivePointer()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35296));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35297));
	{
		// protected IMixedRealityPointer ActivePointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35298));
		RuntimeObject* L_0 = __this->get_U3CActivePointerU3Ek__BackingField_27();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::set_ActivePointer(Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35299));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35300));
	{
		// protected IMixedRealityPointer ActivePointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35301));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CActivePointerU3Ek__BackingField_27(L_0);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_Start_m4BE0499EB373783E1234D43B4875C819C6823E50 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_Start_m4BE0499EB373783E1234D43B4875C819C6823E50_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_Start_m4BE0499EB373783E1234D43B4875C819C6823E50_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35302));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35303));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35304));
		// if (useSliderStepDivisions)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35305));
		bool L_0 = __this->get_useSliderStepDivisions_10();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35306));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0014;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35307));
		// InitializeStepDivisions();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35308));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35318));
		PinchSlider_InitializeStepDivisions_mC63E8145E9FF4C7894C51EFC66D489C2B33E2CD2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35318));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35309));
	}

IL_0014:
	{
		// if (thumbRoot == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35310));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_2 = __this->get_thumbRoot_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35319));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_3 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_2, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35319));
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35311));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0045;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35312));
		// throw new Exception($"Slider thumb on gameObject {gameObject.name} is not specified. Did you forget to set it?");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35313));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35320));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_5 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35320));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35321));
		NullCheck(L_5);
		String_t* L_6 = Object_get_name_mA2D400141CB3C991C87A2556429781DE961A83CE(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35321));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35322));
		String_t* L_7 = String_Concat_mF4626905368D6558695A823466A1AF65EADB9923(_stringLiteral644C976130D56A4A52962FBC90C8EA6194A50DF4, L_6, _stringLiteral0D27C9C7626DF39667CC96249CE84C8FFB003C3A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35322));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35323));
		Exception_t * L_8 = (Exception_t *)il2cpp_codegen_object_new(Exception_t_il2cpp_TypeInfo_var);
		Exception__ctor_m89BADFF36C3B170013878726E07729D51AA9FBE0(L_8, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35323));
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_8, PinchSlider_Start_m4BE0499EB373783E1234D43B4875C819C6823E50_RuntimeMethod_var);
	}

IL_0045:
	{
		// SnapToPosition = snapToPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35314));
		bool L_9 = __this->get_snapToPosition_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35324));
		PinchSlider_set_SnapToPosition_m88095ABBB4A5E21BF64EDBF97058EE642F9DBE9E(__this, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35324));
		// InitializeSliderThumb();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35315));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35325));
		PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35325));
		// OnValueUpdated.Invoke(new SliderEventData(sliderValue, sliderValue, null, this));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35316));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_10 = __this->get_OnValueUpdated_19();
		float L_11 = __this->get_sliderValue_9();
		float L_12 = __this->get_sliderValue_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35326));
		SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * L_13 = (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *)il2cpp_codegen_object_new(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var);
		SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D(L_13, L_11, L_12, (RuntimeObject*)NULL, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35326));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35327));
		NullCheck(L_10);
		UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC(L_10, L_13, /*hidden argument*/UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35327));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35317));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnDisable_m6B97A4A749CF70CAE446DFB4543DB11D2FC8C581 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnDisable_m6B97A4A749CF70CAE446DFB4543DB11D2FC8C581_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnDisable_m6B97A4A749CF70CAE446DFB4543DB11D2FC8C581_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35328));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35329));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35330));
		// if (ActivePointer != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35337));
		RuntimeObject* L_0 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35337));
		V_0 = (bool)((!(((RuntimeObject*)(RuntimeObject*)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35332));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35333));
		// EndInteraction();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35334));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35338));
		PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35338));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35335));
	}

IL_0017:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35336));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnValidate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnValidate_mDF9E46A319529830972FD60D9A58F0E13F5F6DDA (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnValidate_mDF9E46A319529830972FD60D9A58F0E13F5F6DDA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnValidate_mDF9E46A319529830972FD60D9A58F0E13F5F6DDA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35339));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35340));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35341));
		// CurrentSliderAxis = sliderAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35342));
		int32_t L_0 = __this->get_sliderAxis_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35344));
		PinchSlider_set_CurrentSliderAxis_m2BFE9ED9C96A107D321C96A3F5C2599FC606B2CB(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35344));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35343));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::InitializeSliderThumb()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_InitializeSliderThumb_m6A2822ABB172D78BCF285DE9762FB9BE780EF6D2_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35345));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35346));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35347));
		// var startToThumb = thumbRoot.transform.position - SliderStartPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35348));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_thumbRoot_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35353));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35353));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35354));
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35354));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35355));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35355));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35356));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35356));
		V_0 = L_4;
		// var thumbProjectedOnTrack = SliderStartPosition + Vector3.Project(startToThumb, SliderTrackDirection);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35349));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35357));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35357));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35358));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35358));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35359));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_Project_m3A2D462C2548AA76EB0BCD3305B1E8588347DB9D(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35359));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35360));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_5, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35360));
		V_1 = L_9;
		// sliderThumbOffset = thumbRoot.transform.position - thumbProjectedOnTrack;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35350));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = __this->get_thumbRoot_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35361));
		NullCheck(L_10);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_11 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35361));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35362));
		NullCheck(L_11);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35362));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35363));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35363));
		__this->set_sliderThumbOffset_24(L_14);
		// UpdateUI();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35351));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35364));
		PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35364));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35352));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::InitializeStepDivisions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_InitializeStepDivisions_mC63E8145E9FF4C7894C51EFC66D489C2B33E2CD2 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_InitializeStepDivisions_mC63E8145E9FF4C7894C51EFC66D489C2B33E2CD2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_InitializeStepDivisions_mC63E8145E9FF4C7894C51EFC66D489C2B33E2CD2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35365));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35366));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35367));
		// SliderValue = SnapSliderToStepPositions(SliderValue);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35368));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35370));
		float L_0 = PinchSlider_get_SliderValue_mBBD36F5E24DCE7F6FE869F0F60BA4594983E0E17(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35370));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35371));
		float L_1 = PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35371));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35372));
		PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35372));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35369));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateTrackVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35373));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35374));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35375));
		// if (TrackVisuals)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35376));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35390));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35390));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35391));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35391));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35377));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00ac;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35378));
		// TrackVisuals.transform.localPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35379));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35392));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35392));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35393));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35393));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35394));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35394));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35395));
		NullCheck(L_4);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35395));
		// switch (sliderAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35380));
		int32_t L_6 = __this->get_sliderAxis_15();
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35381));
		int32_t L_7 = V_1;
		switch (L_7)
		{
			case 0:
			{
				goto IL_0045;
			}
			case 1:
			{
				goto IL_005d;
			}
			case 2:
			{
				goto IL_0084;
			}
		}
	}
	{
		goto IL_00ab;
	}

IL_0045:
	{
		// TrackVisuals.transform.localRotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35382));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35396));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35396));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35397));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35397));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35398));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_10 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35398));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35399));
		NullCheck(L_9);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35399));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35383));
		goto IL_00ab;
	}

IL_005d:
	{
		// TrackVisuals.transform.localRotation = Quaternion.Euler(0.0f, 0.0f, 90.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35384));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35400));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35400));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35401));
		NullCheck(L_11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35401));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35402));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05((0.0f), (0.0f), (90.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35402));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35403));
		NullCheck(L_12);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35403));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35385));
		goto IL_00ab;
	}

IL_0084:
	{
		// TrackVisuals.transform.localRotation = Quaternion.Euler(0.0f, 90.0f, 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35386));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35404));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = PinchSlider_get_TrackVisuals_m60E31DA72DEA9E116E9CC61B50DDE9C4CB4CE1DF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35404));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35405));
		NullCheck(L_14);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35405));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35406));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05((0.0f), (90.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35406));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35407));
		NullCheck(L_15);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35407));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35387));
		goto IL_00ab;
	}

IL_00ab:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35388));
	}

IL_00ac:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35389));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateTickMarks()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * V_1 = NULL;
	bool V_2 = false;
	int32_t V_3 = 0;
	bool V_4 = false;
	bool V_5 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35408));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35409));
	GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * G_B7_0 = NULL;
	GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * G_B6_0 = NULL;
	int32_t G_B8_0 = 0;
	GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * G_B8_1 = NULL;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35410));
		// if (TickMarks)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35411));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35439));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35439));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35440));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35440));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35412));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00db;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35413));
		// TickMarks.transform.localPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35414));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35441));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35441));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35442));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35442));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35443));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35443));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35444));
		NullCheck(L_4);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35444));
		// TickMarks.transform.localRotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35415));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35445));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_6 = PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35445));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35446));
		NullCheck(L_6);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_7 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35446));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35447));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_8 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35447));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35448));
		NullCheck(L_7);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35448));
		// var grid = TickMarks.GetComponent<Utilities.GridObjectCollection>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35416));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35449));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35449));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35450));
		NullCheck(L_9);
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_10 = GameObject_GetComponent_TisGridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4_mE86F5C2AB5CD50711C1600A28E4A4BE75B12F100(L_9, /*hidden argument*/GameObject_GetComponent_TisGridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4_mE86F5C2AB5CD50711C1600A28E4A4BE75B12F100_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35450));
		V_1 = L_10;
		// if (grid)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35417));
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35451));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_12 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35451));
		V_2 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35418));
		bool L_13 = V_2;
		if (!L_13)
		{
			goto IL_00a4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35419));
		// var previousAxis = grid.Layout;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35420));
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_14 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35452));
		NullCheck(L_14);
		int32_t L_15 = GridObjectCollection_get_Layout_m96EDF92332EDE459727901EC07E140B64C44E0E1(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35452));
		V_3 = L_15;
		// if (previousAxis == Utilities.LayoutOrder.Vertical)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35421));
		int32_t L_16 = V_3;
		V_4 = (bool)((((int32_t)L_16) == ((int32_t)3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35422));
		bool L_17 = V_4;
		if (!L_17)
		{
			goto IL_0079;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35423));
		// grid.CellWidth = grid.CellHeight;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35424));
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_18 = V_1;
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_19 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35453));
		NullCheck(L_19);
		float L_20 = GridObjectCollection_get_CellHeight_m1C4B4F4536B4B623B001A4420051135CAA61C269(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35453));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35454));
		NullCheck(L_18);
		GridObjectCollection_set_CellWidth_m3FB013D09E5B26F7B37098E18B55E6878129CC7D(L_18, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35454));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35425));
		goto IL_0088;
	}

IL_0079:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35426));
		// grid.CellHeight = grid.CellWidth;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35427));
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_21 = V_1;
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_22 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35455));
		NullCheck(L_22);
		float L_23 = GridObjectCollection_get_CellWidth_mBADA4F8389BA606453C7945E16049DE32DC62245(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35455));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35456));
		NullCheck(L_21);
		GridObjectCollection_set_CellHeight_m2010B0EB3DAFB3587E753C89D99F1F8E930086B3(L_21, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35456));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35428));
	}

IL_0088:
	{
		// grid.Layout = (sliderAxis == SliderAxis.YAxis) ? Utilities.LayoutOrder.Vertical : Utilities.LayoutOrder.Horizontal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35429));
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_24 = V_1;
		int32_t L_25 = __this->get_sliderAxis_15();
		G_B6_0 = L_24;
		if ((((int32_t)L_25) == ((int32_t)1)))
		{
			G_B7_0 = L_24;
			goto IL_0095;
		}
	}
	{
		G_B8_0 = 2;
		G_B8_1 = G_B6_0;
		goto IL_0096;
	}

IL_0095:
	{
		G_B8_0 = 3;
		G_B8_1 = G_B7_0;
	}

IL_0096:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35457));
		NullCheck(G_B8_1);
		GridObjectCollection_set_Layout_mC1F6A12B934C62FB23A2FD0FE2A27C301A9FEC17(G_B8_1, G_B8_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35457));
		// grid.UpdateCollection();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35430));
		GridObjectCollection_tAA32F8B1DA3ECCBFF6807495E876FCD36FE6DFC4 * L_26 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35458));
		NullCheck(L_26);
		VirtActionInvoker0::Invoke(4 /* System.Void Microsoft.MixedReality.Toolkit.Utilities.BaseObjectCollection::UpdateCollection() */, L_26);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35458));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35431));
	}

IL_00a4:
	{
		// if (sliderAxis == SliderAxis.ZAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35432));
		int32_t L_27 = __this->get_sliderAxis_15();
		V_5 = (bool)((((int32_t)L_27) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35433));
		bool L_28 = V_5;
		if (!L_28)
		{
			goto IL_00da;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35434));
		// TickMarks.transform.localRotation = Quaternion.Euler(0.0f, 90.0f, 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35435));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35459));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_29 = PinchSlider_get_TickMarks_m22A108CF484211903932B157F4CAA2AAC21FB0A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35459));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35460));
		NullCheck(L_29);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_30 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35460));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35461));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_31 = Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05((0.0f), (90.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35461));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35462));
		NullCheck(L_30);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_30, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35462));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35436));
	}

IL_00da:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35437));
	}

IL_00db:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35438));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateThumbVisuals()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35463));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35464));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35465));
		// if (ThumbVisuals)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35466));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35480));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35480));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35481));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35481));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35467));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00ac;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35468));
		// ThumbVisuals.transform.localPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35469));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35482));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35482));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35483));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35483));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35484));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35484));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35485));
		NullCheck(L_4);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_4, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35485));
		// switch (sliderAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35470));
		int32_t L_6 = __this->get_sliderAxis_15();
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35471));
		int32_t L_7 = V_1;
		switch (L_7)
		{
			case 0:
			{
				goto IL_0045;
			}
			case 1:
			{
				goto IL_005d;
			}
			case 2:
			{
				goto IL_0084;
			}
		}
	}
	{
		goto IL_00ab;
	}

IL_0045:
	{
		// ThumbVisuals.transform.localRotation = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35472));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35486));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_8 = PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35486));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35487));
		NullCheck(L_8);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35487));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35488));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_10 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35488));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35489));
		NullCheck(L_9);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_9, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35489));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35473));
		goto IL_00ab;
	}

IL_005d:
	{
		// ThumbVisuals.transform.localRotation = Quaternion.Euler(0.0f, 0.0f, 90.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35474));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35490));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35490));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35491));
		NullCheck(L_11);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_12 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35491));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35492));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_13 = Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05((0.0f), (0.0f), (90.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35492));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35493));
		NullCheck(L_12);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35493));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35475));
		goto IL_00ab;
	}

IL_0084:
	{
		// ThumbVisuals.transform.localRotation = Quaternion.Euler(0.0f, 90.0f, 0.0f);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35476));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35494));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_14 = PinchSlider_get_ThumbVisuals_mD07C238D02F79869143EC9C517B653E93BD0C60F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35494));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35495));
		NullCheck(L_14);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35495));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35496));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = Quaternion_Euler_m537DD6CEAE0AD4274D8A84414C24C30730427D05((0.0f), (90.0f), (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35496));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35497));
		NullCheck(L_15);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_15, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35497));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35477));
		goto IL_00ab;
	}

IL_00ab:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35478));
	}

IL_00ac:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35479));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateVisualsOrientation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateVisualsOrientation_m1EEE9683EC7443D7FF8FB21903345462D85F89F3 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_UpdateVisualsOrientation_m1EEE9683EC7443D7FF8FB21903345462D85F89F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_UpdateVisualsOrientation_m1EEE9683EC7443D7FF8FB21903345462D85F89F3_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35498));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35499));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35500));
		// if (PreviousSliderAxis != sliderAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35501));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35510));
		int32_t L_0 = PinchSlider_get_PreviousSliderAxis_m10CE18867811ADE200F346104C30FB8E89C1C6E5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35510));
		int32_t L_1 = __this->get_sliderAxis_15();
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35502));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_003a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35503));
		// UpdateThumbVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35504));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35511));
		PinchSlider_UpdateThumbVisuals_mFC6EFFFC510FC5D39A281BEBACC3D346B6839BF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35511));
		// UpdateTrackVisuals();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35505));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35512));
		PinchSlider_UpdateTrackVisuals_m14E5B7BDBB77C27428E5745D0676EB2703C796FF(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35512));
		// UpdateTickMarks();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35506));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35513));
		PinchSlider_UpdateTickMarks_mAC7755F4E0A1C006FFB1E70F311B3A3E8E0B1896(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35513));
		// PreviousSliderAxis = sliderAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35507));
		int32_t L_3 = __this->get_sliderAxis_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35514));
		PinchSlider_set_PreviousSliderAxis_m27919E84E9D56615BFCBBADCD64BEA01AF63A82E(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35514));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35508));
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35509));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PinchSlider::GetSliderAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35515));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35516));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35517));
		// switch (sliderAxis)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35518));
		int32_t L_0 = __this->get_sliderAxis_15();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35519));
		int32_t L_1 = V_0;
		switch (L_1)
		{
			case 0:
			{
				goto IL_001c;
			}
			case 1:
			{
				goto IL_0024;
			}
			case 2:
			{
				goto IL_002c;
			}
		}
	}
	{
		goto IL_0034;
	}

IL_001c:
	{
		// return Vector3.right;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35520));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35525));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_right_m6DD9559CA0C75BBA42D9140021C4C2A9AAA9B3F5(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35525));
		V_1 = L_2;
		goto IL_003f;
	}

IL_0024:
	{
		// return Vector3.up;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35521));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35526));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35526));
		V_1 = L_3;
		goto IL_003f;
	}

IL_002c:
	{
		// return Vector3.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35522));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35527));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35527));
		V_1 = L_4;
		goto IL_003f;
	}

IL_0034:
	{
		// throw new ArgumentOutOfRangeException("Invalid slider axis");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35523));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35528));
		ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA * L_5 = (ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA *)il2cpp_codegen_object_new(ArgumentOutOfRangeException_t94D19DF918A54511AEDF4784C9A08741BAD1DEDA_il2cpp_TypeInfo_var);
		ArgumentOutOfRangeException__ctor_m6B36E60C989DC798A8B44556DB35960282B133A6(L_5, _stringLiteral94D3B83DC69E89CBAA3242AC31983A99C843A351, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35528));
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, PinchSlider_GetSliderAxis_m737B0711CF15E27CBAFB4BB98B9A5649C75EE9AE_RuntimeMethod_var);
	}

IL_003f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35524));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_1;
		return L_6;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::UpdateUI()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_UpdateUI_mC203CC68D073DC9A877DFC5ABF9C030293B63B15_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35529));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35530));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35531));
		// var newSliderPos = SliderStartPosition + sliderThumbOffset + SliderTrackDirection * sliderValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35532));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35535));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35535));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = __this->get_sliderThumbOffset_24();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35536));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35536));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35537));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35537));
		float L_4 = __this->get_sliderValue_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35538));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35538));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35539));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_2, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35539));
		V_0 = L_6;
		// thumbRoot.transform.position = newSliderPos;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35533));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_7 = __this->get_thumbRoot_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35540));
		NullCheck(L_7);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35540));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35541));
		NullCheck(L_8);
		Transform_set_position_mDA89E4893F14ECA5CBEEE7FB80A5BF7C1B8EA6DC(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35541));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35534));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::EndInteraction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35542));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35543));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35544));
		// if (OnInteractionEnded != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35545));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_0 = __this->get_OnInteractionEnded_21();
		V_0 = (bool)((!(((RuntimeObject*)(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35546));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0034;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35547));
		// OnInteractionEnded.Invoke(new SliderEventData(sliderValue, sliderValue, ActivePointer, this));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35548));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_2 = __this->get_OnInteractionEnded_21();
		float L_3 = __this->get_sliderValue_9();
		float L_4 = __this->get_sliderValue_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35552));
		RuntimeObject* L_5 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35552));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35553));
		SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * L_6 = (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *)il2cpp_codegen_object_new(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var);
		SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D(L_6, L_3, L_4, L_5, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35553));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35554));
		NullCheck(L_2);
		UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC(L_2, L_6, /*hidden argument*/UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35554));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35549));
	}

IL_0034:
	{
		// ActivePointer = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35550));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35555));
		PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_inline(__this, (RuntimeObject*)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35555));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35551));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PinchSlider::SnapSliderToStepPositions(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35556));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35557));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35558));
		// var stepCount = value / sliderStepVal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35559));
		float L_0 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35564));
		float L_1 = PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35564));
		V_0 = ((float)((float)L_0/(float)L_1));
		// var snappedValue = sliderStepVal * Mathf.RoundToInt(stepCount);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35560));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35565));
		float L_2 = PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35565));
		float L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35566));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		int32_t L_4 = Mathf_RoundToInt_m0EAD8BD38FCB72FA1D8A04E96337C820EC83F041(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35566));
		V_1 = ((float)il2cpp_codegen_multiply((float)L_2, (float)(((float)((float)L_4)))));
		// Mathf.Clamp(snappedValue, minVal, maxVal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35561));
		float L_5 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35567));
		Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_5, (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35567));
		// return snappedValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35562));
		float L_6 = V_1;
		V_2 = L_6;
		goto IL_002e;
	}

IL_002e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35563));
		float L_7 = V_2;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::CalculateSliderValueBasedOnTouchPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___touchPoint0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	bool V_5 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___touchPoint0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35568));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35569));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35570));
		// var sliderTouchPoint = touchPoint - SliderStartPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35571));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___touchPoint0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35589));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35589));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35590));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35590));
		V_0 = L_2;
		// var sliderVector = SliderEndPosition - SliderStartPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35572));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35591));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = PinchSlider_get_SliderEndPosition_mE135A3A04D1C80C69DB21EC98A81FCB2896FB50D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35591));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35592));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = PinchSlider_get_SliderStartPosition_mE3B6B1BE3F3A270DBDA7BB9B373025C87214B5A9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35592));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35593));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35593));
		V_1 = L_5;
		// if (Vector3.Dot(sliderTouchPoint, sliderVector) < 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35573));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35594));
		float L_8 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35594));
		V_5 = (bool)((((float)L_8) < ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35574));
		bool L_9 = V_5;
		if (!L_9)
		{
			goto IL_0043;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35575));
		// SliderValue = minVal;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35576));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35595));
		PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99(__this, (0.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35595));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35577));
		goto IL_0094;
	}

IL_0043:
	{
		// float sliderProgress = Vector3.Project(sliderTouchPoint, sliderVector).magnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35578));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35596));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = Vector3_Project_m3A2D462C2548AA76EB0BCD3305B1E8588347DB9D(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35596));
		V_6 = L_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35597));
		float L_13 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35597));
		V_2 = L_13;
		// float result = sliderProgress / sliderVector.magnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35579));
		float L_14 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35598));
		float L_15 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35598));
		V_3 = ((float)((float)L_14/(float)L_15));
		// float clampedResult = result;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35580));
		float L_16 = V_3;
		V_4 = L_16;
		// if (UseSliderStepDivisions)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35581));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35599));
		bool L_17 = PinchSlider_get_UseSliderStepDivisions_mEDD7A104041FF32573C3E97B5DA1621EE7A97722(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35599));
		V_7 = L_17;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35582));
		bool L_18 = V_7;
		if (!L_18)
		{
			goto IL_0078;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35583));
		// clampedResult = SnapSliderToStepPositions(result);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35584));
		float L_19 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35600));
		float L_20 = PinchSlider_SnapSliderToStepPositions_mCC6921601679032FA0FE49D808721F396722737A(__this, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35600));
		V_4 = L_20;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35585));
	}

IL_0078:
	{
		// clampedResult = Mathf.Clamp(clampedResult, minVal, maxVal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35586));
		float L_21 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35601));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_22 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_21, (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35601));
		V_4 = L_22;
		// SliderValue = clampedResult;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35587));
		float L_23 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35602));
		PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99(__this, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35602));
	}

IL_0094:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35588));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnFocusEnter(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnFocusEnter_m2300A8FC5C1553B35A1AFDCDB757F638693C3BB7 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnFocusEnter_m2300A8FC5C1553B35A1AFDCDB757F638693C3BB7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnFocusEnter_m2300A8FC5C1553B35A1AFDCDB757F638693C3BB7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35603));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35604));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35605));
		// OnHoverEntered.Invoke(new SliderEventData(sliderValue, sliderValue, eventData.Pointer, this));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35606));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_0 = __this->get_OnHoverEntered_22();
		float L_1 = __this->get_sliderValue_9();
		float L_2 = __this->get_sliderValue_9();
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_3 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35608));
		NullCheck(L_3);
		RuntimeObject* L_4 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35608));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35609));
		SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * L_5 = (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *)il2cpp_codegen_object_new(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var);
		SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D(L_5, L_1, L_2, L_4, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35609));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35610));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC(L_0, L_5, /*hidden argument*/UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35610));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35607));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnFocusExit(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnFocusExit_m023CBC70BDD6FA6F2C13A79FBECBBFA3589B3035 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnFocusExit_m023CBC70BDD6FA6F2C13A79FBECBBFA3589B3035_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnFocusExit_m023CBC70BDD6FA6F2C13A79FBECBBFA3589B3035_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35611));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35612));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35613));
		// OnHoverExited.Invoke(new SliderEventData(sliderValue, sliderValue, eventData.Pointer, this));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35614));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_0 = __this->get_OnHoverExited_23();
		float L_1 = __this->get_sliderValue_9();
		float L_2 = __this->get_sliderValue_9();
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_3 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35616));
		NullCheck(L_3);
		RuntimeObject* L_4 = FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35616));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35617));
		SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * L_5 = (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *)il2cpp_codegen_object_new(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var);
		SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D(L_5, L_1, L_2, L_4, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35617));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35618));
		NullCheck(L_0);
		UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC(L_0, L_5, /*hidden argument*/UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35618));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35615));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnPointerUp(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnPointerUp_mED760D3F0106E6C04520DADBA787D185DD2B2FD6 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnPointerUp_mED760D3F0106E6C04520DADBA787D185DD2B2FD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnPointerUp_mED760D3F0106E6C04520DADBA787D185DD2B2FD6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35619));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35620));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35621));
		// if (eventData.Pointer == ActivePointer && !eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35622));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35629));
		NullCheck(L_0);
		RuntimeObject* L_1 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35629));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35630));
		RuntimeObject* L_2 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35630));
		if ((!(((RuntimeObject*)(RuntimeObject*)L_1) == ((RuntimeObject*)(RuntimeObject*)L_2))))
		{
			goto IL_001a;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_3 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35631));
		NullCheck(L_3);
		bool L_4 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35631));
		G_B3_0 = ((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 0;
	}

IL_001b:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35623));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_002f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35624));
		// EndInteraction();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35625));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35632));
		PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35632));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35626));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35633));
		NullCheck(L_6);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35633));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35627));
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35628));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnPointerDown(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnPointerDown_mD677D654D4A6E1AA9160D5EC03C07C5BA33676FB (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnPointerDown_mD677D654D4A6E1AA9160D5EC03C07C5BA33676FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnPointerDown_mD677D654D4A6E1AA9160D5EC03C07C5BA33676FB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35634));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35635));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35636));
		// if (ActivePointer == null && !eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35637));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35656));
		RuntimeObject* L_0 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35656));
		if (L_0)
		{
			goto IL_0014;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35657));
		NullCheck(L_1);
		bool L_2 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35657));
		G_B3_0 = ((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		goto IL_0015;
	}

IL_0014:
	{
		G_B3_0 = 0;
	}

IL_0015:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35638));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_00af;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35639));
		// ActivePointer = eventData.Pointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35640));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_4 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35658));
		NullCheck(L_4);
		RuntimeObject* L_5 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35658));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35659));
		PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_inline(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35659));
		// StartPointerPosition = ActivePointer.Position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35641));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35660));
		RuntimeObject* L_6 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35660));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35661));
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35661));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35662));
		PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_inline(__this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35662));
		// if (SnapToPosition)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35642));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35663));
		bool L_8 = PinchSlider_get_SnapToPosition_m84E85515252482BA2C0CB0D6C7045041735DB27A(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35663));
		V_1 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35643));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_0067;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35644));
		// CalculateSliderValueBasedOnTouchPoint(ActivePointer.Result.Details.Point);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35645));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35664));
		RuntimeObject* L_10 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35664));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35665));
		NullCheck(L_10);
		RuntimeObject* L_11 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(22 /* Microsoft.MixedReality.Toolkit.Input.IPointerResult Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Result() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35665));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35666));
		NullCheck(L_11);
		FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  L_12 = InterfaceFuncInvoker0< FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7  >::Invoke(1 /* Microsoft.MixedReality.Toolkit.Physics.FocusDetails Microsoft.MixedReality.Toolkit.Input.IPointerResult::get_Details() */, IPointerResult_t4B4DC471C74944784622658607BD11DF181BB278_il2cpp_TypeInfo_var, L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35666));
		V_2 = L_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35667));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline((FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35668));
		PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373(__this, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35668));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35646));
	}

IL_0067:
	{
		// if (OnInteractionStarted != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35647));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_14 = __this->get_OnInteractionStarted_20();
		V_3 = (bool)((!(((RuntimeObject*)(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)L_14) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35648));
		bool L_15 = V_3;
		if (!L_15)
		{
			goto IL_009a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35649));
		// OnInteractionStarted.Invoke(new SliderEventData(sliderValue, sliderValue, ActivePointer, this));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35650));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_16 = __this->get_OnInteractionStarted_20();
		float L_17 = __this->get_sliderValue_9();
		float L_18 = __this->get_sliderValue_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35669));
		RuntimeObject* L_19 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35669));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35670));
		SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * L_20 = (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *)il2cpp_codegen_object_new(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var);
		SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D(L_20, L_17, L_18, L_19, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35670));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35671));
		NullCheck(L_16);
		UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC(L_16, L_20, /*hidden argument*/UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35671));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35651));
	}

IL_009a:
	{
		// StartSliderValue = sliderValue;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35652));
		float L_21 = __this->get_sliderValue_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35672));
		PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_inline(__this, L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35672));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35653));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_22 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35673));
		NullCheck(L_22);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35673));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35654));
	}

IL_00af:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35655));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnPointerDragged(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnPointerDragged_m85A8AB7F1BC871E39692D9510AF3B8DA1F755560 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnPointerDragged_m85A8AB7F1BC871E39692D9510AF3B8DA1F755560_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	float V_2 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	bool V_4 = false;
	float V_5 = 0.0f;
	float V_6 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2), (&V_5), (&V_6));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnPointerDragged_m85A8AB7F1BC871E39692D9510AF3B8DA1F755560_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35674));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35675));
	int32_t G_B3_0 = 0;
	float G_B8_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35676));
		// if (eventData.Pointer == ActivePointer && !eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35677));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35695));
		NullCheck(L_0);
		RuntimeObject* L_1 = MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35695));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35696));
		RuntimeObject* L_2 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35696));
		if ((!(((RuntimeObject*)(RuntimeObject*)L_1) == ((RuntimeObject*)(RuntimeObject*)L_2))))
		{
			goto IL_001a;
		}
	}
	{
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_3 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35697));
		NullCheck(L_3);
		bool L_4 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35697));
		G_B3_0 = ((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 0;
	}

IL_001b:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35678));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0108;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35679));
		// var delta = ActivePointer.Position - StartPointerPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35680));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35698));
		RuntimeObject* L_6 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35698));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35699));
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = InterfaceFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(28 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_Position() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35699));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35700));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35700));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35701));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_7, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35701));
		V_1 = L_9;
		// var handDelta = Vector3.Dot(SliderTrackDirection.normalized, delta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35681));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35702));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35702));
		V_3 = L_10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35703));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35703));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35704));
		float L_13 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35704));
		V_2 = L_13;
		// if (useSliderStepDivisions)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35682));
		bool L_14 = __this->get_useSliderStepDivisions_10();
		V_4 = L_14;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35683));
		bool L_15 = V_4;
		if (!L_15)
		{
			goto IL_00d1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35684));
		// var stepVal = (handDelta / SliderTrackDirection.magnitude > 0) ? sliderStepVal : (sliderStepVal * -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35685));
		float L_16 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35705));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35705));
		V_3 = L_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35706));
		float L_18 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35706));
		if ((((float)((float)((float)L_16/(float)L_18))) > ((float)(0.0f))))
		{
			goto IL_0081;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35707));
		float L_19 = PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35707));
		G_B8_0 = ((float)il2cpp_codegen_multiply((float)L_19, (float)(-1.0f)));
		goto IL_0087;
	}

IL_0081:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35708));
		float L_20 = PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35708));
		G_B8_0 = L_20;
	}

IL_0087:
	{
		V_5 = G_B8_0;
		// var stepMag = Mathf.Floor(Mathf.Abs(handDelta / SliderTrackDirection.magnitude) / sliderStepVal);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35686));
		float L_21 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35709));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_22 = PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35709));
		V_3 = L_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35710));
		float L_23 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35710));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35711));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_24 = fabsf(((float)((float)L_21/(float)L_23)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35711));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35712));
		float L_25 = PinchSlider_get_sliderStepVal_mAB9D468235B4F89224D6908DAD0A20CF044DCEAB(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35712));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35713));
		float L_26 = floorf(((float)((float)L_24/(float)L_25)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35713));
		V_6 = L_26;
		// SliderValue = Mathf.Clamp(StartSliderValue + (stepVal * stepMag), 0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35687));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35714));
		float L_27 = PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35714));
		float L_28 = V_5;
		float L_29 = V_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35715));
		float L_30 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(((float)il2cpp_codegen_add((float)L_27, (float)((float)il2cpp_codegen_multiply((float)L_28, (float)L_29)))), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35715));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35716));
		PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99(__this, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35716));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35688));
		goto IL_0100;
	}

IL_00d1:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35689));
		// SliderValue = Mathf.Clamp(StartSliderValue + handDelta / SliderTrackDirection.magnitude, 0, 1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35690));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35717));
		float L_31 = PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35717));
		float L_32 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35718));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_33 = PinchSlider_get_SliderTrackDirection_m5EB981C676D478E7A922CDAF4A6AFA71C0D6ECF1(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35718));
		V_3 = L_33;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35719));
		float L_34 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35719));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35720));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_35 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(((float)il2cpp_codegen_add((float)L_31, (float)((float)((float)L_32/(float)L_34)))), (0.0f), (1.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35720));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35721));
		PinchSlider_set_SliderValue_m977860D8A32732BCB146099D0FE42CC167F1DD99(__this, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35721));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35691));
	}

IL_0100:
	{
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35692));
		MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * L_36 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35722));
		NullCheck(L_36);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_36);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35722));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35693));
	}

IL_0108:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35694));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnPointerClicked(Microsoft.MixedReality.Toolkit.Input.MixedRealityPointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnPointerClicked_m6EBCC7EE55E1713CFFC7F1D8613EAF98488E35EA (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnPointerClicked_m6EBCC7EE55E1713CFFC7F1D8613EAF98488E35EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnPointerClicked_m6EBCC7EE55E1713CFFC7F1D8613EAF98488E35EA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35723));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35724));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35725));
		// public void OnPointerClicked(MixedRealityPointerEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35726));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnTouchStarted(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnTouchStarted_m91992FCC9906EA380D6395C94EC4C12C7A86007F (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnTouchStarted_m91992FCC9906EA380D6395C94EC4C12C7A86007F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnTouchStarted_m91992FCC9906EA380D6395C94EC4C12C7A86007F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35727));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35728));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35729));
		// if (isTouchable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35730));
		bool L_0 = __this->get_isTouchable_5();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35731));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0047;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35732));
		// if (OnInteractionStarted != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35733));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_2 = __this->get_OnInteractionStarted_20();
		V_1 = (bool)((!(((RuntimeObject*)(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35734));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35735));
		// OnInteractionStarted.Invoke(new SliderEventData(sliderValue, sliderValue, ActivePointer, this));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35736));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_4 = __this->get_OnInteractionStarted_20();
		float L_5 = __this->get_sliderValue_9();
		float L_6 = __this->get_sliderValue_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35741));
		RuntimeObject* L_7 = PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35741));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35742));
		SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C * L_8 = (SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C *)il2cpp_codegen_object_new(SliderEventData_tDD1C9F24E2D60E321B26CE2DC2E986437F5FD66C_il2cpp_TypeInfo_var);
		SliderEventData__ctor_m9FD8F5ECEF7041D84B430991BA7E1F314BC7E39D(L_8, L_5, L_6, L_7, __this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35742));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35743));
		NullCheck(L_4);
		UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC(L_4, L_8, /*hidden argument*/UnityEvent_1_Invoke_m89A39367A4C561D0DFEB76899E9ABB68814BBDBC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35743));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35737));
	}

IL_003f:
	{
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35738));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_9 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35744));
		NullCheck(L_9);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_9);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35744));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35739));
	}

IL_0047:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35740));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnTouchCompleted(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnTouchCompleted_mE6F32408342DF091032307A9EB4626F61072BBD7 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnTouchCompleted_mE6F32408342DF091032307A9EB4626F61072BBD7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnTouchCompleted_mE6F32408342DF091032307A9EB4626F61072BBD7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35745));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35746));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35747));
		// if (isTouchable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35748));
		bool L_0 = __this->get_isTouchable_5();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35749));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35750));
		// if (!eventData.used)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35751));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35759));
		NullCheck(L_2);
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(6 /* System.Boolean UnityEngine.EventSystems.AbstractEventData::get_used() */, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35759));
		V_1 = (bool)((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35752));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35753));
		// EndInteraction();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35754));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35760));
		PinchSlider_EndInteraction_m22A0B709C18014811B99ECD269362207C9D8487C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35760));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35755));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_5 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35761));
		NullCheck(L_5);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_5);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35761));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35756));
	}

IL_0029:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35757));
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35758));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::OnTouchUpdated(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider_OnTouchUpdated_m5A015377DB7569EDF549627A377B4C8F77A5ABA2 (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_OnTouchUpdated_m5A015377DB7569EDF549627A377B4C8F77A5ABA2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_OnTouchUpdated_m5A015377DB7569EDF549627A377B4C8F77A5ABA2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35762));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35763));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35764));
		// if(isTouchable)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35765));
		bool L_0 = __this->get_isTouchable_5();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35766));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_001a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35767));
		// CalculateSliderValueBasedOnTouchPoint(eventData.InputData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35768));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35771));
		NullCheck(L_2);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_inline(L_2, /*hidden argument*/InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35771));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35772));
		PinchSlider_CalculateSliderValueBasedOnTouchPoint_m2C479201B753F8B4B3E71AD8F95AC931F26F3373(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35772));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35769));
	}

IL_001a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35770));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PinchSlider::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PinchSlider__ctor_mA3314E097B50883E4649DFF4E838714EF49DB20F (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider__ctor_mA3314E097B50883E4649DFF4E838714EF49DB20F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider__ctor_mA3314E097B50883E4649DFF4E838714EF49DB20F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35773));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35774));
	{
		// private GameObject thumbRoot = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35775));
		__this->set_thumbRoot_4((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private Collider thumbCollider = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35776));
		__this->set_thumbCollider_7((Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF *)NULL);
		// private Collider touchCollider = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35777));
		__this->set_touchCollider_8((Collider_t0FEEB36760860AD21B3B1F0509C365B393EC4BDF *)NULL);
		// private float sliderValue = 0.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35778));
		__this->set_sliderValue_9((0.5f));
		// private int sliderStepDivisions = 1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35779));
		__this->set_sliderStepDivisions_11(1);
		// private GameObject trackVisuals = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35780));
		__this->set_trackVisuals_12((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private GameObject tickMarks = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35781));
		__this->set_tickMarks_13((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private GameObject thumbVisuals = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35782));
		__this->set_thumbVisuals_14((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private SliderAxis sliderAxis = SliderAxis.XAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35783));
		__this->set_sliderAxis_15(0);
		// private SliderAxis? previousSliderAxis = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35784));
		Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 * L_0 = __this->get_address_of_previousSliderAxis_16();
		il2cpp_codegen_initobj(L_0, sizeof(Nullable_1_tD448360E9DF2DA490013FD8548AA76DF4756A610 ));
		// private float sliderStartDistance = -.5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35785));
		__this->set_sliderStartDistance_17((-0.5f));
		// private float sliderEndDistance = .5f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35786));
		__this->set_sliderEndDistance_18((0.5f));
		// public SliderEvent OnValueUpdated = new SliderEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35787));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35793));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_1 = (SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)il2cpp_codegen_object_new(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF_il2cpp_TypeInfo_var);
		SliderEvent__ctor_mF9935714BB2E565594EEA0286F9CD4579F19230E(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35793));
		__this->set_OnValueUpdated_19(L_1);
		// public SliderEvent OnInteractionStarted = new SliderEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35788));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35794));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_2 = (SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)il2cpp_codegen_object_new(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF_il2cpp_TypeInfo_var);
		SliderEvent__ctor_mF9935714BB2E565594EEA0286F9CD4579F19230E(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35794));
		__this->set_OnInteractionStarted_20(L_2);
		// public SliderEvent OnInteractionEnded = new SliderEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35789));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35795));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_3 = (SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)il2cpp_codegen_object_new(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF_il2cpp_TypeInfo_var);
		SliderEvent__ctor_mF9935714BB2E565594EEA0286F9CD4579F19230E(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35795));
		__this->set_OnInteractionEnded_21(L_3);
		// public SliderEvent OnHoverEntered = new SliderEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35790));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35796));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_4 = (SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)il2cpp_codegen_object_new(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF_il2cpp_TypeInfo_var);
		SliderEvent__ctor_mF9935714BB2E565594EEA0286F9CD4579F19230E(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35796));
		__this->set_OnHoverEntered_22(L_4);
		// public SliderEvent OnHoverExited = new SliderEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35791));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35797));
		SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF * L_5 = (SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF *)il2cpp_codegen_object_new(SliderEvent_tF519564B681EF8757CC8860B51241D56FCBEFDCF_il2cpp_TypeInfo_var);
		SliderEvent__ctor_mF9935714BB2E565594EEA0286F9CD4579F19230E(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35797));
		__this->set_OnHoverExited_23(L_5);
		// private Vector3 sliderThumbOffset = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35792));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35798));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35798));
		__this->set_sliderThumbOffset_24(L_6);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35799));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35799));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::ToggleHandRayEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_ToggleHandRayEnabled_mE89C194484777775DC12A9BCAE41F3DA68ACC258 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_ToggleHandRayEnabled_mE89C194484777775DC12A9BCAE41F3DA68ACC258_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_ToggleHandRayEnabled_mE89C194484777775DC12A9BCAE41F3DA68ACC258_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38582));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38583));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38584));
		// TogglePointerEnabled<ShellHandRayPointer>(InputSourceType.Hand);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38585));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38587));
		PointerBehaviorControls_TogglePointerEnabled_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_mAA514B4401282B92B4D1A0167F65CAB4717F1465(__this, 1, /*hidden argument*/PointerBehaviorControls_TogglePointerEnabled_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_mAA514B4401282B92B4D1A0167F65CAB4717F1465_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38587));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38586));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::ToggleControllerRayEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_ToggleControllerRayEnabled_mA95B1D1C92DAC2A7F5A587674091A6F4DA2FE941 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_ToggleControllerRayEnabled_mA95B1D1C92DAC2A7F5A587674091A6F4DA2FE941_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_ToggleControllerRayEnabled_mA95B1D1C92DAC2A7F5A587674091A6F4DA2FE941_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38588));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38589));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38590));
		// TogglePointerEnabled<ShellHandRayPointer>(InputSourceType.Controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38591));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38593));
		PointerBehaviorControls_TogglePointerEnabled_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_mAA514B4401282B92B4D1A0167F65CAB4717F1465(__this, 2, /*hidden argument*/PointerBehaviorControls_TogglePointerEnabled_TisShellHandRayPointer_t68DA74B27B0472CB12C6C6D8BD3D2B4CBB2F60A4_mAA514B4401282B92B4D1A0167F65CAB4717F1465_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38593));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38592));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::ToggleHandGrabEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_ToggleHandGrabEnabled_m86D08EC7E2B367835C34D594DC7CBD97E02394D0 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_ToggleHandGrabEnabled_m86D08EC7E2B367835C34D594DC7CBD97E02394D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_ToggleHandGrabEnabled_m86D08EC7E2B367835C34D594DC7CBD97E02394D0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38594));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38595));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38596));
		// TogglePointerEnabled<SpherePointer>(InputSourceType.Hand);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38597));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38599));
		PointerBehaviorControls_TogglePointerEnabled_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mF52869F99912D417BF9040C27010CDD342C2AA90(__this, 1, /*hidden argument*/PointerBehaviorControls_TogglePointerEnabled_TisSpherePointer_t318F5781A10634159523E5C76CD72C4F8A43B11C_mF52869F99912D417BF9040C27010CDD342C2AA90_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38599));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38598));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::ToggleHandPokeEnabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_ToggleHandPokeEnabled_m4ABA7E09DDF7C5B805606C007E31B8133B892383 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_ToggleHandPokeEnabled_m4ABA7E09DDF7C5B805606C007E31B8133B892383_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_ToggleHandPokeEnabled_m4ABA7E09DDF7C5B805606C007E31B8133B892383_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38600));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38601));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38602));
		// TogglePointerEnabled<PokePointer>(InputSourceType.Hand);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38603));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38605));
		PointerBehaviorControls_TogglePointerEnabled_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_mD70F211A89851FE7596980E2A210F053D4D0BA54(__this, 1, /*hidden argument*/PointerBehaviorControls_TogglePointerEnabled_TisPokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_mD70F211A89851FE7596980E2A210F053D4D0BA54_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38605));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38604));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetHandRayEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetHandRayEnabled_mF677459FBE11C9D68830C129FF6C61DBD407DFD6 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, bool ___isEnabled0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetHandRayEnabled_mF677459FBE11C9D68830C129FF6C61DBD407DFD6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isEnabled0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetHandRayEnabled_mF677459FBE11C9D68830C129FF6C61DBD407DFD6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38606));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38607));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38608));
		// PointerUtils.SetHandRayPointerBehavior(isEnabled ? PointerBehavior.Default : PointerBehavior.AlwaysOff,
		//     Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38609));
		bool L_0 = ___isEnabled0;
		if (L_0)
		{
			goto IL_0007;
		}
	}
	{
		G_B3_0 = 2;
		goto IL_0008;
	}

IL_0007:
	{
		G_B3_0 = 0;
	}

IL_0008:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38611));
		PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6(G_B3_0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38611));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38610));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetControllerRayEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetControllerRayEnabled_mCB9E864F4469251907A670E9D58A1DD750C065BA (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, bool ___isEnabled0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetControllerRayEnabled_mCB9E864F4469251907A670E9D58A1DD750C065BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isEnabled0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetControllerRayEnabled_mCB9E864F4469251907A670E9D58A1DD750C065BA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38612));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38613));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38614));
		// PointerUtils.SetMotionControllerRayPointerBehavior(isEnabled ? PointerBehavior.Default : PointerBehavior.AlwaysOff,
		//     Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38615));
		bool L_0 = ___isEnabled0;
		if (L_0)
		{
			goto IL_0007;
		}
	}
	{
		G_B3_0 = 2;
		goto IL_0008;
	}

IL_0007:
	{
		G_B3_0 = 0;
	}

IL_0008:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38617));
		PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80(G_B3_0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38617));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38616));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetGazeEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetGazeEnabled_m2DC36E0FF8FC82C800B26FFB6832B904044F13AD (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, bool ___isEnabled0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetGazeEnabled_m2DC36E0FF8FC82C800B26FFB6832B904044F13AD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isEnabled0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetGazeEnabled_m2DC36E0FF8FC82C800B26FFB6832B904044F13AD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38618));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38619));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38620));
		// PointerUtils.SetGazePointerBehavior(isEnabled ? PointerBehavior.Default : PointerBehavior.AlwaysOff);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38621));
		bool L_0 = ___isEnabled0;
		if (L_0)
		{
			goto IL_0007;
		}
	}
	{
		G_B3_0 = 2;
		goto IL_0008;
	}

IL_0007:
	{
		G_B3_0 = 0;
	}

IL_0008:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38623));
		PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5(G_B3_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38623));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38622));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetGrabEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetGrabEnabled_m176936B62AD1B880E7860EF191685B8FF483850E (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, bool ___isEnabled0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetGrabEnabled_m176936B62AD1B880E7860EF191685B8FF483850E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isEnabled0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetGrabEnabled_m176936B62AD1B880E7860EF191685B8FF483850E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38624));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38625));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38626));
		// PointerUtils.SetHandGrabPointerBehavior(isEnabled ? PointerBehavior.Default : PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38627));
		bool L_0 = ___isEnabled0;
		if (L_0)
		{
			goto IL_0007;
		}
	}
	{
		G_B3_0 = 2;
		goto IL_0008;
	}

IL_0007:
	{
		G_B3_0 = 0;
	}

IL_0008:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38629));
		PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6(G_B3_0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38629));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38628));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetPokeEnabled(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetPokeEnabled_mEAE3E8C0929AA0EDD31419F17ACC87E248BC30AB (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, bool ___isEnabled0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetPokeEnabled_mEAE3E8C0929AA0EDD31419F17ACC87E248BC30AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___isEnabled0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetPokeEnabled_mEAE3E8C0929AA0EDD31419F17ACC87E248BC30AB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38630));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38631));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38632));
		// PointerUtils.SetHandPokePointerBehavior(isEnabled ? PointerBehavior.Default : PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38633));
		bool L_0 = ___isEnabled0;
		if (L_0)
		{
			goto IL_0007;
		}
	}
	{
		G_B3_0 = 2;
		goto IL_0008;
	}

IL_0007:
	{
		G_B3_0 = 0;
	}

IL_0008:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38635));
		PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA(G_B3_0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38635));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38634));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetVR()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetVR_m7B7F2D919353E504F292427293B5706C5C4ADA9A (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetVR_m7B7F2D919353E504F292427293B5706C5C4ADA9A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetVR_m7B7F2D919353E504F292427293B5706C5C4ADA9A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38636));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38637));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38638));
		// PointerUtils.SetHandPokePointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38639));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38645));
		PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38645));
		// PointerUtils.SetHandGrabPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38640));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38646));
		PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38646));
		// PointerUtils.SetHandRayPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38641));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38647));
		PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38647));
		// PointerUtils.SetMotionControllerRayPointerBehavior(PointerBehavior.Default, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38642));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38648));
		PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80(0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38648));
		// PointerUtils.SetGazePointerBehavior(PointerBehavior.AlwaysOff);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38643));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38649));
		PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5(2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38649));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38644));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetFingerOnly()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetFingerOnly_mBD13B3D1727C3F03BCA0B8D8CE12AD57338187E9 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetFingerOnly_mBD13B3D1727C3F03BCA0B8D8CE12AD57338187E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetFingerOnly_mBD13B3D1727C3F03BCA0B8D8CE12AD57338187E9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38650));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38651));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38652));
		// PointerUtils.SetHandPokePointerBehavior(PointerBehavior.Default, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38653));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38659));
		PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA(0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38659));
		// PointerUtils.SetHandGrabPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38654));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38660));
		PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38660));
		// PointerUtils.SetHandRayPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38655));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38661));
		PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38661));
		// PointerUtils.SetMotionControllerRayPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38656));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38662));
		PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38662));
		// PointerUtils.SetGazePointerBehavior(PointerBehavior.AlwaysOff);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38657));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38663));
		PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5(2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38663));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38658));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetHoloLens1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetHoloLens1_m135313D5D4FD1C8FBE3F6D5B557F03DA4A96033C (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetHoloLens1_m135313D5D4FD1C8FBE3F6D5B557F03DA4A96033C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetHoloLens1_m135313D5D4FD1C8FBE3F6D5B557F03DA4A96033C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38664));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38665));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38666));
		// PointerUtils.SetHandPokePointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38667));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38673));
		PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38673));
		// PointerUtils.SetHandGrabPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38668));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38674));
		PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38674));
		// PointerUtils.SetHandRayPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38669));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38675));
		PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38675));
		// PointerUtils.SetMotionControllerRayPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38670));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38676));
		PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38676));
		// PointerUtils.SetGazePointerBehavior(PointerBehavior.Default);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38671));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38677));
		PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5(0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38677));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38672));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::SetHoloLens2()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls_SetHoloLens2_m4655C680C359B6F0B2425624D6210442F5039580 (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls_SetHoloLens2_m4655C680C359B6F0B2425624D6210442F5039580_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls_SetHoloLens2_m4655C680C359B6F0B2425624D6210442F5039580_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38678));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38679));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38680));
		// PointerUtils.SetHandPokePointerBehavior(PointerBehavior.Default, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38681));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38687));
		PointerUtils_SetHandPokePointerBehavior_mF202F9953B2D59BEA26CE6D57076230A3D111EDA(0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38687));
		// PointerUtils.SetHandGrabPointerBehavior(PointerBehavior.Default, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38682));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38688));
		PointerUtils_SetHandGrabPointerBehavior_m04F8DEDED5041B1DC336E722F5DCC73521523AD6(0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38688));
		// PointerUtils.SetHandRayPointerBehavior(PointerBehavior.Default, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38683));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38689));
		PointerUtils_SetHandRayPointerBehavior_m661DBA1498AF3A3841670743E6695EF751E197A6(0, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38689));
		// PointerUtils.SetMotionControllerRayPointerBehavior(PointerBehavior.AlwaysOff, Handedness.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38684));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38690));
		PointerUtils_SetMotionControllerRayPointerBehavior_m1D6F400A835AAC261AF474D30DBCD5E74223FB80(2, 7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38690));
		// PointerUtils.SetGazePointerBehavior(PointerBehavior.AlwaysOff);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38685));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38691));
		PointerUtils_SetGazePointerBehavior_mFC682D7D7770F236356774FBE58A059CECB6E8D5(2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38691));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38686));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PointerBehaviorControls::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PointerBehaviorControls__ctor_mF5663BBC18344B4A869FFD402CD20A52FC450EEF (PointerBehaviorControls_t8A942AE6EEAC3A9CF55E76C2F8C4DDFA5C8C1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PointerBehaviorControls__ctor_mF5663BBC18344B4A869FFD402CD20A52FC450EEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PointerBehaviorControls__ctor_mF5663BBC18344B4A869FFD402CD20A52FC450EEF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::ShowSpawnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * V_0 = NULL;
	AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * L_0 = (U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB *)il2cpp_codegen_object_new(U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_il2cpp_TypeInfo_var);
		U3CShowSpawnableU3Ed__16__ctor_m82B6494BA2C9CA525D43CE0070E02E7ED0CE7B39(L_0, /*hidden argument*/NULL);
		V_0 = L_0;
		U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * L_1 = V_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_2(__this);
		U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * L_2 = V_0;
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  L_3 = AsyncVoidMethodBuilder_Create_m2EF884A75C3C230F0E6A63B1E23DC82F3B159130(/*hidden argument*/NULL);
		NullCheck(L_2);
		L_2->set_U3CU3Et__builder_1(L_3);
		U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * L_4 = V_0;
		NullCheck(L_4);
		L_4->set_U3CU3E1__state_0((-1));
		U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * L_5 = V_0;
		NullCheck(L_5);
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF  L_6 = L_5->get_U3CU3Et__builder_1();
		V_1 = L_6;
		AsyncVoidMethodBuilder_Start_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m100596A3EB59A0538697AC868F63CA0EF3634415((AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *)(&V_1), (U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB **)(&V_0), /*hidden argument*/AsyncVoidMethodBuilder_Start_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m100596A3EB59A0538697AC868F63CA0EF3634415_RuntimeMethod_var);
		return;
	}
}
// System.Threading.Tasks.Task Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::UpdateSpawnable(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * PrefabSpawner_UpdateSpawnable_m2C199EF2FC62A0ED22B8104D303DDA0B7581602E (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, float ___focusEnterTimeOnStart0, float ___tappedTimeOnStart1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_UpdateSpawnable_m2C199EF2FC62A0ED22B8104D303DDA0B7581602E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * V_0 = NULL;
	AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_UpdateSpawnable_m2C199EF2FC62A0ED22B8104D303DDA0B7581602E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_0 = (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 *)il2cpp_codegen_object_new(U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_il2cpp_TypeInfo_var);
		U3CUpdateSpawnableU3Ed__17__ctor_mFA3382E64598FD0B170FE41A9D8B25F740D54FBD(L_0, /*hidden argument*/NULL);
		V_0 = L_0;
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_1 = V_0;
		NullCheck(L_1);
		L_1->set_U3CU3E4__this_4(__this);
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_2 = V_0;
		float L_3 = ___focusEnterTimeOnStart0;
		NullCheck(L_2);
		L_2->set_focusEnterTimeOnStart_2(L_3);
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_4 = V_0;
		float L_5 = ___tappedTimeOnStart1;
		NullCheck(L_4);
		L_4->set_tappedTimeOnStart_3(L_5);
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_6 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487_il2cpp_TypeInfo_var);
		AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487  L_7 = AsyncTaskMethodBuilder_Create_m081DF9A202E7C2F3CF3D41E1E63E63DA18F19FDB(/*hidden argument*/NULL);
		NullCheck(L_6);
		L_6->set_U3CU3Et__builder_1(L_7);
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_8 = V_0;
		NullCheck(L_8);
		L_8->set_U3CU3E1__state_0((-1));
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_9 = V_0;
		NullCheck(L_9);
		AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487  L_10 = L_9->get_U3CU3Et__builder_1();
		V_1 = L_10;
		AsyncTaskMethodBuilder_Start_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m33CF64D86791D39E95A7A9C84CE5C28813920070((AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *)(&V_1), (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 **)(&V_0), /*hidden argument*/AsyncTaskMethodBuilder_Start_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m33CF64D86791D39E95A7A9C84CE5C28813920070_RuntimeMethod_var);
		U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * L_11 = V_0;
		NullCheck(L_11);
		AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * L_12 = L_11->get_address_of_U3CU3Et__builder_1();
		Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * L_13 = AsyncTaskMethodBuilder_get_Task_m3E45BC00F7D224FEA04AB9BF26DB52E131D33022((AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *)L_12, /*hidden argument*/NULL);
		return L_13;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::SpawnableActivated(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_SpawnableActivated_mA170AF7A1D4BE52E7D509A6F6E89DE0DE6967289 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___spawnable0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_SpawnableActivated_mA170AF7A1D4BE52E7D509A6F6E89DE0DE6967289_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___spawnable0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_SpawnableActivated_mA170AF7A1D4BE52E7D509A6F6E89DE0DE6967289_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38692));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38693));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38694));
		// protected virtual void SpawnableActivated(GameObject spawnable) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38695));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::OnFocusEnter(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_OnFocusEnter_mBF22CC893DA95E5DF685C3421BCA97D40A42029C (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_OnFocusEnter_mBF22CC893DA95E5DF685C3421BCA97D40A42029C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_OnFocusEnter_mBF22CC893DA95E5DF685C3421BCA97D40A42029C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38696));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38697));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38698));
		// base.OnFocusEnter(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38699));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38702));
		BaseFocusHandler_OnFocusEnter_mDC855BB42E50C498D5A8747D9F61AA77FF3C22AC(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38702));
		// HandleFocusEnter();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38700));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38703));
		PrefabSpawner_HandleFocusEnter_m618E1E62E5F07BFBD8A07B97023398C8C1541B21(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38703));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38701));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::OnFocusExit(Microsoft.MixedReality.Toolkit.Input.FocusEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_OnFocusExit_mCF88A32187EBD5682F1263AB46CADA331267FAC3 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_OnFocusExit_mCF88A32187EBD5682F1263AB46CADA331267FAC3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_OnFocusExit_mCF88A32187EBD5682F1263AB46CADA331267FAC3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38704));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38705));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38706));
		// base.OnFocusExit(eventData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38707));
		FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38710));
		BaseFocusHandler_OnFocusExit_m4AE52C45D8A89F3926AF8B4E4AC0DF18C1DDA9CE(__this, L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38710));
		// HandleFocusExit();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38708));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38711));
		PrefabSpawner_HandleFocusExit_m41F074106A7F8E92191D5BFE4609B2766307B296(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38711));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38709));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputHandler<System.Single>.OnInputChanged(Microsoft.MixedReality.Toolkit.Input.InputEventData`1<System.Single>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandlerU3CSystem_SingleU3E_OnInputChanged_mC61D331A956EA13E6B17D903812557E0955DD64B (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandlerU3CSystem_SingleU3E_OnInputChanged_mC61D331A956EA13E6B17D903812557E0955DD64B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandlerU3CSystem_SingleU3E_OnInputChanged_mC61D331A956EA13E6B17D903812557E0955DD64B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38712));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38713));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38714));
		// if (eventData.InputData > .95f)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38715));
		InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38721));
		NullCheck(L_0);
		float L_1 = InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_inline(L_0, /*hidden argument*/InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38721));
		V_0 = (bool)((((float)L_1) > ((float)(0.95f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38716));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_001b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38717));
		// HandleTap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38718));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38722));
		VirtActionInvoker0::Invoke(19 /* System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HandleTap() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38722));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38719));
	}

IL_001b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38720));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputHandler.OnInputDown(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputDown_m98AF587F4AA84D33F4DE7292BA7089FE9AD65185 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputDown_m98AF587F4AA84D33F4DE7292BA7089FE9AD65185_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputDown_m98AF587F4AA84D33F4DE7292BA7089FE9AD65185_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38723));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38724));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38725));
		// if (tooltipToggleAction.Id == eventData.MixedRealityInputAction.Id)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38726));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * L_0 = __this->get_address_of_tooltipToggleAction_7();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38732));
		uint32_t L_1 = MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33_inline((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 *)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38732));
		InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * L_2 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38733));
		NullCheck(L_2);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_3 = BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38733));
		V_1 = L_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38734));
		uint32_t L_4 = MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33_inline((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38734));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)L_4))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38727));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0029;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38728));
		// HandleTap();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38729));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38735));
		VirtActionInvoker0::Invoke(19 /* System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HandleTap() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38735));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38730));
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38731));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputHandler.OnInputUp(Microsoft.MixedReality.Toolkit.Input.InputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputUp_m4824D932F03688F18568D6A4097EBBB4F7DA0EDB (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, InputEventData_tC41B435A0E08D174DC93EAD02A8470C83BF7005A * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputUp_m4824D932F03688F18568D6A4097EBBB4F7DA0EDB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_Microsoft_MixedReality_Toolkit_Input_IMixedRealityInputHandler_OnInputUp_m4824D932F03688F18568D6A4097EBBB4F7DA0EDB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38737));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38738));
		// void IMixedRealityInputHandler.OnInputUp(InputEventData eventData) { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38739));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HandleTap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_HandleTap_mA9ABDED6FED2E895B1E40D1EE14FA45133ED5420 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_HandleTap_mA9ABDED6FED2E895B1E40D1EE14FA45133ED5420_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_HandleTap_mA9ABDED6FED2E895B1E40D1EE14FA45133ED5420_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38740));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38741));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38742));
		// tappedTime = Time.unscaledTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38743));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38759));
		float L_0 = Time_get_unscaledTime_m57F78B855097C5BA632CF9BE60667A9DEBCAA472(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38759));
		__this->set_tappedTime_17(L_0);
		// if (spawnable == null || !spawnable.activeSelf)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38744));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_spawnable_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38760));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38760));
		if (L_2)
		{
			goto IL_002a;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_spawnable_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38761));
		NullCheck(L_3);
		bool L_4 = GameObject_get_activeSelf_mFE1834886CAE59884AC2BE707A3B821A1DB61F44(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38761));
		G_B3_0 = ((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
		goto IL_002b;
	}

IL_002a:
	{
		G_B3_0 = 1;
	}

IL_002b:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38745));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0049;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38746));
		// switch (appearType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38747));
		int32_t L_6 = __this->get_appearType_8();
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38748));
		int32_t L_7 = V_1;
		if ((((int32_t)L_7) == ((int32_t)1)))
		{
			goto IL_003d;
		}
	}
	{
		goto IL_0046;
	}

IL_003d:
	{
		// ShowSpawnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38749));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38762));
		PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38762));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38750));
		goto IL_0046;
	}

IL_0046:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38751));
		goto IL_0067;
	}

IL_0049:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38752));
		// switch (vanishType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38753));
		int32_t L_8 = __this->get_vanishType_9();
		V_2 = L_8;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38754));
		int32_t L_9 = V_2;
		if ((((int32_t)L_9) == ((int32_t)1)))
		{
			goto IL_0057;
		}
	}
	{
		goto IL_0066;
	}

IL_0057:
	{
		// spawnable.SetActive(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38755));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = __this->get_spawnable_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38763));
		NullCheck(L_10);
		GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_10, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38763));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38756));
		goto IL_0066;
	}

IL_0066:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38757));
	}

IL_0067:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38758));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HandleFocusEnter()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_HandleFocusEnter_m618E1E62E5F07BFBD8A07B97023398C8C1541B21 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_HandleFocusEnter_m618E1E62E5F07BFBD8A07B97023398C8C1541B21_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_HandleFocusEnter_m618E1E62E5F07BFBD8A07B97023398C8C1541B21_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38764));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38765));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38766));
		// focusEnterTime = Time.unscaledTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38767));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38777));
		float L_0 = Time_get_unscaledTime_m57F78B855097C5BA632CF9BE60667A9DEBCAA472(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38777));
		__this->set_focusEnterTime_15(L_0);
		// if (spawnable == null || !spawnable.activeSelf)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38768));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_spawnable_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38778));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38778));
		if (L_2)
		{
			goto IL_002a;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_spawnable_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38779));
		NullCheck(L_3);
		bool L_4 = GameObject_get_activeSelf_mFE1834886CAE59884AC2BE707A3B821A1DB61F44(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38779));
		G_B3_0 = ((((int32_t)L_4) == ((int32_t)0))? 1 : 0);
		goto IL_002b;
	}

IL_002a:
	{
		G_B3_0 = 1;
	}

IL_002b:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38769));
		bool L_5 = V_0;
		if (!L_5)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38770));
		// switch (appearType)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38771));
		int32_t L_6 = __this->get_appearType_8();
		V_1 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38772));
		int32_t L_7 = V_1;
		if (!L_7)
		{
			goto IL_003c;
		}
	}
	{
		goto IL_0045;
	}

IL_003c:
	{
		// ShowSpawnable();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38773));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38780));
		PrefabSpawner_ShowSpawnable_mF044F750FF6584F9A65708A0610001C253CFD0C4(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38780));
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38774));
		goto IL_0045;
	}

IL_0045:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38775));
	}

IL_0046:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38776));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HandleFocusExit()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner_HandleFocusExit_m41F074106A7F8E92191D5BFE4609B2766307B296 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_HandleFocusExit_m41F074106A7F8E92191D5BFE4609B2766307B296_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_HandleFocusExit_m41F074106A7F8E92191D5BFE4609B2766307B296_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38781));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38782));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38783));
		// focusExitTime = Time.unscaledTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38784));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38786));
		float L_0 = Time_get_unscaledTime_m57F78B855097C5BA632CF9BE60667A9DEBCAA472(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38786));
		__this->set_focusExitTime_16(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38785));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::HasVanishDelayElapsed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PrefabSpawner_HasVanishDelayElapsed_m8CEED241162D9D6718453AED25F0B7B20488E133 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner_HasVanishDelayElapsed_m8CEED241162D9D6718453AED25F0B7B20488E133_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner_HasVanishDelayElapsed_m8CEED241162D9D6718453AED25F0B7B20488E133_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38787));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38788));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38789));
		// return Time.unscaledTime - focusExitTime > vanishDelay;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38790));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38792));
		float L_0 = Time_get_unscaledTime_m57F78B855097C5BA632CF9BE60667A9DEBCAA472(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38792));
		float L_1 = __this->get_focusExitTime_16();
		float L_2 = __this->get_vanishDelay_12();
		V_0 = (bool)((((float)((float)il2cpp_codegen_subtract((float)L_0, (float)L_1))) > ((float)L_2))? 1 : 0);
		goto IL_0018;
	}

IL_0018:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38791));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PrefabSpawner__ctor_mF8A94FAD73BB8E7FE58737FEFDD338332C5D4960 (PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PrefabSpawner__ctor_mF8A94FAD73BB8E7FE58737FEFDD338332C5D4960_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PrefabSpawner__ctor_mF8A94FAD73BB8E7FE58737FEFDD338332C5D4960_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38793));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38794));
	{
		// protected GameObject prefab = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38795));
		__this->set_prefab_6((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private MixedRealityInputAction tooltipToggleAction = MixedRealityInputAction.None;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38796));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38807));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38807));
		__this->set_tooltipToggleAction_7(L_0);
		// private AppearType appearType = AppearType.AppearOnFocusEnter;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38797));
		__this->set_appearType_8(0);
		// private VanishType vanishType = VanishType.VanishOnFocusExit;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38798));
		__this->set_vanishType_9(0);
		// private RemainType remainType = RemainType.Timeout;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38799));
		__this->set_remainType_10(1);
		// private float appearDelay = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38800));
		__this->set_appearDelay_11((0.0f));
		// private float vanishDelay = 2.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38801));
		__this->set_vanishDelay_12((2.0f));
		// private float lifetime = 1.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38802));
		__this->set_lifetime_13((1.0f));
		// private bool keepWorldRotation = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38803));
		__this->set_keepWorldRotation_14((bool)1);
		// private float focusEnterTime = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38804));
		__this->set_focusEnterTime_15((0.0f));
		// private float focusExitTime = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38805));
		__this->set_focusExitTime_16((0.0f));
		// private float tappedTime = 0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38806));
		__this->set_tappedTime_17((0.0f));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38808));
		BaseFocusHandler__ctor_mB4B9DA64F6FDF318744D1011EF8D33E0C9126058(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38808));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CShowSpawnableU3Ed__16__ctor_m82B6494BA2C9CA525D43CE0070E02E7ED0CE7B39 (U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CShowSpawnableU3Ed__16__ctor_m82B6494BA2C9CA525D43CE0070E02E7ED0CE7B39_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CShowSpawnableU3Ed__16__ctor_m82B6494BA2C9CA525D43CE0070E02E7ED0CE7B39_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CShowSpawnableU3Ed__16_MoveNext_m2F0068AF016A3A794C835B2493384C89CC6A12D5 (U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CShowSpawnableU3Ed__16_MoveNext_m2F0068AF016A3A794C835B2493384C89CC6A12D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  V_1;
	memset((&V_1), 0, sizeof(V_1));
	U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * V_2 = NULL;
	Exception_t * V_3 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CShowSpawnableU3Ed__16_MoveNext_m2F0068AF016A3A794C835B2493384C89CC6A12D5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38809));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38810));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 3);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38811));
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
	}

IL_0007:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38812));
			int32_t L_1 = V_0;
			if (!L_1)
			{
				goto IL_000c;
			}
		}

IL_000a:
		{
			goto IL_000e;
		}

IL_000c:
		{
			goto IL_0063;
		}

IL_000e:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38813));
			// await UpdateSpawnable(focusEnterTime, tappedTime);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38814));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_2 = __this->get_U3CU3E4__this_2();
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_3 = __this->get_U3CU3E4__this_2();
			NullCheck(L_3);
			float L_4 = L_3->get_focusEnterTime_15();
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_5 = __this->get_U3CU3E4__this_2();
			NullCheck(L_5);
			float L_6 = L_5->get_tappedTime_17();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38819));
			NullCheck(L_2);
			Task_t1F48C203E163126EBC69ACCA679D1A462DEE9EB2 * L_7 = PrefabSpawner_UpdateSpawnable_m2C199EF2FC62A0ED22B8104D303DDA0B7581602E(L_2, L_4, L_6, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38819));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38820));
			NullCheck(L_7);
			TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  L_8 = Task_GetAwaiter_m73027D5E4C16E961C658B83526BED8E32FD2AC6C(L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38820));
			V_1 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38815));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38821));
			bool L_9 = TaskAwaiter_get_IsCompleted_m5A2B6FEA0ED3B01B5E88DBF2D8BC4A45652ABD87((TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F *)(&V_1), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38821));
			if (L_9)
			{
				goto IL_007f;
			}
		}

IL_003f:
		{
			int32_t L_10 = 0;
			V_0 = L_10;
			__this->set_U3CU3E1__state_0(L_10);
			TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  L_11 = V_1;
			__this->set_U3CU3Eu__1_3(L_11);
			V_2 = __this;
			AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * L_12 = __this->get_address_of_U3CU3Et__builder_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38822));
			AsyncVoidMethodBuilder_AwaitUnsafeOnCompleted_TisTaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m1AE09BCF8BFEFD584002656B3B366B30D3330570((AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *)L_12, (TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F *)(&V_1), (U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB **)(&V_2), /*hidden argument*/AsyncVoidMethodBuilder_AwaitUnsafeOnCompleted_TisTaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F_TisU3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB_m1AE09BCF8BFEFD584002656B3B366B30D3330570_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38822));
			goto IL_00b5;
		}

IL_0063:
		{
			TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F  L_13 = __this->get_U3CU3Eu__1_3();
			V_1 = L_13;
			TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F * L_14 = __this->get_address_of_U3CU3Eu__1_3();
			il2cpp_codegen_initobj(L_14, sizeof(TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F ));
			int32_t L_15 = (-1);
			V_0 = L_15;
			__this->set_U3CU3E1__state_0(L_15);
		}

IL_007f:
		{
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38823));
			TaskAwaiter_GetResult_m89868C01592AC2B06CE1FD42D9B9C187C6FD928A((TaskAwaiter_t0CDE8DBB564F0A0EA55FA6B3D43EEF96BC26252F *)(&V_1), /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38823));
			goto IL_00a1;
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__exception_local = (Exception_t *)e.ex;
		if(il2cpp_codegen_class_is_assignable_from (Exception_t_il2cpp_TypeInfo_var, il2cpp_codegen_object_class(e.ex)))
			goto CATCH_0089;
		throw e;
	}

CATCH_0089:
	{ // begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38816));
		V_3 = ((Exception_t *)__exception_local);
		__this->set_U3CU3E1__state_0(((int32_t)-2));
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * L_16 = __this->get_address_of_U3CU3Et__builder_1();
		Exception_t * L_17 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38824));
		AsyncVoidMethodBuilder_SetException_mA7D834CA1ECA91D65074D7608AADA2E2A9533136((AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *)L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38824));
		goto IL_00b5;
	} // end catch (depth: 1)

IL_00a1:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38817));
		__this->set_U3CU3E1__state_0(((int32_t)-2));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38818));
		AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF * L_18 = __this->get_address_of_U3CU3Et__builder_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38825));
		AsyncVoidMethodBuilder_SetResult_mFF6028CDDC809252656354DC1714B4EB5E40A625((AsyncVoidMethodBuilder_t44E3C9B52B019BB5BDCC0E1BB83188B536161CFF *)L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38825));
	}

IL_00b5:
	{
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<ShowSpawnable>d__16::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CShowSpawnableU3Ed__16_SetStateMachine_mCC292B486A7795382E344075247498196755CBE4 (U3CShowSpawnableU3Ed__16_t60356F317152995A9627EA1231776C535ED436AB * __this, RuntimeObject* ___stateMachine0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CShowSpawnableU3Ed__16_SetStateMachine_mCC292B486A7795382E344075247498196755CBE4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CShowSpawnableU3Ed__16_SetStateMachine_mCC292B486A7795382E344075247498196755CBE4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CUpdateSpawnableU3Ed__17__ctor_mFA3382E64598FD0B170FE41A9D8B25F740D54FBD (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CUpdateSpawnableU3Ed__17__ctor_mFA3382E64598FD0B170FE41A9D8B25F740D54FBD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CUpdateSpawnableU3Ed__17__ctor_mFA3382E64598FD0B170FE41A9D8B25F740D54FBD_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CUpdateSpawnableU3Ed__17_MoveNext_mBFDB331E6650BA7ED03288645C605FA01BAE1646 (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CUpdateSpawnableU3Ed__17_MoveNext_mBFDB331E6650BA7ED03288645C605FA01BAE1646_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * V_4 = NULL;
	U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * V_5 = NULL;
	bool V_6 = false;
	bool V_7 = false;
	int32_t V_8 = 0;
	bool V_9 = false;
	bool V_10 = false;
	int32_t V_11 = 0;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * V_15 = NULL;
	bool V_16 = false;
	Exception_t * V_17 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CUpdateSpawnableU3Ed__17_MoveNext_mBFDB331E6650BA7ED03288645C605FA01BAE1646_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38826));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38827));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 7);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	int32_t G_B42_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38828));
		int32_t L_0 = __this->get_U3CU3E1__state_0();
		V_0 = L_0;
	}

IL_0007:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38829));
			int32_t L_1 = V_0;
			if (!L_1)
			{
				goto IL_0012;
			}
		}

IL_000a:
		{
			goto IL_000c;
		}

IL_000c:
		{
			int32_t L_2 = V_0;
			if ((((int32_t)L_2) == ((int32_t)1)))
			{
				goto IL_0017;
			}
		}

IL_0010:
		{
			goto IL_001c;
		}

IL_0012:
		{
			goto IL_012e;
		}

IL_0017:
		{
			goto IL_0348;
		}

IL_001c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38830));
			// if (spawnable == null)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38831));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_3 = __this->get_U3CU3E4__this_4();
			NullCheck(L_3);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_4 = L_3->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38904));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			bool L_5 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_4, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38904));
			V_1 = L_5;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38832));
			bool L_6 = V_1;
			if (!L_6)
			{
				goto IL_00cf;
			}
		}

IL_0035:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38833));
			// spawnable = Instantiate(prefab);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38834));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_7 = __this->get_U3CU3E4__this_4();
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_8 = __this->get_U3CU3E4__this_4();
			NullCheck(L_8);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_9 = L_8->get_prefab_6();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38905));
			IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_10 = Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90(L_9, /*hidden argument*/Object_Instantiate_TisGameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F_mC4AB712D7F18E0991E1542CE53F11385E21E7B90_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38905));
			NullCheck(L_7);
			L_7->set_spawnable_18(L_10);
			// spawnable.transform.parent = transform;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38835));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_11 = __this->get_U3CU3E4__this_4();
			NullCheck(L_11);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_12 = L_11->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38906));
			NullCheck(L_12);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_13 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_12, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38906));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_14 = __this->get_U3CU3E4__this_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38907));
			NullCheck(L_14);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_14, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38907));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38908));
			NullCheck(L_13);
			Transform_set_parent_m65B8E4660B2C554069C57A957D9E55FECA7AA73E(L_13, L_15, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38908));
			// spawnable.transform.localPosition = Vector3.zero;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38836));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_16 = __this->get_U3CU3E4__this_4();
			NullCheck(L_16);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = L_16->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38909));
			NullCheck(L_17);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_18 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_17, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38909));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38910));
			IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_19 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38910));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38911));
			NullCheck(L_18);
			Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_18, L_19, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38911));
			// if (!keepWorldRotation)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38837));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_20 = __this->get_U3CU3E4__this_4();
			NullCheck(L_20);
			bool L_21 = L_20->get_keepWorldRotation_14();
			V_2 = (bool)((((int32_t)L_21) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38838));
			bool L_22 = V_2;
			if (!L_22)
			{
				goto IL_00bc;
			}
		}

IL_009f:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38839));
			// spawnable.transform.localRotation = Quaternion.identity;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38840));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_23 = __this->get_U3CU3E4__this_4();
			NullCheck(L_23);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_24 = L_23->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38912));
			NullCheck(L_24);
			Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_25 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_24, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38912));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38913));
			IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
			Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_26 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38913));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38914));
			NullCheck(L_25);
			Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_25, L_26, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38914));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38841));
		}

IL_00bc:
		{
			// spawnable.SetActive(false);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38842));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_27 = __this->get_U3CU3E4__this_4();
			NullCheck(L_27);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_28 = L_27->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38915));
			NullCheck(L_28);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_28, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38915));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38843));
		}

IL_00cf:
		{
			// if (appearType == AppearType.AppearOnFocusEnter)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38844));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_29 = __this->get_U3CU3E4__this_4();
			NullCheck(L_29);
			int32_t L_30 = L_29->get_appearType_8();
			V_3 = (bool)((((int32_t)L_30) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38845));
			bool L_31 = V_3;
			if (!L_31)
			{
				goto IL_016e;
			}
		}

IL_00e4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38846));
			// await new WaitForSeconds(appearDelay);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38847));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_32 = __this->get_U3CU3E4__this_4();
			NullCheck(L_32);
			float L_33 = L_32->get_appearDelay_11();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38916));
			WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8 * L_34 = (WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8 *)il2cpp_codegen_object_new(WaitForSeconds_t3E9E78D3BB53F03F96C7F28BA9B9086CD1A5F4E8_il2cpp_TypeInfo_var);
			WaitForSeconds__ctor_m8E4BA3E27AEFFE5B74A815F26FF8AAB99743F559(L_34, L_33, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38916));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38917));
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_35 = AwaiterExtensions_GetAwaiter_mD7F49C5FF56CBC92D3E430086C2D7C52789BA1A5(L_34, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38917));
			V_4 = L_35;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38848));
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_36 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38918));
			NullCheck(L_36);
			bool L_37 = SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215_inline(L_36, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38918));
			if (L_37)
			{
				goto IL_014b;
			}
		}

IL_0105:
		{
			int32_t L_38 = 0;
			V_0 = L_38;
			__this->set_U3CU3E1__state_0(L_38);
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_39 = V_4;
			__this->set_U3CU3Eu__1_5(L_39);
			V_5 = __this;
			AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * L_40 = __this->get_address_of_U3CU3Et__builder_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38919));
			AsyncTaskMethodBuilder_AwaitOnCompleted_TisSimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m716DC9960E36A5812253AF7D23CB8B81EE7AA8E1((AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *)L_40, (SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE **)(&V_4), (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 **)(&V_5), /*hidden argument*/AsyncTaskMethodBuilder_AwaitOnCompleted_TisSimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m716DC9960E36A5812253AF7D23CB8B81EE7AA8E1_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38919));
			goto IL_03b7;
		}

IL_012e:
		{
			RuntimeObject * L_41 = __this->get_U3CU3Eu__1_5();
			V_4 = ((SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE *)CastclassClass((RuntimeObject*)L_41, SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_il2cpp_TypeInfo_var));
			__this->set_U3CU3Eu__1_5(NULL);
			int32_t L_42 = (-1);
			V_0 = L_42;
			__this->set_U3CU3E1__state_0(L_42);
		}

IL_014b:
		{
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_43 = V_4;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38920));
			NullCheck(L_43);
			SimpleCoroutineAwaiter_GetResult_mA2E1941136B95442358BA03075F6AF1B0F2C159B(L_43, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38920));
			// if (!HasFocus)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38849));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_44 = __this->get_U3CU3E4__this_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38921));
			NullCheck(L_44);
			bool L_45 = VirtFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::get_HasFocus() */, L_44);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38921));
			V_6 = (bool)((((int32_t)L_45) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38850));
			bool L_46 = V_6;
			if (!L_46)
			{
				goto IL_016d;
			}
		}

IL_0167:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38851));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38852));
			goto IL_03a3;
		}

IL_016d:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38853));
		}

IL_016e:
		{
			// spawnable.SetActive(true);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38854));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_47 = __this->get_U3CU3E4__this_4();
			NullCheck(L_47);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_48 = L_47->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38922));
			NullCheck(L_48);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_48, (bool)1, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38922));
			// SpawnableActivated(spawnable);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38855));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_49 = __this->get_U3CU3E4__this_4();
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_50 = __this->get_U3CU3E4__this_4();
			NullCheck(L_50);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_51 = L_50->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38923));
			NullCheck(L_49);
			VirtActionInvoker1< GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * >::Invoke(18 /* System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner::SpawnableActivated(UnityEngine.GameObject) */, L_49, L_51);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38923));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38856));
			goto IL_036e;
		}

IL_019c:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38857));
			// if (remainType == RemainType.Timeout)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38858));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_52 = __this->get_U3CU3E4__this_4();
			NullCheck(L_52);
			int32_t L_53 = L_52->get_remainType_10();
			V_7 = (bool)((((int32_t)L_53) == ((int32_t)1))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38859));
			bool L_54 = V_7;
			if (!L_54)
			{
				goto IL_0255;
			}
		}

IL_01b4:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38860));
			// switch (appearType)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38861));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_55 = __this->get_U3CU3E4__this_4();
			NullCheck(L_55);
			int32_t L_56 = L_55->get_appearType_8();
			V_8 = L_56;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38862));
			int32_t L_57 = V_8;
			if (!L_57)
			{
				goto IL_0213;
			}
		}

IL_01c6:
		{
			goto IL_01c8;
		}

IL_01c8:
		{
			int32_t L_58 = V_8;
			if ((((int32_t)L_58) == ((int32_t)1)))
			{
				goto IL_01d2;
			}
		}

IL_01cd:
		{
			goto IL_0254;
		}

IL_01d2:
		{
			// if (Time.unscaledTime - tappedTime >= lifetime)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38863));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38924));
			float L_59 = Time_get_unscaledTime_m57F78B855097C5BA632CF9BE60667A9DEBCAA472(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38924));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_60 = __this->get_U3CU3E4__this_4();
			NullCheck(L_60);
			float L_61 = L_60->get_tappedTime_17();
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_62 = __this->get_U3CU3E4__this_4();
			NullCheck(L_62);
			float L_63 = L_62->get_lifetime_13();
			V_9 = (bool)((((int32_t)((!(((float)((float)il2cpp_codegen_subtract((float)L_59, (float)L_61))) >= ((float)L_63)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38864));
			bool L_64 = V_9;
			if (!L_64)
			{
				goto IL_0211;
			}
		}

IL_01f9:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38865));
			// spawnable.SetActive(false);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38866));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_65 = __this->get_U3CU3E4__this_4();
			NullCheck(L_65);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_66 = L_65->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38925));
			NullCheck(L_66);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_66, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38925));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38867));
			goto IL_03a3;
		}

IL_0211:
		{
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38868));
			goto IL_0254;
		}

IL_0213:
		{
			// if (Time.unscaledTime - focusEnterTime >= lifetime)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38869));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38926));
			float L_67 = Time_get_unscaledTime_m57F78B855097C5BA632CF9BE60667A9DEBCAA472(/*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38926));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_68 = __this->get_U3CU3E4__this_4();
			NullCheck(L_68);
			float L_69 = L_68->get_focusEnterTime_15();
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_70 = __this->get_U3CU3E4__this_4();
			NullCheck(L_70);
			float L_71 = L_70->get_lifetime_13();
			V_10 = (bool)((((int32_t)((!(((float)((float)il2cpp_codegen_subtract((float)L_67, (float)L_69))) >= ((float)L_71)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38870));
			bool L_72 = V_10;
			if (!L_72)
			{
				goto IL_0252;
			}
		}

IL_023a:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38871));
			// spawnable.SetActive(false);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38872));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_73 = __this->get_U3CU3E4__this_4();
			NullCheck(L_73);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_74 = L_73->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38927));
			NullCheck(L_74);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_74, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38927));
			// return;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38873));
			goto IL_03a3;
		}

IL_0252:
		{
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38874));
			goto IL_0254;
		}

IL_0254:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38875));
		}

IL_0255:
		{
			// switch (vanishType)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38876));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_75 = __this->get_U3CU3E4__this_4();
			NullCheck(L_75);
			int32_t L_76 = L_75->get_vanishType_9();
			V_11 = L_76;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38877));
			int32_t L_77 = V_11;
			switch (L_77)
			{
				case 0:
				{
					goto IL_0277;
				}
				case 1:
				{
					goto IL_02a1;
				}
				case 2:
				{
					goto IL_02d6;
				}
			}
		}

IL_0275:
		{
			goto IL_02d6;
		}

IL_0277:
		{
			// if (!HasFocus)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38878));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_78 = __this->get_U3CU3E4__this_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38928));
			NullCheck(L_78);
			bool L_79 = VirtFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::get_HasFocus() */, L_78);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38928));
			V_12 = (bool)((((int32_t)L_79) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38879));
			bool L_80 = V_12;
			if (!L_80)
			{
				goto IL_029f;
			}
		}

IL_028b:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38880));
			// spawnable.SetActive(false);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38881));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_81 = __this->get_U3CU3E4__this_4();
			NullCheck(L_81);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_82 = L_81->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38929));
			NullCheck(L_82);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_82, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38929));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38882));
		}

IL_029f:
		{
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38883));
			goto IL_030d;
		}

IL_02a1:
		{
			// if (!tappedTime.Equals(tappedTimeOnStart))
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38884));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_83 = __this->get_U3CU3E4__this_4();
			NullCheck(L_83);
			float* L_84 = L_83->get_address_of_tappedTime_17();
			float L_85 = __this->get_tappedTimeOnStart_3();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38930));
			bool L_86 = Single_Equals_mCDFA927E712FBA83D076864E16C77E39A6E66FE7((float*)L_84, L_85, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38930));
			V_13 = (bool)((((int32_t)L_86) == ((int32_t)0))? 1 : 0);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38885));
			bool L_87 = V_13;
			if (!L_87)
			{
				goto IL_02d4;
			}
		}

IL_02c0:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38886));
			// spawnable.SetActive(false);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38887));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_88 = __this->get_U3CU3E4__this_4();
			NullCheck(L_88);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_89 = L_88->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38931));
			NullCheck(L_89);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_89, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38931));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38888));
		}

IL_02d4:
		{
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38889));
			goto IL_030d;
		}

IL_02d6:
		{
			// if (!HasFocus && HasVanishDelayElapsed())
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38890));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_90 = __this->get_U3CU3E4__this_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38932));
			NullCheck(L_90);
			bool L_91 = VirtFuncInvoker0< bool >::Invoke(10 /* System.Boolean Microsoft.MixedReality.Toolkit.Input.BaseFocusHandler::get_HasFocus() */, L_90);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38932));
			if (L_91)
			{
				goto IL_02f0;
			}
		}

IL_02e3:
		{
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_92 = __this->get_U3CU3E4__this_4();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38933));
			NullCheck(L_92);
			bool L_93 = PrefabSpawner_HasVanishDelayElapsed_m8CEED241162D9D6718453AED25F0B7B20488E133(L_92, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38933));
			G_B42_0 = ((int32_t)(L_93));
			goto IL_02f1;
		}

IL_02f0:
		{
			G_B42_0 = 0;
		}

IL_02f1:
		{
			V_14 = (bool)G_B42_0;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38891));
			bool L_94 = V_14;
			if (!L_94)
			{
				goto IL_030b;
			}
		}

IL_02f7:
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38892));
			// spawnable.SetActive(false);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38893));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_95 = __this->get_U3CU3E4__this_4();
			NullCheck(L_95);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_96 = L_95->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38934));
			NullCheck(L_96);
			GameObject_SetActive_m25A39F6D9FB68C51F13313F9804E85ACC937BC04(L_96, (bool)0, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38934));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38894));
		}

IL_030b:
		{
			// break;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38895));
			goto IL_030d;
		}

IL_030d:
		{
			// await new WaitForUpdate();
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38896));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38935));
			WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B * L_97 = (WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B *)il2cpp_codegen_object_new(WaitForUpdate_t6D9F8BF84CE484490D73AEC1947B7D817022D26B_il2cpp_TypeInfo_var);
			WaitForUpdate__ctor_m560DECF350742F98595C929CAE04B5AF50EB142B(L_97, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38935));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38936));
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_98 = AwaiterExtensions_GetAwaiter_m46890DAF3EA82A802455AAC169215566DC8095A1(L_97, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38936));
			V_15 = L_98;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38897));
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_99 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38937));
			NullCheck(L_99);
			bool L_100 = SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215_inline(L_99, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38937));
			if (L_100)
			{
				goto IL_0365;
			}
		}

IL_0322:
		{
			int32_t L_101 = 1;
			V_0 = L_101;
			__this->set_U3CU3E1__state_0(L_101);
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_102 = V_15;
			__this->set_U3CU3Eu__1_5(L_102);
			V_5 = __this;
			AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * L_103 = __this->get_address_of_U3CU3Et__builder_1();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38938));
			AsyncTaskMethodBuilder_AwaitOnCompleted_TisSimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m716DC9960E36A5812253AF7D23CB8B81EE7AA8E1((AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *)L_103, (SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE **)(&V_15), (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 **)(&V_5), /*hidden argument*/AsyncTaskMethodBuilder_AwaitOnCompleted_TisSimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_TisU3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868_m716DC9960E36A5812253AF7D23CB8B81EE7AA8E1_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38938));
			goto IL_03b7;
		}

IL_0348:
		{
			RuntimeObject * L_104 = __this->get_U3CU3Eu__1_5();
			V_15 = ((SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE *)CastclassClass((RuntimeObject*)L_104, SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE_il2cpp_TypeInfo_var));
			__this->set_U3CU3Eu__1_5(NULL);
			int32_t L_105 = (-1);
			V_0 = L_105;
			__this->set_U3CU3E1__state_0(L_105);
		}

IL_0365:
		{
			SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * L_106 = V_15;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38939));
			NullCheck(L_106);
			SimpleCoroutineAwaiter_GetResult_mA2E1941136B95442358BA03075F6AF1B0F2C159B(L_106, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38939));
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38898));
		}

IL_036e:
		{
			// while (spawnable.activeSelf)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38899));
			PrefabSpawner_t6C93FBF7FD601E767358F0D0F8B1D91D5BCAA6A7 * L_107 = __this->get_U3CU3E4__this_4();
			NullCheck(L_107);
			GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_108 = L_107->get_spawnable_18();
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38940));
			NullCheck(L_108);
			bool L_109 = GameObject_get_activeSelf_mFE1834886CAE59884AC2BE707A3B821A1DB61F44(L_108, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38940));
			V_16 = L_109;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38900));
			bool L_110 = V_16;
			if (L_110)
			{
				goto IL_019c;
			}
		}

IL_0387:
		{
			goto IL_03a3;
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__exception_local = (Exception_t *)e.ex;
		if(il2cpp_codegen_class_is_assignable_from (Exception_t_il2cpp_TypeInfo_var, il2cpp_codegen_object_class(e.ex)))
			goto CATCH_0389;
		throw e;
	}

CATCH_0389:
	{ // begin catch(System.Exception)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38901));
		V_17 = ((Exception_t *)__exception_local);
		__this->set_U3CU3E1__state_0(((int32_t)-2));
		AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * L_111 = __this->get_address_of_U3CU3Et__builder_1();
		Exception_t * L_112 = V_17;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38941));
		AsyncTaskMethodBuilder_SetException_m370C484922A63A6EF96E241D1370B8814F1F2D6B((AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *)L_111, L_112, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38941));
		goto IL_03b7;
	} // end catch (depth: 1)

IL_03a3:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38902));
		__this->set_U3CU3E1__state_0(((int32_t)-2));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38903));
		AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 * L_113 = __this->get_address_of_U3CU3Et__builder_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38942));
		AsyncTaskMethodBuilder_SetResult_m151016FB698F3BB34A73BAE693A97513A7E4C838((AsyncTaskMethodBuilder_t0CD1893D670405BED201BE8CA6F2E811F2C0F487 *)L_113, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 38942));
	}

IL_03b7:
	{
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PrefabSpawner/<UpdateSpawnable>d__17::SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CUpdateSpawnableU3Ed__17_SetStateMachine_mC42136A7213855D1C3F98E4B79D9E08433F2D97A (U3CUpdateSpawnableU3Ed__17_tF88729919F12CFACCFEFAFFF89148B15E26E7868 * __this, RuntimeObject* ___stateMachine0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (U3CUpdateSpawnableU3Ed__17_SetStateMachine_mC42136A7213855D1C3F98E4B79D9E08433F2D97A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, U3CUpdateSpawnableU3Ed__17_SetStateMachine_mC42136A7213855D1C3F98E4B79D9E08433F2D97A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Microsoft.MixedReality.Toolkit.UI.PressableButton/SpaceMode Microsoft.MixedReality.Toolkit.UI.PressableButton::get_DistanceSpaceMode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t PressableButton_get_DistanceSpaceMode_m13A16C24520327F8959AECD4D1779AAC6BC1FFDB (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_DistanceSpaceMode_m13A16C24520327F8959AECD4D1779AAC6BC1FFDB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_DistanceSpaceMode_m13A16C24520327F8959AECD4D1779AAC6BC1FFDB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29877));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29878));
	{
		// get => distanceSpaceMode;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29879));
		int32_t L_0 = __this->get_distanceSpaceMode_7();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_DistanceSpaceMode(Microsoft.MixedReality.Toolkit.UI.PressableButton/SpaceMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_DistanceSpaceMode_m5C54C67B4905BA0A9E80CCA024A66D3396C41679 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_DistanceSpaceMode_m5C54C67B4905BA0A9E80CCA024A66D3396C41679_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_DistanceSpaceMode_m5C54C67B4905BA0A9E80CCA024A66D3396C41679_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29880));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29881));
	float G_B4_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29882));
		// if (value != distanceSpaceMode)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29883));
		int32_t L_0 = ___value0;
		int32_t L_1 = __this->get_distanceSpaceMode_7();
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29884));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_006a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29885));
		// distanceSpaceMode = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29886));
		int32_t L_3 = ___value0;
		__this->set_distanceSpaceMode_7(L_3);
		// float scale = (distanceSpaceMode == SpaceMode.Local) ? WorldToLocalScale : LocalToWorldScale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29887));
		int32_t L_4 = __this->get_distanceSpaceMode_7();
		if ((((int32_t)L_4) == ((int32_t)1)))
		{
			goto IL_002a;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29894));
		float L_5 = PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29894));
		G_B4_0 = L_5;
		goto IL_0030;
	}

IL_002a:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29895));
		float L_6 = PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29895));
		G_B4_0 = L_6;
	}

IL_0030:
	{
		V_1 = G_B4_0;
		// startPushDistance *= scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29888));
		float L_7 = __this->get_startPushDistance_8();
		float L_8 = V_1;
		__this->set_startPushDistance_8(((float)il2cpp_codegen_multiply((float)L_7, (float)L_8)));
		// maxPushDistance *= scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29889));
		float L_9 = __this->get_maxPushDistance_9();
		float L_10 = V_1;
		__this->set_maxPushDistance_9(((float)il2cpp_codegen_multiply((float)L_9, (float)L_10)));
		// pressDistance *= scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29890));
		float L_11 = __this->get_pressDistance_10();
		float L_12 = V_1;
		__this->set_pressDistance_10(((float)il2cpp_codegen_multiply((float)L_11, (float)L_12)));
		// releaseDistanceDelta *= scale;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29891));
		float L_13 = __this->get_releaseDistanceDelta_11();
		float L_14 = V_1;
		__this->set_releaseDistanceDelta_11(((float)il2cpp_codegen_multiply((float)L_13, (float)L_14)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29892));
	}

IL_006a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29893));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_StartPushDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29896));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29897));
	{
		// public float StartPushDistance { get => startPushDistance; set => startPushDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29898));
		float L_0 = __this->get_startPushDistance_8();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_StartPushDistance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_StartPushDistance_m4E414245B5B7889A4676A146E063F3C1E361ADD3 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_StartPushDistance_m4E414245B5B7889A4676A146E063F3C1E361ADD3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_StartPushDistance_m4E414245B5B7889A4676A146E063F3C1E361ADD3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29899));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29900));
	{
		// public float StartPushDistance { get => startPushDistance; set => startPushDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29901));
		float L_0 = ___value0;
		__this->set_startPushDistance_8(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_MaxPushDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_MaxPushDistance_mC4D857945B9E6DA93D55966A5C2E6870B42995C9 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_MaxPushDistance_mC4D857945B9E6DA93D55966A5C2E6870B42995C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_MaxPushDistance_mC4D857945B9E6DA93D55966A5C2E6870B42995C9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29902));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29903));
	{
		// public float MaxPushDistance { get => maxPushDistance; set => maxPushDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29904));
		float L_0 = __this->get_maxPushDistance_9();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_MaxPushDistance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_MaxPushDistance_m468B8A68FB6A387165DC11312369D2D2F625AE66 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_MaxPushDistance_m468B8A68FB6A387165DC11312369D2D2F625AE66_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_MaxPushDistance_m468B8A68FB6A387165DC11312369D2D2F625AE66_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29905));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29906));
	{
		// public float MaxPushDistance { get => maxPushDistance; set => maxPushDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29907));
		float L_0 = ___value0;
		__this->set_maxPushDistance_9(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_PressDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_PressDistance_m2100E845747CC9564DE98C1E979543340A1D9B93 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_PressDistance_m2100E845747CC9564DE98C1E979543340A1D9B93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_PressDistance_m2100E845747CC9564DE98C1E979543340A1D9B93_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29908));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29909));
	{
		// public float PressDistance { get => pressDistance; set => pressDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29910));
		float L_0 = __this->get_pressDistance_10();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_PressDistance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_PressDistance_mB6BBD2846A2606B099CF61BC24189E78CC99BE8C (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_PressDistance_mB6BBD2846A2606B099CF61BC24189E78CC99BE8C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_PressDistance_mB6BBD2846A2606B099CF61BC24189E78CC99BE8C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29911));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29912));
	{
		// public float PressDistance { get => pressDistance; set => pressDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29913));
		float L_0 = ___value0;
		__this->set_pressDistance_10(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_ReleaseDistanceDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_ReleaseDistanceDelta_mBA3B4ED7A07CAF0AB2E328E2A87E1C80FACD87F1 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_ReleaseDistanceDelta_mBA3B4ED7A07CAF0AB2E328E2A87E1C80FACD87F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_ReleaseDistanceDelta_mBA3B4ED7A07CAF0AB2E328E2A87E1C80FACD87F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29914));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29915));
	{
		// public float ReleaseDistanceDelta { get => releaseDistanceDelta; set => releaseDistanceDelta = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29916));
		float L_0 = __this->get_releaseDistanceDelta_11();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_ReleaseDistanceDelta(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_ReleaseDistanceDelta_mFB32B05CE78BBFE66095B2C270789D97C04683DB (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_ReleaseDistanceDelta_mFB32B05CE78BBFE66095B2C270789D97C04683DB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_ReleaseDistanceDelta_mFB32B05CE78BBFE66095B2C270789D97C04683DB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29917));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29918));
	{
		// public float ReleaseDistanceDelta { get => releaseDistanceDelta; set => releaseDistanceDelta = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29919));
		float L_0 = ___value0;
		__this->set_releaseDistanceDelta_11(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::get_ReleaseOnTouchEnd()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PressableButton_get_ReleaseOnTouchEnd_m51468F01E46EE321AA2EC8F57C359E93D47E3D71 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_ReleaseOnTouchEnd_m51468F01E46EE321AA2EC8F57C359E93D47E3D71_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_ReleaseOnTouchEnd_m51468F01E46EE321AA2EC8F57C359E93D47E3D71_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29920));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29921));
	{
		// public bool ReleaseOnTouchEnd { get => releaseOnTouchEnd; set => releaseOnTouchEnd = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29922));
		bool L_0 = __this->get_releaseOnTouchEnd_13();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_ReleaseOnTouchEnd(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_ReleaseOnTouchEnd_m9CD20BD9693A00888666A64A898AFF75AA1102E5 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_ReleaseOnTouchEnd_m9CD20BD9693A00888666A64A898AFF75AA1102E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_ReleaseOnTouchEnd_m9CD20BD9693A00888666A64A898AFF75AA1102E5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29923));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29924));
	{
		// public bool ReleaseOnTouchEnd { get => releaseOnTouchEnd; set => releaseOnTouchEnd = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29925));
		bool L_0 = ___value0;
		__this->set_releaseOnTouchEnd_13(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::get_EnforceFrontPush()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PressableButton_get_EnforceFrontPush_mE66AFE773FCC4393ECB0CA1B33C5D3066118960C (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_EnforceFrontPush_mE66AFE773FCC4393ECB0CA1B33C5D3066118960C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_EnforceFrontPush_mE66AFE773FCC4393ECB0CA1B33C5D3066118960C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29926));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29927));
	{
		// public bool EnforceFrontPush { get => enforceFrontPush; private set => enforceFrontPush = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29928));
		bool L_0 = __this->get_enforceFrontPush_14();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_EnforceFrontPush(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_EnforceFrontPush_mA01C51284BD2A4EED6CBCD9B9575F2C1926DC7E9 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_EnforceFrontPush_mA01C51284BD2A4EED6CBCD9B9575F2C1926DC7E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_EnforceFrontPush_mA01C51284BD2A4EED6CBCD9B9575F2C1926DC7E9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29929));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29930));
	{
		// public bool EnforceFrontPush { get => enforceFrontPush; private set => enforceFrontPush = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29931));
		bool L_0 = ___value0;
		__this->set_enforceFrontPush_14(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_CurrentPushDistance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_CurrentPushDistance_m1A1E7FD5999A04DDE0ABC8C2F1D55ED3F5554594 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_CurrentPushDistance_m1A1E7FD5999A04DDE0ABC8C2F1D55ED3F5554594_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_CurrentPushDistance_m1A1E7FD5999A04DDE0ABC8C2F1D55ED3F5554594_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29932));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29933));
	{
		// public float CurrentPushDistance { get => currentPushDistance; protected set => currentPushDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29934));
		float L_0 = __this->get_currentPushDistance_22();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_CurrentPushDistance(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_CurrentPushDistance_m769268C30F6DB65470C70F9ECBF483FB379BDA89 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_CurrentPushDistance_m769268C30F6DB65470C70F9ECBF483FB379BDA89_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_CurrentPushDistance_m769268C30F6DB65470C70F9ECBF483FB379BDA89_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29935));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29936));
	{
		// public float CurrentPushDistance { get => currentPushDistance; protected set => currentPushDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29937));
		float L_0 = ___value0;
		__this->set_currentPushDistance_22(L_0);
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::get_IsTouching()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29938));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29939));
	{
		// get => isTouching;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29940));
		bool L_0 = __this->get_isTouching_23();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_IsTouching(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29941));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29942));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29943));
		// if (value != isTouching)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29944));
		bool L_0 = ___value0;
		bool L_1 = __this->get_isTouching_23();
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29945));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0059;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29946));
		// isTouching = value;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29947));
		bool L_3 = ___value0;
		__this->set_isTouching_23(L_3);
		// if (isTouching)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29948));
		bool L_4 = __this->get_isTouching_23();
		V_1 = L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29949));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0033;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29950));
		// TouchBegin.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29951));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_6 = __this->get_TouchBegin_15();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29963));
		NullCheck(L_6);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29963));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29952));
		goto IL_0058;
	}

IL_0033:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29953));
		// if (!releaseOnTouchEnd)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29954));
		bool L_7 = __this->get_releaseOnTouchEnd_13();
		V_2 = (bool)((((int32_t)L_7) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29955));
		bool L_8 = V_2;
		if (!L_8)
		{
			goto IL_004b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29956));
		// IsPressing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29957));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29964));
		PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29964));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29958));
	}

IL_004b:
	{
		// TouchEnd.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29959));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_9 = __this->get_TouchEnd_16();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29965));
		NullCheck(L_9);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29965));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29960));
	}

IL_0058:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29961));
	}

IL_0059:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29962));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::get_IsPressing()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29966));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29967));
	{
		// public bool IsPressing { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29968));
		bool L_0 = __this->get_U3CIsPressingU3Ek__BackingField_24();
		return L_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::set_IsPressing(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29969));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29970));
	{
		// public bool IsPressing { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29971));
		bool L_0 = ___value0;
		__this->set_U3CIsPressingU3Ek__BackingField_24(L_0);
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_LocalToWorldScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29973));
	float G_B3_0 = 0.0f;
	{
		// public float LocalToWorldScale => (WorldToLocalScale != 0) ? 1.0f / WorldToLocalScale : 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29974));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29975));
		float L_0 = PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29975));
		if ((!(((float)L_0) == ((float)(0.0f)))))
		{
			goto IL_0014;
		}
	}
	{
		G_B3_0 = (0.0f);
		goto IL_0020;
	}

IL_0014:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29976));
		float L_1 = PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29976));
		G_B3_0 = ((float)((float)(1.0f)/(float)L_1));
	}

IL_0020:
	{
		return G_B3_0;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_WorldSpacePressDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * V_0 = NULL;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29977));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29978));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29979));
		// var nearInteractionTouchable = GetComponent<NearInteractionTouchableSurface>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29980));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29987));
		NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * L_0 = Component_GetComponent_TisNearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0_m5D1FF954F59BC4FDE0F6AAC0A4A77E686771771D(__this, /*hidden argument*/Component_GetComponent_TisNearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0_m5D1FF954F59BC4FDE0F6AAC0A4A77E686771771D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29987));
		V_0 = L_0;
		// if (nearInteractionTouchable != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29981));
		NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29988));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29988));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29982));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_0028;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29983));
		// return nearInteractionTouchable.transform.TransformDirection(nearInteractionTouchable.LocalPressDirection);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29984));
		NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29989));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29989));
		NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * L_6 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29990));
		NullCheck(L_6);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(7 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableSurface::get_LocalPressDirection() */, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29990));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29991));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Transform_TransformDirection_m85FC1D7E1322E94F65DA59AEF3B1166850B183EF(L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29991));
		V_2 = L_8;
		goto IL_0036;
	}

IL_0028:
	{
		// return transform.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29985));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29992));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_9 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29992));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29993));
		NullCheck(L_9);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Transform_get_forward_m0BE1E88B86049ADA39391C3ACED2314A624BC67F(L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29993));
		V_2 = L_10;
		goto IL_0036;
	}

IL_0036:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29986));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = V_2;
		return L_11;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_LocalSpacePressDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_LocalSpacePressDirection_mD89D464FE64A8BA09D8E41AF37A942CE14260E3F (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_LocalSpacePressDirection_mD89D464FE64A8BA09D8E41AF37A942CE14260E3F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * V_0 = NULL;
	bool V_1 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_LocalSpacePressDirection_mD89D464FE64A8BA09D8E41AF37A942CE14260E3F_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29994));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29995));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29996));
		// var nearInteractionTouchable = GetComponent<NearInteractionTouchableSurface>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29997));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30004));
		NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * L_0 = Component_GetComponent_TisNearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0_m5D1FF954F59BC4FDE0F6AAC0A4A77E686771771D(__this, /*hidden argument*/Component_GetComponent_TisNearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0_m5D1FF954F59BC4FDE0F6AAC0A4A77E686771771D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30004));
		V_0 = L_0;
		// if (nearInteractionTouchable != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29998));
		NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * L_1 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30005));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30005));
		V_1 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29999));
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_001d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30000));
		// return nearInteractionTouchable.LocalPressDirection;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30001));
		NearInteractionTouchableSurface_tAC10D50E1619746066A42A3A3D8A92CE9C013AE0 * L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30006));
		NullCheck(L_4);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = VirtFuncInvoker0< Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  >::Invoke(7 /* UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.Input.NearInteractionTouchableSurface::get_LocalPressDirection() */, L_4);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30006));
		V_2 = L_5;
		goto IL_0025;
	}

IL_001d:
	{
		// return Vector3.forward;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30002));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30007));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_forward_m3E2E192B3302130098738C308FA1EE1439449D0D(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30007));
		V_2 = L_6;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30003));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_2;
		return L_7;
	}
}
// UnityEngine.Transform Microsoft.MixedReality.Toolkit.UI.PressableButton::get_PushSpaceSourceTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30008));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30009));
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * G_B3_0 = NULL;
	{
		// get => movingButtonVisuals != null ? movingButtonVisuals.transform : transform;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30010));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_movingButtonVisuals_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30011));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30011));
		if (L_1)
		{
			goto IL_0016;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30012));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30012));
		G_B3_0 = L_2;
		goto IL_0021;
	}

IL_0016:
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_movingButtonVisuals_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30013));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30013));
		G_B3_0 = L_4;
	}

IL_0021:
	{
		return G_B3_0;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::get_WorldToLocalScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30014));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30015));
	{
		// private float WorldToLocalScale => transform.InverseTransformVector(WorldSpacePressDirection).magnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30016));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30017));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = Component_get_transform_m00F05BD782F920C301A7EBA480F3B7A904C07EC9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30017));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30018));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30018));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30019));
		NullCheck(L_0);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Transform_InverseTransformVector_mC363B03FB4A80E242264469E68489E401285E525(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30019));
		V_0 = L_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30020));
		float L_3 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30020));
		return L_3;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_InitialWorldPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * V_1 = NULL;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_3;
	memset((&V_3), 0, sizeof(V_3));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30021));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30022));
	int32_t G_B3_0 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B7_0;
	memset((&G_B7_0), 0, sizeof(G_B7_0));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30023));
		// if (Application.isPlaying && movingButtonVisuals) // we're using a cached position in play mode as the moving visuals will be moved during button interaction
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30024));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30033));
		bool L_0 = Application_get_isPlaying_mF43B519662E7433DD90D883E5AE22EC3CFB65CA5(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30033));
		if (!L_0)
		{
			goto IL_0015;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_movingButtonVisuals_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30034));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30034));
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0016;
	}

IL_0015:
	{
		G_B3_0 = 0;
	}

IL_0016:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30025));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0054;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30026));
		// var parentTransform = PushSpaceSourceTransform.parent;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30027));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30035));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30035));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30036));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30036));
		V_1 = L_5;
		// var localPosition = (parentTransform == null) ? movingVisualsInitialLocalPosition : parentTransform.TransformVector(movingVisualsInitialLocalPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30028));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_6 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30037));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_7 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_6, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30037));
		if (L_7)
		{
			goto IL_003e;
		}
	}
	{
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_8 = V_1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = __this->get_movingVisualsInitialLocalPosition_25();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30038));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = Transform_TransformVector_m75D0F9F62127C642869F5F0C865540FEE5BB3168(L_8, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30038));
		G_B7_0 = L_10;
		goto IL_0044;
	}

IL_003e:
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = __this->get_movingVisualsInitialLocalPosition_25();
		G_B7_0 = L_11;
	}

IL_0044:
	{
		V_2 = G_B7_0;
		// return PushSpaceSourceParentPosition + localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30029));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30039));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = PressableButton_get_PushSpaceSourceParentPosition_mE92CCDF7D2B6694AC32920B3896264E6966691D6(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30039));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30040));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_14 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30040));
		V_3 = L_14;
		goto IL_0063;
	}

IL_0054:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30030));
		// return PushSpaceSourceTransform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30031));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30041));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_15 = PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30041));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30042));
		NullCheck(L_15);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30042));
		V_3 = L_16;
		goto IL_0063;
	}

IL_0063:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30032));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = V_3;
		return L_17;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_InitialLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_InitialLocalPosition_m8D225ECB8F5146925F94C5C587C8984DF38F9506 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_InitialLocalPosition_m8D225ECB8F5146925F94C5C587C8984DF38F9506_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_InitialLocalPosition_m8D225ECB8F5146925F94C5C587C8984DF38F9506_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30043));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30044));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30045));
		// if (Application.isPlaying && movingButtonVisuals) // we're using a cached position in play mode as the moving visuals will be moved during button interaction
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30046));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30053));
		bool L_0 = Application_get_isPlaying_mF43B519662E7433DD90D883E5AE22EC3CFB65CA5(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30053));
		if (!L_0)
		{
			goto IL_0015;
		}
	}
	{
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_1 = __this->get_movingButtonVisuals_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30054));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30054));
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0016;
	}

IL_0015:
	{
		G_B3_0 = 0;
	}

IL_0016:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30047));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30048));
		// return movingVisualsInitialLocalPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30049));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = __this->get_movingVisualsInitialLocalPosition_25();
		V_1 = L_4;
		goto IL_0033;
	}

IL_0024:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30050));
		// return PushSpaceSourceTransform.position;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30051));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30055));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30055));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30056));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30056));
		V_1 = L_6;
		goto IL_0033;
	}

IL_0033:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30052));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_1;
		return L_7;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_OnEnable_m84A50284CE66DAFEB3347BE9AB1A70C35A1F67C2 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_OnEnable_m84A50284CE66DAFEB3347BE9AB1A70C35A1F67C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_OnEnable_m84A50284CE66DAFEB3347BE9AB1A70C35A1F67C2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30057));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30058));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30059));
		// currentPushDistance = startPushDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30060));
		float L_0 = __this->get_startPushDistance_8();
		__this->set_currentPushDistance_22(L_0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30061));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::get_PushSpaceSourceParentPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_get_PushSpaceSourceParentPosition_mE92CCDF7D2B6694AC32920B3896264E6966691D6 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_PushSpaceSourceParentPosition_mE92CCDF7D2B6694AC32920B3896264E6966691D6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_PushSpaceSourceParentPosition_mE92CCDF7D2B6694AC32920B3896264E6966691D6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30062));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30063));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	{
		// private Vector3 PushSpaceSourceParentPosition => (PushSpaceSourceTransform.parent != null) ? PushSpaceSourceTransform.parent.position : Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30064));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30065));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30066));
		NullCheck(L_0);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_1 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30066));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30067));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_2 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_1, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30067));
		if (L_2)
		{
			goto IL_001a;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30068));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30068));
		G_B3_0 = L_3;
		goto IL_002a;
	}

IL_001a:
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30069));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30069));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30070));
		NullCheck(L_4);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_5 = Transform_get_parent_m8FA24E38A1FA29D90CBF3CDC9F9F017C65BB3403(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30070));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30071));
		NullCheck(L_5);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Transform_get_position_mF54C3A064F7C8E24F1C56EE128728B2E4485E294(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30071));
		G_B3_0 = L_6;
	}

IL_002a:
	{
		return G_B3_0;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_Start_mC07A27216DD34C5DB31EE59C18C3963344AF1820 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_Start_mC07A27216DD34C5DB31EE59C18C3963344AF1820_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_Start_mC07A27216DD34C5DB31EE59C18C3963344AF1820_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30072));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30073));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30074));
		// hasStarted = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30075));
		__this->set_hasStarted_5((bool)1);
		// if (gameObject.layer == 2)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30076));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30084));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30084));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30085));
		NullCheck(L_0);
		int32_t L_1 = GameObject_get_layer_m0DE90D8A3D3AA80497A3A80FBEAC2D207C16B9C8(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30085));
		V_0 = (bool)((((int32_t)L_1) == ((int32_t)2))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30077));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0027;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30078));
		// Debug.LogWarning("PressableButton will not work if game object layer is set to 'Ignore Raycast'.");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30079));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30086));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogWarning_m37338644DC81F640CCDFEAE35A223F0E965F0568(_stringLiteral56DD023AB0BC249AEA78AA316BD62F042FCBA77A, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30086));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30080));
	}

IL_0027:
	{
		// movingVisualsInitialLocalPosition = PushSpaceSourceTransform.localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30081));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30087));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_3 = PressableButton_get_PushSpaceSourceTransform_m87433F17A893AB00FC8FBA29C26B49FC93A58BD8(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30087));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30088));
		NullCheck(L_3);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Transform_get_localPosition_m812D43318E05BDCB78310EB7308785A13D85EFD8(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30088));
		__this->set_movingVisualsInitialLocalPosition_25(L_4);
		// UpdateMovingVisualsPosition();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30082));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30089));
		VirtActionInvoker0::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdateMovingVisualsPosition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30089));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30083));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_OnDisable_mA76273FF023905FD2D7B82280BD1C99B1263D4C0 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_OnDisable_mA76273FF023905FD2D7B82280BD1C99B1263D4C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_OnDisable_mA76273FF023905FD2D7B82280BD1C99B1263D4C0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30090));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30091));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30092));
		// touchPoints.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30093));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_0 = __this->get_touchPoints_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30102));
		NullCheck(L_0);
		Dictionary_2_Clear_mAD74413C5E561E2314E39854F01AD7391F6C33B4(L_0, /*hidden argument*/Dictionary_2_Clear_mAD74413C5E561E2314E39854F01AD7391F6C33B4_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30102));
		// currentInputSources.Clear();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30094));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_1 = __this->get_currentInputSources_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30103));
		NullCheck(L_1);
		List_1_Clear_m214870E1012EB144761CC52D6F6AAC2AEEC33532(L_1, /*hidden argument*/List_1_Clear_m214870E1012EB144761CC52D6F6AAC2AEEC33532_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30103));
		// if (hasStarted)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30095));
		bool L_2 = __this->get_hasStarted_5();
		V_0 = L_2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30096));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0038;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30097));
		// currentPushDistance = startPushDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30098));
		float L_4 = __this->get_startPushDistance_8();
		__this->set_currentPushDistance_22(L_4);
		// UpdateMovingVisualsPosition();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30099));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30104));
		VirtActionInvoker0::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdateMovingVisualsPosition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30104));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30100));
	}

IL_0038:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30101));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_Update_mF258E83A995C348D26E568D58672F9648648DF6E (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_Update_mF258E83A995C348D26E568D58672F9648648DF6E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_Update_mF258E83A995C348D26E568D58672F9648648DF6E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30105));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30106));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30107));
		// if (IsTouching)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30108));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30119));
		bool L_0 = PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30119));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30109));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30110));
		// UpdateTouch();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30111));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30120));
		PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30120));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30112));
		goto IL_0031;
	}

IL_0016:
	{
		// else if (currentPushDistance > startPushDistance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30113));
		float L_2 = __this->get_currentPushDistance_22();
		float L_3 = __this->get_startPushDistance_8();
		V_1 = (bool)((((float)L_2) > ((float)L_3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30114));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0031;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30115));
		// RetractButton();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30121));
		PressableButton_RetractButton_mE4499A700141447BFBFB22BC8477C6F77A1E85C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30121));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30117));
	}

IL_0031:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30118));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdateTouch()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30122));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30123));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30124));
		// currentPushDistance = GetFarthestDistanceAlongPressDirection();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30125));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30129));
		float L_0 = PressableButton_GetFarthestDistanceAlongPressDirection_m0505BE444BEBF3FAA2BABF301FA6AF5F723A2846(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30129));
		__this->set_currentPushDistance_22(L_0);
		// UpdateMovingVisualsPosition();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30126));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30130));
		VirtActionInvoker0::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdateMovingVisualsPosition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30130));
		// UpdatePressedState(currentPushDistance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30127));
		float L_1 = __this->get_currentPushDistance_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30131));
		PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587(__this, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30131));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30128));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::RetractButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_RetractButton_mE4499A700141447BFBFB22BC8477C6F77A1E85C0 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_RetractButton_mE4499A700141447BFBFB22BC8477C6F77A1E85C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_RetractButton_mE4499A700141447BFBFB22BC8477C6F77A1E85C0_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30132));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30133));
	int32_t G_B6_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30134));
		// float retractDistance = currentPushDistance - startPushDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30135));
		float L_0 = __this->get_currentPushDistance_22();
		float L_1 = __this->get_startPushDistance_8();
		V_0 = ((float)il2cpp_codegen_subtract((float)L_0, (float)L_1));
		// retractDistance -= retractDistance * returnSpeed * Time.deltaTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30136));
		float L_2 = V_0;
		float L_3 = V_0;
		float L_4 = __this->get_returnSpeed_12();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30153));
		float L_5 = Time_get_deltaTime_m16F98FC9BA931581236008C288E3B25CBCB7C81E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30153));
		V_0 = ((float)il2cpp_codegen_subtract((float)L_2, (float)((float)il2cpp_codegen_multiply((float)((float)il2cpp_codegen_multiply((float)L_3, (float)L_4)), (float)L_5))));
		// float localMaxRetractDistanceBeforeReset = MaxRetractDistanceBeforeReset * WorldSpacePressDirection.magnitude;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30137));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30154));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30154));
		V_2 = L_6;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30155));
		float L_7 = Vector3_get_magnitude_m9A750659B60C5FE0C30438A7F9681775D5DB1274((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30155));
		V_1 = ((float)il2cpp_codegen_multiply((float)(0.0001f), (float)L_7));
		// if (retractDistance < localMaxRetractDistanceBeforeReset)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30138));
		float L_8 = V_0;
		float L_9 = V_1;
		V_3 = (bool)((((float)L_8) < ((float)L_9))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30139));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_004d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30140));
		// currentPushDistance = startPushDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30141));
		float L_11 = __this->get_startPushDistance_8();
		__this->set_currentPushDistance_22(L_11);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30142));
		goto IL_005d;
	}

IL_004d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30143));
		// currentPushDistance = startPushDistance + retractDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30144));
		float L_12 = __this->get_startPushDistance_8();
		float L_13 = V_0;
		__this->set_currentPushDistance_22(((float)il2cpp_codegen_add((float)L_12, (float)L_13)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30145));
	}

IL_005d:
	{
		// UpdateMovingVisualsPosition();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30146));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30156));
		VirtActionInvoker0::Invoke(8 /* System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdateMovingVisualsPosition() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30156));
		// if (releaseOnTouchEnd && IsPressing)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30147));
		bool L_14 = __this->get_releaseOnTouchEnd_13();
		if (!L_14)
		{
			goto IL_0074;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30157));
		bool L_15 = PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30157));
		G_B6_0 = ((int32_t)(L_15));
		goto IL_0075;
	}

IL_0074:
	{
		G_B6_0 = 0;
	}

IL_0075:
	{
		V_4 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30148));
		bool L_16 = V_4;
		if (!L_16)
		{
			goto IL_008a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30149));
		// UpdatePressedState(currentPushDistance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30150));
		float L_17 = __this->get_currentPushDistance_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30158));
		PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587(__this, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30158));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30151));
	}

IL_008a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30152));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::PulseProximityLight()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_PulseProximityLight_m1EBDFA4D807318B0B7A2CC516E68E0606A92F4E9 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_PulseProximityLight_m1EBDFA4D807318B0B7A2CC516E68E0606A92F4E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* V_1 = NULL;
	int32_t V_2 = 0;
	RuntimeObject* V_3 = NULL;
	MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * V_4 = NULL;
	GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * V_5 = NULL;
	ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* V_6 = NULL;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* V_10 = NULL;
	int32_t V_11 = 0;
	ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * V_12 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_3), (&V_4), (&V_5), (&V_6), (&V_12));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_PulseProximityLight_m1EBDFA4D807318B0B7A2CC516E68E0606A92F4E9_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30159));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30160));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30161));
		// if (currentInputSources.Count != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30162));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_0 = __this->get_currentInputSources_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30198));
		NullCheck(L_0);
		int32_t L_1 = List_1_get_Count_m53489CC19A10DC6F7A732FB60152B290AB934BE1_inline(L_0, /*hidden argument*/List_1_get_Count_m53489CC19A10DC6F7A732FB60152B290AB934BE1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30198));
		V_0 = (bool)((!(((uint32_t)L_1) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30163));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00d2;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30164));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30165));
		// foreach (var pointer in currentInputSources[currentInputSources.Count - 1].Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30166));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_3 = __this->get_currentInputSources_21();
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_4 = __this->get_currentInputSources_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30199));
		NullCheck(L_4);
		int32_t L_5 = List_1_get_Count_m53489CC19A10DC6F7A732FB60152B290AB934BE1_inline(L_4, /*hidden argument*/List_1_get_Count_m53489CC19A10DC6F7A732FB60152B290AB934BE1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30199));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30200));
		NullCheck(L_3);
		RuntimeObject* L_6 = List_1_get_Item_m30A79D2B92893FC561D87B7D9DDB83DF1C9B7E94_inline(L_3, ((int32_t)il2cpp_codegen_subtract((int32_t)L_5, (int32_t)1)), /*hidden argument*/List_1_get_Item_m30A79D2B92893FC561D87B7D9DDB83DF1C9B7E94_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30200));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30201));
		NullCheck(L_6);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_7 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_6);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30201));
		V_1 = L_7;
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30167));
		goto IL_00c8;
	}

IL_003d:
	{
		// foreach (var pointer in currentInputSources[currentInputSources.Count - 1].Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30168));
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_8 = V_1;
		int32_t L_9 = V_2;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		RuntimeObject* L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		V_3 = L_11;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30169));
		// if (!pointer.BaseCursor.TryGetMonoBehaviour(out MonoBehaviour baseCursor))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30170));
		RuntimeObject* L_12 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30202));
		NullCheck(L_12);
		RuntimeObject* L_13 = InterfaceFuncInvoker0< RuntimeObject* >::Invoke(6 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityCursor Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer::get_BaseCursor() */, IMixedRealityPointer_tD7C4CF8940EB016597EF8CED76503F0D39A61C53_il2cpp_TypeInfo_var, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30202));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30203));
		bool L_14 = UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18(L_13, (MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 **)(&V_4), /*hidden argument*/UnityObjectExtensions_TryGetMonoBehaviour_TisIMixedRealityCursor_t5CB717D2AFE455FE2DC89AB280C35323D0670E05_m281776188360CCE18FA2ACB5625AD0AA3C8CAA18_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30203));
		V_7 = (bool)((((int32_t)L_14) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30171));
		bool L_15 = V_7;
		if (!L_15)
		{
			goto IL_005b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30172));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30173));
		goto IL_00d2;
	}

IL_005b:
	{
		// GameObject cursorGameObject = baseCursor.gameObject;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30174));
		MonoBehaviour_t4A60845CF505405AF8BE8C61CC07F75CADEF6429 * L_16 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30204));
		NullCheck(L_16);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_17 = Component_get_gameObject_m0B0570BA8DDD3CD78A9DB568EA18D7317686603C(L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30204));
		V_5 = L_17;
		// if (cursorGameObject == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30175));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_18 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30205));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_19 = Object_op_Equality_mBC2401774F3BE33E8CF6F0A8148E66C95D6CFF1C(L_18, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30205));
		V_8 = L_19;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30176));
		bool L_20 = V_8;
		if (!L_20)
		{
			goto IL_0075;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30177));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30178));
		goto IL_00d2;
	}

IL_0075:
	{
		// ProximityLight[] proximityLights = cursorGameObject.GetComponentsInChildren<ProximityLight>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30179));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_21 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30206));
		NullCheck(L_21);
		ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* L_22 = GameObject_GetComponentsInChildren_TisProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_mFB7C6A37DF0B47AF47C680BC769E9146CB2748F6(L_21, /*hidden argument*/GameObject_GetComponentsInChildren_TisProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F_mFB7C6A37DF0B47AF47C680BC769E9146CB2748F6_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30206));
		V_6 = L_22;
		// if (proximityLights != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30180));
		ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* L_23 = V_6;
		V_9 = (bool)((!(((RuntimeObject*)(ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD*)L_23) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30181));
		bool L_24 = V_9;
		if (!L_24)
		{
			goto IL_00c3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30182));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30183));
		// foreach (var proximityLight in proximityLights)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30184));
		ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* L_25 = V_6;
		V_10 = L_25;
		V_11 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30185));
		goto IL_00ba;
	}

IL_0094:
	{
		// foreach (var proximityLight in proximityLights)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30186));
		ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* L_26 = V_10;
		int32_t L_27 = V_11;
		NullCheck(L_26);
		int32_t L_28 = L_27;
		ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * L_29 = (L_26)->GetAt(static_cast<il2cpp_array_size_t>(L_28));
		V_12 = L_29;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30187));
		// proximityLight.Pulse();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30188));
		ProximityLight_t226405A8FC363E03DB6C6D25C3DA2BDCB9B05C6F * L_30 = V_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30207));
		NullCheck(L_30);
		ProximityLight_Pulse_m285D8320ECEBFEF321C1809AE13CB4EF017A5CB6(L_30, (0.2f), (0.8f), (10.0f), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30207));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30189));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30190));
		int32_t L_31 = V_11;
		V_11 = ((int32_t)il2cpp_codegen_add((int32_t)L_31, (int32_t)1));
	}

IL_00ba:
	{
		// foreach (var proximityLight in proximityLights)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30191));
		int32_t L_32 = V_11;
		ProximityLightU5BU5D_tF6D86CCA552CDFE65277412975C645A06DE53EBD* L_33 = V_10;
		NullCheck(L_33);
		if ((((int32_t)L_32) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_33)->max_length)))))))
		{
			goto IL_0094;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30192));
	}

IL_00c3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30193));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30194));
		int32_t L_34 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_34, (int32_t)1));
	}

IL_00c8:
	{
		// foreach (var pointer in currentInputSources[currentInputSources.Count - 1].Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30195));
		int32_t L_35 = V_2;
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_36 = V_1;
		NullCheck(L_36);
		if ((((int32_t)L_35) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_36)->max_length)))))))
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30196));
	}

IL_00d2:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30197));
		return;
	}
}
// System.Boolean Microsoft.MixedReality.Toolkit.UI.PressableButton::HasPassedThroughStartPlane(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool PressableButton_HasPassedThroughStartPlane_m0BA017A9988AD256A41D9E3088D99A2CFC26DD7E (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_HasPassedThroughStartPlane_m0BA017A9988AD256A41D9E3088D99A2CFC26DD7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* V_0 = NULL;
	int32_t V_1 = 0;
	RuntimeObject* V_2 = NULL;
	PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * V_3 = NULL;
	bool V_4 = false;
	float V_5 = 0.0f;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2), (&V_3), (&V_5));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_HasPassedThroughStartPlane_m0BA017A9988AD256A41D9E3088D99A2CFC26DD7E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30208));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30209));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30210));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30211));
		// foreach (var pointer in eventData.InputSource.Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30212));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_0 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30227));
		NullCheck(L_0);
		RuntimeObject* L_1 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30227));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30228));
		NullCheck(L_1);
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_2 = InterfaceFuncInvoker0< IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* >::Invoke(0 /* Microsoft.MixedReality.Toolkit.Input.IMixedRealityPointer[] Microsoft.MixedReality.Toolkit.Input.IMixedRealityInputSource::get_Pointers() */, IMixedRealityInputSource_tE0E928A8AFA1825E798A69EB5D4BE993B8227ED2_il2cpp_TypeInfo_var, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30228));
		V_0 = L_2;
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30213));
		goto IL_005f;
	}

IL_0012:
	{
		// foreach (var pointer in eventData.InputSource.Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30214));
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_3 = V_0;
		int32_t L_4 = V_1;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		RuntimeObject* L_6 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_2 = L_6;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30215));
		// PokePointer poke = pointer as PokePointer;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30216));
		RuntimeObject* L_7 = V_2;
		V_3 = ((PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 *)IsInstClass((RuntimeObject*)L_7, PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18_il2cpp_TypeInfo_var));
		// if (poke && poke.CurrentTouchableObjectDown)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30217));
		PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * L_8 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30229));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_9 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30229));
		if (!L_9)
		{
			goto IL_0033;
		}
	}
	{
		PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * L_10 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30230));
		NullCheck(L_10);
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_11 = PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_inline(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30230));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30231));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_12 = Object_op_Implicit_m8B2A44B4B1406ED346D1AE6D962294FD58D0D534(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30231));
		G_B4_0 = ((int32_t)(L_12));
		goto IL_0034;
	}

IL_0033:
	{
		G_B4_0 = 0;
	}

IL_0034:
	{
		V_4 = (bool)G_B4_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30218));
		bool L_13 = V_4;
		if (!L_13)
		{
			goto IL_005a;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30219));
		// float previousDistance = GetDistanceAlongPushDirection(poke.PreviousPosition);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30220));
		PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * L_14 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30232));
		NullCheck(L_14);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30232));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30233));
		float L_16 = PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F(__this, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30233));
		V_5 = L_16;
		// return previousDistance <= StartPushDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30221));
		float L_17 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30234));
		float L_18 = PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30234));
		V_6 = (bool)((((int32_t)((!(((float)L_17) <= ((float)L_18)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_006a;
	}

IL_005a:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30222));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30223));
		int32_t L_19 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_19, (int32_t)1));
	}

IL_005f:
	{
		// foreach (var pointer in eventData.InputSource.Pointers)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30224));
		int32_t L_20 = V_1;
		IMixedRealityPointerU5BU5D_t39DD1136CDE343C8864073AF61557AFC03AB3778* L_21 = V_0;
		NullCheck(L_21);
		if ((((int32_t)L_20) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_21)->max_length)))))))
		{
			goto IL_0012;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30225));
		V_6 = (bool)0;
		goto IL_006a;
	}

IL_006a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30226));
		bool L_22 = V_6;
		return L_22;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchHandler.OnTouchStarted(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m9093FA6580377E368B06A71F6281F9307D7677B6 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m9093FA6580377E368B06A71F6281F9307D7677B6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchStarted_m9093FA6580377E368B06A71F6281F9307D7677B6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30235));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30236));
	int32_t G_B5_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30237));
		// if (touchPoints.ContainsKey(eventData.Controller))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30238));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_0 = __this->get_touchPoints_20();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30252));
		NullCheck(L_1);
		RuntimeObject* L_2 = HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30252));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30253));
		NullCheck(L_0);
		bool L_3 = Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0(L_0, L_2, /*hidden argument*/Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30253));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30239));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0019;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30240));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30241));
		goto IL_0080;
	}

IL_0019:
	{
		// if (enforceFrontPush && !HasPassedThroughStartPlane(eventData))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30242));
		bool L_5 = __this->get_enforceFrontPush_14();
		if (!L_5)
		{
			goto IL_002d;
		}
	}
	{
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30254));
		bool L_7 = PressableButton_HasPassedThroughStartPlane_m0BA017A9988AD256A41D9E3088D99A2CFC26DD7E(__this, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30254));
		G_B5_0 = ((((int32_t)L_7) == ((int32_t)0))? 1 : 0);
		goto IL_002e;
	}

IL_002d:
	{
		G_B5_0 = 0;
	}

IL_002e:
	{
		V_1 = (bool)G_B5_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30243));
		bool L_8 = V_1;
		if (!L_8)
		{
			goto IL_0035;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30244));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30245));
		goto IL_0080;
	}

IL_0035:
	{
		// touchPoints.Add(eventData.Controller, eventData.InputData);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30246));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_9 = __this->get_touchPoints_20();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_10 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30255));
		NullCheck(L_10);
		RuntimeObject* L_11 = HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30255));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_12 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30256));
		NullCheck(L_12);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_13 = InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_inline(L_12, /*hidden argument*/InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30256));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30257));
		NullCheck(L_9);
		Dictionary_2_Add_m54469B6D64C15CF6B859A0A7DEFB39A0351B33F3(L_9, L_11, L_13, /*hidden argument*/Dictionary_2_Add_m54469B6D64C15CF6B859A0A7DEFB39A0351B33F3_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30257));
		// currentInputSources.Remove(eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30247));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_14 = __this->get_currentInputSources_21();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_15 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30258));
		NullCheck(L_15);
		RuntimeObject* L_16 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30258));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30259));
		NullCheck(L_14);
		List_1_Remove_mC1DB35F985B1E0BF0158F3E5519E5C620654E0E7(L_14, L_16, /*hidden argument*/List_1_Remove_mC1DB35F985B1E0BF0158F3E5519E5C620654E0E7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30259));
		// currentInputSources.Add(eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30248));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_17 = __this->get_currentInputSources_21();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_18 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30260));
		NullCheck(L_18);
		RuntimeObject* L_19 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30260));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30261));
		NullCheck(L_17);
		List_1_Add_mAC7F377FC00749E98D997CB913D6AF547F56F769(L_17, L_19, /*hidden argument*/List_1_Add_mAC7F377FC00749E98D997CB913D6AF547F56F769_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30261));
		// IsTouching = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30249));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30262));
		PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30262));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30250));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_20 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30263));
		NullCheck(L_20);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_20);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30263));
	}

IL_0080:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30251));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchHandler.OnTouchUpdated(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_mDCF8FAE53349EC1D5E4F8DE7C0BE6C1126249196 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_mDCF8FAE53349EC1D5E4F8DE7C0BE6C1126249196_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchUpdated_mDCF8FAE53349EC1D5E4F8DE7C0BE6C1126249196_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30264));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30265));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30266));
		// if (touchPoints.ContainsKey(eventData.Controller))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30267));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_0 = __this->get_touchPoints_20();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30274));
		NullCheck(L_1);
		RuntimeObject* L_2 = HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30274));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30275));
		NullCheck(L_0);
		bool L_3 = Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0(L_0, L_2, /*hidden argument*/Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30275));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30268));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30269));
		// touchPoints[eventData.Controller] = eventData.InputData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30270));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_5 = __this->get_touchPoints_20();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30276));
		NullCheck(L_6);
		RuntimeObject* L_7 = HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30276));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30277));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_inline(L_8, /*hidden argument*/InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30277));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30278));
		NullCheck(L_5);
		Dictionary_2_set_Item_m25245EC06ACEF489BBDD0EFE80B485AA39F8E78A(L_5, L_7, L_9, /*hidden argument*/Dictionary_2_set_Item_m25245EC06ACEF489BBDD0EFE80B485AA39F8E78A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30278));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30271));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_10 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30279));
		NullCheck(L_10);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_10);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30279));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30272));
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30273));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::Microsoft.MixedReality.Toolkit.Input.IMixedRealityTouchHandler.OnTouchCompleted(Microsoft.MixedReality.Toolkit.Input.HandTrackingInputEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_m1F059F2EF836458C098C464099D0390E7F5DDFAD (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * ___eventData0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_m1F059F2EF836458C098C464099D0390E7F5DDFAD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___eventData0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_Microsoft_MixedReality_Toolkit_Input_IMixedRealityTouchHandler_OnTouchCompleted_m1F059F2EF836458C098C464099D0390E7F5DDFAD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30280));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30281));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30282));
		// if (touchPoints.ContainsKey(eventData.Controller))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30283));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_0 = __this->get_touchPoints_20();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_1 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30294));
		NullCheck(L_1);
		RuntimeObject* L_2 = HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30294));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30295));
		NullCheck(L_0);
		bool L_3 = Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0(L_0, L_2, /*hidden argument*/Dictionary_2_ContainsKey_mE7B5EDFA1C6C4216321B997B5BA51A232A150CF0_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30295));
		V_0 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30284));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0077;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30285));
		// touchPoints[eventData.Controller] = eventData.InputData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30286));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_5 = __this->get_touchPoints_20();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_6 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30296));
		NullCheck(L_6);
		RuntimeObject* L_7 = HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30296));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_8 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30297));
		NullCheck(L_8);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_inline(L_8, /*hidden argument*/InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30297));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30298));
		NullCheck(L_5);
		Dictionary_2_set_Item_m25245EC06ACEF489BBDD0EFE80B485AA39F8E78A(L_5, L_7, L_9, /*hidden argument*/Dictionary_2_set_Item_m25245EC06ACEF489BBDD0EFE80B485AA39F8E78A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30298));
		// UpdateTouch();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30287));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30299));
		PressableButton_UpdateTouch_mD7274395DE7673859515EB3EF7DC6A831CE5D5AC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30299));
		// touchPoints.Remove(eventData.Controller);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30288));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_10 = __this->get_touchPoints_20();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_11 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30300));
		NullCheck(L_11);
		RuntimeObject* L_12 = HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30300));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30301));
		NullCheck(L_10);
		Dictionary_2_Remove_mA2871E196E054502D7EBF852037B6619C3E4401E(L_10, L_12, /*hidden argument*/Dictionary_2_Remove_mA2871E196E054502D7EBF852037B6619C3E4401E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30301));
		// currentInputSources.Remove(eventData.InputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30289));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_13 = __this->get_currentInputSources_21();
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_14 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30302));
		NullCheck(L_14);
		RuntimeObject* L_15 = BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30302));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30303));
		NullCheck(L_13);
		List_1_Remove_mC1DB35F985B1E0BF0158F3E5519E5C620654E0E7(L_13, L_15, /*hidden argument*/List_1_Remove_mC1DB35F985B1E0BF0158F3E5519E5C620654E0E7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30303));
		// IsTouching = (touchPoints.Count > 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30290));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_16 = __this->get_touchPoints_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30304));
		NullCheck(L_16);
		int32_t L_17 = Dictionary_2_get_Count_m78E2DE480413AF6EE8EB3006B4065AF38E0234C5(L_16, /*hidden argument*/Dictionary_2_get_Count_m78E2DE480413AF6EE8EB3006B4065AF38E0234C5_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30304));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30305));
		PressableButton_set_IsTouching_m87D7B927E8CE53BEB5D16CAD0F64CA564120A201(__this, (bool)((((int32_t)L_17) > ((int32_t)0))? 1 : 0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30305));
		// eventData.Use();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30291));
		HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * L_18 = ___eventData0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30306));
		NullCheck(L_18);
		VirtActionInvoker0::Invoke(5 /* System.Void UnityEngine.EventSystems.AbstractEventData::Use() */, L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30306));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30292));
	}

IL_0077:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30293));
		return;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::GetWorldPositionAlongPushDirection(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_GetWorldPositionAlongPushDirection_m595769BB4510FC482EBBF1A967DFB883B6B06846 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___localDistance0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_GetWorldPositionAlongPushDirection_m595769BB4510FC482EBBF1A967DFB883B6B06846_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___localDistance0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_GetWorldPositionAlongPushDirection_m595769BB4510FC482EBBF1A967DFB883B6B06846_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30307));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30308));
	float G_B3_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30309));
		// float distance = (distanceSpaceMode == SpaceMode.Local) ? localDistance * LocalToWorldScale : localDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30310));
		int32_t L_0 = __this->get_distanceSpaceMode_7();
		if ((((int32_t)L_0) == ((int32_t)1)))
		{
			goto IL_000d;
		}
	}
	{
		float L_1 = ___localDistance0;
		G_B3_0 = L_1;
		goto IL_0015;
	}

IL_000d:
	{
		float L_2 = ___localDistance0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30313));
		float L_3 = PressableButton_get_LocalToWorldScale_m34BB55C948AA2D062BA9276B1007B782F17BDDCE(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30313));
		G_B3_0 = ((float)il2cpp_codegen_multiply((float)L_2, (float)L_3));
	}

IL_0015:
	{
		V_0 = G_B3_0;
		// return InitialWorldPosition + WorldSpacePressDirection.normalized * distance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30311));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30314));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30314));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30315));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30315));
		V_1 = L_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30316));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_1), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30316));
		float L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30317));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_8 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30317));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30318));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_9 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_4, L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30318));
		V_2 = L_9;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30312));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = V_2;
		return L_10;
	}
}
// UnityEngine.Vector3 Microsoft.MixedReality.Toolkit.UI.PressableButton::GetLocalPositionAlongPushDirection(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PressableButton_GetLocalPositionAlongPushDirection_mA98FE628589D4F47B28B71B4E929C15453B2D8F3 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___localDistance0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_GetLocalPositionAlongPushDirection_mA98FE628589D4F47B28B71B4E929C15453B2D8F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___localDistance0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_GetLocalPositionAlongPushDirection_mA98FE628589D4F47B28B71B4E929C15453B2D8F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30319));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30320));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30321));
		// return InitialLocalPosition + LocalSpacePressDirection.normalized * localDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30322));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30324));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = PressableButton_get_InitialLocalPosition_m8D225ECB8F5146925F94C5C587C8984DF38F9506(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30324));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30325));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = PressableButton_get_LocalSpacePressDirection_mD89D464FE64A8BA09D8E41AF37A942CE14260E3F(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30325));
		V_0 = L_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30326));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30326));
		float L_3 = ___localDistance0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30327));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = Vector3_op_Multiply_m1C5F07723615156ACF035D88A1280A9E8F35A04E(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30327));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30328));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_op_Addition_m929F9C17E5D11B94D50B4AFF1D730B70CB59B50E(L_0, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30328));
		V_1 = L_5;
		goto IL_0023;
	}

IL_0023:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30323));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = V_1;
		return L_6;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::GetDistanceAlongPushDirection(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positionWorldSpace0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	float V_1 = 0.0f;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_2;
	memset((&V_2), 0, sizeof(V_2));
	float V_3 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___positionWorldSpace0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30329));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30330));
	float G_B3_0 = 0.0f;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30331));
		// Vector3 localPosition = positionWorldSpace - InitialWorldPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30332));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___positionWorldSpace0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30336));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = PressableButton_get_InitialWorldPosition_m177A4517C478192EE357F03E64022A71CF6C8C77(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30336));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30337));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = Vector3_op_Subtraction_mF9846B723A5034F8B9F5F5DCB78E3D67649143D3(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30337));
		V_0 = L_2;
		// float distance = Vector3.Dot(localPosition, WorldSpacePressDirection.normalized);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30333));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30338));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = PressableButton_get_WorldSpacePressDirection_m7F2249C0254AAAD3E5E60E06D64DB8CEDDB5F66D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30338));
		V_2 = L_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30339));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = Vector3_get_normalized_mE20796F1D2D36244FACD4D14DADB245BE579849B((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30339));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30340));
		float L_6 = Vector3_Dot_m0C530E1C51278DE28B77906D56356506232272C1(L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30340));
		V_1 = L_6;
		// return (distanceSpaceMode == SpaceMode.Local) ? distance * WorldToLocalScale : distance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30334));
		int32_t L_7 = __this->get_distanceSpaceMode_7();
		if ((((int32_t)L_7) == ((int32_t)1)))
		{
			goto IL_002f;
		}
	}
	{
		float L_8 = V_1;
		G_B3_0 = L_8;
		goto IL_0037;
	}

IL_002f:
	{
		float L_9 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30341));
		float L_10 = PressableButton_get_WorldToLocalScale_m29FC1A16720610A384F358F3C57C83AD0EE6F0EC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30341));
		G_B3_0 = ((float)il2cpp_codegen_multiply((float)L_9, (float)L_10));
	}

IL_0037:
	{
		V_3 = G_B3_0;
		goto IL_003a;
	}

IL_003a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30335));
		float L_11 = V_3;
		return L_11;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdateMovingVisualsPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_UpdateMovingVisualsPosition_m38AB0C37B8CD3F70CF263E7606AA915D6B3CA531 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_UpdateMovingVisualsPosition_m38AB0C37B8CD3F70CF263E7606AA915D6B3CA531_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_UpdateMovingVisualsPosition_m38AB0C37B8CD3F70CF263E7606AA915D6B3CA531_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30342));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30343));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30344));
		// if (movingButtonVisuals != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30345));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_movingButtonVisuals_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30351));
		IL2CPP_RUNTIME_CLASS_INIT(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_il2cpp_TypeInfo_var);
		bool L_1 = Object_op_Inequality_m31EF58E217E8F4BDD3E409DEF79E1AEE95874FC1(L_0, (Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0 *)NULL, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30351));
		V_0 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30346));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_0037;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30347));
		// movingButtonVisuals.transform.localPosition = GetLocalPositionAlongPushDirection(currentPushDistance - startPushDistance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30348));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_3 = __this->get_movingButtonVisuals_6();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30352));
		NullCheck(L_3);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_4 = GameObject_get_transform_mA5C38857137F137CB96C69FAA624199EB1C2FB2C(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30352));
		float L_5 = __this->get_currentPushDistance_22();
		float L_6 = __this->get_startPushDistance_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30353));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = PressableButton_GetLocalPositionAlongPushDirection_mA98FE628589D4F47B28B71B4E929C15453B2D8F3(__this, ((float)il2cpp_codegen_subtract((float)L_5, (float)L_6)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30353));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30354));
		NullCheck(L_4);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_4, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30354));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30349));
	}

IL_0037:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30350));
		return;
	}
}
// System.Single Microsoft.MixedReality.Toolkit.UI.PressableButton::GetFarthestDistanceAlongPressDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float PressableButton_GetFarthestDistanceAlongPressDirection_m0505BE444BEBF3FAA2BABF301FA6AF5F723A2846 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_GetFarthestDistanceAlongPressDirection_m0505BE444BEBF3FAA2BABF301FA6AF5F723A2846_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F  V_1;
	memset((&V_1), 0, sizeof(V_1));
	KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C  V_2;
	memset((&V_2), 0, sizeof(V_2));
	float V_3 = 0.0f;
	float V_4 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_2), (&V_3));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_GetFarthestDistanceAlongPressDirection_m0505BE444BEBF3FAA2BABF301FA6AF5F723A2846_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30355));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30356));
	Exception_t * __last_unhandled_exception = 0;
	NO_UNUSED_WARNING (__last_unhandled_exception);
	Exception_t * __exception_local = 0;
	NO_UNUSED_WARNING (__exception_local);
	void* __leave_targets_storage = alloca(sizeof(int32_t) * 1);
	il2cpp::utils::LeaveTargetStack __leave_targets(__leave_targets_storage);
	NO_UNUSED_WARNING (__leave_targets);
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30357));
		// float farthestDistance = startPushDistance;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30358));
		float L_0 = __this->get_startPushDistance_8();
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30359));
		// foreach (var touchEntry in touchPoints)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30360));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_1 = __this->get_touchPoints_20();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30371));
		NullCheck(L_1);
		Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F  L_2 = Dictionary_2_GetEnumerator_m70D9D6966D6841CC1781795FDACE68E79665518E(L_1, /*hidden argument*/Dictionary_2_GetEnumerator_m70D9D6966D6841CC1781795FDACE68E79665518E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30371));
		V_1 = L_2;
	}

IL_0015:
	try
	{ // begin try (depth: 1)
		STORE_TRY_ID(methodExecutionContext, 0);
		{
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30361));
			goto IL_0037;
		}

IL_0017:
		{
			// foreach (var touchEntry in touchPoints)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30362));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30372));
			KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C  L_3 = Enumerator_get_Current_mC00EA5818B17D0255C1CDAFFF2BF2A5B49011A80_inline((Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F *)(&V_1), /*hidden argument*/Enumerator_get_Current_mC00EA5818B17D0255C1CDAFFF2BF2A5B49011A80_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30372));
			V_2 = L_3;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30363));
			// float testDistance = GetDistanceAlongPushDirection(touchEntry.Value);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30364));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30373));
			Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = KeyValuePair_2_get_Value_m7CE41DE5F70BD19965A75CC4AB1BF0F50B829D98_inline((KeyValuePair_2_tD73E1EF3AA4EF1CE6AD16573F2023BAB16AFE34C *)(&V_2), /*hidden argument*/KeyValuePair_2_get_Value_m7CE41DE5F70BD19965A75CC4AB1BF0F50B829D98_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30373));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30374));
			float L_5 = PressableButton_GetDistanceAlongPushDirection_m5002089E6339A32D16B3800FC4515D0BEDED330F(__this, L_4, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30374));
			V_3 = L_5;
			// farthestDistance = Mathf.Max(testDistance, farthestDistance);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30365));
			float L_6 = V_3;
			float L_7 = V_0;
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30375));
			IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
			float L_8 = Mathf_Max_m670AE0EC1B09ED1A56FF9606B0F954670319CB65(L_6, L_7, /*hidden argument*/NULL);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30375));
			V_0 = L_8;
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30366));
		}

IL_0037:
		{
			// foreach (var touchEntry in touchPoints)
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30367));
			STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30376));
			bool L_9 = Enumerator_MoveNext_mB34B0E1E152876F8FC913C2BBF18CB5F9BA01217((Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F *)(&V_1), /*hidden argument*/Enumerator_MoveNext_mB34B0E1E152876F8FC913C2BBF18CB5F9BA01217_RuntimeMethod_var);
			CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30376));
			if (L_9)
			{
				goto IL_0017;
			}
		}

IL_0040:
		{
			IL2CPP_LEAVE(0x51, FINALLY_0042);
		}
	} // end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		__last_unhandled_exception = (Exception_t *)e.ex;
		goto FINALLY_0042;
	}

FINALLY_0042:
	{ // begin finally (depth: 1)
		STORE_TRY_ID(methodExecutionContext, -1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30368));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30377));
		Enumerator_Dispose_m6C2F8400E251DF11AE3893B9FF0DCB0A9C447ECC((Enumerator_t8FECF71FAAF08BBF2FB95B3C53AD86D5145A190F *)(&V_1), /*hidden argument*/Enumerator_Dispose_m6C2F8400E251DF11AE3893B9FF0DCB0A9C447ECC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30377));
		IL2CPP_END_FINALLY(66)
	} // end finally (depth: 1)
	IL2CPP_CLEANUP(66)
	{
		IL2CPP_RETHROW_IF_UNHANDLED(Exception_t *)
		IL2CPP_JUMP_TBL(0x51, IL_0051)
	}

IL_0051:
	{
		// return Mathf.Clamp(farthestDistance, startPushDistance, maxPushDistance);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30369));
		float L_10 = V_0;
		float L_11 = __this->get_startPushDistance_8();
		float L_12 = __this->get_maxPushDistance_9();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30378));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_13 = Mathf_Clamp_m033DD894F89E6DCCDAFC580091053059C86A4507(L_10, L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30378));
		V_4 = L_13;
		goto IL_0067;
	}

IL_0067:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30370));
		float L_14 = V_4;
		return L_14;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::UpdatePressedState(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587 (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, float ___pushDistance0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	float V_2 = 0.0f;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___pushDistance0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_UpdatePressedState_mCD88D3E141A5AC302431070B66FE505000D33587_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30379));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30380));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30381));
		// if (!IsPressing)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30382));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30403));
		bool L_0 = PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30403));
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30383));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_003f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30384));
		// if (pushDistance >= pressDistance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30385));
		float L_2 = ___pushDistance0;
		float L_3 = __this->get_pressDistance_10();
		V_1 = (bool)((((int32_t)((!(((float)L_2) >= ((float)L_3)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30386));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_003c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30387));
		// IsPressing = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30388));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30404));
		PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_inline(__this, (bool)1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30404));
		// ButtonPressed.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30389));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_5 = __this->get_ButtonPressed_17();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30405));
		NullCheck(L_5);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30405));
		// PulseProximityLight();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30390));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30406));
		PressableButton_PulseProximityLight_m1EBDFA4D807318B0B7A2CC516E68E0606A92F4E9(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30406));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30391));
	}

IL_003c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30392));
		goto IL_0070;
	}

IL_003f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30393));
		// float releaseDistance = pressDistance - releaseDistanceDelta;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30394));
		float L_6 = __this->get_pressDistance_10();
		float L_7 = __this->get_releaseDistanceDelta_11();
		V_2 = ((float)il2cpp_codegen_subtract((float)L_6, (float)L_7));
		// if (pushDistance <= releaseDistance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30395));
		float L_8 = ___pushDistance0;
		float L_9 = V_2;
		V_3 = (bool)((((int32_t)((!(((float)L_8) <= ((float)L_9)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30396));
		bool L_10 = V_3;
		if (!L_10)
		{
			goto IL_006f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30397));
		// IsPressing = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30398));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30407));
		PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_inline(__this, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30407));
		// ButtonReleased.Invoke();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30399));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_11 = __this->get_ButtonReleased_18();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30408));
		NullCheck(L_11);
		UnityEvent_Invoke_mB2FA1C76256FE34D5E7F84ABE528AC61CE8A0325(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30408));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30400));
	}

IL_006f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30401));
	}

IL_0070:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30402));
		return;
	}
}
// System.Void Microsoft.MixedReality.Toolkit.UI.PressableButton::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void PressableButton__ctor_m53F686FF1D9988CFB22048A7F7D102D59E36C85B (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton__ctor_m53F686FF1D9988CFB22048A7F7D102D59E36C85B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton__ctor_m53F686FF1D9988CFB22048A7F7D102D59E36C85B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30409));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30410));
	{
		// bool hasStarted = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30411));
		__this->set_hasStarted_5((bool)0);
		// protected GameObject movingButtonVisuals = null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30412));
		__this->set_movingButtonVisuals_6((GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F *)NULL);
		// private SpaceMode distanceSpaceMode = SpaceMode.Local;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30413));
		__this->set_distanceSpaceMode_7(1);
		// protected float startPushDistance = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30414));
		__this->set_startPushDistance_8((0.0f));
		// private float maxPushDistance = 0.2f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30415));
		__this->set_maxPushDistance_9((0.2f));
		// private float pressDistance = 0.02f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30416));
		__this->set_pressDistance_10((0.02f));
		// private float releaseDistanceDelta = 0.01f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30417));
		__this->set_releaseDistanceDelta_11((0.01f));
		// private float returnSpeed = 25.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30418));
		__this->set_returnSpeed_12((25.0f));
		// private bool releaseOnTouchEnd = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30419));
		__this->set_releaseOnTouchEnd_13((bool)1);
		// private bool enforceFrontPush = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30420));
		__this->set_enforceFrontPush_14((bool)1);
		// public UnityEvent TouchBegin = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30421));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30430));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_0 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30430));
		__this->set_TouchBegin_15(L_0);
		// public UnityEvent TouchEnd = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30422));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30431));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_1 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30431));
		__this->set_TouchEnd_16(L_1);
		// public UnityEvent ButtonPressed = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30423));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30432));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_2 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30432));
		__this->set_ButtonPressed_17(L_2);
		// public UnityEvent ButtonReleased = new UnityEvent();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30424));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30433));
		UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F * L_3 = (UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F *)il2cpp_codegen_object_new(UnityEvent_t5C6DDC2FCDF7F5C1808F1DDFBAD27A383F5FE65F_il2cpp_TypeInfo_var);
		UnityEvent__ctor_m2F8C02F28E289CA65598FF4FA8EAB84D955FF028(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30433));
		__this->set_ButtonReleased_18(L_3);
		// private Dictionary<IMixedRealityController, Vector3> touchPoints = new Dictionary<IMixedRealityController, Vector3>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30425));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30434));
		Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 * L_4 = (Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464 *)il2cpp_codegen_object_new(Dictionary_2_tEDB13FE86DACDBFFFEBF75CB8D8D54213FC2D464_il2cpp_TypeInfo_var);
		Dictionary_2__ctor_m2219CC6B4DF5EDDC0C34EFC5A84893BFDCCB2041(L_4, /*hidden argument*/Dictionary_2__ctor_m2219CC6B4DF5EDDC0C34EFC5A84893BFDCCB2041_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30434));
		__this->set_touchPoints_20(L_4);
		// private List<IMixedRealityInputSource> currentInputSources = new List<IMixedRealityInputSource>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30426));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30435));
		List_1_t74E48C60E247472C3845D62B1372777193ED6D09 * L_5 = (List_1_t74E48C60E247472C3845D62B1372777193ED6D09 *)il2cpp_codegen_object_new(List_1_t74E48C60E247472C3845D62B1372777193ED6D09_il2cpp_TypeInfo_var);
		List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46(L_5, /*hidden argument*/List_1__ctor_mEE9B46358AD071D56E73F0DDEA072FA1B96C0E46_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30435));
		__this->set_currentInputSources_21(L_5);
		// private float currentPushDistance = 0.0f;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30427));
		__this->set_currentPushDistance_22((0.0f));
		// private bool isTouching = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30428));
		__this->set_isTouching_23((bool)0);
		// private Vector3 movingVisualsInitialLocalPosition = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30429));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30436));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30436));
		__this->set_movingVisualsInitialLocalPosition_25(L_6);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30437));
		MonoBehaviour__ctor_mEAEC84B222C60319D593E456D769B3311DFCEF97(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 30437));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95DMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_EnableConstraints_m107676D3A45F3354B3FBF1AA09E1699C6D50E95D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20099));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20100));
	{
		// get => enableConstraints;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20101));
		bool L_0 = __this->get_enableConstraints_18();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_inline (MixedRealityPointerEventData_t1E362B2E1670054A35DC0E48534FCD7CD8603940 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0DMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityPointerEventData_get_Pointer_m799243CDEBA8186D7A025332592FDCD2D3914F0D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26774));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26775));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26776));
		RuntimeObject* L_0 = __this->get_U3CPointerU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_inline (FocusDetails_t72F15A8C8216CDB44311656DCF9F4F51E65128E7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusDetails_get_Point_m2959D1AF5F4A848A2483114341B17517737A24B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21972));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21973));
	{
		// public Vector3 Point { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 21974));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPointU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEFMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnManipulationStarted_m500FED8144F940544F3574AA220FCAC96AE8ACEF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20117));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20118));
	{
		// get => onManipulationStarted;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20119));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onManipulationStarted_21();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0CMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ManipulationEventData_set_ManipulationSource_mECD42848EA63318B1A5B62F83909E5680EF12C0C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18023));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18024));
	{
		// public GameObject ManipulationSource { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18025));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = ___value0;
		__this->set_U3CManipulationSourceU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBCMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ManipulationEventData_set_IsNearInteraction_mE8407E422A6CFF557A4EAA064983A6F06D22ECBC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18035));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18036));
	{
		// public bool IsNearInteraction { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18037));
		bool L_0 = ___value0;
		__this->set_U3CIsNearInteractionU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ManipulationEventData_set_Pointer_m453615007B0E769A090CE6A00D10ED9DB06F7872_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18029));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18030));
	{
		// public IMixedRealityPointer Pointer { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18031));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CPointerU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ManipulationEventData_set_PointerCentroid_m55DD9E66AAAD619D83ED3D0BBB7594AE383E65F3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18041));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18042));
	{
		// public Vector3 PointerCentroid { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18043));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPointerCentroidU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ManipulationEventData_set_PointerVelocity_m65D10185B0C5109E581583864A5FEAFDCD44E054_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18047));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18048));
	{
		// public Vector3 PointerVelocity { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18049));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPointerVelocityU3Ek__BackingField_4(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033_inline (ManipulationEventData_t62DB74740CDA2C4121742CDC454391ACEF5F8C29 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ManipulationEventData_set_PointerAngularVelocity_mEBEF077BB00887770832ADDA8DF78C2310063033_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18053));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18054));
	{
		// public Vector3 PointerAngularVelocity { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 18055));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CPointerAngularVelocityU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_inline (ElasticsManager_tBBD2D99A5827906CB8713C5A95F21EFCE48E6FBD * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ElasticsManager_set_EnableElasticsUpdate_m4055FAE8A32456293A8278A10A8076809A3927E9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 50938));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 50939));
	{
		// set;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 50940));
		bool L_0 = ___value0;
		__this->set_U3CEnableElasticsUpdateU3Ek__BackingField_11(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnManipulationEnded_mDCA179B987A4B4770877468D79B50149C923ED45_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20123));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20124));
	{
		// get => onManipulationEnded;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20125));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onManipulationEnded_22();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusEventData_get_Pointer_m79FA7572628E5B782C77CD372B2EEF766C789763_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26668));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26669));
	{
		// public IMixedRealityPointer Pointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26670));
		RuntimeObject* L_0 = __this->get_U3CPointerU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_AllowFarManipulation_m802D32504102AEC52E4BA02EA40213AB21D9ABE6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20033));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20034));
	{
		// get => allowFarManipulation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20035));
		bool L_0 = __this->get_allowFarManipulation_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusEventData_get_OldFocusedObject_m13521A940DFFA016C7AB914111E28827A7050974_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26674));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26675));
	{
		// public GameObject OldFocusedObject { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26676));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3COldFocusedObjectU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnHoverEntered_mC11C7EA3E9CAEB676DB770515818F7F0D70E12D0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20129));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20130));
	{
		// get => onHoverEntered;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20131));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onHoverEntered_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_inline (FocusEventData_tAA6027DD2D26B76E035E11439D9663DB64860C2F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, FocusEventData_get_NewFocusedObject_mFBAD2CAEEA9442BF2471F7A6E3B0C1D6162350D0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26680));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26681));
	{
		// public GameObject NewFocusedObject { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26682));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_U3CNewFocusedObjectU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_inline (ObjectManipulator_t15A0C24E067CABFE3C6644E656CDF2C9116F7D40 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, ObjectManipulator_get_OnHoverExited_m6D1AF7B15C04DA893CAB5CC4A969F236175355A1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20136));
	{
		// get => onHoverExited;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 20137));
		ManipulationEvent_t459728DB4CC33794E5B9FACF379434C864247E26 * L_0 = __this->get_onHoverExited_24();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_inline (SourceStateEventData_tC17E9EB097E08CCA954A82FAEAC9D010CF8798F8 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BCMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourceStateEventData_get_Controller_m3935B78C6E7B8158323E0D92A3C1016CF59B72BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26842));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26843));
	{
		// public IMixedRealityController Controller { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26844));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_ActivePointer_mD9E8DD69A667D14DC8BCAD360C4046AFAAA1D507_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35296));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35297));
	{
		// protected IMixedRealityPointer ActivePointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35298));
		RuntimeObject* L_0 = __this->get_U3CActivePointerU3Ek__BackingField_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, RuntimeObject* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633FMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_ActivePointer_m7C071B9E3628C32F5460F7C2A47E78B179EB633F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35299));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35300));
	{
		// protected IMixedRealityPointer ActivePointer { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35301));
		RuntimeObject* L_0 = ___value0;
		__this->set_U3CActivePointerU3Ek__BackingField_27(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_StartPointerPosition_m3DFB9C710BB0CC663AFF8BD2A92A2D26AC332AB1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35293));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35294));
	{
		// protected Vector3 StartPointerPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35295));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CStartPointerPositionU3Ek__BackingField_26(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAEMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_set_StartSliderValue_m929EA45CFF2BA13615EFDF5C40F4DAD7F1DAEEAE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35287));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35288));
	{
		// protected float StartSliderValue { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35289));
		float L_0 = ___value0;
		__this->set_U3CStartSliderValueU3Ek__BackingField_25(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_StartPointerPosition_mE7267F5BCF23ACECB4425C277403A08A5553D438_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35290));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35291));
	{
		// protected Vector3 StartPointerPosition { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35292));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CStartPointerPositionU3Ek__BackingField_26();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_inline (PinchSlider_tD2B9E7AF6DE1A31D8BA2F9627BF9650F1948B04C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3EMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PinchSlider_get_StartSliderValue_mBC54BFD8B2E7915CC59A13BC9C56BEA47BD82A3E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35284));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35285));
	{
		// protected float StartSliderValue { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 35286));
		float L_0 = __this->get_U3CStartSliderValueU3Ek__BackingField_25();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint32_t MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33_inline (MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_Id_m80EC631FA1E04B4642A085CE233233837F927B33_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26001));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26002));
	{
		// public uint Id => id;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26003));
		uint32_t L_0 = __this->get_id_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DDMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_MixedRealityInputAction_m87A472DC37C9C4E63E7BE429CCC14BDC830394DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26614));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26615));
	{
		// public MixedRealityInputAction MixedRealityInputAction { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26616));
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = __this->get_U3CMixedRealityInputActionU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_inline (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BFMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, MixedRealityInputAction_get_None_m0276CF8988B0670DCCE381865DD5190010A2A8BF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25998));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 25999));
	{
		// public static MixedRealityInputAction None { get; } = new MixedRealityInputAction(0, "None");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26000));
		IL2CPP_RUNTIME_CLASS_INIT(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var);
		MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073  L_0 = ((MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_StaticFields*)il2cpp_codegen_static_fields_for(MixedRealityInputAction_tF3298AB582C6E52C2107F4AC4E6E4381EA0A5073_il2cpp_TypeInfo_var))->get_U3CNoneU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215_inline (SimpleCoroutineAwaiter_t46769B8824866227E6B839ECBE34D9621CE153BE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SimpleCoroutineAwaiter_get_IsCompleted_m564E77AF2AE091959C96845221E652899192A215_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Async + 219));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Async + 220));
	{
		// public bool IsCompleted { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_Async + 221));
		bool L_0 = __this->get_U3CIsCompletedU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DABMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_set_IsPressing_mE6EA04D049EDA3812BF35489CB30EED934096DAB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29969));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29970));
	{
		// public bool IsPressing { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29971));
		bool L_0 = ___value0;
		__this->set_U3CIsPressingU3Ek__BackingField_24(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFAMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_IsTouching_m7CFF7DF5F9B1339CD8F6ED163EEC975F35243BFA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29938));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29939));
	{
		// get => isTouching;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29940));
		bool L_0 = __this->get_isTouching_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EAMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_IsPressing_mA44238FEA6747A5E097BDC63170F561FACA0C6EA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29966));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29967));
	{
		// public bool IsPressing { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29968));
		bool L_0 = __this->get_U3CIsPressingU3Ek__BackingField_24();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_inline (BaseInputEventData_tAF6552FE95917E1D365301264A6A2135813628FE * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, BaseInputEventData_get_InputSource_m385FD5DB21EDFE80442F35DBED711F409429A3A1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26603));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26604));
	{
		// public IMixedRealityInputSource InputSource { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26605));
		RuntimeObject* L_0 = __this->get_U3CInputSourceU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7DMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_CurrentTouchableObjectDown_mAB73097A7E9C1AA0C100FC8570780276127D6A7D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15194));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15195));
	{
		// public GameObject CurrentTouchableObjectDown => currentTouchableObjectDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15196));
		GameObject_tBD1244AD56B4E59AAD76E5E7C9282EC5CE434F0F * L_0 = __this->get_currentTouchableObjectDown_65();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_inline (PokePointer_t4B0D1D11F428FA1395302DBC2CB63DCD31BF8E18 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PokePointer_get_PreviousPosition_mDD2B8D04A333F1AB024793D670F32ACE114C95A8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15185));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15186));
	{
		// public Vector3 PreviousPosition { get; private set; } = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 15187));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CPreviousPositionU3Ek__BackingField_63();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_inline (PressableButton_tC10F15C104EC2FEFB824760AB6E2648FEA1C77A1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92CMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, PressableButton_get_StartPushDistance_mC2627C854EB14DD759D05472D44FD1AC770DA92C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29896));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29897));
	{
		// public float StartPushDistance { get => startPushDistance; set => startPushDistance = value; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit_SDK + 29898));
		float L_0 = __this->get_startPushDistance_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR RuntimeObject* HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_inline (HandTrackingInputEventData_tF297FF8744459F8E9C3B02315ADDAB3AAFB09A69 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, HandTrackingInputEventData_get_Controller_m5A80017C5C1989EA12B431AC967F4CB075D9D4B0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26718));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26719));
	{
		// public IMixedRealityController Controller { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26720));
		RuntimeObject* L_0 = __this->get_U3CControllerU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_gshared_inline (Enumerator_t426D90C06172048DF6667966832C2A5DBF22DEF7 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m2A8D38653901E90C18380084EA8C0810B7224558_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_0 = (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F )__this->get_currentValue_3();
		return (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_gshared_inline (Enumerator_tC103AD77D2E5BF0E1C06CE5D80EFB765DBDE5EF1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_mDBCB12A90BF0CF4D7FAE4A4FFF68E2E974604FA9_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207  L_0 = (KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 )__this->get_current_3();
		return (KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_gshared_inline (KeyValuePair_2_t07D3480094497047E58942D90E7E6A50C9C56207 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_mD2A3A9A8B44ED02E0BAF1A0EA2D5BA2680546589_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F  L_0 = (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F )__this->get_value_1();
		return (PointerData_t2AE215DE10B5E301F94776BD3EB9A5F965FA3B5F )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4FMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m395EA5F248148274CEE1ED1C59FC628330033A4F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR uint8_t Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_gshared_inline (Nullable_1_tAD3D374B25057F9C5F22F267FE9A4F0EE5F82152 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EBMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_GetValueOrDefault_m0F69127464EA2230329E51E650FC4FBAD21960EB_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		uint8_t L_0 = (uint8_t)__this->get_value_0();
		return (uint8_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_gshared_inline (SourcePoseEventData_1_t108185B31C160841ED79659395199135AC2F1141 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SourcePoseEventData_1_get_SourceData_m3B9BC01D5B81CADD53EA4A2D40D8D4411A6E2210_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26822));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26823));
	{
		// public T SourceData { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26824));
		MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45  L_0 = (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 )__this->get_U3CSourceDataU3Ek__BackingField_6();
		return (MixedRealityPose_tB91C13927D4C609825580E7DACDB4A550F3F0F45 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR bool Nullable_1_get_HasValue_m243C0A419A326DF7FEB2FEB2F3A4C8FC6CC12A7A_gshared_inline (Nullable_1_tBCA4780CE8E9555A53CF0BA48AF742DA998C0833 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Nullable_1_get_HasValue_m243C0A419A326DF7FEB2FEB2F3A4C8FC6CC12A7AMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Nullable_1_get_HasValue_m243C0A419A326DF7FEB2FEB2F3A4C8FC6CC12A7A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		bool L_0 = (bool)__this->get_has_value_1();
		return (bool)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_gshared_inline (InputEventData_1_tBF257294019879CF6BCEA0F00F6C050FC11DB99D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_1_get_InputData_m4CF7A3B60C3D703E5BE277CDAD48AE2578D6C2E2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26755));
	{
		// public T InputData { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26756));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )__this->get_U3CInputDataU3Ek__BackingField_6();
		return (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR float InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_gshared_inline (InputEventData_1_t49079FFFD9D72392C560AEEF1DA023798F18B1E5 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, InputEventData_1_get_InputData_mAE1B60FB45A2AD76E22CD28D7B3B97FEA8A4D324_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26754));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26755));
	{
		// public T InputData { get; private set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsMicrosoft_MixedReality_Toolkit + 26756));
		float L_0 = (float)__this->get_U3CInputDataU3Ek__BackingField_6();
		return (float)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m507C9149FF7F83AAC72C29091E745D557DA47D22_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return (int32_t)L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR RuntimeObject * List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_gshared_inline (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_mFDB8AD680C600072736579BBF5F38F7416396588_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* L_2 = (ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)__this->get__items_1();
		int32_t L_3 = ___index0;
		RuntimeObject * L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A*)L_2, (int32_t)L_3);
		return (RuntimeObject *)L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822  Enumerator_get_Current_m9DFAAD33679F4782E51C9414618305A9A38C5E0A_gshared_inline (Enumerator_tCA4145FAC5B73CEF6562C0AF76979726E9BB1028 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (Enumerator_get_Current_m9DFAAD33679F4782E51C9414618305A9A38C5E0AMicrosoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, Enumerator_get_Current_m9DFAAD33679F4782E51C9414618305A9A38C5E0A_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822  L_0 = (KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822 )__this->get_current_3();
		return (KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822 )L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  KeyValuePair_2_get_Value_mA14FAE0D9F17BE95224D4C6B4A717086A350C8C9_gshared_inline (KeyValuePair_2_tB2B1BDB4860CA12D10ED64E7D3B112421CADA822 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (KeyValuePair_2_get_Value_mA14FAE0D9F17BE95224D4C6B4A717086A350C8C9Microsoft_MixedReality_Toolkit_SDK11_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, KeyValuePair_2_get_Value_mA14FAE0D9F17BE95224D4C6B4A717086A350C8C9_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )__this->get_value_1();
		return (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_0;
	}
}
